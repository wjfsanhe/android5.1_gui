!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AASSET_MODE_BUFFER	include/android/asset_manager.h	/^    AASSET_MODE_BUFFER       = 3$/;"	e	enum:__anon159
AASSET_MODE_RANDOM	include/android/asset_manager.h	/^    AASSET_MODE_RANDOM       = 1,$/;"	e	enum:__anon159
AASSET_MODE_STREAMING	include/android/asset_manager.h	/^    AASSET_MODE_STREAMING    = 2,$/;"	e	enum:__anon159
AASSET_MODE_UNKNOWN	include/android/asset_manager.h	/^    AASSET_MODE_UNKNOWN      = 0,$/;"	e	enum:__anon159
AAsset	include/android/asset_manager.h	/^typedef struct AAsset AAsset;$/;"	t	typeref:struct:AAsset
AAssetDir	include/android/asset_manager.h	/^typedef struct AAssetDir AAssetDir;$/;"	t	typeref:struct:AAssetDir
AAssetManager	include/android/asset_manager.h	/^typedef struct AAssetManager AAssetManager;$/;"	t	typeref:struct:AAssetManager
ACC	services/sensorservice/Fusion.h	/^    enum { ACC=0x1, MAG=0x2, GYRO=0x4 };$/;"	e	enum:android::Fusion::__anon52
ACONFIGURATION_DENSITY	include/android/configuration.h	/^    ACONFIGURATION_DENSITY = 0x0100,$/;"	e	enum:__anon193
ACONFIGURATION_DENSITY_ANY	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_ANY = 0xfffe,$/;"	e	enum:__anon193
ACONFIGURATION_DENSITY_DEFAULT	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_DEFAULT = 0,$/;"	e	enum:__anon193
ACONFIGURATION_DENSITY_HIGH	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_HIGH = 240,$/;"	e	enum:__anon193
ACONFIGURATION_DENSITY_LOW	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_LOW = 120,$/;"	e	enum:__anon193
ACONFIGURATION_DENSITY_MEDIUM	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_MEDIUM = 160,$/;"	e	enum:__anon193
ACONFIGURATION_DENSITY_NONE	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_NONE = 0xffff,$/;"	e	enum:__anon193
ACONFIGURATION_DENSITY_TV	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_TV = 213,$/;"	e	enum:__anon193
ACONFIGURATION_DENSITY_XHIGH	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_XHIGH = 320,$/;"	e	enum:__anon193
ACONFIGURATION_DENSITY_XXHIGH	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_XXHIGH = 480,$/;"	e	enum:__anon193
ACONFIGURATION_DENSITY_XXXHIGH	include/android/configuration.h	/^    ACONFIGURATION_DENSITY_XXXHIGH = 640,$/;"	e	enum:__anon193
ACONFIGURATION_KEYBOARD	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD = 0x0010,$/;"	e	enum:__anon193
ACONFIGURATION_KEYBOARD_12KEY	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD_12KEY  = 0x0003,$/;"	e	enum:__anon193
ACONFIGURATION_KEYBOARD_ANY	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD_ANY  = 0x0000,$/;"	e	enum:__anon193
ACONFIGURATION_KEYBOARD_HIDDEN	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD_HIDDEN = 0x0020,$/;"	e	enum:__anon193
ACONFIGURATION_KEYBOARD_NOKEYS	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD_NOKEYS  = 0x0001,$/;"	e	enum:__anon193
ACONFIGURATION_KEYBOARD_QWERTY	include/android/configuration.h	/^    ACONFIGURATION_KEYBOARD_QWERTY  = 0x0002,$/;"	e	enum:__anon193
ACONFIGURATION_KEYSHIDDEN_ANY	include/android/configuration.h	/^    ACONFIGURATION_KEYSHIDDEN_ANY = 0x0000,$/;"	e	enum:__anon193
ACONFIGURATION_KEYSHIDDEN_NO	include/android/configuration.h	/^    ACONFIGURATION_KEYSHIDDEN_NO = 0x0001,$/;"	e	enum:__anon193
ACONFIGURATION_KEYSHIDDEN_SOFT	include/android/configuration.h	/^    ACONFIGURATION_KEYSHIDDEN_SOFT = 0x0003,$/;"	e	enum:__anon193
ACONFIGURATION_KEYSHIDDEN_YES	include/android/configuration.h	/^    ACONFIGURATION_KEYSHIDDEN_YES = 0x0002,$/;"	e	enum:__anon193
ACONFIGURATION_LAYOUTDIR	include/android/configuration.h	/^    ACONFIGURATION_LAYOUTDIR = 0x4000,$/;"	e	enum:__anon193
ACONFIGURATION_LAYOUTDIR_ANY	include/android/configuration.h	/^    ACONFIGURATION_LAYOUTDIR_ANY  = 0x00,$/;"	e	enum:__anon193
ACONFIGURATION_LAYOUTDIR_LTR	include/android/configuration.h	/^    ACONFIGURATION_LAYOUTDIR_LTR  = 0x01,$/;"	e	enum:__anon193
ACONFIGURATION_LAYOUTDIR_RTL	include/android/configuration.h	/^    ACONFIGURATION_LAYOUTDIR_RTL  = 0x02,$/;"	e	enum:__anon193
ACONFIGURATION_LOCALE	include/android/configuration.h	/^    ACONFIGURATION_LOCALE = 0x0004,$/;"	e	enum:__anon193
ACONFIGURATION_MCC	include/android/configuration.h	/^    ACONFIGURATION_MCC = 0x0001,$/;"	e	enum:__anon193
ACONFIGURATION_MNC	include/android/configuration.h	/^    ACONFIGURATION_MNC = 0x0002,$/;"	e	enum:__anon193
ACONFIGURATION_MNC_ZERO	include/android/configuration.h	/^    ACONFIGURATION_MNC_ZERO = 0xffff,$/;"	e	enum:__anon193
ACONFIGURATION_NAVHIDDEN_ANY	include/android/configuration.h	/^    ACONFIGURATION_NAVHIDDEN_ANY = 0x0000,$/;"	e	enum:__anon193
ACONFIGURATION_NAVHIDDEN_NO	include/android/configuration.h	/^    ACONFIGURATION_NAVHIDDEN_NO = 0x0001,$/;"	e	enum:__anon193
ACONFIGURATION_NAVHIDDEN_YES	include/android/configuration.h	/^    ACONFIGURATION_NAVHIDDEN_YES = 0x0002,$/;"	e	enum:__anon193
ACONFIGURATION_NAVIGATION	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION = 0x0040,$/;"	e	enum:__anon193
ACONFIGURATION_NAVIGATION_ANY	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION_ANY  = 0x0000,$/;"	e	enum:__anon193
ACONFIGURATION_NAVIGATION_DPAD	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION_DPAD  = 0x0002,$/;"	e	enum:__anon193
ACONFIGURATION_NAVIGATION_NONAV	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION_NONAV  = 0x0001,$/;"	e	enum:__anon193
ACONFIGURATION_NAVIGATION_TRACKBALL	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION_TRACKBALL  = 0x0003,$/;"	e	enum:__anon193
ACONFIGURATION_NAVIGATION_WHEEL	include/android/configuration.h	/^    ACONFIGURATION_NAVIGATION_WHEEL  = 0x0004,$/;"	e	enum:__anon193
ACONFIGURATION_ORIENTATION	include/android/configuration.h	/^    ACONFIGURATION_ORIENTATION = 0x0080,$/;"	e	enum:__anon193
ACONFIGURATION_ORIENTATION_ANY	include/android/configuration.h	/^    ACONFIGURATION_ORIENTATION_ANY  = 0x0000,$/;"	e	enum:__anon193
ACONFIGURATION_ORIENTATION_LAND	include/android/configuration.h	/^    ACONFIGURATION_ORIENTATION_LAND = 0x0002,$/;"	e	enum:__anon193
ACONFIGURATION_ORIENTATION_PORT	include/android/configuration.h	/^    ACONFIGURATION_ORIENTATION_PORT = 0x0001,$/;"	e	enum:__anon193
ACONFIGURATION_ORIENTATION_SQUARE	include/android/configuration.h	/^    ACONFIGURATION_ORIENTATION_SQUARE = 0x0003,$/;"	e	enum:__anon193
ACONFIGURATION_SCREENLONG_ANY	include/android/configuration.h	/^    ACONFIGURATION_SCREENLONG_ANY = 0x00,$/;"	e	enum:__anon193
ACONFIGURATION_SCREENLONG_NO	include/android/configuration.h	/^    ACONFIGURATION_SCREENLONG_NO = 0x1,$/;"	e	enum:__anon193
ACONFIGURATION_SCREENLONG_YES	include/android/configuration.h	/^    ACONFIGURATION_SCREENLONG_YES = 0x2,$/;"	e	enum:__anon193
ACONFIGURATION_SCREENSIZE_ANY	include/android/configuration.h	/^    ACONFIGURATION_SCREENSIZE_ANY  = 0x00,$/;"	e	enum:__anon193
ACONFIGURATION_SCREENSIZE_LARGE	include/android/configuration.h	/^    ACONFIGURATION_SCREENSIZE_LARGE = 0x03,$/;"	e	enum:__anon193
ACONFIGURATION_SCREENSIZE_NORMAL	include/android/configuration.h	/^    ACONFIGURATION_SCREENSIZE_NORMAL = 0x02,$/;"	e	enum:__anon193
ACONFIGURATION_SCREENSIZE_SMALL	include/android/configuration.h	/^    ACONFIGURATION_SCREENSIZE_SMALL = 0x01,$/;"	e	enum:__anon193
ACONFIGURATION_SCREENSIZE_XLARGE	include/android/configuration.h	/^    ACONFIGURATION_SCREENSIZE_XLARGE = 0x04,$/;"	e	enum:__anon193
ACONFIGURATION_SCREEN_HEIGHT_DP_ANY	include/android/configuration.h	/^    ACONFIGURATION_SCREEN_HEIGHT_DP_ANY = 0x0000,$/;"	e	enum:__anon193
ACONFIGURATION_SCREEN_LAYOUT	include/android/configuration.h	/^    ACONFIGURATION_SCREEN_LAYOUT = 0x0800,$/;"	e	enum:__anon193
ACONFIGURATION_SCREEN_SIZE	include/android/configuration.h	/^    ACONFIGURATION_SCREEN_SIZE = 0x0200,$/;"	e	enum:__anon193
ACONFIGURATION_SCREEN_WIDTH_DP_ANY	include/android/configuration.h	/^    ACONFIGURATION_SCREEN_WIDTH_DP_ANY = 0x0000,$/;"	e	enum:__anon193
ACONFIGURATION_SMALLEST_SCREEN_SIZE	include/android/configuration.h	/^    ACONFIGURATION_SMALLEST_SCREEN_SIZE = 0x2000,$/;"	e	enum:__anon193
ACONFIGURATION_SMALLEST_SCREEN_WIDTH_DP_ANY	include/android/configuration.h	/^    ACONFIGURATION_SMALLEST_SCREEN_WIDTH_DP_ANY = 0x0000,$/;"	e	enum:__anon193
ACONFIGURATION_TOUCHSCREEN	include/android/configuration.h	/^    ACONFIGURATION_TOUCHSCREEN = 0x0008,$/;"	e	enum:__anon193
ACONFIGURATION_TOUCHSCREEN_ANY	include/android/configuration.h	/^    ACONFIGURATION_TOUCHSCREEN_ANY  = 0x0000,$/;"	e	enum:__anon193
ACONFIGURATION_TOUCHSCREEN_FINGER	include/android/configuration.h	/^    ACONFIGURATION_TOUCHSCREEN_FINGER  = 0x0003,$/;"	e	enum:__anon193
ACONFIGURATION_TOUCHSCREEN_NOTOUCH	include/android/configuration.h	/^    ACONFIGURATION_TOUCHSCREEN_NOTOUCH  = 0x0001,$/;"	e	enum:__anon193
ACONFIGURATION_TOUCHSCREEN_STYLUS	include/android/configuration.h	/^    ACONFIGURATION_TOUCHSCREEN_STYLUS  = 0x0002,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE = 0x1000,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE_NIGHT_ANY	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_NIGHT_ANY = 0x00,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE_NIGHT_NO	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_NIGHT_NO = 0x1,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE_NIGHT_YES	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_NIGHT_YES = 0x2,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE_TYPE_ANY	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_ANY = 0x00,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE_TYPE_APPLIANCE	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_APPLIANCE = 0x05,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE_TYPE_CAR	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_CAR = 0x03,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE_TYPE_DESK	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_DESK = 0x02,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE_TYPE_NORMAL	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_NORMAL = 0x01,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE_TYPE_TELEVISION	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_TELEVISION = 0x04,$/;"	e	enum:__anon193
ACONFIGURATION_UI_MODE_TYPE_WATCH	include/android/configuration.h	/^    ACONFIGURATION_UI_MODE_TYPE_WATCH = 0x06,$/;"	e	enum:__anon193
ACONFIGURATION_VERSION	include/android/configuration.h	/^    ACONFIGURATION_VERSION = 0x0400,$/;"	e	enum:__anon193
ACQUIRED	include/gui/BufferSlot.h	/^        ACQUIRED = 3$/;"	e	enum:android::BufferSlot::BufferState
ACQUIRE_BUFFER	libs/gui/IGraphicBufferConsumer.cpp	/^    ACQUIRE_BUFFER = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon261	file:
ACQUIRE_WAKE_LOCK	services/powermanager/IPowerManager.cpp	/^    ACQUIRE_WAKE_LOCK = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon74	file:
ACQUIRE_WAKE_LOCK_UID	services/powermanager/IPowerManager.cpp	/^    ACQUIRE_WAKE_LOCK_UID = IBinder::FIRST_CALL_TRANSACTION + 1,$/;"	e	enum:android::__anon74	file:
AConfiguration	include/android/configuration.h	/^typedef struct AConfiguration AConfiguration;$/;"	t	typeref:struct:AConfiguration
ADD_SERVICE_TRANSACTION	include/binder/IServiceManager.h	/^        ADD_SERVICE_TRANSACTION,$/;"	e	enum:android::IServiceManager::__anon208
ADISPLAY_ID_DEFAULT	include/input/Input.h	/^    ADISPLAY_ID_DEFAULT = 0,$/;"	e	enum:__anon114
ADISPLAY_ID_NONE	include/input/Input.h	/^    ADISPLAY_ID_NONE = -1,$/;"	e	enum:__anon114
AEP_EXTENSIONS	opengl/tools/glgen2/glgen.py	/^AEP_EXTENSIONS = [$/;"	v
AFFINE_TRANSFORM	services/inputflinger/tests/InputReader_test.cpp	/^    static const TouchAffineTransformation AFFINE_TRANSFORM;$/;"	m	class:android::TouchInputMapperTest	file:
AFFINE_TRANSFORM	services/inputflinger/tests/InputReader_test.cpp	/^const TouchAffineTransformation TouchInputMapperTest::AFFINE_TRANSFORM =$/;"	m	class:android::TouchInputMapperTest	file:
AHeartRateEvent	include/android/sensor.h	/^typedef struct AHeartRateEvent {$/;"	s
AHeartRateEvent	include/android/sensor.h	/^} AHeartRateEvent;$/;"	t	typeref:struct:AHeartRateEvent
AINPUT_EVENT_TYPE_KEY	include/android/input.h	/^    AINPUT_EVENT_TYPE_KEY = 1,$/;"	e	enum:__anon164
AINPUT_EVENT_TYPE_MOTION	include/android/input.h	/^    AINPUT_EVENT_TYPE_MOTION = 2$/;"	e	enum:__anon164
AINPUT_KEYBOARD_TYPE_ALPHABETIC	include/android/input.h	/^    AINPUT_KEYBOARD_TYPE_ALPHABETIC = 2,$/;"	e	enum:__anon175
AINPUT_KEYBOARD_TYPE_NONE	include/android/input.h	/^    AINPUT_KEYBOARD_TYPE_NONE = 0,$/;"	e	enum:__anon175
AINPUT_KEYBOARD_TYPE_NON_ALPHABETIC	include/android/input.h	/^    AINPUT_KEYBOARD_TYPE_NON_ALPHABETIC = 1,$/;"	e	enum:__anon175
AINPUT_MOTION_RANGE_ORIENTATION	include/android/input.h	/^    AINPUT_MOTION_RANGE_ORIENTATION = AMOTION_EVENT_AXIS_ORIENTATION,$/;"	e	enum:__anon176
AINPUT_MOTION_RANGE_PRESSURE	include/android/input.h	/^    AINPUT_MOTION_RANGE_PRESSURE = AMOTION_EVENT_AXIS_PRESSURE,$/;"	e	enum:__anon176
AINPUT_MOTION_RANGE_SIZE	include/android/input.h	/^    AINPUT_MOTION_RANGE_SIZE = AMOTION_EVENT_AXIS_SIZE,$/;"	e	enum:__anon176
AINPUT_MOTION_RANGE_TOOL_MAJOR	include/android/input.h	/^    AINPUT_MOTION_RANGE_TOOL_MAJOR = AMOTION_EVENT_AXIS_TOOL_MAJOR,$/;"	e	enum:__anon176
AINPUT_MOTION_RANGE_TOOL_MINOR	include/android/input.h	/^    AINPUT_MOTION_RANGE_TOOL_MINOR = AMOTION_EVENT_AXIS_TOOL_MINOR,$/;"	e	enum:__anon176
AINPUT_MOTION_RANGE_TOUCH_MAJOR	include/android/input.h	/^    AINPUT_MOTION_RANGE_TOUCH_MAJOR = AMOTION_EVENT_AXIS_TOUCH_MAJOR,$/;"	e	enum:__anon176
AINPUT_MOTION_RANGE_TOUCH_MINOR	include/android/input.h	/^    AINPUT_MOTION_RANGE_TOUCH_MINOR = AMOTION_EVENT_AXIS_TOUCH_MINOR,$/;"	e	enum:__anon176
AINPUT_MOTION_RANGE_X	include/android/input.h	/^    AINPUT_MOTION_RANGE_X = AMOTION_EVENT_AXIS_X,$/;"	e	enum:__anon176
AINPUT_MOTION_RANGE_Y	include/android/input.h	/^    AINPUT_MOTION_RANGE_Y = AMOTION_EVENT_AXIS_Y,$/;"	e	enum:__anon176
AINPUT_SOURCE_ANY	include/android/input.h	/^    AINPUT_SOURCE_ANY = 0xffffff00,$/;"	e	enum:__anon174
AINPUT_SOURCE_CLASS_BUTTON	include/android/input.h	/^    AINPUT_SOURCE_CLASS_BUTTON = 0x00000001,$/;"	e	enum:__anon173
AINPUT_SOURCE_CLASS_JOYSTICK	include/android/input.h	/^    AINPUT_SOURCE_CLASS_JOYSTICK = 0x00000010,$/;"	e	enum:__anon173
AINPUT_SOURCE_CLASS_MASK	include/android/input.h	/^    AINPUT_SOURCE_CLASS_MASK = 0x000000ff,$/;"	e	enum:__anon173
AINPUT_SOURCE_CLASS_NAVIGATION	include/android/input.h	/^    AINPUT_SOURCE_CLASS_NAVIGATION = 0x00000004,$/;"	e	enum:__anon173
AINPUT_SOURCE_CLASS_NONE	include/android/input.h	/^    AINPUT_SOURCE_CLASS_NONE = 0x00000000,$/;"	e	enum:__anon173
AINPUT_SOURCE_CLASS_POINTER	include/android/input.h	/^    AINPUT_SOURCE_CLASS_POINTER = 0x00000002,$/;"	e	enum:__anon173
AINPUT_SOURCE_CLASS_POSITION	include/android/input.h	/^    AINPUT_SOURCE_CLASS_POSITION = 0x00000008,$/;"	e	enum:__anon173
AINPUT_SOURCE_DPAD	include/android/input.h	/^    AINPUT_SOURCE_DPAD = 0x00000200 | AINPUT_SOURCE_CLASS_BUTTON,$/;"	e	enum:__anon174
AINPUT_SOURCE_GAMEPAD	include/android/input.h	/^    AINPUT_SOURCE_GAMEPAD = 0x00000400 | AINPUT_SOURCE_CLASS_BUTTON,$/;"	e	enum:__anon174
AINPUT_SOURCE_GESTURE_SENSOR	include/android/input.h	/^    AINPUT_SOURCE_GESTURE_SENSOR = 0x00400000 | AINPUT_SOURCE_CLASS_NONE,$/;"	e	enum:__anon174
AINPUT_SOURCE_JOYSTICK	include/android/input.h	/^    AINPUT_SOURCE_JOYSTICK = 0x01000000 | AINPUT_SOURCE_CLASS_JOYSTICK,$/;"	e	enum:__anon174
AINPUT_SOURCE_KEYBOARD	include/android/input.h	/^    AINPUT_SOURCE_KEYBOARD = 0x00000100 | AINPUT_SOURCE_CLASS_BUTTON,$/;"	e	enum:__anon174
AINPUT_SOURCE_MOUSE	include/android/input.h	/^    AINPUT_SOURCE_MOUSE = 0x00002000 | AINPUT_SOURCE_CLASS_POINTER,$/;"	e	enum:__anon174
AINPUT_SOURCE_STYLUS	include/android/input.h	/^    AINPUT_SOURCE_STYLUS = 0x00004000 | AINPUT_SOURCE_CLASS_POINTER,$/;"	e	enum:__anon174
AINPUT_SOURCE_SWITCH	include/input/Input.h	/^    AINPUT_SOURCE_SWITCH = 0x80000000,$/;"	e	enum:__anon115
AINPUT_SOURCE_TOUCHPAD	include/android/input.h	/^    AINPUT_SOURCE_TOUCHPAD = 0x00100000 | AINPUT_SOURCE_CLASS_POSITION,$/;"	e	enum:__anon174
AINPUT_SOURCE_TOUCHSCREEN	include/android/input.h	/^    AINPUT_SOURCE_TOUCHSCREEN = 0x00001000 | AINPUT_SOURCE_CLASS_POINTER,$/;"	e	enum:__anon174
AINPUT_SOURCE_TOUCH_NAVIGATION	include/android/input.h	/^    AINPUT_SOURCE_TOUCH_NAVIGATION = 0x00200000 | AINPUT_SOURCE_CLASS_NONE,$/;"	e	enum:__anon174
AINPUT_SOURCE_TRACKBALL	include/android/input.h	/^    AINPUT_SOURCE_TRACKBALL = 0x00010000 | AINPUT_SOURCE_CLASS_NAVIGATION,$/;"	e	enum:__anon174
AINPUT_SOURCE_UNKNOWN	include/android/input.h	/^    AINPUT_SOURCE_UNKNOWN = 0x00000000,$/;"	e	enum:__anon174
AInputDevice	include/input/Input.h	/^struct AInputDevice {$/;"	s
AInputEvent	include/android/input.h	/^typedef struct AInputEvent AInputEvent;$/;"	t	typeref:struct:AInputEvent
AInputEvent	include/input/Input.h	/^struct AInputEvent {$/;"	s
AInputQueue	include/android/input.h	/^typedef struct AInputQueue AInputQueue;$/;"	t	typeref:struct:AInputQueue
AKEYCODE_0	include/android/keycodes.h	/^    AKEYCODE_0               = 7,$/;"	e	enum:__anon192
AKEYCODE_1	include/android/keycodes.h	/^    AKEYCODE_1               = 8,$/;"	e	enum:__anon192
AKEYCODE_11	include/android/keycodes.h	/^    AKEYCODE_11              = 227,$/;"	e	enum:__anon192
AKEYCODE_12	include/android/keycodes.h	/^    AKEYCODE_12              = 228,$/;"	e	enum:__anon192
AKEYCODE_2	include/android/keycodes.h	/^    AKEYCODE_2               = 9,$/;"	e	enum:__anon192
AKEYCODE_3	include/android/keycodes.h	/^    AKEYCODE_3               = 10,$/;"	e	enum:__anon192
AKEYCODE_3D_MODE	include/android/keycodes.h	/^    AKEYCODE_3D_MODE         = 206,$/;"	e	enum:__anon192
AKEYCODE_4	include/android/keycodes.h	/^    AKEYCODE_4               = 11,$/;"	e	enum:__anon192
AKEYCODE_5	include/android/keycodes.h	/^    AKEYCODE_5               = 12,$/;"	e	enum:__anon192
AKEYCODE_6	include/android/keycodes.h	/^    AKEYCODE_6               = 13,$/;"	e	enum:__anon192
AKEYCODE_7	include/android/keycodes.h	/^    AKEYCODE_7               = 14,$/;"	e	enum:__anon192
AKEYCODE_8	include/android/keycodes.h	/^    AKEYCODE_8               = 15,$/;"	e	enum:__anon192
AKEYCODE_9	include/android/keycodes.h	/^    AKEYCODE_9               = 16,$/;"	e	enum:__anon192
AKEYCODE_A	include/android/keycodes.h	/^    AKEYCODE_A               = 29,$/;"	e	enum:__anon192
AKEYCODE_ALT_LEFT	include/android/keycodes.h	/^    AKEYCODE_ALT_LEFT        = 57,$/;"	e	enum:__anon192
AKEYCODE_ALT_RIGHT	include/android/keycodes.h	/^    AKEYCODE_ALT_RIGHT       = 58,$/;"	e	enum:__anon192
AKEYCODE_APOSTROPHE	include/android/keycodes.h	/^    AKEYCODE_APOSTROPHE      = 75,$/;"	e	enum:__anon192
AKEYCODE_APP_SWITCH	include/android/keycodes.h	/^    AKEYCODE_APP_SWITCH      = 187,$/;"	e	enum:__anon192
AKEYCODE_ASSIST	include/android/keycodes.h	/^    AKEYCODE_ASSIST          = 219,$/;"	e	enum:__anon192
AKEYCODE_AT	include/android/keycodes.h	/^    AKEYCODE_AT              = 77,$/;"	e	enum:__anon192
AKEYCODE_AVR_INPUT	include/android/keycodes.h	/^    AKEYCODE_AVR_INPUT       = 182,$/;"	e	enum:__anon192
AKEYCODE_AVR_POWER	include/android/keycodes.h	/^    AKEYCODE_AVR_POWER       = 181,$/;"	e	enum:__anon192
AKEYCODE_B	include/android/keycodes.h	/^    AKEYCODE_B               = 30,$/;"	e	enum:__anon192
AKEYCODE_BACK	include/android/keycodes.h	/^    AKEYCODE_BACK            = 4,$/;"	e	enum:__anon192
AKEYCODE_BACKSLASH	include/android/keycodes.h	/^    AKEYCODE_BACKSLASH       = 73,$/;"	e	enum:__anon192
AKEYCODE_BOOKMARK	include/android/keycodes.h	/^    AKEYCODE_BOOKMARK        = 174,$/;"	e	enum:__anon192
AKEYCODE_BREAK	include/android/keycodes.h	/^    AKEYCODE_BREAK           = 121,$/;"	e	enum:__anon192
AKEYCODE_BRIGHTNESS_DOWN	include/android/keycodes.h	/^    AKEYCODE_BRIGHTNESS_DOWN = 220,$/;"	e	enum:__anon192
AKEYCODE_BRIGHTNESS_UP	include/android/keycodes.h	/^    AKEYCODE_BRIGHTNESS_UP   = 221,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_1	include/android/keycodes.h	/^    AKEYCODE_BUTTON_1        = 188,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_10	include/android/keycodes.h	/^    AKEYCODE_BUTTON_10       = 197,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_11	include/android/keycodes.h	/^    AKEYCODE_BUTTON_11       = 198,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_12	include/android/keycodes.h	/^    AKEYCODE_BUTTON_12       = 199,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_13	include/android/keycodes.h	/^    AKEYCODE_BUTTON_13       = 200,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_14	include/android/keycodes.h	/^    AKEYCODE_BUTTON_14       = 201,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_15	include/android/keycodes.h	/^    AKEYCODE_BUTTON_15       = 202,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_16	include/android/keycodes.h	/^    AKEYCODE_BUTTON_16       = 203,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_2	include/android/keycodes.h	/^    AKEYCODE_BUTTON_2        = 189,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_3	include/android/keycodes.h	/^    AKEYCODE_BUTTON_3        = 190,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_4	include/android/keycodes.h	/^    AKEYCODE_BUTTON_4        = 191,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_5	include/android/keycodes.h	/^    AKEYCODE_BUTTON_5        = 192,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_6	include/android/keycodes.h	/^    AKEYCODE_BUTTON_6        = 193,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_7	include/android/keycodes.h	/^    AKEYCODE_BUTTON_7        = 194,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_8	include/android/keycodes.h	/^    AKEYCODE_BUTTON_8        = 195,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_9	include/android/keycodes.h	/^    AKEYCODE_BUTTON_9        = 196,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_A	include/android/keycodes.h	/^    AKEYCODE_BUTTON_A        = 96,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_B	include/android/keycodes.h	/^    AKEYCODE_BUTTON_B        = 97,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_C	include/android/keycodes.h	/^    AKEYCODE_BUTTON_C        = 98,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_L1	include/android/keycodes.h	/^    AKEYCODE_BUTTON_L1       = 102,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_L2	include/android/keycodes.h	/^    AKEYCODE_BUTTON_L2       = 104,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_MODE	include/android/keycodes.h	/^    AKEYCODE_BUTTON_MODE     = 110,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_R1	include/android/keycodes.h	/^    AKEYCODE_BUTTON_R1       = 103,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_R2	include/android/keycodes.h	/^    AKEYCODE_BUTTON_R2       = 105,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_SELECT	include/android/keycodes.h	/^    AKEYCODE_BUTTON_SELECT   = 109,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_START	include/android/keycodes.h	/^    AKEYCODE_BUTTON_START    = 108,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_THUMBL	include/android/keycodes.h	/^    AKEYCODE_BUTTON_THUMBL   = 106,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_THUMBR	include/android/keycodes.h	/^    AKEYCODE_BUTTON_THUMBR   = 107,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_X	include/android/keycodes.h	/^    AKEYCODE_BUTTON_X        = 99,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_Y	include/android/keycodes.h	/^    AKEYCODE_BUTTON_Y        = 100,$/;"	e	enum:__anon192
AKEYCODE_BUTTON_Z	include/android/keycodes.h	/^    AKEYCODE_BUTTON_Z        = 101,$/;"	e	enum:__anon192
AKEYCODE_C	include/android/keycodes.h	/^    AKEYCODE_C               = 31,$/;"	e	enum:__anon192
AKEYCODE_CALCULATOR	include/android/keycodes.h	/^    AKEYCODE_CALCULATOR      = 210,$/;"	e	enum:__anon192
AKEYCODE_CALENDAR	include/android/keycodes.h	/^    AKEYCODE_CALENDAR        = 208,$/;"	e	enum:__anon192
AKEYCODE_CALL	include/android/keycodes.h	/^    AKEYCODE_CALL            = 5,$/;"	e	enum:__anon192
AKEYCODE_CAMERA	include/android/keycodes.h	/^    AKEYCODE_CAMERA          = 27,$/;"	e	enum:__anon192
AKEYCODE_CAPS_LOCK	include/android/keycodes.h	/^    AKEYCODE_CAPS_LOCK       = 115,$/;"	e	enum:__anon192
AKEYCODE_CAPTIONS	include/android/keycodes.h	/^    AKEYCODE_CAPTIONS        = 175,$/;"	e	enum:__anon192
AKEYCODE_CHANNEL_DOWN	include/android/keycodes.h	/^    AKEYCODE_CHANNEL_DOWN    = 167,$/;"	e	enum:__anon192
AKEYCODE_CHANNEL_UP	include/android/keycodes.h	/^    AKEYCODE_CHANNEL_UP      = 166,$/;"	e	enum:__anon192
AKEYCODE_CLEAR	include/android/keycodes.h	/^    AKEYCODE_CLEAR           = 28,$/;"	e	enum:__anon192
AKEYCODE_COMMA	include/android/keycodes.h	/^    AKEYCODE_COMMA           = 55,$/;"	e	enum:__anon192
AKEYCODE_CONTACTS	include/android/keycodes.h	/^    AKEYCODE_CONTACTS        = 207,$/;"	e	enum:__anon192
AKEYCODE_CTRL_LEFT	include/android/keycodes.h	/^    AKEYCODE_CTRL_LEFT       = 113,$/;"	e	enum:__anon192
AKEYCODE_CTRL_RIGHT	include/android/keycodes.h	/^    AKEYCODE_CTRL_RIGHT      = 114,$/;"	e	enum:__anon192
AKEYCODE_D	include/android/keycodes.h	/^    AKEYCODE_D               = 32,$/;"	e	enum:__anon192
AKEYCODE_DEL	include/android/keycodes.h	/^    AKEYCODE_DEL             = 67,$/;"	e	enum:__anon192
AKEYCODE_DPAD_CENTER	include/android/keycodes.h	/^    AKEYCODE_DPAD_CENTER     = 23,$/;"	e	enum:__anon192
AKEYCODE_DPAD_DOWN	include/android/keycodes.h	/^    AKEYCODE_DPAD_DOWN       = 20,$/;"	e	enum:__anon192
AKEYCODE_DPAD_LEFT	include/android/keycodes.h	/^    AKEYCODE_DPAD_LEFT       = 21,$/;"	e	enum:__anon192
AKEYCODE_DPAD_RIGHT	include/android/keycodes.h	/^    AKEYCODE_DPAD_RIGHT      = 22,$/;"	e	enum:__anon192
AKEYCODE_DPAD_UP	include/android/keycodes.h	/^    AKEYCODE_DPAD_UP         = 19,$/;"	e	enum:__anon192
AKEYCODE_DVR	include/android/keycodes.h	/^    AKEYCODE_DVR             = 173,$/;"	e	enum:__anon192
AKEYCODE_E	include/android/keycodes.h	/^    AKEYCODE_E               = 33,$/;"	e	enum:__anon192
AKEYCODE_EISU	include/android/keycodes.h	/^    AKEYCODE_EISU            = 212,$/;"	e	enum:__anon192
AKEYCODE_ENDCALL	include/android/keycodes.h	/^    AKEYCODE_ENDCALL         = 6,$/;"	e	enum:__anon192
AKEYCODE_ENTER	include/android/keycodes.h	/^    AKEYCODE_ENTER           = 66,$/;"	e	enum:__anon192
AKEYCODE_ENVELOPE	include/android/keycodes.h	/^    AKEYCODE_ENVELOPE        = 65,$/;"	e	enum:__anon192
AKEYCODE_EQUALS	include/android/keycodes.h	/^    AKEYCODE_EQUALS          = 70,$/;"	e	enum:__anon192
AKEYCODE_ESCAPE	include/android/keycodes.h	/^    AKEYCODE_ESCAPE          = 111,$/;"	e	enum:__anon192
AKEYCODE_EXPLORER	include/android/keycodes.h	/^    AKEYCODE_EXPLORER        = 64,$/;"	e	enum:__anon192
AKEYCODE_F	include/android/keycodes.h	/^    AKEYCODE_F               = 34,$/;"	e	enum:__anon192
AKEYCODE_F1	include/android/keycodes.h	/^    AKEYCODE_F1              = 131,$/;"	e	enum:__anon192
AKEYCODE_F10	include/android/keycodes.h	/^    AKEYCODE_F10             = 140,$/;"	e	enum:__anon192
AKEYCODE_F11	include/android/keycodes.h	/^    AKEYCODE_F11             = 141,$/;"	e	enum:__anon192
AKEYCODE_F12	include/android/keycodes.h	/^    AKEYCODE_F12             = 142,$/;"	e	enum:__anon192
AKEYCODE_F2	include/android/keycodes.h	/^    AKEYCODE_F2              = 132,$/;"	e	enum:__anon192
AKEYCODE_F3	include/android/keycodes.h	/^    AKEYCODE_F3              = 133,$/;"	e	enum:__anon192
AKEYCODE_F4	include/android/keycodes.h	/^    AKEYCODE_F4              = 134,$/;"	e	enum:__anon192
AKEYCODE_F5	include/android/keycodes.h	/^    AKEYCODE_F5              = 135,$/;"	e	enum:__anon192
AKEYCODE_F6	include/android/keycodes.h	/^    AKEYCODE_F6              = 136,$/;"	e	enum:__anon192
AKEYCODE_F7	include/android/keycodes.h	/^    AKEYCODE_F7              = 137,$/;"	e	enum:__anon192
AKEYCODE_F8	include/android/keycodes.h	/^    AKEYCODE_F8              = 138,$/;"	e	enum:__anon192
AKEYCODE_F9	include/android/keycodes.h	/^    AKEYCODE_F9              = 139,$/;"	e	enum:__anon192
AKEYCODE_FOCUS	include/android/keycodes.h	/^    AKEYCODE_FOCUS           = 80,   \/\/ *Camera* focus$/;"	e	enum:__anon192
AKEYCODE_FORWARD	include/android/keycodes.h	/^    AKEYCODE_FORWARD         = 125,$/;"	e	enum:__anon192
AKEYCODE_FORWARD_DEL	include/android/keycodes.h	/^    AKEYCODE_FORWARD_DEL     = 112,$/;"	e	enum:__anon192
AKEYCODE_FUNCTION	include/android/keycodes.h	/^    AKEYCODE_FUNCTION        = 119,$/;"	e	enum:__anon192
AKEYCODE_G	include/android/keycodes.h	/^    AKEYCODE_G               = 35,$/;"	e	enum:__anon192
AKEYCODE_GRAVE	include/android/keycodes.h	/^    AKEYCODE_GRAVE           = 68,$/;"	e	enum:__anon192
AKEYCODE_GUIDE	include/android/keycodes.h	/^    AKEYCODE_GUIDE           = 172,$/;"	e	enum:__anon192
AKEYCODE_H	include/android/keycodes.h	/^    AKEYCODE_H               = 36,$/;"	e	enum:__anon192
AKEYCODE_HEADSETHOOK	include/android/keycodes.h	/^    AKEYCODE_HEADSETHOOK     = 79,$/;"	e	enum:__anon192
AKEYCODE_HELP	include/android/keycodes.h	/^    AKEYCODE_HELP            = 259$/;"	e	enum:__anon192
AKEYCODE_HENKAN	include/android/keycodes.h	/^    AKEYCODE_HENKAN          = 214,$/;"	e	enum:__anon192
AKEYCODE_HOME	include/android/keycodes.h	/^    AKEYCODE_HOME            = 3,$/;"	e	enum:__anon192
AKEYCODE_I	include/android/keycodes.h	/^    AKEYCODE_I               = 37,$/;"	e	enum:__anon192
AKEYCODE_INFO	include/android/keycodes.h	/^    AKEYCODE_INFO            = 165,$/;"	e	enum:__anon192
AKEYCODE_INSERT	include/android/keycodes.h	/^    AKEYCODE_INSERT          = 124,$/;"	e	enum:__anon192
AKEYCODE_J	include/android/keycodes.h	/^    AKEYCODE_J               = 38,$/;"	e	enum:__anon192
AKEYCODE_K	include/android/keycodes.h	/^    AKEYCODE_K               = 39,$/;"	e	enum:__anon192
AKEYCODE_KANA	include/android/keycodes.h	/^    AKEYCODE_KANA            = 218,$/;"	e	enum:__anon192
AKEYCODE_KATAKANA_HIRAGANA	include/android/keycodes.h	/^    AKEYCODE_KATAKANA_HIRAGANA = 215,$/;"	e	enum:__anon192
AKEYCODE_L	include/android/keycodes.h	/^    AKEYCODE_L               = 40,$/;"	e	enum:__anon192
AKEYCODE_LANGUAGE_SWITCH	include/android/keycodes.h	/^    AKEYCODE_LANGUAGE_SWITCH = 204,$/;"	e	enum:__anon192
AKEYCODE_LAST_CHANNEL	include/android/keycodes.h	/^    AKEYCODE_LAST_CHANNEL    = 229,$/;"	e	enum:__anon192
AKEYCODE_LEFT_BRACKET	include/android/keycodes.h	/^    AKEYCODE_LEFT_BRACKET    = 71,$/;"	e	enum:__anon192
AKEYCODE_M	include/android/keycodes.h	/^    AKEYCODE_M               = 41,$/;"	e	enum:__anon192
AKEYCODE_MANNER_MODE	include/android/keycodes.h	/^    AKEYCODE_MANNER_MODE     = 205,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_AUDIO_TRACK	include/android/keycodes.h	/^    AKEYCODE_MEDIA_AUDIO_TRACK = 222,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_CLOSE	include/android/keycodes.h	/^    AKEYCODE_MEDIA_CLOSE     = 128,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_EJECT	include/android/keycodes.h	/^    AKEYCODE_MEDIA_EJECT     = 129,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_FAST_FORWARD	include/android/keycodes.h	/^    AKEYCODE_MEDIA_FAST_FORWARD = 90,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_NEXT	include/android/keycodes.h	/^    AKEYCODE_MEDIA_NEXT      = 87,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_PAUSE	include/android/keycodes.h	/^    AKEYCODE_MEDIA_PAUSE     = 127,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_PLAY	include/android/keycodes.h	/^    AKEYCODE_MEDIA_PLAY      = 126,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_PLAY_PAUSE	include/android/keycodes.h	/^    AKEYCODE_MEDIA_PLAY_PAUSE= 85,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_PREVIOUS	include/android/keycodes.h	/^    AKEYCODE_MEDIA_PREVIOUS  = 88,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_RECORD	include/android/keycodes.h	/^    AKEYCODE_MEDIA_RECORD    = 130,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_REWIND	include/android/keycodes.h	/^    AKEYCODE_MEDIA_REWIND    = 89,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_STOP	include/android/keycodes.h	/^    AKEYCODE_MEDIA_STOP      = 86,$/;"	e	enum:__anon192
AKEYCODE_MEDIA_TOP_MENU	include/android/keycodes.h	/^    AKEYCODE_MEDIA_TOP_MENU  = 226,$/;"	e	enum:__anon192
AKEYCODE_MENU	include/android/keycodes.h	/^    AKEYCODE_MENU            = 82,$/;"	e	enum:__anon192
AKEYCODE_META_LEFT	include/android/keycodes.h	/^    AKEYCODE_META_LEFT       = 117,$/;"	e	enum:__anon192
AKEYCODE_META_RIGHT	include/android/keycodes.h	/^    AKEYCODE_META_RIGHT      = 118,$/;"	e	enum:__anon192
AKEYCODE_MINUS	include/android/keycodes.h	/^    AKEYCODE_MINUS           = 69,$/;"	e	enum:__anon192
AKEYCODE_MOVE_END	include/android/keycodes.h	/^    AKEYCODE_MOVE_END        = 123,$/;"	e	enum:__anon192
AKEYCODE_MOVE_HOME	include/android/keycodes.h	/^    AKEYCODE_MOVE_HOME       = 122,$/;"	e	enum:__anon192
AKEYCODE_MUHENKAN	include/android/keycodes.h	/^    AKEYCODE_MUHENKAN        = 213,$/;"	e	enum:__anon192
AKEYCODE_MUSIC	include/android/keycodes.h	/^    AKEYCODE_MUSIC           = 209,$/;"	e	enum:__anon192
AKEYCODE_MUTE	include/android/keycodes.h	/^    AKEYCODE_MUTE            = 91,$/;"	e	enum:__anon192
AKEYCODE_N	include/android/keycodes.h	/^    AKEYCODE_N               = 42,$/;"	e	enum:__anon192
AKEYCODE_NOTIFICATION	include/android/keycodes.h	/^    AKEYCODE_NOTIFICATION    = 83,$/;"	e	enum:__anon192
AKEYCODE_NUM	include/android/keycodes.h	/^    AKEYCODE_NUM             = 78,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_0	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_0        = 144,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_1	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_1        = 145,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_2	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_2        = 146,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_3	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_3        = 147,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_4	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_4        = 148,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_5	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_5        = 149,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_6	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_6        = 150,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_7	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_7        = 151,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_8	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_8        = 152,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_9	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_9        = 153,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_ADD	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_ADD      = 157,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_COMMA	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_COMMA    = 159,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_DIVIDE	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_DIVIDE   = 154,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_DOT	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_DOT      = 158,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_ENTER	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_ENTER    = 160,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_EQUALS	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_EQUALS   = 161,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_LEFT_PAREN	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_LEFT_PAREN = 162,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_MULTIPLY	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_MULTIPLY = 155,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_RIGHT_PAREN	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_RIGHT_PAREN = 163,$/;"	e	enum:__anon192
AKEYCODE_NUMPAD_SUBTRACT	include/android/keycodes.h	/^    AKEYCODE_NUMPAD_SUBTRACT = 156,$/;"	e	enum:__anon192
AKEYCODE_NUM_LOCK	include/android/keycodes.h	/^    AKEYCODE_NUM_LOCK        = 143,$/;"	e	enum:__anon192
AKEYCODE_O	include/android/keycodes.h	/^    AKEYCODE_O               = 43,$/;"	e	enum:__anon192
AKEYCODE_P	include/android/keycodes.h	/^    AKEYCODE_P               = 44,$/;"	e	enum:__anon192
AKEYCODE_PAGE_DOWN	include/android/keycodes.h	/^    AKEYCODE_PAGE_DOWN       = 93,$/;"	e	enum:__anon192
AKEYCODE_PAGE_UP	include/android/keycodes.h	/^    AKEYCODE_PAGE_UP         = 92,$/;"	e	enum:__anon192
AKEYCODE_PAIRING	include/android/keycodes.h	/^    AKEYCODE_PAIRING         = 225,$/;"	e	enum:__anon192
AKEYCODE_PERIOD	include/android/keycodes.h	/^    AKEYCODE_PERIOD          = 56,$/;"	e	enum:__anon192
AKEYCODE_PICTSYMBOLS	include/android/keycodes.h	/^    AKEYCODE_PICTSYMBOLS     = 94,$/;"	e	enum:__anon192
AKEYCODE_PLUS	include/android/keycodes.h	/^    AKEYCODE_PLUS            = 81,$/;"	e	enum:__anon192
AKEYCODE_POUND	include/android/keycodes.h	/^    AKEYCODE_POUND           = 18,$/;"	e	enum:__anon192
AKEYCODE_POWER	include/android/keycodes.h	/^    AKEYCODE_POWER           = 26,$/;"	e	enum:__anon192
AKEYCODE_PROG_BLUE	include/android/keycodes.h	/^    AKEYCODE_PROG_BLUE       = 186,$/;"	e	enum:__anon192
AKEYCODE_PROG_GREEN	include/android/keycodes.h	/^    AKEYCODE_PROG_GREEN      = 184,$/;"	e	enum:__anon192
AKEYCODE_PROG_RED	include/android/keycodes.h	/^    AKEYCODE_PROG_RED        = 183,$/;"	e	enum:__anon192
AKEYCODE_PROG_YELLOW	include/android/keycodes.h	/^    AKEYCODE_PROG_YELLOW     = 185,$/;"	e	enum:__anon192
AKEYCODE_Q	include/android/keycodes.h	/^    AKEYCODE_Q               = 45,$/;"	e	enum:__anon192
AKEYCODE_R	include/android/keycodes.h	/^    AKEYCODE_R               = 46,$/;"	e	enum:__anon192
AKEYCODE_RIGHT_BRACKET	include/android/keycodes.h	/^    AKEYCODE_RIGHT_BRACKET   = 72,$/;"	e	enum:__anon192
AKEYCODE_RO	include/android/keycodes.h	/^    AKEYCODE_RO              = 217,$/;"	e	enum:__anon192
AKEYCODE_S	include/android/keycodes.h	/^    AKEYCODE_S               = 47,$/;"	e	enum:__anon192
AKEYCODE_SCROLL_LOCK	include/android/keycodes.h	/^    AKEYCODE_SCROLL_LOCK     = 116,$/;"	e	enum:__anon192
AKEYCODE_SEARCH	include/android/keycodes.h	/^    AKEYCODE_SEARCH          = 84,$/;"	e	enum:__anon192
AKEYCODE_SEMICOLON	include/android/keycodes.h	/^    AKEYCODE_SEMICOLON       = 74,$/;"	e	enum:__anon192
AKEYCODE_SETTINGS	include/android/keycodes.h	/^    AKEYCODE_SETTINGS        = 176,$/;"	e	enum:__anon192
AKEYCODE_SHIFT_LEFT	include/android/keycodes.h	/^    AKEYCODE_SHIFT_LEFT      = 59,$/;"	e	enum:__anon192
AKEYCODE_SHIFT_RIGHT	include/android/keycodes.h	/^    AKEYCODE_SHIFT_RIGHT     = 60,$/;"	e	enum:__anon192
AKEYCODE_SLASH	include/android/keycodes.h	/^    AKEYCODE_SLASH           = 76,$/;"	e	enum:__anon192
AKEYCODE_SLEEP	include/android/keycodes.h	/^    AKEYCODE_SLEEP           = 223,$/;"	e	enum:__anon192
AKEYCODE_SOFT_LEFT	include/android/keycodes.h	/^    AKEYCODE_SOFT_LEFT       = 1,$/;"	e	enum:__anon192
AKEYCODE_SOFT_RIGHT	include/android/keycodes.h	/^    AKEYCODE_SOFT_RIGHT      = 2,$/;"	e	enum:__anon192
AKEYCODE_SPACE	include/android/keycodes.h	/^    AKEYCODE_SPACE           = 62,$/;"	e	enum:__anon192
AKEYCODE_STAR	include/android/keycodes.h	/^    AKEYCODE_STAR            = 17,$/;"	e	enum:__anon192
AKEYCODE_STB_INPUT	include/android/keycodes.h	/^    AKEYCODE_STB_INPUT       = 180,$/;"	e	enum:__anon192
AKEYCODE_STB_POWER	include/android/keycodes.h	/^    AKEYCODE_STB_POWER       = 179,$/;"	e	enum:__anon192
AKEYCODE_SWITCH_CHARSET	include/android/keycodes.h	/^    AKEYCODE_SWITCH_CHARSET  = 95,$/;"	e	enum:__anon192
AKEYCODE_SYM	include/android/keycodes.h	/^    AKEYCODE_SYM             = 63,$/;"	e	enum:__anon192
AKEYCODE_SYSRQ	include/android/keycodes.h	/^    AKEYCODE_SYSRQ           = 120,$/;"	e	enum:__anon192
AKEYCODE_T	include/android/keycodes.h	/^    AKEYCODE_T               = 48,$/;"	e	enum:__anon192
AKEYCODE_TAB	include/android/keycodes.h	/^    AKEYCODE_TAB             = 61,$/;"	e	enum:__anon192
AKEYCODE_TV	include/android/keycodes.h	/^    AKEYCODE_TV              = 170,$/;"	e	enum:__anon192
AKEYCODE_TV_ANTENNA_CABLE	include/android/keycodes.h	/^    AKEYCODE_TV_ANTENNA_CABLE = 242,$/;"	e	enum:__anon192
AKEYCODE_TV_AUDIO_DESCRIPTION	include/android/keycodes.h	/^    AKEYCODE_TV_AUDIO_DESCRIPTION = 252,$/;"	e	enum:__anon192
AKEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN	include/android/keycodes.h	/^    AKEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN = 254,$/;"	e	enum:__anon192
AKEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP	include/android/keycodes.h	/^    AKEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP = 253,$/;"	e	enum:__anon192
AKEYCODE_TV_CONTENTS_MENU	include/android/keycodes.h	/^    AKEYCODE_TV_CONTENTS_MENU = 256,$/;"	e	enum:__anon192
AKEYCODE_TV_DATA_SERVICE	include/android/keycodes.h	/^    AKEYCODE_TV_DATA_SERVICE = 230,$/;"	e	enum:__anon192
AKEYCODE_TV_INPUT	include/android/keycodes.h	/^    AKEYCODE_TV_INPUT        = 178,$/;"	e	enum:__anon192
AKEYCODE_TV_INPUT_COMPONENT_1	include/android/keycodes.h	/^    AKEYCODE_TV_INPUT_COMPONENT_1 = 249,$/;"	e	enum:__anon192
AKEYCODE_TV_INPUT_COMPONENT_2	include/android/keycodes.h	/^    AKEYCODE_TV_INPUT_COMPONENT_2 = 250,$/;"	e	enum:__anon192
AKEYCODE_TV_INPUT_COMPOSITE_1	include/android/keycodes.h	/^    AKEYCODE_TV_INPUT_COMPOSITE_1 = 247,$/;"	e	enum:__anon192
AKEYCODE_TV_INPUT_COMPOSITE_2	include/android/keycodes.h	/^    AKEYCODE_TV_INPUT_COMPOSITE_2 = 248,$/;"	e	enum:__anon192
AKEYCODE_TV_INPUT_HDMI_1	include/android/keycodes.h	/^    AKEYCODE_TV_INPUT_HDMI_1 = 243,$/;"	e	enum:__anon192
AKEYCODE_TV_INPUT_HDMI_2	include/android/keycodes.h	/^    AKEYCODE_TV_INPUT_HDMI_2 = 244,$/;"	e	enum:__anon192
AKEYCODE_TV_INPUT_HDMI_3	include/android/keycodes.h	/^    AKEYCODE_TV_INPUT_HDMI_3 = 245,$/;"	e	enum:__anon192
AKEYCODE_TV_INPUT_HDMI_4	include/android/keycodes.h	/^    AKEYCODE_TV_INPUT_HDMI_4 = 246,$/;"	e	enum:__anon192
AKEYCODE_TV_INPUT_VGA_1	include/android/keycodes.h	/^    AKEYCODE_TV_INPUT_VGA_1  = 251,$/;"	e	enum:__anon192
AKEYCODE_TV_MEDIA_CONTEXT_MENU	include/android/keycodes.h	/^    AKEYCODE_TV_MEDIA_CONTEXT_MENU = 257,$/;"	e	enum:__anon192
AKEYCODE_TV_NETWORK	include/android/keycodes.h	/^    AKEYCODE_TV_NETWORK      = 241,$/;"	e	enum:__anon192
AKEYCODE_TV_NUMBER_ENTRY	include/android/keycodes.h	/^    AKEYCODE_TV_NUMBER_ENTRY = 234,$/;"	e	enum:__anon192
AKEYCODE_TV_POWER	include/android/keycodes.h	/^    AKEYCODE_TV_POWER        = 177,$/;"	e	enum:__anon192
AKEYCODE_TV_RADIO_SERVICE	include/android/keycodes.h	/^    AKEYCODE_TV_RADIO_SERVICE = 232,$/;"	e	enum:__anon192
AKEYCODE_TV_SATELLITE	include/android/keycodes.h	/^    AKEYCODE_TV_SATELLITE    = 237,$/;"	e	enum:__anon192
AKEYCODE_TV_SATELLITE_BS	include/android/keycodes.h	/^    AKEYCODE_TV_SATELLITE_BS = 238,$/;"	e	enum:__anon192
AKEYCODE_TV_SATELLITE_CS	include/android/keycodes.h	/^    AKEYCODE_TV_SATELLITE_CS = 239,$/;"	e	enum:__anon192
AKEYCODE_TV_SATELLITE_SERVICE	include/android/keycodes.h	/^    AKEYCODE_TV_SATELLITE_SERVICE = 240,$/;"	e	enum:__anon192
AKEYCODE_TV_TELETEXT	include/android/keycodes.h	/^    AKEYCODE_TV_TELETEXT     = 233,$/;"	e	enum:__anon192
AKEYCODE_TV_TERRESTRIAL_ANALOG	include/android/keycodes.h	/^    AKEYCODE_TV_TERRESTRIAL_ANALOG = 235,$/;"	e	enum:__anon192
AKEYCODE_TV_TERRESTRIAL_DIGITAL	include/android/keycodes.h	/^    AKEYCODE_TV_TERRESTRIAL_DIGITAL = 236,$/;"	e	enum:__anon192
AKEYCODE_TV_TIMER_PROGRAMMING	include/android/keycodes.h	/^    AKEYCODE_TV_TIMER_PROGRAMMING = 258,$/;"	e	enum:__anon192
AKEYCODE_TV_ZOOM_MODE	include/android/keycodes.h	/^    AKEYCODE_TV_ZOOM_MODE    = 255,$/;"	e	enum:__anon192
AKEYCODE_U	include/android/keycodes.h	/^    AKEYCODE_U               = 49,$/;"	e	enum:__anon192
AKEYCODE_UNKNOWN	include/android/keycodes.h	/^    AKEYCODE_UNKNOWN         = 0,$/;"	e	enum:__anon192
AKEYCODE_V	include/android/keycodes.h	/^    AKEYCODE_V               = 50,$/;"	e	enum:__anon192
AKEYCODE_VOICE_ASSIST	include/android/keycodes.h	/^    AKEYCODE_VOICE_ASSIST    = 231,$/;"	e	enum:__anon192
AKEYCODE_VOLUME_DOWN	include/android/keycodes.h	/^    AKEYCODE_VOLUME_DOWN     = 25,$/;"	e	enum:__anon192
AKEYCODE_VOLUME_MUTE	include/android/keycodes.h	/^    AKEYCODE_VOLUME_MUTE     = 164,$/;"	e	enum:__anon192
AKEYCODE_VOLUME_UP	include/android/keycodes.h	/^    AKEYCODE_VOLUME_UP       = 24,$/;"	e	enum:__anon192
AKEYCODE_W	include/android/keycodes.h	/^    AKEYCODE_W               = 51,$/;"	e	enum:__anon192
AKEYCODE_WAKEUP	include/android/keycodes.h	/^    AKEYCODE_WAKEUP          = 224,$/;"	e	enum:__anon192
AKEYCODE_WINDOW	include/android/keycodes.h	/^    AKEYCODE_WINDOW          = 171,$/;"	e	enum:__anon192
AKEYCODE_X	include/android/keycodes.h	/^    AKEYCODE_X               = 52,$/;"	e	enum:__anon192
AKEYCODE_Y	include/android/keycodes.h	/^    AKEYCODE_Y               = 53,$/;"	e	enum:__anon192
AKEYCODE_YEN	include/android/keycodes.h	/^    AKEYCODE_YEN             = 216,$/;"	e	enum:__anon192
AKEYCODE_Z	include/android/keycodes.h	/^    AKEYCODE_Z               = 54,$/;"	e	enum:__anon192
AKEYCODE_ZENKAKU_HANKAKU	include/android/keycodes.h	/^    AKEYCODE_ZENKAKU_HANKAKU = 211,$/;"	e	enum:__anon192
AKEYCODE_ZOOM_IN	include/android/keycodes.h	/^    AKEYCODE_ZOOM_IN         = 168,$/;"	e	enum:__anon192
AKEYCODE_ZOOM_OUT	include/android/keycodes.h	/^    AKEYCODE_ZOOM_OUT        = 169,$/;"	e	enum:__anon192
AKEY_EVENT_ACTION_DOWN	include/android/input.h	/^    AKEY_EVENT_ACTION_DOWN = 0,$/;"	e	enum:__anon165
AKEY_EVENT_ACTION_MULTIPLE	include/android/input.h	/^    AKEY_EVENT_ACTION_MULTIPLE = 2$/;"	e	enum:__anon165
AKEY_EVENT_ACTION_UP	include/android/input.h	/^    AKEY_EVENT_ACTION_UP = 1,$/;"	e	enum:__anon165
AKEY_EVENT_FLAG_CANCELED	include/android/input.h	/^    AKEY_EVENT_FLAG_CANCELED = 0x20,$/;"	e	enum:__anon166
AKEY_EVENT_FLAG_CANCELED_LONG_PRESS	include/android/input.h	/^    AKEY_EVENT_FLAG_CANCELED_LONG_PRESS = 0x100,$/;"	e	enum:__anon166
AKEY_EVENT_FLAG_EDITOR_ACTION	include/android/input.h	/^    AKEY_EVENT_FLAG_EDITOR_ACTION = 0x10,$/;"	e	enum:__anon166
AKEY_EVENT_FLAG_FALLBACK	include/android/input.h	/^    AKEY_EVENT_FLAG_FALLBACK = 0x400,$/;"	e	enum:__anon166
AKEY_EVENT_FLAG_FROM_SYSTEM	include/android/input.h	/^    AKEY_EVENT_FLAG_FROM_SYSTEM = 0x8,$/;"	e	enum:__anon166
AKEY_EVENT_FLAG_KEEP_TOUCH_MODE	include/android/input.h	/^    AKEY_EVENT_FLAG_KEEP_TOUCH_MODE = 0x4,$/;"	e	enum:__anon166
AKEY_EVENT_FLAG_LONG_PRESS	include/android/input.h	/^    AKEY_EVENT_FLAG_LONG_PRESS = 0x80,$/;"	e	enum:__anon166
AKEY_EVENT_FLAG_PREDISPATCH	include/input/Input.h	/^    AKEY_EVENT_FLAG_PREDISPATCH = 0x20000000,$/;"	e	enum:__anon112
AKEY_EVENT_FLAG_SOFT_KEYBOARD	include/android/input.h	/^    AKEY_EVENT_FLAG_SOFT_KEYBOARD = 0x2,$/;"	e	enum:__anon166
AKEY_EVENT_FLAG_START_TRACKING	include/input/Input.h	/^    AKEY_EVENT_FLAG_START_TRACKING = 0x40000000,$/;"	e	enum:__anon112
AKEY_EVENT_FLAG_TAINTED	include/input/Input.h	/^    AKEY_EVENT_FLAG_TAINTED = 0x80000000,$/;"	e	enum:__anon112
AKEY_EVENT_FLAG_TRACKING	include/android/input.h	/^    AKEY_EVENT_FLAG_TRACKING = 0x200,$/;"	e	enum:__anon166
AKEY_EVENT_FLAG_VIRTUAL_HARD_KEY	include/android/input.h	/^    AKEY_EVENT_FLAG_VIRTUAL_HARD_KEY = 0x40,$/;"	e	enum:__anon166
AKEY_EVENT_FLAG_WOKE_HERE	include/android/input.h	/^    AKEY_EVENT_FLAG_WOKE_HERE = 0x1,$/;"	e	enum:__anon166
AKEY_STATE_DOWN	include/android/input.h	/^    AKEY_STATE_DOWN = 1,$/;"	e	enum:__anon162
AKEY_STATE_UNKNOWN	include/android/input.h	/^    AKEY_STATE_UNKNOWN = -1,$/;"	e	enum:__anon162
AKEY_STATE_UP	include/android/input.h	/^    AKEY_STATE_UP = 0,$/;"	e	enum:__anon162
AKEY_STATE_VIRTUAL	include/android/input.h	/^    AKEY_STATE_VIRTUAL = 2$/;"	e	enum:__anon162
ALED_CAPS_LOCK	include/input/Input.h	/^    ALED_CAPS_LOCK = 0x01,$/;"	e	enum:__anon116
ALED_CHARGING	include/input/Input.h	/^    ALED_CHARGING = 0x0a,$/;"	e	enum:__anon116
ALED_COMPOSE	include/input/Input.h	/^    ALED_COMPOSE = 0x03,$/;"	e	enum:__anon116
ALED_CONTROLLER_1	include/input/Input.h	/^    ALED_CONTROLLER_1 = 0x10,$/;"	e	enum:__anon116
ALED_CONTROLLER_2	include/input/Input.h	/^    ALED_CONTROLLER_2 = 0x11,$/;"	e	enum:__anon116
ALED_CONTROLLER_3	include/input/Input.h	/^    ALED_CONTROLLER_3 = 0x12,$/;"	e	enum:__anon116
ALED_CONTROLLER_4	include/input/Input.h	/^    ALED_CONTROLLER_4 = 0x13,$/;"	e	enum:__anon116
ALED_KANA	include/input/Input.h	/^    ALED_KANA = 0x04,$/;"	e	enum:__anon116
ALED_MAIL	include/input/Input.h	/^    ALED_MAIL = 0x09,$/;"	e	enum:__anon116
ALED_MISC	include/input/Input.h	/^    ALED_MISC = 0x08,$/;"	e	enum:__anon116
ALED_MUTE	include/input/Input.h	/^    ALED_MUTE = 0x07,$/;"	e	enum:__anon116
ALED_NUM_LOCK	include/input/Input.h	/^    ALED_NUM_LOCK = 0x00,$/;"	e	enum:__anon116
ALED_SCROLL_LOCK	include/input/Input.h	/^    ALED_SCROLL_LOCK = 0x02,$/;"	e	enum:__anon116
ALED_SLEEP	include/input/Input.h	/^    ALED_SLEEP = 0x05,$/;"	e	enum:__anon116
ALED_SUSPEND	include/input/Input.h	/^    ALED_SUSPEND = 0x06,$/;"	e	enum:__anon116
ALLOCATE_BUFFERS	libs/gui/IGraphicBufferProducer.cpp	/^    ALLOCATE_BUFFERS,$/;"	e	enum:android::__anon248	file:
ALOGVV	libs/gui/tests/CpuConsumer_test.cpp	22;"	d	file:
ALOGVV	libs/gui/tests/CpuConsumer_test.cpp	24;"	d	file:
ALOOPER_EVENT_ERROR	include/android/looper.h	/^    ALOOPER_EVENT_ERROR = 1 << 2,$/;"	e	enum:__anon196
ALOOPER_EVENT_HANGUP	include/android/looper.h	/^    ALOOPER_EVENT_HANGUP = 1 << 3,$/;"	e	enum:__anon196
ALOOPER_EVENT_INPUT	include/android/looper.h	/^    ALOOPER_EVENT_INPUT = 1 << 0,$/;"	e	enum:__anon196
ALOOPER_EVENT_INVALID	include/android/looper.h	/^    ALOOPER_EVENT_INVALID = 1 << 4,$/;"	e	enum:__anon196
ALOOPER_EVENT_OUTPUT	include/android/looper.h	/^    ALOOPER_EVENT_OUTPUT = 1 << 1,$/;"	e	enum:__anon196
ALOOPER_POLL_CALLBACK	include/android/looper.h	/^    ALOOPER_POLL_CALLBACK = -2,$/;"	e	enum:__anon195
ALOOPER_POLL_ERROR	include/android/looper.h	/^    ALOOPER_POLL_ERROR = -4,$/;"	e	enum:__anon195
ALOOPER_POLL_TIMEOUT	include/android/looper.h	/^    ALOOPER_POLL_TIMEOUT = -3,$/;"	e	enum:__anon195
ALOOPER_POLL_WAKE	include/android/looper.h	/^    ALOOPER_POLL_WAKE = -1,$/;"	e	enum:__anon195
ALOOPER_PREPARE_ALLOW_NON_CALLBACKS	include/android/looper.h	/^    ALOOPER_PREPARE_ALLOW_NON_CALLBACKS = 1<<0$/;"	e	enum:__anon194
ALPHA	include/ui/PixelFormat.h	/^        ALPHA   = 1,$/;"	e	enum:android::PixelFormatInfo::__anon79
ALPHA_VALUE	libs/gui/tests/SRGB_test.cpp	/^        ALPHA_VALUE = 223, \/\/ should be in [0, 255]$/;"	e	enum:android::SRGBTest::__anon253	file:
ALooper	include/android/looper.h	/^typedef struct ALooper ALooper;$/;"	t	typeref:struct:ALooper
ALooper_callbackFunc	include/android/looper.h	/^typedef int (*ALooper_callbackFunc)(int fd, int events, void* data);$/;"	t
AMETA_ALT_LEFT_ON	include/android/input.h	/^    AMETA_ALT_LEFT_ON = 0x10,$/;"	e	enum:__anon163
AMETA_ALT_ON	include/android/input.h	/^    AMETA_ALT_ON = 0x02,$/;"	e	enum:__anon163
AMETA_ALT_RIGHT_ON	include/android/input.h	/^    AMETA_ALT_RIGHT_ON = 0x20,$/;"	e	enum:__anon163
AMETA_CAPS_LOCK_ON	include/android/input.h	/^    AMETA_CAPS_LOCK_ON = 0x100000,$/;"	e	enum:__anon163
AMETA_CTRL_LEFT_ON	include/android/input.h	/^    AMETA_CTRL_LEFT_ON = 0x2000,$/;"	e	enum:__anon163
AMETA_CTRL_ON	include/android/input.h	/^    AMETA_CTRL_ON = 0x1000,$/;"	e	enum:__anon163
AMETA_CTRL_RIGHT_ON	include/android/input.h	/^    AMETA_CTRL_RIGHT_ON = 0x4000,$/;"	e	enum:__anon163
AMETA_FUNCTION_ON	include/android/input.h	/^    AMETA_FUNCTION_ON = 0x08,$/;"	e	enum:__anon163
AMETA_META_LEFT_ON	include/android/input.h	/^    AMETA_META_LEFT_ON = 0x20000,$/;"	e	enum:__anon163
AMETA_META_ON	include/android/input.h	/^    AMETA_META_ON = 0x10000,$/;"	e	enum:__anon163
AMETA_META_RIGHT_ON	include/android/input.h	/^    AMETA_META_RIGHT_ON = 0x40000,$/;"	e	enum:__anon163
AMETA_NONE	include/android/input.h	/^    AMETA_NONE = 0,$/;"	e	enum:__anon163
AMETA_NUM_LOCK_ON	include/android/input.h	/^    AMETA_NUM_LOCK_ON = 0x200000,$/;"	e	enum:__anon163
AMETA_SCROLL_LOCK_ON	include/android/input.h	/^    AMETA_SCROLL_LOCK_ON = 0x400000,$/;"	e	enum:__anon163
AMETA_SHIFT_LEFT_ON	include/android/input.h	/^    AMETA_SHIFT_LEFT_ON = 0x40,$/;"	e	enum:__anon163
AMETA_SHIFT_ON	include/android/input.h	/^    AMETA_SHIFT_ON = 0x01,$/;"	e	enum:__anon163
AMETA_SHIFT_RIGHT_ON	include/android/input.h	/^    AMETA_SHIFT_RIGHT_ON = 0x80,$/;"	e	enum:__anon163
AMETA_SYM_ON	include/android/input.h	/^    AMETA_SYM_ON = 0x04,$/;"	e	enum:__anon163
AMOTION_EVENT_ACTION_CANCEL	include/android/input.h	/^    AMOTION_EVENT_ACTION_CANCEL = 3,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_DOWN	include/android/input.h	/^    AMOTION_EVENT_ACTION_DOWN = 0,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_HOVER_ENTER	include/android/input.h	/^    AMOTION_EVENT_ACTION_HOVER_ENTER = 9,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_HOVER_EXIT	include/android/input.h	/^    AMOTION_EVENT_ACTION_HOVER_EXIT = 10,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_HOVER_MOVE	include/android/input.h	/^    AMOTION_EVENT_ACTION_HOVER_MOVE = 7,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_MASK	include/android/input.h	/^    AMOTION_EVENT_ACTION_MASK = 0xff,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_MOVE	include/android/input.h	/^    AMOTION_EVENT_ACTION_MOVE = 2,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_OUTSIDE	include/android/input.h	/^    AMOTION_EVENT_ACTION_OUTSIDE = 4,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_POINTER_DOWN	include/android/input.h	/^    AMOTION_EVENT_ACTION_POINTER_DOWN = 5,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_POINTER_INDEX_MASK	include/android/input.h	/^    AMOTION_EVENT_ACTION_POINTER_INDEX_MASK  = 0xff00,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_POINTER_INDEX_SHIFT	include/android/input.h	236;"	d
AMOTION_EVENT_ACTION_POINTER_UP	include/android/input.h	/^    AMOTION_EVENT_ACTION_POINTER_UP = 6,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_SCROLL	include/android/input.h	/^    AMOTION_EVENT_ACTION_SCROLL = 8,$/;"	e	enum:__anon167
AMOTION_EVENT_ACTION_UP	include/android/input.h	/^    AMOTION_EVENT_ACTION_UP = 1,$/;"	e	enum:__anon167
AMOTION_EVENT_AXIS_BRAKE	include/android/input.h	/^    AMOTION_EVENT_AXIS_BRAKE = 23,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_DISTANCE	include/android/input.h	/^    AMOTION_EVENT_AXIS_DISTANCE = 24,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GAS	include/android/input.h	/^    AMOTION_EVENT_AXIS_GAS = 22,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_1	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_1 = 32,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_10	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_10 = 41,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_11	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_11 = 42,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_12	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_12 = 43,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_13	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_13 = 44,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_14	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_14 = 45,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_15	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_15 = 46,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_16	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_16 = 47,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_2	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_2 = 33,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_3	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_3 = 34,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_4	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_4 = 35,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_5	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_5 = 36,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_6	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_6 = 37,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_7	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_7 = 38,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_8	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_8 = 39,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_GENERIC_9	include/android/input.h	/^    AMOTION_EVENT_AXIS_GENERIC_9 = 40,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_HAT_X	include/android/input.h	/^    AMOTION_EVENT_AXIS_HAT_X = 15,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_HAT_Y	include/android/input.h	/^    AMOTION_EVENT_AXIS_HAT_Y = 16,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_HSCROLL	include/android/input.h	/^    AMOTION_EVENT_AXIS_HSCROLL = 10,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_LTRIGGER	include/android/input.h	/^    AMOTION_EVENT_AXIS_LTRIGGER = 17,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_ORIENTATION	include/android/input.h	/^    AMOTION_EVENT_AXIS_ORIENTATION = 8,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_PRESSURE	include/android/input.h	/^    AMOTION_EVENT_AXIS_PRESSURE = 2,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_RTRIGGER	include/android/input.h	/^    AMOTION_EVENT_AXIS_RTRIGGER = 18,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_RUDDER	include/android/input.h	/^    AMOTION_EVENT_AXIS_RUDDER = 20,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_RX	include/android/input.h	/^    AMOTION_EVENT_AXIS_RX = 12,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_RY	include/android/input.h	/^    AMOTION_EVENT_AXIS_RY = 13,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_RZ	include/android/input.h	/^    AMOTION_EVENT_AXIS_RZ = 14,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_SIZE	include/android/input.h	/^    AMOTION_EVENT_AXIS_SIZE = 3,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_THROTTLE	include/android/input.h	/^    AMOTION_EVENT_AXIS_THROTTLE = 19,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_TILT	include/android/input.h	/^    AMOTION_EVENT_AXIS_TILT = 25,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_TOOL_MAJOR	include/android/input.h	/^    AMOTION_EVENT_AXIS_TOOL_MAJOR = 6,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_TOOL_MINOR	include/android/input.h	/^    AMOTION_EVENT_AXIS_TOOL_MINOR = 7,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_TOUCH_MAJOR	include/android/input.h	/^    AMOTION_EVENT_AXIS_TOUCH_MAJOR = 4,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_TOUCH_MINOR	include/android/input.h	/^    AMOTION_EVENT_AXIS_TOUCH_MINOR = 5,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_VSCROLL	include/android/input.h	/^    AMOTION_EVENT_AXIS_VSCROLL = 9,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_WHEEL	include/android/input.h	/^    AMOTION_EVENT_AXIS_WHEEL = 21,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_X	include/android/input.h	/^    AMOTION_EVENT_AXIS_X = 0,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_Y	include/android/input.h	/^    AMOTION_EVENT_AXIS_Y = 1,$/;"	e	enum:__anon170
AMOTION_EVENT_AXIS_Z	include/android/input.h	/^    AMOTION_EVENT_AXIS_Z = 11,$/;"	e	enum:__anon170
AMOTION_EVENT_BUTTON_BACK	include/android/input.h	/^    AMOTION_EVENT_BUTTON_BACK = 1 << 3,$/;"	e	enum:__anon171
AMOTION_EVENT_BUTTON_FORWARD	include/android/input.h	/^    AMOTION_EVENT_BUTTON_FORWARD = 1 << 4,$/;"	e	enum:__anon171
AMOTION_EVENT_BUTTON_PRIMARY	include/android/input.h	/^    AMOTION_EVENT_BUTTON_PRIMARY = 1 << 0,$/;"	e	enum:__anon171
AMOTION_EVENT_BUTTON_SECONDARY	include/android/input.h	/^    AMOTION_EVENT_BUTTON_SECONDARY = 1 << 1,$/;"	e	enum:__anon171
AMOTION_EVENT_BUTTON_TERTIARY	include/android/input.h	/^    AMOTION_EVENT_BUTTON_TERTIARY = 1 << 2,$/;"	e	enum:__anon171
AMOTION_EVENT_EDGE_FLAG_BOTTOM	include/android/input.h	/^    AMOTION_EVENT_EDGE_FLAG_BOTTOM = 0x02,$/;"	e	enum:__anon169
AMOTION_EVENT_EDGE_FLAG_LEFT	include/android/input.h	/^    AMOTION_EVENT_EDGE_FLAG_LEFT = 0x04,$/;"	e	enum:__anon169
AMOTION_EVENT_EDGE_FLAG_NONE	include/android/input.h	/^    AMOTION_EVENT_EDGE_FLAG_NONE = 0,$/;"	e	enum:__anon169
AMOTION_EVENT_EDGE_FLAG_RIGHT	include/android/input.h	/^    AMOTION_EVENT_EDGE_FLAG_RIGHT = 0x08$/;"	e	enum:__anon169
AMOTION_EVENT_EDGE_FLAG_TOP	include/android/input.h	/^    AMOTION_EVENT_EDGE_FLAG_TOP = 0x01,$/;"	e	enum:__anon169
AMOTION_EVENT_FLAG_TAINTED	include/input/Input.h	/^    AMOTION_EVENT_FLAG_TAINTED = 0x80000000,$/;"	e	enum:__anon113
AMOTION_EVENT_FLAG_WINDOW_IS_OBSCURED	include/android/input.h	/^    AMOTION_EVENT_FLAG_WINDOW_IS_OBSCURED = 0x1,$/;"	e	enum:__anon168
AMOTION_EVENT_TOOL_TYPE_ERASER	include/android/input.h	/^    AMOTION_EVENT_TOOL_TYPE_ERASER = 4,$/;"	e	enum:__anon172
AMOTION_EVENT_TOOL_TYPE_FINGER	include/android/input.h	/^    AMOTION_EVENT_TOOL_TYPE_FINGER = 1,$/;"	e	enum:__anon172
AMOTION_EVENT_TOOL_TYPE_MOUSE	include/android/input.h	/^    AMOTION_EVENT_TOOL_TYPE_MOUSE = 3,$/;"	e	enum:__anon172
AMOTION_EVENT_TOOL_TYPE_STYLUS	include/android/input.h	/^    AMOTION_EVENT_TOOL_TYPE_STYLUS = 2,$/;"	e	enum:__anon172
AMOTION_EVENT_TOOL_TYPE_UNKNOWN	include/android/input.h	/^    AMOTION_EVENT_TOOL_TYPE_UNKNOWN = 0,$/;"	e	enum:__anon172
AMetaDataEvent	include/android/sensor.h	/^typedef struct AMetaDataEvent {$/;"	s
AMetaDataEvent	include/android/sensor.h	/^} AMetaDataEvent;$/;"	t	typeref:struct:AMetaDataEvent
ANATIVEACTIVITY_HIDE_SOFT_INPUT_IMPLICIT_ONLY	include/android/native_activity.h	/^    ANATIVEACTIVITY_HIDE_SOFT_INPUT_IMPLICIT_ONLY = 0x0001,$/;"	e	enum:__anon191
ANATIVEACTIVITY_HIDE_SOFT_INPUT_NOT_ALWAYS	include/android/native_activity.h	/^    ANATIVEACTIVITY_HIDE_SOFT_INPUT_NOT_ALWAYS = 0x0002,$/;"	e	enum:__anon191
ANATIVEACTIVITY_SHOW_SOFT_INPUT_FORCED	include/android/native_activity.h	/^    ANATIVEACTIVITY_SHOW_SOFT_INPUT_FORCED = 0x0002,$/;"	e	enum:__anon190
ANATIVEACTIVITY_SHOW_SOFT_INPUT_IMPLICIT	include/android/native_activity.h	/^    ANATIVEACTIVITY_SHOW_SOFT_INPUT_IMPLICIT = 0x0001,$/;"	e	enum:__anon190
ANDROID_ANDROID_NATIVES_H	include/ui/ANativeObjectBase.h	18;"	d
ANDROID_API	services/sensorservice/SensorService.h	/^    SensorService() ANDROID_API;$/;"	m	class:android::SensorService
ANDROID_API	services/surfaceflinger/SurfaceFlinger.h	/^    SurfaceFlinger() ANDROID_API;$/;"	m	class:android::SurfaceFlinger
ANDROID_API	services/surfaceflinger/SurfaceFlinger.h	/^    void init() ANDROID_API;$/;"	m	class:android::SurfaceFlinger
ANDROID_API	services/surfaceflinger/SurfaceFlinger.h	/^    void run() ANDROID_API;$/;"	m	class:android::SurfaceFlinger
ANDROID_APP_OPS_MANAGER_H	include/binder/AppOpsManager.h	18;"	d
ANDROID_ASSET_MANAGER_H	include/android/asset_manager.h	19;"	d
ANDROID_ASSET_MANAGER_JNI_H	include/android/asset_manager_jni.h	19;"	d
ANDROID_BARRIER_H	services/surfaceflinger/Barrier.h	18;"	d
ANDROID_BATTERYSERVICE_H	include/batteryservice/BatteryService.h	19;"	d
ANDROID_BINDER_DEBUG_H	include/binder/Debug.h	18;"	d
ANDROID_BINDER_H	include/binder/Binder.h	18;"	d
ANDROID_BINDER_SERVICE_H	include/binder/BinderService.h	18;"	d
ANDROID_BITMAP_FORMAT_A_8	include/android/bitmap.h	/^    ANDROID_BITMAP_FORMAT_A_8       = 8,$/;"	e	enum:AndroidBitmapFormat
ANDROID_BITMAP_FORMAT_NONE	include/android/bitmap.h	/^    ANDROID_BITMAP_FORMAT_NONE      = 0,$/;"	e	enum:AndroidBitmapFormat
ANDROID_BITMAP_FORMAT_RGBA_4444	include/android/bitmap.h	/^    ANDROID_BITMAP_FORMAT_RGBA_4444 = 7,$/;"	e	enum:AndroidBitmapFormat
ANDROID_BITMAP_FORMAT_RGBA_8888	include/android/bitmap.h	/^    ANDROID_BITMAP_FORMAT_RGBA_8888 = 1,$/;"	e	enum:AndroidBitmapFormat
ANDROID_BITMAP_FORMAT_RGB_565	include/android/bitmap.h	/^    ANDROID_BITMAP_FORMAT_RGB_565   = 4,$/;"	e	enum:AndroidBitmapFormat
ANDROID_BITMAP_H	include/android/bitmap.h	18;"	d
ANDROID_BITMAP_RESULT_ALLOCATION_FAILED	include/android/bitmap.h	30;"	d
ANDROID_BITMAP_RESULT_BAD_PARAMETER	include/android/bitmap.h	28;"	d
ANDROID_BITMAP_RESULT_JNI_EXCEPTION	include/android/bitmap.h	29;"	d
ANDROID_BITMAP_RESULT_SUCCESS	include/android/bitmap.h	27;"	d
ANDROID_BITMAP_RESUT_SUCCESS	include/android/bitmap.h	33;"	d
ANDROID_BPBINDER_H	include/binder/BpBinder.h	18;"	d
ANDROID_BUFFEREDTEXTOUTPUT_H	include/binder/BufferedTextOutput.h	18;"	d
ANDROID_BUFFER_ALLOCATOR_H	include/ui/GraphicBufferAllocator.h	19;"	d
ANDROID_CONFIGURATION_H	include/android/configuration.h	18;"	d
ANDROID_CORRECTED_GYRO_SENSOR_H	services/sensorservice/CorrectedGyroSensor.h	18;"	d
ANDROID_DISCONNECT_WAITER_H	libs/gui/tests/DisconnectWaiter.h	18;"	d
ANDROID_DISPLAY_DEVICE_H	services/surfaceflinger/DisplayDevice.h	18;"	d
ANDROID_DISPSYNC_H	services/surfaceflinger/DispSync.h	18;"	d
ANDROID_EGLDEFS_H	opengl/libs/EGL/egldefs.h	18;"	d
ANDROID_EGL_CACHE_H	opengl/libs/EGL/egl_cache.h	18;"	d
ANDROID_EGL_DISPLAY_H	opengl/libs/EGL/egl_display.h	18;"	d
ANDROID_EGL_IMPL_H	opengl/libs/egl_impl.h	18;"	d
ANDROID_EGL_LOADER_H	opengl/libs/EGL/Loader.h	18;"	d
ANDROID_EGL_OBJECT_H	opengl/libs/EGL/egl_object.h	18;"	d
ANDROID_EGL_TLS_H	opengl/libs/EGL/egl_tls.h	18;"	d
ANDROID_EVENTCONTROLTHREAD_H	services/surfaceflinger/EventControlThread.h	18;"	d
ANDROID_FENCE_H	include/ui/Fence.h	18;"	d
ANDROID_FILL_BUFFER_H	libs/gui/tests/FillBuffer.h	18;"	d
ANDROID_FRAMEBUFFER_NATIVE_WINDOW_H	include/ui/FramebufferNativeWindow.h	18;"	d
ANDROID_FRAMETRACKER_H	services/surfaceflinger/FrameTracker.h	18;"	d
ANDROID_FRAME_WAITER_H	libs/gui/tests/FrameWaiter.h	18;"	d
ANDROID_FUSION_H	services/sensorservice/Fusion.h	18;"	d
ANDROID_GLES_CM_HOOKS_H	opengl/libs/hooks.h	18;"	d
ANDROID_GL_TEST_H	libs/gui/tests/GLTest.h	18;"	d
ANDROID_GRAPHICS_BUFFERITEMCONSUMER_JNI_ID	include/gui/BufferItemConsumer.h	28;"	d
ANDROID_GRAPHIC_BUFFER_H	include/ui/GraphicBuffer.h	18;"	d
ANDROID_GRAVITY_SENSOR_H	services/sensorservice/GravitySensor.h	18;"	d
ANDROID_GUI_BUFFERITEMCONSUMER_H	include/gui/BufferItemConsumer.h	18;"	d
ANDROID_GUI_BUFFERITEM_H	include/gui/BufferItem.h	18;"	d
ANDROID_GUI_BUFFERQUEUECONSUMER_H	include/gui/BufferQueueConsumer.h	18;"	d
ANDROID_GUI_BUFFERQUEUECOREDEFS_H	include/gui/BufferQueueDefs.h	18;"	d
ANDROID_GUI_BUFFERQUEUECORE_H	include/gui/BufferQueueCore.h	18;"	d
ANDROID_GUI_BUFFERQUEUEPRODUCER_H	include/gui/BufferQueueProducer.h	18;"	d
ANDROID_GUI_BUFFERQUEUE_H	include/gui/BufferQueue.h	18;"	d
ANDROID_GUI_BUFFERSLOT_H	include/gui/BufferSlot.h	18;"	d
ANDROID_GUI_CONFIG_H	include/gui/GuiConfig.h	18;"	d
ANDROID_GUI_CONSUMERBASE_H	include/gui/ConsumerBase.h	18;"	d
ANDROID_GUI_CONSUMER_H	include/gui/GLConsumer.h	18;"	d
ANDROID_GUI_CPUCONSUMER_H	include/gui/CpuConsumer.h	18;"	d
ANDROID_GUI_DISPLAY_EVENT_H	include/gui/DisplayEventReceiver.h	18;"	d
ANDROID_GUI_ICONSUMERLISTENER_H	include/gui/IConsumerListener.h	18;"	d
ANDROID_GUI_IDISPLAY_EVENT_CONNECTION_H	include/gui/IDisplayEventConnection.h	18;"	d
ANDROID_GUI_IGRAPHICBUFFERCONSUMER_H	include/gui/IGraphicBufferConsumer.h	18;"	d
ANDROID_GUI_IGRAPHICBUFFERPRODUCER_H	include/gui/IGraphicBufferProducer.h	18;"	d
ANDROID_GUI_IGRAPHIC_BUFFER_ALLOC_H	include/gui/IGraphicBufferAlloc.h	18;"	d
ANDROID_GUI_IPRODUCERLISTENER_H	include/gui/IProducerListener.h	18;"	d
ANDROID_GUI_ISENSORSERVER_H	include/gui/ISensorServer.h	18;"	d
ANDROID_GUI_ISENSOR_EVENT_CONNECTION_H	include/gui/ISensorEventConnection.h	18;"	d
ANDROID_GUI_ISURFACE_COMPOSER_CLIENT_H	include/gui/ISurfaceComposerClient.h	18;"	d
ANDROID_GUI_ISURFACE_COMPOSER_H	include/gui/ISurfaceComposer.h	18;"	d
ANDROID_GUI_SENSOR_CHANNEL_H	include/gui/BitTube.h	18;"	d
ANDROID_GUI_SENSOR_H	include/gui/Sensor.h	18;"	d
ANDROID_GUI_SENSOR_MANAGER_H	include/gui/SensorManager.h	18;"	d
ANDROID_GUI_STREAMSPLITTER_H	include/gui/StreamSplitter.h	18;"	d
ANDROID_GUI_SURFACE_COMPOSER_CLIENT_H	include/gui/SurfaceComposerClient.h	18;"	d
ANDROID_GUI_SURFACE_CONTROL_H	include/gui/SurfaceControl.h	18;"	d
ANDROID_GUI_SURFACE_H	include/gui/Surface.h	18;"	d
ANDROID_GUI_SYNC_FEATURES_H	include/private/gui/SyncFeatures.h	18;"	d
ANDROID_IAPP_OPS_CALLBACK_H	include/binder/IAppOpsCallback.h	19;"	d
ANDROID_IAPP_OPS_SERVICE_H	include/binder/IAppOpsService.h	19;"	d
ANDROID_IBATTERYPROPERTIESLISTENER_H	include/batteryservice/IBatteryPropertiesListener.h	18;"	d
ANDROID_IBATTERYPROPERTIESREGISTRAR_H	include/batteryservice/IBatteryPropertiesRegistrar.h	19;"	d
ANDROID_IBATTERYSTATS_H	include/binder/IBatteryStats.h	18;"	d
ANDROID_IBINDER_H	include/binder/IBinder.h	18;"	d
ANDROID_IINTERFACE_H	include/binder/IInterface.h	19;"	d
ANDROID_IMEMORY_H	include/binder/IMemory.h	18;"	d
ANDROID_IPC_THREAD_STATE_H	include/binder/IPCThreadState.h	18;"	d
ANDROID_IPERMISSION_CONTROLLER_H	include/binder/IPermissionController.h	19;"	d
ANDROID_IPOWERMANAGER_H	include/powermanager/IPowerManager.h	18;"	d
ANDROID_ISERVICE_MANAGER_H	include/binder/IServiceManager.h	19;"	d
ANDROID_LAYER_BLUR_H	services/surfaceflinger/LayerBlur.h	21;"	d
ANDROID_LAYER_DIM_H	services/surfaceflinger/LayerDim.h	18;"	d
ANDROID_LAYER_H	services/surfaceflinger/Layer.h	18;"	d
ANDROID_LINEAR_ACCELERATION_SENSOR_H	services/sensorservice/LinearAccelerationSensor.h	18;"	d
ANDROID_LOOPER_H	include/android/looper.h	19;"	d
ANDROID_MAT_H	services/sensorservice/mat.h	18;"	d
ANDROID_MEMORY_BASE_H	include/binder/MemoryBase.h	18;"	d
ANDROID_MEMORY_DEALER_H	include/binder/MemoryDealer.h	18;"	d
ANDROID_MEMORY_HEAP_BASE_H	include/binder/MemoryHeapBase.h	18;"	d
ANDROID_MEMORY_HEAP_ION_H	include/binder/MemoryHeapIon.h	31;"	d
ANDROID_MEMORY_HEAP_PMEM_H	include/binder/MemoryHeapPmem.h	18;"	d
ANDROID_MESSAGE_QUEUE_H	services/surfaceflinger/MessageQueue.h	18;"	d
ANDROID_MONITORED_PRODUCER_H	services/surfaceflinger/MonitoredProducer.h	18;"	d
ANDROID_NATIVE_ACTIVITY_H	include/android/native_activity.h	19;"	d
ANDROID_NATIVE_WINDOW_H	include/android/native_window.h	18;"	d
ANDROID_NATIVE_WINDOW_JNI_H	include/android/native_window_jni.h	18;"	d
ANDROID_OBB_H	include/android/obb.h	19;"	d
ANDROID_OPENGLES_ARRAY_H	opengl/libagl/array.h	19;"	d
ANDROID_OPENGLES_BUFFER_OBJECT_MANAGER_H	opengl/libagl/BufferObjectManager.h	19;"	d
ANDROID_OPENGLES_CONTEXT_H	opengl/libagl/context.h	18;"	d
ANDROID_OPENGLES_FP_H	opengl/libagl/fp.h	19;"	d
ANDROID_OPENGLES_LIGHT_H	opengl/libagl/light.h	19;"	d
ANDROID_OPENGLES_MATRIX_H	opengl/libagl/matrix.h	19;"	d
ANDROID_OPENGLES_PRIMITIVES_H	opengl/libagl/primitives.h	19;"	d
ANDROID_OPENGLES_STATE_H	opengl/libagl/state.h	19;"	d
ANDROID_OPENGLES_SURFACE_H	opengl/libagl/TextureObjectManager.h	18;"	d
ANDROID_OPENGLES_TEXTURE_H	opengl/libagl/dxt.h	19;"	d
ANDROID_OPENGLES_TEXTURE_H	opengl/libagl/texture.h	19;"	d
ANDROID_OPENGLES_TOKENIZER_H	opengl/libagl/Tokenizer.h	20;"	d
ANDROID_OPENGLES_TOKEN_MANAGER_H	opengl/libagl/TokenManager.h	18;"	d
ANDROID_OPENGLES_VERTEX_H	opengl/libagl/vertex.h	19;"	d
ANDROID_ORIENTATION_SENSOR_H	services/sensorservice/OrientationSensor.h	18;"	d
ANDROID_PARCEL_H	include/binder/Parcel.h	18;"	d
ANDROID_POWERMANAGER_H	include/powermanager/PowerManager.h	18;"	d
ANDROID_PRIVATE_GUI_COMPOSER_SERVICE_H	include/private/gui/ComposerService.h	18;"	d
ANDROID_PROCESS_STATE_H	include/binder/ProcessState.h	18;"	d
ANDROID_QUAT_H	services/sensorservice/quat.h	18;"	d
ANDROID_RECT_H	include/android/rect.h	19;"	d
ANDROID_ROTATION_VECTOR_SENSOR_H	services/sensorservice/RotationVectorSensor.h	18;"	d
ANDROID_SENSOR_DEVICE_H	services/sensorservice/SensorDevice.h	18;"	d
ANDROID_SENSOR_EVENT_QUEUE_H	include/gui/SensorEventQueue.h	18;"	d
ANDROID_SENSOR_FUSION_H	services/sensorservice/SensorFusion.h	18;"	d
ANDROID_SENSOR_H	include/android/sensor.h	19;"	d
ANDROID_SENSOR_INTERFACE_H	services/sensorservice/SensorInterface.h	18;"	d
ANDROID_SENSOR_SERVICE_H	services/sensorservice/SensorService.h	18;"	d
ANDROID_SF_CLIENT_H	services/surfaceflinger/Client.h	18;"	d
ANDROID_SF_DDM_CONNECTION	services/surfaceflinger/DdmConnection.h	18;"	d
ANDROID_SF_DISPLAY_SURFACE_H	services/surfaceflinger/DisplayHardware/DisplaySurface.h	18;"	d
ANDROID_SF_EVENTLOG_H	services/surfaceflinger/EventLog/EventLog.h	22;"	d
ANDROID_SF_FLOAT_RECT	services/surfaceflinger/DisplayHardware/FloatRect.h	18;"	d
ANDROID_SF_FRAMEBUFFER_SURFACE_H	services/surfaceflinger/DisplayHardware/FramebufferSurface.h	18;"	d
ANDROID_SF_FRAME_RATE_HELPER_H	services/surfaceflinger/FrameRateHelper.h	31;"	d
ANDROID_SF_GLEXTENSION_H	services/surfaceflinger/RenderEngine/GLExtensions.h	18;"	d
ANDROID_SF_GRAPHIC_BUFFER_ALLOC_H	include/gui/GraphicBufferAlloc.h	18;"	d
ANDROID_SF_HWCOMPOSER_H	services/surfaceflinger/DisplayHardware/HWComposer.h	18;"	d
ANDROID_SF_LAYER_STATE_H	include/private/gui/LayerState.h	18;"	d
ANDROID_SF_POWER_HAL_H	services/surfaceflinger/DisplayHardware/PowerHAL.h	18;"	d
ANDROID_SF_VIRTUAL_DISPLAY_SURFACE_H	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	18;"	d
ANDROID_STORAGE_MANAGER_H	include/android/storage_manager.h	19;"	d
ANDROID_SURFACEFLINGERCONSUMER_H	services/surfaceflinger/SurfaceFlingerConsumer.h	18;"	d
ANDROID_SURFACE_FLINGER_COLORIZER_H	services/surfaceflinger/Colorizer.h	18;"	d
ANDROID_SURFACE_FLINGER_EVENT_THREAD_H	services/surfaceflinger/EventThread.h	18;"	d
ANDROID_SURFACE_FLINGER_H	services/surfaceflinger/SurfaceFlinger.h	18;"	d
ANDROID_SURFACE_TEXTURE_FBO_H	libs/gui/tests/SurfaceTextureFBO.h	18;"	d
ANDROID_SURFACE_TEXTURE_GL_H	libs/gui/tests/SurfaceTextureGL.h	18;"	d
ANDROID_SURFACE_TEXTURE_GL_THREAD_TO_GL_H	libs/gui/tests/SurfaceTextureGLThreadToGL.h	18;"	d
ANDROID_SURFACE_TEXTURE_GL_TO_GL_H	libs/gui/tests/SurfaceTextureGLToGL.h	18;"	d
ANDROID_SURFACE_TEXTURE_MULTI_CONTEXT_GL_H	libs/gui/tests/SurfaceTextureMultiContextGL.h	18;"	d
ANDROID_TEXTOUTPUT_H	include/binder/TextOutput.h	18;"	d
ANDROID_TEXTURE_RENDERER_H	libs/gui/tests/TextureRenderer.h	18;"	d
ANDROID_TRAITS_H	services/sensorservice/traits.h	18;"	d
ANDROID_TRANSFORM_H	services/surfaceflinger/Transform.h	18;"	d
ANDROID_UI_BUFFER_MAPPER_H	include/ui/GraphicBufferMapper.h	18;"	d
ANDROID_UI_CONFIG_H	include/ui/UiConfig.h	18;"	d
ANDROID_UI_DISPLAY_INFO_H	include/ui/DisplayInfo.h	18;"	d
ANDROID_UI_DISPLAY_STAT_INFO_H	include/ui/DisplayStatInfo.h	18;"	d
ANDROID_UI_EGLUTILS_H	opengl/tests/include/EGLUtils.h	19;"	d
ANDROID_UI_FRAME_STATS_H	include/ui/FrameStats.h	18;"	d
ANDROID_UI_POINT	include/ui/Point.h	18;"	d
ANDROID_UI_PRIVATE_REGION_HELPER_H	include/private/ui/RegionHelper.h	18;"	d
ANDROID_UI_RECT	include/ui/Rect.h	18;"	d
ANDROID_UI_REGION_H	include/ui/Region.h	18;"	d
ANDROID_VEC_H	services/sensorservice/vec.h	18;"	d
ANDROID_WINDOW_H	include/android/window.h	19;"	d
ANativeActivity	include/android/native_activity.h	/^typedef struct ANativeActivity {$/;"	s
ANativeActivity	include/android/native_activity.h	/^} ANativeActivity;$/;"	t	typeref:struct:ANativeActivity
ANativeActivityCallbacks	include/android/native_activity.h	/^typedef struct ANativeActivityCallbacks {$/;"	s
ANativeActivityCallbacks	include/android/native_activity.h	/^} ANativeActivityCallbacks;$/;"	t	typeref:struct:ANativeActivityCallbacks
ANativeActivity_createFunc	include/android/native_activity.h	/^typedef void ANativeActivity_createFunc(ANativeActivity* activity,$/;"	t
ANativeObjectBase	include/ui/ANativeObjectBase.h	/^    ANativeObjectBase() : NATIVE_TYPE(), REF() {$/;"	f	class:android::ANativeObjectBase
ANativeObjectBase	include/ui/ANativeObjectBase.h	/^class ANativeObjectBase : public NATIVE_TYPE, public REF$/;"	c	namespace:android
ANativeWindow	include/android/native_window.h	/^typedef struct ANativeWindow ANativeWindow;$/;"	t	typeref:struct:ANativeWindow
ANativeWindow_Buffer	include/android/native_window.h	/^typedef struct ANativeWindow_Buffer {$/;"	s
ANativeWindow_Buffer	include/android/native_window.h	/^} ANativeWindow_Buffer;$/;"	t	typeref:struct:ANativeWindow_Buffer
AOBBINFO_OVERLAY	include/android/obb.h	/^    AOBBINFO_OVERLAY = 0x0001,$/;"	e	enum:__anon197
AOBB_STATE_ERROR_ALREADY_MOUNTED	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_ALREADY_MOUNTED = 24,$/;"	e	enum:__anon158
AOBB_STATE_ERROR_COULD_NOT_MOUNT	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_COULD_NOT_MOUNT = 21,$/;"	e	enum:__anon158
AOBB_STATE_ERROR_COULD_NOT_UNMOUNT	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_COULD_NOT_UNMOUNT = 22,$/;"	e	enum:__anon158
AOBB_STATE_ERROR_INTERNAL	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_INTERNAL = 20,$/;"	e	enum:__anon158
AOBB_STATE_ERROR_NOT_MOUNTED	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_NOT_MOUNTED = 23,$/;"	e	enum:__anon158
AOBB_STATE_ERROR_PERMISSION_DENIED	include/android/storage_manager.h	/^    AOBB_STATE_ERROR_PERMISSION_DENIED = 25,$/;"	e	enum:__anon158
AOBB_STATE_MOUNTED	include/android/storage_manager.h	/^    AOBB_STATE_MOUNTED = 1,$/;"	e	enum:__anon158
AOBB_STATE_UNMOUNTED	include/android/storage_manager.h	/^    AOBB_STATE_UNMOUNTED = 2,$/;"	e	enum:__anon158
AObbInfo	include/android/obb.h	/^typedef struct AObbInfo AObbInfo;$/;"	t	typeref:struct:AObbInfo
APIENTRY	opengl/tests/angeles/include/GLES/gl.h	48;"	d
API_ENTRY	opengl/libs/EGL/getProcAddress.cpp	221;"	d	file:
API_ENTRY	opengl/libs/EGL/getProcAddress.cpp	29;"	d	file:
API_ENTRY	opengl/libs/EGL/getProcAddress.cpp	41;"	d	file:
API_ENTRY	opengl/libs/GLES2/gl2.cpp	168;"	d	file:
API_ENTRY	opengl/libs/GLES2/gl2.cpp	35;"	d	file:
API_ENTRY	opengl/libs/GLES2/gl2.cpp	41;"	d	file:
API_ENTRY	opengl/libs/GLES_CM/gl.cpp	107;"	d	file:
API_ENTRY	opengl/libs/GLES_CM/gl.cpp	123;"	d	file:
API_ENTRY	opengl/libs/GLES_CM/gl.cpp	141;"	d	file:
API_ENTRY	opengl/libs/GLES_CM/gl.cpp	160;"	d	file:
API_ENTRY	opengl/libs/GLES_CM/gl.cpp	179;"	d	file:
API_ENTRY	opengl/libs/GLES_CM/gl.cpp	223;"	d	file:
API_ENTRY	opengl/libs/GLES_CM/gl.cpp	91;"	d	file:
API_ENTRY	opengl/libs/GLES_CM/gl.cpp	97;"	d	file:
API_ENTRY_REGEX	opengl/libs/GLES_trace/tools/genapi.py	/^    API_ENTRY_REGEX = "(.*)API_ENTRY\\(.*?\\)\\((.*?)\\)"$/;"	v	class:ApiCall
API_OPTIONS	opengl/tools/glgen2/glgen.py	/^    API_OPTIONS = [$/;"	v	class:SpecGenerator
API_SPECS	opengl/libs/GLES_trace/tools/genapi.py	/^API_SPECS = [$/;"	v
APP_H_INCLUDED	opengl/tests/angeles/app.h	26;"	d
APP_LIB_SUBDIR	cmds/installd/installd.h	67;"	d
APP_SUBDIR	cmds/installd/installd.h	64;"	d
APP_SWITCH_TIMEOUT	services/inputflinger/InputDispatcher.cpp	/^const nsecs_t APP_SWITCH_TIMEOUT = 500 * 1000000LL; \/\/ 0.5sec$/;"	m	namespace:android	file:
ARBITRARY_DOWN_TIME	libs/input/tests/InputEvent_test.cpp	/^    static const nsecs_t ARBITRARY_DOWN_TIME;$/;"	m	class:android::MotionEventTest	file:
ARBITRARY_DOWN_TIME	libs/input/tests/InputEvent_test.cpp	/^const nsecs_t MotionEventTest::ARBITRARY_DOWN_TIME = 1;$/;"	m	class:android::MotionEventTest	file:
ARBITRARY_EVENT_TIME	libs/input/tests/InputEvent_test.cpp	/^    static const nsecs_t ARBITRARY_EVENT_TIME;$/;"	m	class:android::MotionEventTest	file:
ARBITRARY_EVENT_TIME	libs/input/tests/InputEvent_test.cpp	/^const nsecs_t MotionEventTest::ARBITRARY_EVENT_TIME = 2;$/;"	m	class:android::MotionEventTest	file:
ARBITRARY_TIME	services/inputflinger/tests/InputDispatcher_test.cpp	/^static const nsecs_t ARBITRARY_TIME = 1234;$/;"	m	namespace:android	file:
ARBITRARY_TIME	services/inputflinger/tests/InputReader_test.cpp	/^static const nsecs_t ARBITRARY_TIME = 1234;$/;"	m	namespace:android	file:
AREPORTING_MODE_CONTINUOUS	include/android/sensor.h	/^    AREPORTING_MODE_CONTINUOUS = 0,$/;"	e	enum:__anon179
AREPORTING_MODE_ONE_SHOT	include/android/sensor.h	/^    AREPORTING_MODE_ONE_SHOT = 2,$/;"	e	enum:__anon179
AREPORTING_MODE_ON_CHANGE	include/android/sensor.h	/^    AREPORTING_MODE_ON_CHANGE = 1,$/;"	e	enum:__anon179
AREPORTING_MODE_SPECIAL_TRIGGER	include/android/sensor.h	/^    AREPORTING_MODE_SPECIAL_TRIGGER = 3$/;"	e	enum:__anon179
ARect	include/android/rect.h	/^typedef struct ARect {$/;"	s
ARect	include/android/rect.h	/^} ARect;$/;"	t	typeref:struct:ARect
ASENSOR_MAGNETIC_FIELD_EARTH_MAX	include/android/sensor.h	93;"	d
ASENSOR_MAGNETIC_FIELD_EARTH_MIN	include/android/sensor.h	95;"	d
ASENSOR_STANDARD_GRAVITY	include/android/sensor.h	91;"	d
ASENSOR_STATUS_ACCURACY_HIGH	include/android/sensor.h	/^    ASENSOR_STATUS_ACCURACY_HIGH    = 3$/;"	e	enum:__anon178
ASENSOR_STATUS_ACCURACY_LOW	include/android/sensor.h	/^    ASENSOR_STATUS_ACCURACY_LOW     = 1,$/;"	e	enum:__anon178
ASENSOR_STATUS_ACCURACY_MEDIUM	include/android/sensor.h	/^    ASENSOR_STATUS_ACCURACY_MEDIUM  = 2,$/;"	e	enum:__anon178
ASENSOR_STATUS_NO_CONTACT	include/android/sensor.h	/^    ASENSOR_STATUS_NO_CONTACT       = -1,$/;"	e	enum:__anon178
ASENSOR_STATUS_UNRELIABLE	include/android/sensor.h	/^    ASENSOR_STATUS_UNRELIABLE       = 0,$/;"	e	enum:__anon178
ASENSOR_TYPE_ACCELEROMETER	include/android/sensor.h	/^    ASENSOR_TYPE_ACCELEROMETER      = 1,$/;"	e	enum:__anon177
ASENSOR_TYPE_GYROSCOPE	include/android/sensor.h	/^    ASENSOR_TYPE_GYROSCOPE          = 4,$/;"	e	enum:__anon177
ASENSOR_TYPE_LIGHT	include/android/sensor.h	/^    ASENSOR_TYPE_LIGHT              = 5,$/;"	e	enum:__anon177
ASENSOR_TYPE_MAGNETIC_FIELD	include/android/sensor.h	/^    ASENSOR_TYPE_MAGNETIC_FIELD     = 2,$/;"	e	enum:__anon177
ASENSOR_TYPE_PROXIMITY	include/android/sensor.h	/^    ASENSOR_TYPE_PROXIMITY          = 8$/;"	e	enum:__anon177
ASSERT_NO_ERROR	libs/gui/tests/CpuConsumer_test.cpp	162;"	d	file:
ASSERT_OK	libs/gui/tests/IGraphicBufferProducer_test.cpp	32;"	d	file:
ASSUME_POINTER_STOPPED_TIME	libs/input/VelocityTracker.cpp	/^static const nsecs_t ASSUME_POINTER_STOPPED_TIME = 40 * NANOS_PER_MS;$/;"	m	namespace:android	file:
ASYSTEM_UI_VISIBILITY_STATUS_BAR_HIDDEN	include/input/Input.h	/^    ASYSTEM_UI_VISIBILITY_STATUS_BAR_HIDDEN = 0x00000001,$/;"	e	enum:__anon117
ASYSTEM_UI_VISIBILITY_STATUS_BAR_VISIBLE	include/input/Input.h	/^    ASYSTEM_UI_VISIBILITY_STATUS_BAR_VISIBLE = 0,$/;"	e	enum:__anon117
AS_STRING_FOR_OMX_AUDIOEXT_H	include/media/openmax/OMX_AsString.h	165;"	d
AS_STRING_FOR_OMX_AUDIO_H	include/media/openmax/OMX_AsString.h	25;"	d
AS_STRING_FOR_OMX_COMPONENT_H	include/media/openmax/OMX_AsString.h	183;"	d
AS_STRING_FOR_OMX_CORE_H	include/media/openmax/OMX_AsString.h	203;"	d
AS_STRING_FOR_OMX_IMAGE_H	include/media/openmax/OMX_AsString.h	302;"	d
AS_STRING_FOR_OMX_INDEXEXT_H	include/media/openmax/OMX_AsString.h	504;"	d
AS_STRING_FOR_OMX_INDEX_H	include/media/openmax/OMX_AsString.h	328;"	d
AS_STRING_FOR_OMX_IVCOMMON_H	include/media/openmax/OMX_AsString.h	536;"	d
AS_STRING_FOR_OMX_TYPES_H	include/media/openmax/OMX_AsString.h	655;"	d
AS_STRING_FOR_OMX_VIDEOEXT_H	include/media/openmax/OMX_AsString.h	869;"	d
AS_STRING_FOR_OMX_VIDEO_H	include/media/openmax/OMX_AsString.h	697;"	d
ASensor	include/android/sensor.h	/^typedef struct ASensor ASensor;$/;"	t	typeref:struct:ASensor
ASensor	include/gui/Sensor.h	/^struct ASensor { };$/;"	s
ASensorEvent	include/android/sensor.h	/^typedef struct ASensorEvent {$/;"	s
ASensorEvent	include/android/sensor.h	/^} ASensorEvent;$/;"	t	typeref:struct:ASensorEvent
ASensorEventQueue	include/android/sensor.h	/^typedef struct ASensorEventQueue ASensorEventQueue;$/;"	t	typeref:struct:ASensorEventQueue
ASensorEventQueue	include/gui/SensorEventQueue.h	/^struct ASensorEventQueue {$/;"	s
ASensorList	include/android/sensor.h	/^typedef ASensorRef const* ASensorList;$/;"	t
ASensorManager	include/android/sensor.h	/^typedef struct ASensorManager ASensorManager;$/;"	t	typeref:struct:ASensorManager
ASensorManager	include/gui/SensorManager.h	/^struct ASensorManager { };$/;"	s
ASensorRef	include/android/sensor.h	/^typedef ASensor const* ASensorRef;$/;"	t
ASensorVector	include/android/sensor.h	/^typedef struct ASensorVector {$/;"	s
ASensorVector	include/android/sensor.h	/^} ASensorVector;$/;"	t	typeref:struct:ASensorVector
AStorageManager	include/android/storage_manager.h	/^typedef struct AStorageManager AStorageManager;$/;"	t	typeref:struct:AStorageManager
AStorageManager_obbCallbackFunc	include/android/storage_manager.h	/^typedef void (*AStorageManager_obbCallbackFunc)(const char* filename, const int32_t state, void* data);$/;"	t
ATRACE_BUFFER_INDEX	include/gui/BufferQueueCore.h	38;"	d
ATRACE_TAG	cmds/flatland/Main.cpp	17;"	d	file:
ATRACE_TAG	libs/gui/BufferItemConsumer.cpp	19;"	d	file:
ATRACE_TAG	libs/gui/BufferQueue.cpp	18;"	d	file:
ATRACE_TAG	libs/gui/BufferQueueConsumer.cpp	20;"	d	file:
ATRACE_TAG	libs/gui/BufferQueueCore.cpp	18;"	d	file:
ATRACE_TAG	libs/gui/BufferQueueProducer.cpp	20;"	d	file:
ATRACE_TAG	libs/gui/ConsumerBase.cpp	20;"	d	file:
ATRACE_TAG	libs/gui/CpuConsumer.cpp	19;"	d	file:
ATRACE_TAG	libs/gui/GLConsumer.cpp	18;"	d	file:
ATRACE_TAG	libs/gui/StreamSplitter.cpp	20;"	d	file:
ATRACE_TAG	libs/gui/Surface.cpp	18;"	d	file:
ATRACE_TAG	libs/ui/Fence.cpp	18;"	d	file:
ATRACE_TAG	libs/ui/GraphicBufferAllocator.cpp	19;"	d	file:
ATRACE_TAG	libs/ui/GraphicBufferMapper.cpp	18;"	d	file:
ATRACE_TAG	opengl/libs/EGL/eglApi.cpp	17;"	d	file:
ATRACE_TAG	opengl/libs/EGL/trace.cpp	27;"	d	file:
ATRACE_TAG	services/inputflinger/InputDispatcher.cpp	18;"	d	file:
ATRACE_TAG	services/surfaceflinger/DispSync.cpp	17;"	d	file:
ATRACE_TAG	services/surfaceflinger/DisplayHardware/HWComposer.cpp	17;"	d	file:
ATRACE_TAG	services/surfaceflinger/EventThread.cpp	17;"	d	file:
ATRACE_TAG	services/surfaceflinger/Layer.cpp	17;"	d	file:
ATRACE_TAG	services/surfaceflinger/LayerBlur.cpp	20;"	d	file:
ATRACE_TAG	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	17;"	d	file:
ATRACE_TAG	services/surfaceflinger/SurfaceFlinger.cpp	18;"	d	file:
ATRACE_TAG	services/surfaceflinger/SurfaceFlingerConsumer.cpp	17;"	d	file:
ATTACH_BUFFER	libs/gui/IGraphicBufferConsumer.cpp	/^    ATTACH_BUFFER,$/;"	e	enum:android::__anon261	file:
ATTACH_BUFFER	libs/gui/IGraphicBufferProducer.cpp	/^    ATTACH_BUFFER,$/;"	e	enum:android::__anon248	file:
ATTRIBUTE	opengl/tests/configdump/configdump.cpp	22;"	d	file:
AUTHENTICATE_SURFACE	include/gui/ISurfaceComposer.h	/^        AUTHENTICATE_SURFACE,$/;"	e	enum:android::BnSurfaceComposer::__anon137
AUncalibratedEvent	include/android/sensor.h	/^typedef struct AUncalibratedEvent {$/;"	s
AUncalibratedEvent	include/android/sensor.h	/^} AUncalibratedEvent;$/;"	t	typeref:struct:AUncalibratedEvent
AWINDOW_FLAG_ALLOW_LOCK_WHILE_SCREEN_ON	include/android/window.h	/^    AWINDOW_FLAG_ALLOW_LOCK_WHILE_SCREEN_ON = 0x00000001,$/;"	e	enum:__anon198
AWINDOW_FLAG_ALT_FOCUSABLE_IM	include/android/window.h	/^    AWINDOW_FLAG_ALT_FOCUSABLE_IM           = 0x00020000,$/;"	e	enum:__anon198
AWINDOW_FLAG_BLUR_BEHIND	include/android/window.h	/^    AWINDOW_FLAG_BLUR_BEHIND                = 0x00000004,$/;"	e	enum:__anon198
AWINDOW_FLAG_DIM_BEHIND	include/android/window.h	/^    AWINDOW_FLAG_DIM_BEHIND                 = 0x00000002,$/;"	e	enum:__anon198
AWINDOW_FLAG_DISMISS_KEYGUARD	include/android/window.h	/^    AWINDOW_FLAG_DISMISS_KEYGUARD           = 0x00400000,$/;"	e	enum:__anon198
AWINDOW_FLAG_DITHER	include/android/window.h	/^    AWINDOW_FLAG_DITHER                     = 0x00001000,$/;"	e	enum:__anon198
AWINDOW_FLAG_FORCE_NOT_FULLSCREEN	include/android/window.h	/^    AWINDOW_FLAG_FORCE_NOT_FULLSCREEN       = 0x00000800,$/;"	e	enum:__anon198
AWINDOW_FLAG_FULLSCREEN	include/android/window.h	/^    AWINDOW_FLAG_FULLSCREEN                 = 0x00000400,$/;"	e	enum:__anon198
AWINDOW_FLAG_IGNORE_CHEEK_PRESSES	include/android/window.h	/^    AWINDOW_FLAG_IGNORE_CHEEK_PRESSES       = 0x00008000,$/;"	e	enum:__anon198
AWINDOW_FLAG_KEEP_SCREEN_ON	include/android/window.h	/^    AWINDOW_FLAG_KEEP_SCREEN_ON             = 0x00000080,$/;"	e	enum:__anon198
AWINDOW_FLAG_LAYOUT_INSET_DECOR	include/android/window.h	/^    AWINDOW_FLAG_LAYOUT_INSET_DECOR         = 0x00010000,$/;"	e	enum:__anon198
AWINDOW_FLAG_LAYOUT_IN_SCREEN	include/android/window.h	/^    AWINDOW_FLAG_LAYOUT_IN_SCREEN           = 0x00000100,$/;"	e	enum:__anon198
AWINDOW_FLAG_LAYOUT_NO_LIMITS	include/android/window.h	/^    AWINDOW_FLAG_LAYOUT_NO_LIMITS           = 0x00000200,$/;"	e	enum:__anon198
AWINDOW_FLAG_NOT_FOCUSABLE	include/android/window.h	/^    AWINDOW_FLAG_NOT_FOCUSABLE              = 0x00000008,$/;"	e	enum:__anon198
AWINDOW_FLAG_NOT_TOUCHABLE	include/android/window.h	/^    AWINDOW_FLAG_NOT_TOUCHABLE              = 0x00000010,$/;"	e	enum:__anon198
AWINDOW_FLAG_NOT_TOUCH_MODAL	include/android/window.h	/^    AWINDOW_FLAG_NOT_TOUCH_MODAL            = 0x00000020,$/;"	e	enum:__anon198
AWINDOW_FLAG_SCALED	include/android/window.h	/^    AWINDOW_FLAG_SCALED                     = 0x00004000,$/;"	e	enum:__anon198
AWINDOW_FLAG_SECURE	include/android/window.h	/^    AWINDOW_FLAG_SECURE                     = 0x00002000,$/;"	e	enum:__anon198
AWINDOW_FLAG_SHOW_WALLPAPER	include/android/window.h	/^    AWINDOW_FLAG_SHOW_WALLPAPER             = 0x00100000,$/;"	e	enum:__anon198
AWINDOW_FLAG_SHOW_WHEN_LOCKED	include/android/window.h	/^    AWINDOW_FLAG_SHOW_WHEN_LOCKED           = 0x00080000,$/;"	e	enum:__anon198
AWINDOW_FLAG_TOUCHABLE_WHEN_WAKING	include/android/window.h	/^    AWINDOW_FLAG_TOUCHABLE_WHEN_WAKING      = 0x00000040,$/;"	e	enum:__anon198
AWINDOW_FLAG_TURN_SCREEN_ON	include/android/window.h	/^    AWINDOW_FLAG_TURN_SCREEN_ON             = 0x00200000,$/;"	e	enum:__anon198
AWINDOW_FLAG_WATCH_OUTSIDE_TOUCH	include/android/window.h	/^    AWINDOW_FLAG_WATCH_OUTSIDE_TOUCH        = 0x00040000,$/;"	e	enum:__anon198
AXES	include/input/InputEventLabels.h	/^static const InputEventLabel AXES[] = {$/;"	m	namespace:android
A_COLOR	opengl/tests/gl_perf/fill_common.cpp	/^    A_COLOR,$/;"	e	enum:__anon237	file:
A_POS	opengl/tests/gl_perf/fill_common.cpp	/^    A_POS,$/;"	e	enum:__anon237	file:
A_TEX0	opengl/tests/gl_perf/fill_common.cpp	/^    A_TEX0,$/;"	e	enum:__anon237	file:
A_TEX1	opengl/tests/gl_perf/fill_common.cpp	/^    A_TEX1$/;"	e	enum:__anon237	file:
AcquiredBuffer	include/gui/CpuConsumer.h	/^        AcquiredBuffer() :$/;"	f	struct:android::CpuConsumer::AcquiredBuffer
AcquiredBuffer	include/gui/CpuConsumer.h	/^    struct AcquiredBuffer {$/;"	s	class:android::CpuConsumer
Adder	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^        Adder(EGLAttributeVector& v, EGLint attribute)$/;"	f	class:android::EGLAttributeVector::Adder	file:
Adder	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^    class Adder {$/;"	c	class:android::EGLAttributeVector	file:
AllocateBuffer	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*AllocateBuffer)($/;"	m	struct:OMX_COMPONENTTYPE
Allocation	libs/binder/MemoryDealer.cpp	/^Allocation::Allocation($/;"	f	class:android::Allocation
Allocation	libs/binder/MemoryDealer.cpp	/^class Allocation : public MemoryBase {$/;"	c	namespace:android	file:
AndroidBitmapFormat	include/android/bitmap.h	/^enum AndroidBitmapFormat {$/;"	g
AndroidBitmapInfo	include/android/bitmap.h	/^} AndroidBitmapInfo;$/;"	t	typeref:struct:__anon161
ApiCall	opengl/libs/GLES_trace/tools/genapi.py	/^class ApiCall(object):$/;"	c
ApiGenerator	opengl/tools/glgen2/glgen.py	/^class ApiGenerator(reg.OutputGenerator):$/;"	c
AppOpsManager	include/binder/AppOpsManager.h	/^class AppOpsManager$/;"	c	namespace:android
AppOpsManager	libs/binder/AppOpsManager.cpp	/^AppOpsManager::AppOpsManager()$/;"	f	class:android::AppOpsManager
Attribute	opengl/tests/configdump/configdump.cpp	/^struct Attribute {$/;"	s	file:
Attribute	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^        Attribute() {};$/;"	f	struct:android::EGLAttributeVector::Attribute
Attribute	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^        Attribute(EGLint v) : v(v) { }$/;"	f	struct:android::EGLAttributeVector::Attribute
Attribute	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^    struct Attribute {$/;"	s	class:android::EGLAttributeVector	file:
Axes	services/inputflinger/tests/InputReader_test.cpp	/^    enum Axes {$/;"	g	class:android::TouchInputMapperTest	file:
Axis	services/inputflinger/InputReader.h	/^    struct Axis {$/;"	s	class:android::JoystickInputMapper
AxisInfo	include/input/KeyLayoutMap.h	/^    AxisInfo() : mode(MODE_NORMAL), axis(-1), highAxis(-1), splitValue(0), flatOverride(-1) {$/;"	f	struct:android::AxisInfo
AxisInfo	include/input/KeyLayoutMap.h	/^struct AxisInfo {$/;"	s	namespace:android
BASE	include/ui/ANativeObjectBase.h	/^    typedef ANativeObjectBase<NATIVE_TYPE, TYPE, REF> BASE;$/;"	t	class:android::ANativeObjectBase
BASIS	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^** distributed under the License is distributed on an "AS IS" BASIS,$/;"	v
BATTERY_HEALTH_COLD	include/batteryservice/BatteryService.h	/^    BATTERY_HEALTH_COLD = 7, \/\/ equals BatteryManager.BATTERY_HEALTH_COLD constant$/;"	e	enum:android::__anon122
BATTERY_HEALTH_DEAD	include/batteryservice/BatteryService.h	/^    BATTERY_HEALTH_DEAD = 4, \/\/ equals BatteryManager.BATTERY_HEALTH_DEAD constant$/;"	e	enum:android::__anon122
BATTERY_HEALTH_GOOD	include/batteryservice/BatteryService.h	/^    BATTERY_HEALTH_GOOD = 2, \/\/ equals BatteryManager.BATTERY_HEALTH_GOOD constant$/;"	e	enum:android::__anon122
BATTERY_HEALTH_OVERHEAT	include/batteryservice/BatteryService.h	/^    BATTERY_HEALTH_OVERHEAT = 3, \/\/ equals BatteryManager.BATTERY_HEALTH_OVERHEAT constant$/;"	e	enum:android::__anon122
BATTERY_HEALTH_OVER_VOLTAGE	include/batteryservice/BatteryService.h	/^    BATTERY_HEALTH_OVER_VOLTAGE = 5, \/\/ equals BatteryManager.BATTERY_HEALTH_OVER_VOLTAGE constant$/;"	e	enum:android::__anon122
BATTERY_HEALTH_UNKNOWN	include/batteryservice/BatteryService.h	/^    BATTERY_HEALTH_UNKNOWN = 1, \/\/ equals BatteryManager.BATTERY_HEALTH_UNKNOWN constant$/;"	e	enum:android::__anon122
BATTERY_HEALTH_UNSPECIFIED_FAILURE	include/batteryservice/BatteryService.h	/^    BATTERY_HEALTH_UNSPECIFIED_FAILURE = 6, \/\/ equals BatteryManager.BATTERY_HEALTH_UNSPECIFIED_FAILURE constant$/;"	e	enum:android::__anon122
BATTERY_PROP_CAPACITY	include/batteryservice/BatteryService.h	/^    BATTERY_PROP_CAPACITY = 4, \/\/ equals BatteryProperty.CAPACITY constant$/;"	e	enum:android::__anon123
BATTERY_PROP_CHARGE_COUNTER	include/batteryservice/BatteryService.h	/^    BATTERY_PROP_CHARGE_COUNTER = 1, \/\/ equals BatteryProperty.CHARGE_COUNTER constant$/;"	e	enum:android::__anon123
BATTERY_PROP_CURRENT_AVG	include/batteryservice/BatteryService.h	/^    BATTERY_PROP_CURRENT_AVG = 3, \/\/ equals BatteryProperty.CURRENT_AVG constant$/;"	e	enum:android::__anon123
BATTERY_PROP_CURRENT_NOW	include/batteryservice/BatteryService.h	/^    BATTERY_PROP_CURRENT_NOW = 2, \/\/ equals BatteryProperty.CURRENT_NOW constant$/;"	e	enum:android::__anon123
BATTERY_PROP_ENERGY_COUNTER	include/batteryservice/BatteryService.h	/^    BATTERY_PROP_ENERGY_COUNTER = 5, \/\/ equals BatteryProperty.ENERGY_COUNTER constant$/;"	e	enum:android::__anon123
BATTERY_STATUS_CHARGING	include/batteryservice/BatteryService.h	/^    BATTERY_STATUS_CHARGING = 2, \/\/ equals BatteryManager.BATTERY_STATUS_CHARGING constant$/;"	e	enum:android::__anon121
BATTERY_STATUS_DISCHARGING	include/batteryservice/BatteryService.h	/^    BATTERY_STATUS_DISCHARGING = 3, \/\/ equals BatteryManager.BATTERY_STATUS_DISCHARGING constant$/;"	e	enum:android::__anon121
BATTERY_STATUS_FULL	include/batteryservice/BatteryService.h	/^    BATTERY_STATUS_FULL = 5, \/\/ equals BatteryManager.BATTERY_STATUS_FULL constant$/;"	e	enum:android::__anon121
BATTERY_STATUS_NOT_CHARGING	include/batteryservice/BatteryService.h	/^    BATTERY_STATUS_NOT_CHARGING = 4, \/\/ equals BatteryManager.BATTERY_STATUS_NOT_CHARGING constant$/;"	e	enum:android::__anon121
BATTERY_STATUS_UNKNOWN	include/batteryservice/BatteryService.h	/^    BATTERY_STATUS_UNKNOWN = 1, \/\/ equals BatteryManager.BATTERY_STATUS_UNKNOWN constant$/;"	e	enum:android::__anon121
BBinder	include/binder/Binder.h	/^class BBinder : public IBinder$/;"	c	namespace:android
BBinder	libs/binder/Binder.cpp	/^BBinder::BBinder()$/;"	f	class:android::BBinder
BC_EXT_STR	opengl/libs/EGL/egl_cache.cpp	57;"	d	file:
BINDER_PERMISSION_H	include/binder/PermissionCache.h	18;"	d
BINDER_SERVICE_MANAGER	cmds/servicemanager/binder.h	31;"	d
BINDER_VM_SIZE	libs/binder/ProcessState.cpp	44;"	d	file:
BIO_F_IOERROR	cmds/servicemanager/binder.c	85;"	d	file:
BIO_F_MALLOCED	cmds/servicemanager/binder.c	86;"	d	file:
BIO_F_OVERFLOW	cmds/servicemanager/binder.c	84;"	d	file:
BIO_F_SHARED	cmds/servicemanager/binder.c	83;"	d	file:
BITSPERBYTE	opengl/tests/hwc/hwcColorEquiv.cpp	111;"	d	file:
BITSPERBYTE	opengl/tests/hwc/hwcStress.cpp	158;"	d	file:
BITSPERBYTE	opengl/tests/hwc/hwcTestLib.cpp	45;"	d	file:
BI_LOGD	libs/gui/BufferItemConsumer.cpp	25;"	d	file:
BI_LOGE	libs/gui/BufferItemConsumer.cpp	28;"	d	file:
BI_LOGI	libs/gui/BufferItemConsumer.cpp	26;"	d	file:
BI_LOGV	libs/gui/BufferItemConsumer.cpp	24;"	d	file:
BI_LOGW	libs/gui/BufferItemConsumer.cpp	27;"	d	file:
BLEND_MASK	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            BLEND_MASK              =       0x00000001,$/;"	e	enum:android::ProgramCache::Key::__anon33
BLEND_NORMAL	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            BLEND_NORMAL            =       0x00000000,$/;"	e	enum:android::ProgramCache::Key::__anon33
BLEND_PREMULT	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            BLEND_PREMULT           =       0x00000001,$/;"	e	enum:android::ProgramCache::Key::__anon33
BLUE	services/surfaceflinger/Colorizer.h	/^        BLUE    = 34,$/;"	e	enum:android::Colorizer::color
BOOL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType_Type GLMessage_DataType::BOOL;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
BOOL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Type BOOL = GLMessage_DataType_Type_BOOL;$/;"	m	class:android::gltrace::GLMessage_DataType
BOOT_FINISHED	include/gui/ISurfaceComposer.h	/^        BOOT_FINISHED = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::BnSurfaceComposer::__anon137
BQ_LOGD	include/gui/BufferQueueCore.h	33;"	d
BQ_LOGE	include/gui/BufferQueueCore.h	36;"	d
BQ_LOGI	include/gui/BufferQueueCore.h	34;"	d
BQ_LOGV	include/gui/BufferQueueCore.h	32;"	d
BQ_LOGW	include/gui/BufferQueueCore.h	35;"	d
BTN_FIRST	services/inputflinger/EventHub.h	43;"	d
BTN_LAST	services/inputflinger/EventHub.h	44;"	d
BTN_USF_HOVERING_CURSOR	services/inputflinger/EventHub.h	64;"	d
BUFFER_MAX	cmds/installd/installd.c	25;"	d	file:
BUFFER_NEEDS_REALLOCATION	include/gui/IGraphicBufferProducer.h	/^        BUFFER_NEEDS_REALLOCATION = 0x1,$/;"	e	enum:android::IGraphicBufferProducer::__anon155
BUILT_IN_KEYBOARD_ID	services/inputflinger/EventHub.h	/^    BUILT_IN_KEYBOARD_ID = 0,$/;"	e	enum:android::__anon46
BUTTON_CLICK_OR_DRAG	services/inputflinger/InputReader.h	/^            BUTTON_CLICK_OR_DRAG,$/;"	e	enum:android::TouchInputMapper::PointerGesture::Mode
BYTE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType_Type GLMessage_DataType::BYTE;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
BYTE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Type BYTE = GLMessage_DataType_Type_BYTE;$/;"	m	class:android::gltrace::GLMessage_DataType
B_PACK_CHARS	include/binder/IBinder.h	26;"	d
Ba	services/sensorservice/Fusion.h	/^    vec3_t Ba, Bm;$/;"	m	class:android::Fusion
Barrier	services/surfaceflinger/Barrier.h	/^    inline Barrier() : state(CLOSED) { }$/;"	f	class:android::Barrier
Barrier	services/surfaceflinger/Barrier.h	/^class Barrier$/;"	c	namespace:android
BaseInfo	opengl/tools/glgen2/registry/reg.py	/^class BaseInfo:$/;"	c
BaseTest	libs/input/tests/InputEvent_test.cpp	/^class BaseTest : public testing::Test {$/;"	c	namespace:android	file:
Batch	include/input/InputTransport.h	/^    struct Batch {$/;"	s	class:android::InputConsumer
BatchParams	services/sensorservice/SensorDevice.h	/^      BatchParams() : flags(0), batchDelay(0), batchTimeout(0) {}$/;"	f	struct:android::SensorDevice::BatchParams
BatchParams	services/sensorservice/SensorDevice.h	/^      BatchParams(int flag, nsecs_t delay, nsecs_t timeout): flags(flag), batchDelay(delay),$/;"	f	struct:android::SensorDevice::BatchParams
BatchParams	services/sensorservice/SensorDevice.h	/^    struct BatchParams {$/;"	s	class:android::SensorDevice
BatteryProperties	include/batteryservice/BatteryService.h	/^struct BatteryProperties {$/;"	s	namespace:android
BatteryProperty	include/batteryservice/BatteryService.h	/^struct BatteryProperty {$/;"	s	namespace:android
BatteryService	services/sensorservice/BatteryService.cpp	/^BatteryService::BatteryService() {$/;"	f	class:android::BatteryService
BatteryService	services/sensorservice/BatteryService.h	/^class BatteryService : public Singleton<BatteryService> {$/;"	c	namespace:android
Behavior	include/input/KeyCharacterMap.h	/^    struct Behavior {$/;"	s	class:android::KeyCharacterMap
Behavior	libs/input/KeyCharacterMap.cpp	/^KeyCharacterMap::Behavior::Behavior() :$/;"	f	class:android::KeyCharacterMap::Behavior
Behavior	libs/input/KeyCharacterMap.cpp	/^KeyCharacterMap::Behavior::Behavior(const Behavior& other) :$/;"	f	class:android::KeyCharacterMap::Behavior
BenchmarkDesc	cmds/flatland/Main.cpp	/^struct BenchmarkDesc {$/;"	s	file:
BenchmarkRunner	cmds/flatland/Main.cpp	/^    BenchmarkRunner(const BenchmarkDesc& desc, size_t instance) :$/;"	f	class:BenchmarkRunner
BenchmarkRunner	cmds/flatland/Main.cpp	/^class BenchmarkRunner {$/;"	c	file:
BindImageAsFramebuffer	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^RenderEngine::BindImageAsFramebuffer::BindImageAsFramebuffer($/;"	f	class:android::RenderEngine::BindImageAsFramebuffer
BindImageAsFramebuffer	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    class BindImageAsFramebuffer {$/;"	c	class:android::RenderEngine
BinderService	include/binder/BinderService.h	/^class BinderService$/;"	c	namespace:android
BitTube	include/gui/BitTube.h	/^class BitTube : public RefBase$/;"	c	namespace:android
BitTube	libs/gui/BitTube.cpp	/^BitTube::BitTube()$/;"	f	class:android::BitTube
BitTube	libs/gui/BitTube.cpp	/^BitTube::BitTube(const Parcel& data)$/;"	f	class:android::BitTube
BitTube	libs/gui/BitTube.cpp	/^BitTube::BitTube(size_t bufsize)$/;"	f	class:android::BitTube
Blitter	cmds/flatland/Composers.cpp	/^class Blitter {$/;"	c	namespace:android	file:
Blob	include/binder/Parcel.h	/^    class Blob {$/;"	c	class:android::Parcel
Blob	libs/binder/Parcel.cpp	/^Parcel::Blob::Blob() :$/;"	f	class:android::Parcel::Blob
Bm	services/sensorservice/Fusion.h	/^    vec3_t Ba, Bm;$/;"	m	class:android::Fusion
BnAppOpsCallback	include/binder/IAppOpsCallback.h	/^class BnAppOpsCallback : public BnInterface<IAppOpsCallback>$/;"	c	namespace:android
BnAppOpsService	include/binder/IAppOpsService.h	/^class BnAppOpsService : public BnInterface<IAppOpsService>$/;"	c	namespace:android
BnBatteryPropertiesRegistrar	include/batteryservice/IBatteryPropertiesRegistrar.h	/^class BnBatteryPropertiesRegistrar : public BnInterface<IBatteryPropertiesRegistrar> {$/;"	c	namespace:android
BnBatteryStats	include/binder/IBatteryStats.h	/^class BnBatteryStats : public BnInterface<IBatteryStats>$/;"	c	namespace:android
BnConsumerListener	include/gui/IConsumerListener.h	/^class BnConsumerListener : public BnInterface<IConsumerListener>$/;"	c	namespace:android
BnDisplayEventConnection	include/gui/IDisplayEventConnection.h	/^class BnDisplayEventConnection : public BnInterface<IDisplayEventConnection>$/;"	c	namespace:android
BnGraphicBufferAlloc	include/gui/IGraphicBufferAlloc.h	/^class BnGraphicBufferAlloc : public BnInterface<IGraphicBufferAlloc>$/;"	c	namespace:android
BnGraphicBufferConsumer	include/gui/IGraphicBufferConsumer.h	/^class BnGraphicBufferConsumer : public BnInterface<IGraphicBufferConsumer>$/;"	c	namespace:android
BnGraphicBufferProducer	include/gui/IGraphicBufferProducer.h	/^class BnGraphicBufferProducer : public BnInterface<IGraphicBufferProducer>$/;"	c	namespace:android
BnInterface	include/binder/IInterface.h	/^class BnInterface : public INTERFACE, public BBinder$/;"	c	namespace:android
BnMemory	include/binder/IMemory.h	/^class BnMemory : public BnInterface<IMemory>$/;"	c	namespace:android
BnMemory	libs/binder/IMemory.cpp	/^BnMemory::BnMemory() {$/;"	f	class:android::BnMemory
BnMemoryHeap	include/binder/IMemory.h	/^class BnMemoryHeap : public BnInterface<IMemoryHeap>$/;"	c	namespace:android
BnMemoryHeap	libs/binder/IMemory.cpp	/^BnMemoryHeap::BnMemoryHeap() {$/;"	f	class:android::BnMemoryHeap
BnPermissionController	include/binder/IPermissionController.h	/^class BnPermissionController : public BnInterface<IPermissionController>$/;"	c	namespace:android
BnProducerListener	include/gui/IProducerListener.h	/^class BnProducerListener : public BnInterface<IProducerListener>$/;"	c	namespace:android
BnSensorEventConnection	include/gui/ISensorEventConnection.h	/^class BnSensorEventConnection : public BnInterface<ISensorEventConnection>$/;"	c	namespace:android
BnSensorServer	include/gui/ISensorServer.h	/^class BnSensorServer : public BnInterface<ISensorServer>$/;"	c	namespace:android
BnServiceManager	include/binder/IServiceManager.h	/^class BnServiceManager : public BnInterface<IServiceManager>$/;"	c	namespace:android
BnSurfaceComposer	include/gui/ISurfaceComposer.h	/^class BnSurfaceComposer: public BnInterface<ISurfaceComposer> {$/;"	c	namespace:android
BnSurfaceComposerClient	include/gui/ISurfaceComposerClient.h	/^class BnSurfaceComposerClient: public BnInterface<ISurfaceComposerClient> {$/;"	c	namespace:android
Body	include/input/InputTransport.h	/^    union Body {$/;"	u	struct:android::InputMessage
BpAppOpsCallback	libs/binder/IAppOpsCallback.cpp	/^    BpAppOpsCallback(const sp<IBinder>& impl)$/;"	f	class:android::BpAppOpsCallback
BpAppOpsCallback	libs/binder/IAppOpsCallback.cpp	/^class BpAppOpsCallback : public BpInterface<IAppOpsCallback>$/;"	c	namespace:android	file:
BpAppOpsService	libs/binder/IAppOpsService.cpp	/^    BpAppOpsService(const sp<IBinder>& impl)$/;"	f	class:android::BpAppOpsService
BpAppOpsService	libs/binder/IAppOpsService.cpp	/^class BpAppOpsService : public BpInterface<IAppOpsService>$/;"	c	namespace:android	file:
BpBatteryPropertiesListener	services/batteryservice/IBatteryPropertiesListener.cpp	/^    BpBatteryPropertiesListener(const sp<IBinder>& impl)$/;"	f	class:android::BpBatteryPropertiesListener
BpBatteryPropertiesListener	services/batteryservice/IBatteryPropertiesListener.cpp	/^class BpBatteryPropertiesListener : public BpInterface<IBatteryPropertiesListener>$/;"	c	namespace:android	file:
BpBatteryPropertiesRegistrar	services/batteryservice/IBatteryPropertiesRegistrar.cpp	/^    BpBatteryPropertiesRegistrar(const sp<IBinder>& impl)$/;"	f	class:android::BpBatteryPropertiesRegistrar
BpBatteryPropertiesRegistrar	services/batteryservice/IBatteryPropertiesRegistrar.cpp	/^class BpBatteryPropertiesRegistrar : public BpInterface<IBatteryPropertiesRegistrar> {$/;"	c	namespace:android	file:
BpBatteryStats	libs/binder/IBatteryStats.cpp	/^    BpBatteryStats(const sp<IBinder>& impl)$/;"	f	class:android::BpBatteryStats
BpBatteryStats	libs/binder/IBatteryStats.cpp	/^class BpBatteryStats : public BpInterface<IBatteryStats>$/;"	c	namespace:android	file:
BpBinder	include/binder/BpBinder.h	/^class BpBinder : public IBinder$/;"	c	namespace:android
BpBinder	libs/binder/BpBinder.cpp	/^BpBinder::BpBinder(int32_t handle)$/;"	f	class:android::BpBinder
BpConsumerListener	libs/gui/IConsumerListener.cpp	/^    BpConsumerListener(const sp<IBinder>& impl)$/;"	f	class:android::BpConsumerListener
BpConsumerListener	libs/gui/IConsumerListener.cpp	/^class BpConsumerListener : public BpInterface<IConsumerListener>$/;"	c	namespace:android	file:
BpDisplayEventConnection	libs/gui/IDisplayEventConnection.cpp	/^    BpDisplayEventConnection(const sp<IBinder>& impl)$/;"	f	class:android::BpDisplayEventConnection
BpDisplayEventConnection	libs/gui/IDisplayEventConnection.cpp	/^class BpDisplayEventConnection : public BpInterface<IDisplayEventConnection>$/;"	c	namespace:android	file:
BpGraphicBufferAlloc	libs/gui/IGraphicBufferAlloc.cpp	/^    BpGraphicBufferAlloc(const sp<IBinder>& impl)$/;"	f	class:android::BpGraphicBufferAlloc
BpGraphicBufferAlloc	libs/gui/IGraphicBufferAlloc.cpp	/^class BpGraphicBufferAlloc : public BpInterface<IGraphicBufferAlloc>$/;"	c	namespace:android	file:
BpGraphicBufferConsumer	libs/gui/IGraphicBufferConsumer.cpp	/^    BpGraphicBufferConsumer(const sp<IBinder>& impl)$/;"	f	class:android::BpGraphicBufferConsumer
BpGraphicBufferConsumer	libs/gui/IGraphicBufferConsumer.cpp	/^class BpGraphicBufferConsumer : public BpInterface<IGraphicBufferConsumer>$/;"	c	namespace:android	file:
BpGraphicBufferProducer	libs/gui/IGraphicBufferProducer.cpp	/^    BpGraphicBufferProducer(const sp<IBinder>& impl)$/;"	f	class:android::BpGraphicBufferProducer
BpGraphicBufferProducer	libs/gui/IGraphicBufferProducer.cpp	/^class BpGraphicBufferProducer : public BpInterface<IGraphicBufferProducer>$/;"	c	namespace:android	file:
BpInterface	include/binder/IInterface.h	/^class BpInterface : public INTERFACE, public BpRefBase$/;"	c	namespace:android
BpInterface	include/binder/IInterface.h	/^inline BpInterface<INTERFACE>::BpInterface(const sp<IBinder>& remote)$/;"	f	class:android::BpInterface
BpMemory	libs/binder/IMemory.cpp	/^BpMemory::BpMemory(const sp<IBinder>& impl)$/;"	f	class:android::BpMemory
BpMemory	libs/binder/IMemory.cpp	/^class BpMemory : public BpInterface<IMemory>$/;"	c	namespace:android	file:
BpMemoryHeap	libs/binder/IMemory.cpp	/^BpMemoryHeap::BpMemoryHeap(const sp<IBinder>& impl)$/;"	f	class:android::BpMemoryHeap
BpMemoryHeap	libs/binder/IMemory.cpp	/^class BpMemoryHeap : public BpInterface<IMemoryHeap>$/;"	c	namespace:android	file:
BpPermissionController	libs/binder/IPermissionController.cpp	/^    BpPermissionController(const sp<IBinder>& impl)$/;"	f	class:android::BpPermissionController
BpPermissionController	libs/binder/IPermissionController.cpp	/^class BpPermissionController : public BpInterface<IPermissionController>$/;"	c	namespace:android	file:
BpPowerManager	services/powermanager/IPowerManager.cpp	/^    BpPowerManager(const sp<IBinder>& impl)$/;"	f	class:android::BpPowerManager
BpPowerManager	services/powermanager/IPowerManager.cpp	/^class BpPowerManager : public BpInterface<IPowerManager>$/;"	c	namespace:android	file:
BpProducerListener	libs/gui/IProducerListener.cpp	/^    BpProducerListener(const sp<IBinder>& impl)$/;"	f	class:android::BpProducerListener
BpProducerListener	libs/gui/IProducerListener.cpp	/^class BpProducerListener : public BpInterface<IProducerListener>$/;"	c	namespace:android	file:
BpRefBase	include/binder/Binder.h	/^class BpRefBase : public virtual RefBase$/;"	c	namespace:android
BpRefBase	libs/binder/Binder.cpp	/^BpRefBase::BpRefBase(const sp<IBinder>& o)$/;"	f	class:android::BpRefBase
BpSensorEventConnection	libs/gui/ISensorEventConnection.cpp	/^    BpSensorEventConnection(const sp<IBinder>& impl)$/;"	f	class:android::BpSensorEventConnection
BpSensorEventConnection	libs/gui/ISensorEventConnection.cpp	/^class BpSensorEventConnection : public BpInterface<ISensorEventConnection>$/;"	c	namespace:android	file:
BpSensorServer	libs/gui/ISensorServer.cpp	/^    BpSensorServer(const sp<IBinder>& impl)$/;"	f	class:android::BpSensorServer
BpSensorServer	libs/gui/ISensorServer.cpp	/^class BpSensorServer : public BpInterface<ISensorServer>$/;"	c	namespace:android	file:
BpServiceManager	libs/binder/IServiceManager.cpp	/^    BpServiceManager(const sp<IBinder>& impl)$/;"	f	class:android::BpServiceManager
BpServiceManager	libs/binder/IServiceManager.cpp	/^class BpServiceManager : public BpInterface<IServiceManager>$/;"	c	namespace:android	file:
BpSurfaceComposer	libs/gui/ISurfaceComposer.cpp	/^    BpSurfaceComposer(const sp<IBinder>& impl)$/;"	f	class:android::BpSurfaceComposer
BpSurfaceComposer	libs/gui/ISurfaceComposer.cpp	/^class BpSurfaceComposer : public BpInterface<ISurfaceComposer>$/;"	c	namespace:android	file:
BpSurfaceComposerClient	libs/gui/ISurfaceComposerClient.cpp	/^    BpSurfaceComposerClient(const sp<IBinder>& impl)$/;"	f	class:android::BpSurfaceComposerClient
BpSurfaceComposerClient	libs/gui/ISurfaceComposerClient.cpp	/^class BpSurfaceComposerClient : public BpInterface<ISurfaceComposerClient>$/;"	c	namespace:android	file:
BufferItem	include/gui/BufferItem.h	/^class BufferItem : public Flattenable<BufferItem> {$/;"	c	namespace:android
BufferItem	include/gui/BufferItemConsumer.h	/^    typedef BufferQueue::BufferItem BufferItem;$/;"	t	class:android::BufferItemConsumer
BufferItem	include/gui/BufferQueue.h	/^    typedef IGraphicBufferConsumer::BufferItem BufferItem;$/;"	t	class:android::BufferQueue
BufferItem	include/gui/IGraphicBufferConsumer.h	/^    class BufferItem : public Flattenable<BufferItem> {$/;"	c	class:android::IGraphicBufferConsumer
BufferItem	libs/gui/BufferItem.cpp	/^BufferItem::BufferItem() :$/;"	f	class:android::BufferItem
BufferItem	libs/gui/IGraphicBufferConsumer.cpp	/^IGraphicBufferConsumer::BufferItem::BufferItem() :$/;"	f	class:android::IGraphicBufferConsumer::BufferItem
BufferItemConsumer	include/gui/BufferItemConsumer.h	/^class BufferItemConsumer: public ConsumerBase$/;"	c	namespace:android
BufferItemConsumer	libs/gui/BufferItemConsumer.cpp	/^BufferItemConsumer::BufferItemConsumer($/;"	f	class:android::BufferItemConsumer
BufferQueue	include/gui/BufferQueue.h	/^class BufferQueue {$/;"	c	namespace:android
BufferQueueConsumer	include/gui/BufferQueueConsumer.h	/^class BufferQueueConsumer : public BnGraphicBufferConsumer {$/;"	c	namespace:android
BufferQueueConsumer	libs/gui/BufferQueueConsumer.cpp	/^BufferQueueConsumer::BufferQueueConsumer(const sp<BufferQueueCore>& core) :$/;"	f	class:android::BufferQueueConsumer
BufferQueueCore	include/gui/BufferQueueCore.h	/^class BufferQueueCore : public virtual RefBase {$/;"	c	namespace:android
BufferQueueCore	libs/gui/BufferQueueCore.cpp	/^BufferQueueCore::BufferQueueCore(const sp<IGraphicBufferAlloc>& allocator) :$/;"	f	class:android::BufferQueueCore
BufferQueueDefs	include/gui/BufferQueueDefs.h	/^    namespace BufferQueueDefs {$/;"	n	namespace:android
BufferQueueProducer	include/gui/BufferQueueProducer.h	/^class BufferQueueProducer : public BnGraphicBufferProducer,$/;"	c	namespace:android
BufferQueueProducer	libs/gui/BufferQueueProducer.cpp	/^BufferQueueProducer::BufferQueueProducer(const sp<BufferQueueCore>& core) :$/;"	f	class:android::BufferQueueProducer
BufferQueueTest	libs/gui/tests/BufferQueue_test.cpp	/^    BufferQueueTest() {$/;"	f	class:android::BufferQueueTest
BufferQueueTest	libs/gui/tests/BufferQueue_test.cpp	/^class BufferQueueTest : public ::testing::Test {$/;"	c	namespace:android	file:
BufferRejecter	services/surfaceflinger/SurfaceFlingerConsumer.h	/^    class BufferRejecter {$/;"	c	class:android::SurfaceFlingerConsumer
BufferSlot	include/gui/BufferSlot.h	/^    BufferSlot()$/;"	f	struct:android::BufferSlot
BufferSlot	include/gui/BufferSlot.h	/^struct BufferSlot {$/;"	s	namespace:android
BufferSlot	include/gui/Surface.h	/^    struct BufferSlot {$/;"	s	class:android::Surface
BufferState	include/gui/BufferSlot.h	/^    enum BufferState {$/;"	g	struct:android::BufferSlot
BufferState	libs/binder/BufferedTextOutput.cpp	/^    BufferState(int32_t _seq)$/;"	f	struct:android::BufferedTextOutput::BufferState
BufferState	libs/binder/BufferedTextOutput.cpp	/^struct BufferedTextOutput::BufferState : public RefBase$/;"	s	class:android::BufferedTextOutput	file:
BufferTracker	include/gui/StreamSplitter.h	/^    class BufferTracker : public LightRefBase<BufferTracker> {$/;"	c	class:android::StreamSplitter
BufferTracker	libs/gui/StreamSplitter.cpp	/^StreamSplitter::BufferTracker::BufferTracker(const sp<GraphicBuffer>& buffer)$/;"	f	class:android::StreamSplitter::BufferTracker
BufferedOutputStream	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^BufferedOutputStream::BufferedOutputStream(TCPStream *stream, size_t bufferSize) {$/;"	f	class:android::gltrace::BufferedOutputStream
BufferedOutputStream	opengl/libs/GLES_trace/src/gltrace_transport.h	/^class BufferedOutputStream {$/;"	c	namespace:android::gltrace
BufferedTextOutput	include/binder/BufferedTextOutput.h	/^class BufferedTextOutput : public TextOutput$/;"	c	namespace:android
BufferedTextOutput	libs/binder/BufferedTextOutput.cpp	/^BufferedTextOutput::BufferedTextOutput(uint32_t flags)$/;"	f	class:android::BufferedTextOutput
Bundle	include/binder/TextOutput.h	/^        inline Bundle(TextOutput& to) : mTO(to) { to.pushBundle(); }$/;"	f	class:android::TextOutput::Bundle
Bundle	include/binder/TextOutput.h	/^    class Bundle {$/;"	c	class:android::TextOutput
ByteSize	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^int GLMessage::ByteSize() const {$/;"	f	class:android::gltrace::GLMessage
ByteSize	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^int GLMessage_DataType::ByteSize() const {$/;"	f	class:android::gltrace::GLMessage_DataType
ByteSize	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^int GLMessage_FrameBuffer::ByteSize() const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
CACHE_BLOCK_SIZE	cmds/installd/utils.c	492;"	d	file:
CACHE_DIR_POSTFIX	cmds/installd/installd.h	61;"	d
CACHE_NOISY	cmds/installd/utils.c	19;"	d	file:
CALL_GL_API	opengl/libs/GLES2/gl2.cpp	169;"	d	file:
CALL_GL_API	opengl/libs/GLES2/gl2.cpp	36;"	d	file:
CALL_GL_API	opengl/libs/GLES2/gl2.cpp	43;"	d	file:
CALL_GL_API	opengl/libs/GLES_CM/gl.cpp	109;"	d	file:
CALL_GL_API	opengl/libs/GLES_CM/gl.cpp	125;"	d	file:
CALL_GL_API	opengl/libs/GLES_CM/gl.cpp	143;"	d	file:
CALL_GL_API	opengl/libs/GLES_CM/gl.cpp	162;"	d	file:
CALL_GL_API	opengl/libs/GLES_CM/gl.cpp	181;"	d	file:
CALL_GL_API	opengl/libs/GLES_CM/gl.cpp	224;"	d	file:
CALL_GL_API	opengl/libs/GLES_CM/gl.cpp	92;"	d	file:
CALL_GL_API	opengl/libs/GLES_CM/gl.cpp	99;"	d	file:
CALL_GL_API_REGEX	opengl/libs/GLES_trace/tools/genapi.py	/^    CALL_GL_API_REGEX = "CALL_GL_API(_RETURN)?\\((.*)\\);"$/;"	v	class:ApiCall
CALL_GL_API_RETURN	opengl/libs/GLES2/gl2.cpp	155;"	d	file:
CALL_GL_API_RETURN	opengl/libs/GLES2/gl2.cpp	170;"	d	file:
CALL_GL_API_RETURN	opengl/libs/GLES2/gl2.cpp	37;"	d	file:
CALL_GL_API_RETURN	opengl/libs/GLES_CM/gl.cpp	211;"	d	file:
CALL_GL_API_RETURN	opengl/libs/GLES_CM/gl.cpp	225;"	d	file:
CALL_GL_API_RETURN	opengl/libs/GLES_CM/gl.cpp	93;"	d	file:
CALL_GL_EXTENSION_API	opengl/libs/EGL/getProcAddress.cpp	222;"	d	file:
CALL_GL_EXTENSION_API	opengl/libs/EGL/getProcAddress.cpp	30;"	d	file:
CALL_GL_EXTENSION_API	opengl/libs/EGL/getProcAddress.cpp	43;"	d	file:
CAMS_H_INCLUDED	opengl/tests/angeles/cams.h	26;"	d
CAMTRACK	opengl/tests/angeles/cams.h	/^} CAMTRACK;$/;"	t	typeref:struct:__anon234
CAMTRACK_COUNT	opengl/tests/angeles/cams.h	62;"	d
CAMTRACK_LEN	opengl/tests/angeles/cams.h	32;"	d
CANCEL_ALL_EVENTS	services/inputflinger/InputDispatcher.h	/^            CANCEL_ALL_EVENTS = 0,$/;"	e	enum:android::InputDispatcher::CancelationOptions::Mode
CANCEL_BUFFER	libs/gui/IGraphicBufferProducer.cpp	/^    CANCEL_BUFFER,$/;"	e	enum:android::__anon248	file:
CANCEL_FALLBACK_EVENTS	services/inputflinger/InputDispatcher.h	/^            CANCEL_FALLBACK_EVENTS = 3,$/;"	e	enum:android::InputDispatcher::CancelationOptions::Mode
CANCEL_NON_POINTER_EVENTS	services/inputflinger/InputDispatcher.h	/^            CANCEL_NON_POINTER_EVENTS = 2,$/;"	e	enum:android::InputDispatcher::CancelationOptions::Mode
CANCEL_POINTER_EVENTS	services/inputflinger/InputDispatcher.h	/^            CANCEL_POINTER_EVENTS = 1,$/;"	e	enum:android::InputDispatcher::CancelationOptions::Mode
CAPTURE_SCREEN	include/gui/ISurfaceComposer.h	/^        CAPTURE_SCREEN,$/;"	e	enum:android::BnSurfaceComposer::__anon137
CAPTURE_SCREEN_DEPRECATED	include/gui/ISurfaceComposer.h	/^        CAPTURE_SCREEN_DEPRECATED,$/;"	e	enum:android::BnSurfaceComposer::__anon137
CB_LOGD	libs/gui/ConsumerBase.cpp	43;"	d	file:
CB_LOGE	libs/gui/ConsumerBase.cpp	46;"	d	file:
CB_LOGI	libs/gui/ConsumerBase.cpp	44;"	d	file:
CB_LOGV	libs/gui/ConsumerBase.cpp	42;"	d	file:
CB_LOGW	libs/gui/ConsumerBase.cpp	45;"	d	file:
CC_LOGD	libs/gui/CpuConsumer.cpp	26;"	d	file:
CC_LOGE	libs/gui/CpuConsumer.cpp	29;"	d	file:
CC_LOGI	libs/gui/CpuConsumer.cpp	27;"	d	file:
CC_LOGV	libs/gui/CpuConsumer.cpp	25;"	d	file:
CC_LOGW	libs/gui/CpuConsumer.cpp	28;"	d	file:
CFunc	opengl/tools/glgen/src/CFunc.java	/^    public CFunc(String original) {$/;"	m	class:CFunc
CFunc	opengl/tools/glgen/src/CFunc.java	/^public class CFunc {$/;"	c
CGeneratorOptions	opengl/tools/glgen2/registry/reg.py	/^class CGeneratorOptions(GeneratorOptions):$/;"	c
CHANGE_DEVICE_ALIAS	services/inputflinger/InputReader.h	/^        CHANGE_DEVICE_ALIAS = 1 << 6,$/;"	e	enum:android::InputReaderConfiguration::__anon38
CHANGE_DISPLAY_INFO	services/inputflinger/InputReader.h	/^        CHANGE_DISPLAY_INFO = 1 << 2,$/;"	e	enum:android::InputReaderConfiguration::__anon38
CHANGE_KEYBOARD_LAYOUTS	services/inputflinger/InputReader.h	/^        CHANGE_KEYBOARD_LAYOUTS = 1 << 5,$/;"	e	enum:android::InputReaderConfiguration::__anon38
CHANGE_MUST_REOPEN	services/inputflinger/InputReader.h	/^        CHANGE_MUST_REOPEN = 1 << 31,$/;"	e	enum:android::InputReaderConfiguration::__anon38
CHANGE_POINTER_GESTURE_ENABLEMENT	services/inputflinger/InputReader.h	/^        CHANGE_POINTER_GESTURE_ENABLEMENT = 1 << 1,$/;"	e	enum:android::InputReaderConfiguration::__anon38
CHANGE_POINTER_SPEED	services/inputflinger/InputReader.h	/^        CHANGE_POINTER_SPEED = 1 << 0,$/;"	e	enum:android::InputReaderConfiguration::__anon38
CHANGE_SHOW_TOUCHES	services/inputflinger/InputReader.h	/^        CHANGE_SHOW_TOUCHES = 1 << 3,$/;"	e	enum:android::InputReaderConfiguration::__anon38
CHANGE_STYLUS_ICON_ENABLED	services/inputflinger/InputReader.h	/^        CHANGE_STYLUS_ICON_ENABLED = 1 << 4,$/;"	e	enum:android::InputReaderConfiguration::__anon38
CHANGE_VOLUME_KEYS_ROTATION	services/inputflinger/InputReader.h	/^        CHANGE_VOLUME_KEYS_ROTATION = 1 << 8,$/;"	e	enum:android::InputReaderConfiguration::__anon38
CHAR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType_Type GLMessage_DataType::CHAR;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
CHAR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Type CHAR = GLMessage_DataType_Type_CHAR;$/;"	m	class:android::gltrace::GLMessage_DataType
CHAR_SIZE	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       final static int CHAR_SIZE = 2;$/;"	f	class:TestView.Grid
CHECK_ERROR	opengl/libs/EGL/trace.cpp	409;"	d	file:
CHECK_ERROR	opengl/libs/EGL/trace.cpp	454;"	d	file:
CHECK_INTERFACE	include/binder/IInterface.h	107;"	d
CHECK_OFFSET	libs/input/tests/StructLayout_test.cpp	22;"	d	file:
CHECK_OPERATION_TRANSACTION	include/binder/IAppOpsService.h	/^        CHECK_OPERATION_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::IAppOpsService::__anon199
CHECK_PERMISSION_TRANSACTION	include/binder/IPermissionController.h	/^        CHECK_PERMISSION_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION$/;"	e	enum:android::IPermissionController::__anon204
CHECK_SERVICE_TRANSACTION	include/binder/IServiceManager.h	/^        CHECK_SERVICE_TRANSACTION,$/;"	e	enum:android::IServiceManager::__anon208
CLEAR_ANIMATION_FRAME_STATS	include/gui/ISurfaceComposer.h	/^        CLEAR_ANIMATION_FRAME_STATS,$/;"	e	enum:android::BnSurfaceComposer::__anon137
CLEAR_LAYER_FRAME_STATS	libs/gui/ISurfaceComposerClient.cpp	/^    CLEAR_LAYER_FRAME_STATS,$/;"	e	enum:android::__anon249	file:
CLIP_ALL	opengl/libagl/context.h	/^        CLIP_ALL        = 0x3F3F,$/;"	e	enum:android::gl::vertex_t::__anon220
CLIP_B	opengl/libagl/context.h	/^        CLIP_B          = 0x0004,$/;"	e	enum:android::gl::vertex_t::__anon220
CLIP_F	opengl/libagl/context.h	/^        CLIP_F          = 0x0020,$/;"	e	enum:android::gl::vertex_t::__anon220
CLIP_L	opengl/libagl/context.h	/^        CLIP_L          = 0x0001,   \/\/ clipping flags$/;"	e	enum:android::gl::vertex_t::__anon220
CLIP_N	opengl/libagl/context.h	/^        CLIP_N          = 0x0010,$/;"	e	enum:android::gl::vertex_t::__anon220
CLIP_R	opengl/libagl/context.h	/^        CLIP_R          = 0x0002,$/;"	e	enum:android::gl::vertex_t::__anon220
CLIP_T	opengl/libagl/context.h	/^        CLIP_T          = 0x0008,$/;"	e	enum:android::gl::vertex_t::__anon220
CLOSED	services/surfaceflinger/Barrier.h	/^    enum { OPENED, CLOSED };$/;"	e	enum:android::Barrier::__anon14
CMD_START_FRAMEWORK	opengl/tests/hwc/hwcColorEquiv.cpp	115;"	d	file:
CMD_START_FRAMEWORK	opengl/tests/hwc/hwcCommit.cpp	157;"	d	file:
CMD_START_FRAMEWORK	opengl/tests/hwc/hwcRects.cpp	137;"	d	file:
CMD_START_FRAMEWORK	opengl/tests/hwc/hwcStress.cpp	162;"	d	file:
CMD_STOP_FRAMEWORK	opengl/tests/hwc/hwcColorEquiv.cpp	114;"	d	file:
CMD_STOP_FRAMEWORK	opengl/tests/hwc/hwcCommit.cpp	156;"	d	file:
CMD_STOP_FRAMEWORK	opengl/tests/hwc/hwcRects.cpp	136;"	d	file:
CMD_STOP_FRAMEWORK	opengl/tests/hwc/hwcStress.cpp	161;"	d	file:
CODE_CACHE_DIR_POSTFIX	cmds/installd/installd.h	62;"	d
COLOR_MATRIX_MASK	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            COLOR_MATRIX_MASK       =       0x00000020,$/;"	e	enum:android::ProgramCache::Key::__anon33
COLOR_MATRIX_OFF	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            COLOR_MATRIX_OFF        =       0x00000000,$/;"	e	enum:android::ProgramCache::Key::__anon33
COLOR_MATRIX_ON	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            COLOR_MATRIX_ON         =       0x00000020,$/;"	e	enum:android::ProgramCache::Key::__anon33
COLS	services/sensorservice/mat.h	/^    enum { ROWS = R, COLS = 1 };$/;"	e	enum:android::mat::__anon51
COLS	services/sensorservice/mat.h	/^    enum { ROWS = R, COLS = C };$/;"	e	enum:android::mat::__anon50
COL_SIZE	include/ui/mat4.h	/^    enum { COL_SIZE = col_type::SIZE };$/;"	e	enum:android::tmat44::__anon87
COMPONENT_YUV	libs/ui/PixelFormat.cpp	/^static const int COMPONENT_YUV = 0xFF;$/;"	m	namespace:android	file:
COMPOSITION_GLES	services/surfaceflinger/DisplayHardware/DisplaySurface.h	/^        COMPOSITION_GLES    = 1,$/;"	e	enum:android::DisplaySurface::CompositionType
COMPOSITION_HWC	services/surfaceflinger/DisplayHardware/DisplaySurface.h	/^        COMPOSITION_HWC     = 2,$/;"	e	enum:android::DisplaySurface::CompositionType
COMPOSITION_MIXED	services/surfaceflinger/DisplayHardware/DisplaySurface.h	/^        COMPOSITION_MIXED   = COMPOSITION_GLES | COMPOSITION_HWC$/;"	e	enum:android::DisplaySurface::CompositionType
COMPOSITION_UNKNOWN	services/surfaceflinger/DisplayHardware/DisplaySurface.h	/^        COMPOSITION_UNKNOWN = 0,$/;"	e	enum:android::DisplaySurface::CompositionType
CONFIGURATION_FILE_DIR	libs/input/InputDevice.cpp	/^static const char* CONFIGURATION_FILE_DIR[] = {$/;"	m	namespace:android	file:
CONFIGURATION_FILE_EXTENSION	libs/input/InputDevice.cpp	/^static const char* CONFIGURATION_FILE_EXTENSION[] = {$/;"	m	namespace:android	file:
CONNECT	libs/gui/IGraphicBufferProducer.cpp	/^    CONNECT,$/;"	e	enum:android::__anon248	file:
CONNECT_DISPLAY	include/gui/ISurfaceComposer.h	/^        CONNECT_DISPLAY,$/;"	e	enum:android::BnSurfaceComposer::__anon137
CONST	opengl/libagl/fp.h	/^        GLfloat fixedToFloat(GLfixed) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^        float   cosinef(GLfloat x) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^        float   sinef(GLfloat x) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline GLfloat  absf(GLfloat v) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline GLfloat  addExpf(GLfloat v, int e) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline GLfloat  clampToZerof(GLfloat) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline GLfloat  div2f(GLfloat v) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline GLfloat  mul2f(GLfloat v) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline GLfloat  reciprocalf(GLfloat) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline GLfloat  rsqrtf(GLfloat) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline GLfloat  sqrf(GLfloat) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline bool     cmpf(GLfloat a, GLfloat b) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline bool     isOnef(GLfloat) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline bool     isZerof(GLfloat) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline int      exponent(GLfloat) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline int      isZeroOrNegativef(GLfloat) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/fp.h	/^inline int32_t  mantissa(GLfloat) CONST;$/;"	m	namespace:android::gl
CONST	opengl/libagl/light.cpp	/^static inline int32_t clampF(GLfixed f) CONST;$/;"	m	namespace:android	file:
CONST	opengl/libagl/primitives.cpp	/^static inline int32_t clampZ(GLfixed z) CONST;$/;"	m	namespace:android	file:
CONSUMER_CONNECT	libs/gui/IGraphicBufferConsumer.cpp	/^    CONSUMER_CONNECT,$/;"	e	enum:android::__anon261	file:
CONSUMER_DISCONNECT	libs/gui/IGraphicBufferConsumer.cpp	/^    CONSUMER_DISCONNECT,$/;"	e	enum:android::__anon261	file:
COVERAGE_CALIBRATION_BOX	services/inputflinger/InputReader.h	/^            COVERAGE_CALIBRATION_BOX,$/;"	e	enum:android::TouchInputMapper::Calibration::CoverageCalibration
COVERAGE_CALIBRATION_DEFAULT	services/inputflinger/InputReader.h	/^            COVERAGE_CALIBRATION_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::CoverageCalibration
COVERAGE_CALIBRATION_NONE	services/inputflinger/InputReader.h	/^            COVERAGE_CALIBRATION_NONE,$/;"	e	enum:android::TouchInputMapper::Calibration::CoverageCalibration
COutputGenerator	opengl/tools/glgen2/registry/reg.py	/^class COutputGenerator(OutputGenerator):$/;"	c
CPU_CONSUMER_TEST_FORMAT_RAW	libs/gui/tests/CpuConsumer_test.cpp	36;"	d	file:
CPU_CONSUMER_TEST_FORMAT_RGBA_8888	libs/gui/tests/CpuConsumer_test.cpp	39;"	d	file:
CPU_CONSUMER_TEST_FORMAT_Y16	libs/gui/tests/CpuConsumer_test.cpp	38;"	d	file:
CPU_CONSUMER_TEST_FORMAT_Y8	libs/gui/tests/CpuConsumer_test.cpp	37;"	d	file:
CP_ACCESSTYPE	include/media/openmax/OMX_ContentPipe.h	/^typedef enum CP_ACCESSTYPE {$/;"	g
CP_ACCESSTYPE	include/media/openmax/OMX_ContentPipe.h	/^} CP_ACCESSTYPE;$/;"	t	typeref:enum:CP_ACCESSTYPE
CP_AccessKhronosExtensions	include/media/openmax/OMX_ContentPipe.h	/^    CP_AccessKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:CP_ACCESSTYPE
CP_AccessMax	include/media/openmax/OMX_ContentPipe.h	/^    CP_AccessMax = 0X7FFFFFFF$/;"	e	enum:CP_ACCESSTYPE
CP_AccessRead	include/media/openmax/OMX_ContentPipe.h	/^    CP_AccessRead,$/;"	e	enum:CP_ACCESSTYPE
CP_AccessReadWrite	include/media/openmax/OMX_ContentPipe.h	/^    CP_AccessReadWrite,$/;"	e	enum:CP_ACCESSTYPE
CP_AccessVendorStartUnused	include/media/openmax/OMX_ContentPipe.h	/^    CP_AccessVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_ACCESSTYPE
CP_AccessWrite	include/media/openmax/OMX_ContentPipe.h	/^    CP_AccessWrite,$/;"	e	enum:CP_ACCESSTYPE
CP_BytesAvailable	include/media/openmax/OMX_ContentPipe.h	/^    CP_BytesAvailable,                      \/** bytes requested in a CheckAvailableBytes call are now available*\/$/;"	e	enum:CP_EVENTTYPE
CP_CHECKBYTESRESULTTYPE	include/media/openmax/OMX_ContentPipe.h	/^typedef enum CP_CHECKBYTESRESULTTYPE$/;"	g
CP_CHECKBYTESRESULTTYPE	include/media/openmax/OMX_ContentPipe.h	/^} CP_CHECKBYTESRESULTTYPE;$/;"	t	typeref:enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesAtEndOfStream	include/media/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesAtEndOfStream,         \/**< The pipe has reached the end of stream$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesInsufficientBytes	include/media/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesInsufficientBytes,     \/**< The pipe has retrieved all bytes$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesKhronosExtensions	include/media/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesMax	include/media/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesMax = 0X7FFFFFFF$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesNotReady	include/media/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesNotReady,              \/**< The pipe is still retrieving bytes$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesOk	include/media/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesOk,                    \/**< There are at least the request number$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesOutOfBuffers	include/media/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesOutOfBuffers,          \/**< All read\/write buffers are currently in use. *\/$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_CheckBytesVendorStartUnused	include/media/openmax/OMX_ContentPipe.h	/^    CP_CheckBytesVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_CHECKBYTESRESULTTYPE
CP_EVENTTYPE	include/media/openmax/OMX_ContentPipe.h	/^typedef enum CP_EVENTTYPE{$/;"	g
CP_EVENTTYPE	include/media/openmax/OMX_ContentPipe.h	/^} CP_EVENTTYPE;$/;"	t	typeref:enum:CP_EVENTTYPE
CP_EventKhronosExtensions	include/media/openmax/OMX_ContentPipe.h	/^    CP_EventKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:CP_EVENTTYPE
CP_EventMax	include/media/openmax/OMX_ContentPipe.h	/^    CP_EventMax = 0X7FFFFFFF$/;"	e	enum:CP_EVENTTYPE
CP_EventVendorStartUnused	include/media/openmax/OMX_ContentPipe.h	/^    CP_EventVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_EVENTTYPE
CP_ORIGINTYPE	include/media/openmax/OMX_ContentPipe.h	/^typedef enum CP_ORIGINTYPE {$/;"	g
CP_ORIGINTYPE	include/media/openmax/OMX_ContentPipe.h	/^} CP_ORIGINTYPE;$/;"	t	typeref:enum:CP_ORIGINTYPE
CP_OriginBegin	include/media/openmax/OMX_ContentPipe.h	/^    CP_OriginBegin,$/;"	e	enum:CP_ORIGINTYPE
CP_OriginCur	include/media/openmax/OMX_ContentPipe.h	/^    CP_OriginCur,$/;"	e	enum:CP_ORIGINTYPE
CP_OriginEnd	include/media/openmax/OMX_ContentPipe.h	/^    CP_OriginEnd,$/;"	e	enum:CP_ORIGINTYPE
CP_OriginKhronosExtensions	include/media/openmax/OMX_ContentPipe.h	/^    CP_OriginKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:CP_ORIGINTYPE
CP_OriginMax	include/media/openmax/OMX_ContentPipe.h	/^    CP_OriginMax = 0X7FFFFFFF$/;"	e	enum:CP_ORIGINTYPE
CP_OriginVendorStartUnused	include/media/openmax/OMX_ContentPipe.h	/^    CP_OriginVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:CP_ORIGINTYPE
CP_Overflow	include/media/openmax/OMX_ContentPipe.h	/^    CP_Overflow,                            \/** enumeration of content pipe events sent to the client callback*\/$/;"	e	enum:CP_EVENTTYPE
CP_PIPETYPE	include/media/openmax/OMX_ContentPipe.h	/^typedef struct CP_PIPETYPE$/;"	s
CP_PIPETYPE	include/media/openmax/OMX_ContentPipe.h	/^} CP_PIPETYPE;$/;"	t	typeref:struct:CP_PIPETYPE
CP_PipeDisconnected	include/media/openmax/OMX_ContentPipe.h	/^    CP_PipeDisconnected,                    \/** enumeration of content pipe events sent to the client callback*\/$/;"	e	enum:CP_EVENTTYPE
CPbool	include/media/openmax/OMX_ContentPipe.h	/^typedef OMX_BOOL   CPbool;$/;"	t
CPbyte	include/media/openmax/OMX_ContentPipe.h	/^typedef char       CPbyte;$/;"	t
CPhandle	include/media/openmax/OMX_ContentPipe.h	/^typedef void *     CPhandle;$/;"	t
CPint	include/media/openmax/OMX_ContentPipe.h	/^typedef OMX_S32    CPint;$/;"	t
CPresult	include/media/openmax/OMX_ContentPipe.h	/^typedef OMX_U32    CPresult;$/;"	t
CPstring	include/media/openmax/OMX_ContentPipe.h	/^typedef char *     CPstring;$/;"	t
CPuint	include/media/openmax/OMX_ContentPipe.h	/^typedef OMX_U32    CPuint;$/;"	t
CREATE_CONNECTION	include/gui/ISurfaceComposer.h	/^        CREATE_CONNECTION,$/;"	e	enum:android::BnSurfaceComposer::__anon137
CREATE_DISPLAY	include/gui/ISurfaceComposer.h	/^        CREATE_DISPLAY,$/;"	e	enum:android::BnSurfaceComposer::__anon137
CREATE_DISPLAY_EVENT_CONNECTION	include/gui/ISurfaceComposer.h	/^        CREATE_DISPLAY_EVENT_CONNECTION,$/;"	e	enum:android::BnSurfaceComposer::__anon137
CREATE_GRAPHIC_BUFFER	libs/gui/IGraphicBufferAlloc.cpp	/^    CREATE_GRAPHIC_BUFFER = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon262	file:
CREATE_GRAPHIC_BUFFER_ALLOC	include/gui/ISurfaceComposer.h	/^        CREATE_GRAPHIC_BUFFER_ALLOC,$/;"	e	enum:android::BnSurfaceComposer::__anon137
CREATE_SENSOR_EVENT_CONNECTION	libs/gui/ISensorServer.cpp	/^    CREATE_SENSOR_EVENT_CONNECTION,$/;"	e	enum:android::__anon251	file:
CREATE_SURFACE	libs/gui/ISurfaceComposerClient.cpp	/^    CREATE_SURFACE = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon249	file:
CROP_EXT_STR	libs/gui/GLConsumer.cpp	45;"	d	file:
CRYPTO_API_H_	include/media/hardware/CryptoAPI.h	21;"	d
CType	opengl/tools/glgen/src/CType.java	/^    public CType() {$/;"	m	class:CType
CType	opengl/tools/glgen/src/CType.java	/^    public CType(String baseType) {$/;"	m	class:CType
CType	opengl/tools/glgen/src/CType.java	/^    public CType(String baseType, boolean isConst, boolean isPointer) {$/;"	m	class:CType
CType	opengl/tools/glgen/src/CType.java	/^public class CType {$/;"	c
CURRENTLY_BOUND_FB	opengl/libs/GLES_trace/src/gltrace_context.h	/^enum FBBinding {CURRENTLY_BOUND_FB, FB0};$/;"	e	enum:android::gltrace::FBBinding
CYAN	services/surfaceflinger/Colorizer.h	/^        CYAN    = 36,$/;"	e	enum:android::Colorizer::color
Calibration	services/inputflinger/InputReader.h	/^    struct Calibration {$/;"	s	class:android::TouchInputMapper
Callback	services/surfaceflinger/DispSync.h	/^    class Callback: public virtual RefBase {$/;"	c	class:android::DispSync
Callback	services/surfaceflinger/EventThread.h	/^    class Callback: public virtual RefBase {$/;"	c	class:android::VSyncSource
CallbackInvocation	services/surfaceflinger/DispSync.cpp	/^    struct CallbackInvocation {$/;"	s	class:android::DispSyncThread	file:
CamGLSurfaceView	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public CamGLSurfaceView(Context context) {$/;"	m	class:CamGLSurfaceView
CamGLSurfaceView	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^class CamGLSurfaceView extends GLSurfaceView implements SensorEventListener {$/;"	c
CamRenderer	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public CamRenderer(Context context) {$/;"	m	class:CamRenderer
CamRenderer	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^class CamRenderer implements GLSurfaceView.Renderer, SurfaceTexture.OnFrameAvailableListener {$/;"	c
CancelationOptions	services/inputflinger/InputDispatcher.h	/^        CancelationOptions(Mode mode, const char* reason) :$/;"	f	struct:android::InputDispatcher::CancelationOptions
CancelationOptions	services/inputflinger/InputDispatcher.h	/^    struct CancelationOptions {$/;"	s	class:android::InputDispatcher
CheckAvailableBytes	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*CheckAvailableBytes)( CPhandle hContent, CPuint nBytesRequested, CP_CHECKBYTESRESULTTYPE *eResult );$/;"	m	struct:CP_PIPETYPE
CheckTypeAndMergeFrom	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage::CheckTypeAndMergeFrom($/;"	f	class:android::gltrace::GLMessage
CheckTypeAndMergeFrom	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_DataType::CheckTypeAndMergeFrom($/;"	f	class:android::gltrace::GLMessage_DataType
CheckTypeAndMergeFrom	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_FrameBuffer::CheckTypeAndMergeFrom($/;"	f	class:android::gltrace::GLMessage_FrameBuffer
Clear	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage::Clear() {$/;"	f	class:android::gltrace::GLMessage
Clear	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_DataType::Clear() {$/;"	f	class:android::gltrace::GLMessage_DataType
Clear	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_FrameBuffer::Clear() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
ClearActivity	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^public class ClearActivity extends Activity {$/;"	c
ClearGLSurfaceView	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    public ClearGLSurfaceView(Context context) {$/;"	m	class:ClearGLSurfaceView
ClearGLSurfaceView	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^class ClearGLSurfaceView extends GLSurfaceView {$/;"	c
ClearRenderer	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    public ClearRenderer() {$/;"	m	class:ClearRenderer
ClearRenderer	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^class ClearRenderer implements GLSurfaceView.Renderer {$/;"	c
Client	services/surfaceflinger/Client.cpp	/^Client::Client(const sp<SurfaceFlinger>& flinger)$/;"	f	class:android::Client
Client	services/surfaceflinger/Client.h	/^class Client : public BnSurfaceComposerClient$/;"	c	namespace:android
Close	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*Close)( CPhandle hContent );$/;"	m	struct:CP_PIPETYPE
CmdInfo	opengl/tools/glgen2/registry/reg.py	/^class CmdInfo(BaseInfo):$/;"	c
CodeEmitter	opengl/tools/glgen/src/CodeEmitter.java	/^public interface CodeEmitter {$/;"	i
ColorBlindnessTypes	services/surfaceflinger/Effects/Daltonizer.h	/^    enum ColorBlindnessTypes {$/;"	g	class:android::Daltonizer
ColorFract	opengl/tests/hwc/hwcTestLib.h	/^    ColorFract(): _c1(0.0), _c2(0.0), _c3(0.0) {};$/;"	f	class:ColorFract
ColorFract	opengl/tests/hwc/hwcTestLib.h	/^    ColorFract(float c1, float c2, float c3): _c1(c1), _c2(c2), _c3(c3) {};$/;"	f	class:ColorFract
ColorFract	opengl/tests/hwc/hwcTestLib.h	/^class ColorFract {$/;"	c
ColorRGB	opengl/tests/hwc/hwcTestLib.h	/^    ColorRGB(): _r(0.0), _g(0.0), _b(0.0) {};$/;"	f	class:ColorRGB
ColorRGB	opengl/tests/hwc/hwcTestLib.h	/^    ColorRGB(float f): _r(f), _g(f), _b(f) {}; \/\/ Gray$/;"	f	class:ColorRGB
ColorRGB	opengl/tests/hwc/hwcTestLib.h	/^    ColorRGB(float r, float g, float b): _r(r), _g(g), _b(b) {};$/;"	f	class:ColorRGB
ColorRGB	opengl/tests/hwc/hwcTestLib.h	/^class ColorRGB {$/;"	c
Colorizer	services/surfaceflinger/Colorizer.h	/^    Colorizer(bool enabled)$/;"	f	class:android::Colorizer
Colorizer	services/surfaceflinger/Colorizer.h	/^class Colorizer {$/;"	c	namespace:android
Command	services/inputflinger/InputDispatcher.h	/^    typedef void (InputDispatcher::*Command)(CommandEntry* commandEntry);$/;"	t	class:android::InputDispatcher
CommandEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::CommandEntry::CommandEntry(Command command) :$/;"	f	class:android::InputDispatcher::CommandEntry
CommandEntry	services/inputflinger/InputDispatcher.h	/^    struct CommandEntry : Link<CommandEntry> {$/;"	s	class:android::InputDispatcher
CompMap	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        CompMap () {$/;"	f	struct:android::HWComposer::CompMap
CompMap	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    struct CompMap {$/;"	s	class:android::HWComposer
ComponentDeInit	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentDeInit)($/;"	m	struct:OMX_COMPONENTTYPE
ComponentRoleEnum	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentRoleEnum)($/;"	m	struct:OMX_COMPONENTTYPE
ComponentTunnelRequest	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*ComponentTunnelRequest)($/;"	m	struct:OMX_COMPONENTTYPE
Composer	cmds/flatland/Flatland.h	/^class Composer {$/;"	c	namespace:android
Composer	libs/gui/SurfaceComposerClient.cpp	/^    Composer() : Singleton<Composer>(),$/;"	f	class:android::Composer	file:
Composer	libs/gui/SurfaceComposerClient.cpp	/^class Composer : public Singleton<Composer>$/;"	c	namespace:android	file:
ComposerBase	cmds/flatland/Composers.cpp	/^class ComposerBase : public Composer {$/;"	c	namespace:android	file:
ComposerService	include/private/gui/ComposerService.h	/^class ComposerService : public Singleton<ComposerService>$/;"	c	namespace:android
ComposerService	libs/gui/SurfaceComposerClient.cpp	/^ComposerService::ComposerService()$/;"	f	class:android::ComposerService
ComposerState	include/private/gui/LayerState.h	/^struct ComposerState {$/;"	s	namespace:android
CompositionType	services/surfaceflinger/DisplayHardware/DisplaySurface.h	/^    enum CompositionType {$/;"	g	class:android::DisplaySurface
ConfigChooser	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        public ConfigChooser(int r, int g, int b, int a, int depth, int stencil) {$/;"	m	class:GL2JNIView.ConfigChooser
ConfigChooser	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^    private static class ConfigChooser implements GLSurfaceView.EGLConfigChooser {$/;"	c	class:GL2JNIView
ConfigChooser	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        public ConfigChooser(int r, int g, int b, int a, int depth, int stencil) {$/;"	m	class:GLPerfView.ConfigChooser
ConfigChooser	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^    private static class ConfigChooser implements GLSurfaceView.EGLConfigChooser {$/;"	c	class:GLPerfView
ConfigChooser	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        public ConfigChooser(int r, int g, int b, int a, int depth, int stencil) {$/;"	m	class:GLDualGL2View.ConfigChooser
ConfigChooser	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^    private static class ConfigChooser implements GLSurfaceView.EGLConfigChooser {$/;"	c	class:GLDualGL2View
ConfigurationChangedEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::ConfigurationChangedEntry::ConfigurationChangedEntry(nsecs_t eventTime) :$/;"	f	class:android::InputDispatcher::ConfigurationChangedEntry
ConfigurationChangedEntry	services/inputflinger/InputDispatcher.h	/^    struct ConfigurationChangedEntry : EventEntry {$/;"	s	class:android::InputDispatcher
ConfigureVideoTunnelModeParams	include/media/hardware/HardwareAPI.h	/^struct ConfigureVideoTunnelModeParams {$/;"	s	namespace:android
ConnectProducer	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    void ConnectProducer() {$/;"	f	class:android::IGraphicBufferProducerTest
Connection	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::Connection::Connection(const sp<InputChannel>& inputChannel,$/;"	f	class:android::InputDispatcher::Connection
Connection	services/inputflinger/InputDispatcher.h	/^    class Connection : public RefBase {$/;"	c	class:android::InputDispatcher
Connection	services/surfaceflinger/EventThread.cpp	/^EventThread::Connection::Connection($/;"	f	class:android::EventThread::Connection
Connection	services/surfaceflinger/EventThread.h	/^    class Connection : public BnDisplayEventConnection {$/;"	c	class:android::EventThread
ConsumerBase	include/gui/ConsumerBase.h	/^class ConsumerBase : public virtual RefBase,$/;"	c	namespace:android
ConsumerBase	libs/gui/ConsumerBase.cpp	/^ConsumerBase::ConsumerBase(const sp<IGraphicBufferConsumer>& bufferQueue, bool controlledByApp) :$/;"	f	class:android::ConsumerBase
ConsumerListener	include/gui/BufferQueue.h	/^    typedef ::android::ConsumerListener ConsumerListener;$/;"	t	class:android::BufferQueue
ConsumerListener	include/gui/IConsumerListener.h	/^    ConsumerListener() { }$/;"	f	class:android::ConsumerListener
ConsumerListener	include/gui/IConsumerListener.h	/^class ConsumerListener : public virtual RefBase {$/;"	c	namespace:android
ContentsChangedListener	services/surfaceflinger/SurfaceFlingerConsumer.h	/^    struct ContentsChangedListener: public FrameAvailableListener {$/;"	s	class:android::SurfaceFlingerConsumer
ContextFactory	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^    private static class ContextFactory implements GLSurfaceView.EGLContextFactory {$/;"	c	class:GL2JNIView
ContextFactory	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^    private static class ContextFactory implements GLSurfaceView.EGLContextFactory {$/;"	c	class:GLPerfView
ContextFactory	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^    private static class ContextFactory implements GLSurfaceView.EGLContextFactory {$/;"	c	class:GLDualGL2View
ContextImpl	services/inputflinger/InputReader.cpp	/^InputReader::ContextImpl::ContextImpl(InputReader* reader) :$/;"	f	class:android::InputReader::ContextImpl
ContextImpl	services/inputflinger/InputReader.h	/^    class ContextImpl : public InputReaderContext {$/;"	c	class:android::InputReader
ContextRef	opengl/libs/EGL/egl_object.h	/^typedef egl_context_t::Ref  ContextRef;$/;"	t	namespace:android
CookedPointerData	services/inputflinger/InputReader.cpp	/^CookedPointerData::CookedPointerData() {$/;"	f	class:android::CookedPointerData
CookedPointerData	services/inputflinger/InputReader.h	/^struct CookedPointerData {$/;"	s	namespace:android
CopyFrom	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage::CopyFrom(const GLMessage& from) {$/;"	f	class:android::gltrace::GLMessage
CopyFrom	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_DataType::CopyFrom(const GLMessage_DataType& from) {$/;"	f	class:android::gltrace::GLMessage_DataType
CopyFrom	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_FrameBuffer::CopyFrom(const GLMessage_FrameBuffer& from) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
CorrectedGyroSensor	services/sensorservice/CorrectedGyroSensor.cpp	/^CorrectedGyroSensor::CorrectedGyroSensor(sensor_t const* list, size_t count)$/;"	f	class:android::CorrectedGyroSensor
CorrectedGyroSensor	services/sensorservice/CorrectedGyroSensor.h	/^class CorrectedGyroSensor : public SensorInterface {$/;"	c	namespace:android
CountedAllocator	libs/gui/tests/StreamSplitter_test.cpp	/^    CountedAllocator() : mAllocCount(0) {$/;"	f	class:android::CountedAllocator
CountedAllocator	libs/gui/tests/StreamSplitter_test.cpp	/^class CountedAllocator : public BnGraphicBufferAlloc {$/;"	c	namespace:android	file:
Covariance	services/sensorservice/Fusion.cpp	/^    Covariance() : mSumXX(0.0f), mSumX(0.0f), mN(0) { }$/;"	f	class:android::Covariance
Covariance	services/sensorservice/Fusion.cpp	/^class Covariance {$/;"	c	namespace:android	file:
CoverageCalibration	services/inputflinger/InputReader.h	/^        enum CoverageCalibration {$/;"	g	struct:android::TouchInputMapper::Calibration
CpuConsumer	include/gui/CpuConsumer.h	/^class CpuConsumer : public ConsumerBase$/;"	c	namespace:android
CpuConsumer	libs/gui/CpuConsumer.cpp	/^CpuConsumer::CpuConsumer(const sp<IGraphicBufferConsumer>& bq,$/;"	f	class:android::CpuConsumer
CpuConsumerTest	libs/gui/tests/CpuConsumer_test.cpp	/^class CpuConsumerTest : public ::testing::TestWithParam<CpuConsumerTestParams> {$/;"	c	namespace:android	file:
CpuConsumerTestParams	libs/gui/tests/CpuConsumer_test.cpp	/^struct CpuConsumerTestParams {$/;"	s	namespace:android	file:
Create	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*Create)( CPhandle *hContent, CPstring szURI );$/;"	m	struct:CP_PIPETYPE
CreateBufferInput	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    static IGraphicBufferProducer::QueueBufferInput CreateBufferInput() {$/;"	f	class:android::IGraphicBufferProducerTest
CryptoFactory	include/media/hardware/CryptoAPI.h	/^    CryptoFactory() {}$/;"	f	struct:android::CryptoFactory
CryptoFactory	include/media/hardware/CryptoAPI.h	/^struct CryptoFactory {$/;"	s	namespace:android
CryptoPlugin	include/media/hardware/CryptoAPI.h	/^    CryptoPlugin() {}$/;"	f	struct:android::CryptoPlugin
CryptoPlugin	include/media/hardware/CryptoAPI.h	/^struct CryptoPlugin {$/;"	s	namespace:android
CurrentVirtualKeyState	services/inputflinger/InputReader.h	/^    struct CurrentVirtualKeyState {$/;"	s	class:android::TouchInputMapper
CursorButtonAccumulator	services/inputflinger/InputReader.cpp	/^CursorButtonAccumulator::CursorButtonAccumulator() {$/;"	f	class:android::CursorButtonAccumulator
CursorButtonAccumulator	services/inputflinger/InputReader.h	/^class CursorButtonAccumulator {$/;"	c	namespace:android
CursorInputMapper	services/inputflinger/InputReader.cpp	/^CursorInputMapper::CursorInputMapper(InputDevice* device) :$/;"	f	class:android::CursorInputMapper
CursorInputMapper	services/inputflinger/InputReader.h	/^class CursorInputMapper : public InputMapper {$/;"	c	namespace:android
CursorInputMapperTest	services/inputflinger/tests/InputReader_test.cpp	/^class CursorInputMapperTest : public InputMapperTest {$/;"	c	namespace:android	file:
CursorMotionAccumulator	services/inputflinger/InputReader.cpp	/^CursorMotionAccumulator::CursorMotionAccumulator() {$/;"	f	class:android::CursorMotionAccumulator
CursorMotionAccumulator	services/inputflinger/InputReader.h	/^class CursorMotionAccumulator {$/;"	c	namespace:android
CursorScrollAccumulator	services/inputflinger/InputReader.cpp	/^CursorScrollAccumulator::CursorScrollAccumulator() :$/;"	f	class:android::CursorScrollAccumulator
CursorScrollAccumulator	services/inputflinger/InputReader.h	/^class CursorScrollAccumulator {$/;"	c	namespace:android
DALVIK_CACHE_POSTFIX	cmds/installd/installd.h	76;"	d
DALVIK_CACHE_PREFIX	cmds/installd/installd.h	75;"	d
DBG_STATE_BEGUN	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^        DBG_STATE_BEGUN,$/;"	e	enum:android::VirtualDisplaySurface::DbgState
DBG_STATE_GLES	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^        DBG_STATE_GLES,$/;"	e	enum:android::VirtualDisplaySurface::DbgState
DBG_STATE_GLES_DONE	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^        DBG_STATE_GLES_DONE,$/;"	e	enum:android::VirtualDisplaySurface::DbgState
DBG_STATE_HWC	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^        DBG_STATE_HWC,$/;"	e	enum:android::VirtualDisplaySurface::DbgState
DBG_STATE_IDLE	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^        DBG_STATE_IDLE,$/;"	e	enum:android::VirtualDisplaySurface::DbgState
DBG_STATE_PREPARED	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^        DBG_STATE_PREPARED,$/;"	e	enum:android::VirtualDisplaySurface::DbgState
DEBUG_ACCELERATION	libs/input/VelocityControl.cpp	21;"	d	file:
DEBUG_APP_SWITCH	services/inputflinger/InputDispatcher.cpp	41;"	d	file:
DEBUG_CHANNEL_LIFECYCLE	libs/input/InputTransport.cpp	14;"	d	file:
DEBUG_CHANNEL_MESSAGES	libs/input/InputTransport.cpp	11;"	d	file:
DEBUG_CONNECTIONS	services/sensorservice/SensorService.h	42;"	d
DEBUG_DISPATCH_CYCLE	services/inputflinger/InputDispatcher.cpp	29;"	d	file:
DEBUG_FOCUS	services/inputflinger/InputDispatcher.cpp	38;"	d	file:
DEBUG_GESTURES	services/inputflinger/InputReader.cpp	37;"	d	file:
DEBUG_HACKS	services/inputflinger/InputReader.cpp	25;"	d	file:
DEBUG_HOVER	services/inputflinger/InputDispatcher.cpp	44;"	d	file:
DEBUG_INBOUND_EVENT_DETAILS	services/inputflinger/InputDispatcher.cpp	23;"	d	file:
DEBUG_INJECTION	services/inputflinger/InputDispatcher.cpp	35;"	d	file:
DEBUG_MAPPING	libs/input/KeyCharacterMap.cpp	43;"	d	file:
DEBUG_MAPPING	libs/input/KeyLayoutMap.cpp	37;"	d	file:
DEBUG_OUTBOUND_EVENT_DETAILS	services/inputflinger/InputDispatcher.cpp	26;"	d	file:
DEBUG_PARSER	libs/input/KeyCharacterMap.cpp	37;"	d	file:
DEBUG_PARSER	libs/input/KeyLayoutMap.cpp	31;"	d	file:
DEBUG_PARSER	libs/input/VirtualKeyMap.cpp	29;"	d	file:
DEBUG_PARSER_PERFORMANCE	libs/input/KeyCharacterMap.cpp	40;"	d	file:
DEBUG_PARSER_PERFORMANCE	libs/input/KeyLayoutMap.cpp	34;"	d	file:
DEBUG_PARSER_PERFORMANCE	libs/input/VirtualKeyMap.cpp	32;"	d	file:
DEBUG_POINTERS	services/inputflinger/InputReader.cpp	31;"	d	file:
DEBUG_POINTER_ASSIGNMENT	services/inputflinger/InputReader.cpp	34;"	d	file:
DEBUG_RAW_EVENTS	services/inputflinger/InputReader.cpp	22;"	d	file:
DEBUG_REGISTRATION	services/inputflinger/InputDispatcher.cpp	32;"	d	file:
DEBUG_RESAMPLING	libs/input/InputTransport.cpp	20;"	d	file:
DEBUG_RESIZE	services/surfaceflinger/Layer.cpp	54;"	d	file:
DEBUG_SCREENSHOTS	services/surfaceflinger/SurfaceFlinger.cpp	101;"	d	file:
DEBUG_STRATEGY	libs/input/VelocityTracker.cpp	24;"	d	file:
DEBUG_TRANSPORT_ACTIONS	libs/input/InputTransport.cpp	17;"	d	file:
DEBUG_USE_FLOATS	opengl/libagl/fp.h	30;"	d
DEBUG_VELOCITY	libs/input/VelocityTracker.cpp	21;"	d	file:
DEBUG_VIBRATOR	services/inputflinger/InputReader.cpp	40;"	d	file:
DEBUG_VIRTUAL_KEYS	services/inputflinger/InputReader.cpp	28;"	d	file:
DECLARE_META_INTERFACE	include/binder/IInterface.h	74;"	d
DEFAULT_FORMAT	include/gui/Surface.h	/^    enum { DEFAULT_FORMAT = PIXEL_FORMAT_RGBA_8888 };$/;"	e	enum:android::Surface::__anon154
DEFAULT_FORMAT	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    DEFAULT_FORMAT = HAL_PIXEL_FORMAT_RGBA_8888,$/;"	e	enum:__anon254	file:
DEFAULT_HEIGHT	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    DEFAULT_HEIGHT = 1,$/;"	e	enum:__anon254	file:
DEFAULT_INPUT_DISPATCHING_TIMEOUT	services/inputflinger/InputDispatcher.cpp	/^const nsecs_t DEFAULT_INPUT_DISPATCHING_TIMEOUT = 5000 * 1000000LL; \/\/ 5 sec$/;"	m	namespace:android	file:
DEFAULT_MAX_BUFFERS	include/gui/BufferItemConsumer.h	/^    enum { DEFAULT_MAX_BUFFERS = -1 };$/;"	e	enum:android::BufferItemConsumer::__anon147
DEFAULT_SOCKET_BUFFER_SIZE	libs/gui/BitTube.cpp	/^static const size_t DEFAULT_SOCKET_BUFFER_SIZE = 4 * 1024;$/;"	m	namespace:android	file:
DEFAULT_STRATEGY	include/input/VelocityTracker.h	/^    static const char* DEFAULT_STRATEGY;$/;"	m	class:android::VelocityTracker
DEFAULT_STRATEGY	libs/input/VelocityTracker.cpp	/^const char* VelocityTracker::DEFAULT_STRATEGY = "lsq2";$/;"	m	class:android::VelocityTracker	file:
DEFAULT_TRANSFORM_HINT	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    DEFAULT_TRANSFORM_HINT = 0,$/;"	e	enum:__anon254	file:
DEFAULT_USAGE_FLAGS	include/gui/GLConsumer.h	/^    static const uint32_t DEFAULT_USAGE_FLAGS = GraphicBuffer::USAGE_HW_TEXTURE;$/;"	m	class:android::GLConsumer
DEFAULT_WIDTH	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    DEFAULT_WIDTH = 1,$/;"	e	enum:__anon254	file:
DEFINE_AXIS	include/input/InputEventLabels.h	24;"	d
DEFINE_FLAG	include/input/InputEventLabels.h	26;"	d
DEFINE_KEYCODE	include/input/InputEventLabels.h	23;"	d
DEFINE_LED	include/input/InputEventLabels.h	25;"	d
DEQUEUED	include/gui/BufferSlot.h	/^        DEQUEUED = 1,$/;"	e	enum:android::BufferSlot::BufferState
DEQUEUE_BUFFER	libs/gui/IGraphicBufferProducer.cpp	/^    DEQUEUE_BUFFER,$/;"	e	enum:android::__anon248	file:
DESTROY_DISPLAY	include/gui/ISurfaceComposer.h	/^        DESTROY_DISPLAY,$/;"	e	enum:android::BnSurfaceComposer::__anon137
DESTROY_SURFACE	libs/gui/ISurfaceComposerClient.cpp	/^    DESTROY_SURFACE,$/;"	e	enum:android::__anon249	file:
DETACH_BUFFER	libs/gui/IGraphicBufferConsumer.cpp	/^    DETACH_BUFFER,$/;"	e	enum:android::__anon261	file:
DETACH_BUFFER	libs/gui/IGraphicBufferProducer.cpp	/^    DETACH_BUFFER,$/;"	e	enum:android::__anon248	file:
DETACH_NEXT_BUFFER	libs/gui/IGraphicBufferProducer.cpp	/^    DETACH_NEXT_BUFFER,$/;"	e	enum:android::__anon248	file:
DEVICE_ADDED	services/inputflinger/EventHub.h	/^        DEVICE_ADDED = 0x10000000,$/;"	e	enum:android::EventHubInterface::__anon48
DEVICE_CLASSES	services/inputflinger/tests/InputReader_test.cpp	/^    static const uint32_t DEVICE_CLASSES;$/;"	m	class:android::InputDeviceTest	file:
DEVICE_CLASSES	services/inputflinger/tests/InputReader_test.cpp	/^    static const uint32_t DEVICE_CLASSES;$/;"	m	class:android::InputMapperTest	file:
DEVICE_CLASSES	services/inputflinger/tests/InputReader_test.cpp	/^const uint32_t InputDeviceTest::DEVICE_CLASSES = INPUT_DEVICE_CLASS_KEYBOARD$/;"	m	class:android::InputDeviceTest	file:
DEVICE_CLASSES	services/inputflinger/tests/InputReader_test.cpp	/^const uint32_t InputMapperTest::DEVICE_CLASSES = 0; \/\/ not needed for current tests$/;"	m	class:android::InputMapperTest	file:
DEVICE_CONTROLLER_NUMBER	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t DEVICE_CONTROLLER_NUMBER;$/;"	m	class:android::InputDeviceTest	file:
DEVICE_CONTROLLER_NUMBER	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t DEVICE_CONTROLLER_NUMBER;$/;"	m	class:android::InputMapperTest	file:
DEVICE_CONTROLLER_NUMBER	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t InputDeviceTest::DEVICE_CONTROLLER_NUMBER = 0;$/;"	m	class:android::InputDeviceTest	file:
DEVICE_CONTROLLER_NUMBER	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t InputMapperTest::DEVICE_CONTROLLER_NUMBER = 0;$/;"	m	class:android::InputMapperTest	file:
DEVICE_GENERATION	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t DEVICE_GENERATION;$/;"	m	class:android::InputDeviceTest	file:
DEVICE_GENERATION	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t DEVICE_GENERATION;$/;"	m	class:android::InputMapperTest	file:
DEVICE_GENERATION	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t InputDeviceTest::DEVICE_GENERATION = 2;$/;"	m	class:android::InputDeviceTest	file:
DEVICE_GENERATION	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t InputMapperTest::DEVICE_GENERATION = 2;$/;"	m	class:android::InputMapperTest	file:
DEVICE_ID	services/inputflinger/tests/InputDispatcher_test.cpp	/^static const int32_t DEVICE_ID = 1;$/;"	m	namespace:android	file:
DEVICE_ID	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t DEVICE_ID;$/;"	m	class:android::InputDeviceTest	file:
DEVICE_ID	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t DEVICE_ID;$/;"	m	class:android::InputMapperTest	file:
DEVICE_ID	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t InputDeviceTest::DEVICE_ID = 1;$/;"	m	class:android::InputDeviceTest	file:
DEVICE_ID	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t InputMapperTest::DEVICE_ID = 1;$/;"	m	class:android::InputMapperTest	file:
DEVICE_ID_BUILT_IN_KEYBOARD	include/input/Keyboard.h	/^    DEVICE_ID_BUILT_IN_KEYBOARD = 0,$/;"	e	enum:android::__anon110
DEVICE_ID_VIRTUAL_KEYBOARD	include/input/Keyboard.h	/^    DEVICE_ID_VIRTUAL_KEYBOARD = -1,$/;"	e	enum:android::__anon110
DEVICE_MODE_DIRECT	services/inputflinger/InputReader.h	/^        DEVICE_MODE_DIRECT, \/\/ direct mapping (touchscreen)$/;"	e	enum:android::TouchInputMapper::DeviceMode
DEVICE_MODE_DISABLED	services/inputflinger/InputReader.h	/^        DEVICE_MODE_DISABLED, \/\/ input is disabled$/;"	e	enum:android::TouchInputMapper::DeviceMode
DEVICE_MODE_NAVIGATION	services/inputflinger/InputReader.h	/^        DEVICE_MODE_NAVIGATION, \/\/ unscaled mapping with assist gesture (touch navigation)$/;"	e	enum:android::TouchInputMapper::DeviceMode
DEVICE_MODE_POINTER	services/inputflinger/InputReader.h	/^        DEVICE_MODE_POINTER, \/\/ pointer mapping (pointer)$/;"	e	enum:android::TouchInputMapper::DeviceMode
DEVICE_MODE_UNSCALED	services/inputflinger/InputReader.h	/^        DEVICE_MODE_UNSCALED, \/\/ unscaled mapping (touchpad)$/;"	e	enum:android::TouchInputMapper::DeviceMode
DEVICE_NAME	services/inputflinger/tests/InputReader_test.cpp	/^    static const char* DEVICE_NAME;$/;"	m	class:android::InputDeviceTest	file:
DEVICE_NAME	services/inputflinger/tests/InputReader_test.cpp	/^    static const char* DEVICE_NAME;$/;"	m	class:android::InputMapperTest	file:
DEVICE_NAME	services/inputflinger/tests/InputReader_test.cpp	/^const char* InputDeviceTest::DEVICE_NAME = "device";$/;"	m	class:android::InputDeviceTest	file:
DEVICE_NAME	services/inputflinger/tests/InputReader_test.cpp	/^const char* InputMapperTest::DEVICE_NAME = "device";$/;"	m	class:android::InputMapperTest	file:
DEVICE_PATH	services/inputflinger/EventHub.cpp	/^static const char *DEVICE_PATH = "\/dev\/input";$/;"	m	namespace:android	file:
DEVICE_REMOVED	services/inputflinger/EventHub.h	/^        DEVICE_REMOVED = 0x20000000,$/;"	e	enum:android::EventHubInterface::__anon48
DEVICE_TYPE_GESTURE_SENSOR	services/inputflinger/InputReader.h	/^            DEVICE_TYPE_GESTURE_SENSOR,$/;"	e	enum:android::TouchInputMapper::Parameters::DeviceType
DEVICE_TYPE_POINTER	services/inputflinger/InputReader.h	/^            DEVICE_TYPE_POINTER,$/;"	e	enum:android::TouchInputMapper::Parameters::DeviceType
DEVICE_TYPE_TOUCH_NAVIGATION	services/inputflinger/InputReader.h	/^            DEVICE_TYPE_TOUCH_NAVIGATION,$/;"	e	enum:android::TouchInputMapper::Parameters::DeviceType
DEVICE_TYPE_TOUCH_PAD	services/inputflinger/InputReader.h	/^            DEVICE_TYPE_TOUCH_PAD,$/;"	e	enum:android::TouchInputMapper::Parameters::DeviceType
DEVICE_TYPE_TOUCH_SCREEN	services/inputflinger/InputReader.h	/^            DEVICE_TYPE_TOUCH_SCREEN,$/;"	e	enum:android::TouchInputMapper::Parameters::DeviceType
DIR	cmds/ip-up-vpn/ip-up-vpn.c	34;"	d	file:
DISABLE_ASYNC_BUFFER	libs/gui/IGraphicBufferConsumer.cpp	/^    DISABLE_ASYNC_BUFFER,$/;"	e	enum:android::__anon261	file:
DISCONNECT	libs/gui/IGraphicBufferProducer.cpp	/^    DISCONNECT,$/;"	e	enum:android::__anon248	file:
DISPLAY_ATTRIBUTES	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^static const uint32_t DISPLAY_ATTRIBUTES[] = {$/;"	m	namespace:android	file:
DISPLAY_COUNT	services/surfaceflinger/SurfaceFlinger.cpp	94;"	d	file:
DISPLAY_EVENT_HOTPLUG	include/gui/DisplayEventReceiver.h	/^        DISPLAY_EVENT_HOTPLUG = 'plug'$/;"	e	enum:android::DisplayEventReceiver::__anon132
DISPLAY_EVENT_VSYNC	include/gui/DisplayEventReceiver.h	/^        DISPLAY_EVENT_VSYNC = 'vsyn',$/;"	e	enum:android::DisplayEventReceiver::__anon132
DISPLAY_EXTERNAL	services/surfaceflinger/DisplayDevice.h	/^        DISPLAY_EXTERNAL    = HWC_DISPLAY_EXTERNAL,$/;"	e	enum:android::DisplayDevice::DisplayType
DISPLAY_HEIGHT	libs/gui/tests/SRGB_test.cpp	/^        DISPLAY_HEIGHT = 512,$/;"	e	enum:android::SRGBTest::__anon253	file:
DISPLAY_HEIGHT	services/inputflinger/tests/InputReader_test.cpp	/^static const int32_t DISPLAY_HEIGHT = 800;$/;"	m	namespace:android	file:
DISPLAY_ID	services/inputflinger/tests/InputDispatcher_test.cpp	/^static const int32_t DISPLAY_ID = 0;$/;"	m	namespace:android	file:
DISPLAY_ID	services/inputflinger/tests/InputReader_test.cpp	/^static const int32_t DISPLAY_ID = 0;$/;"	m	namespace:android	file:
DISPLAY_ID_INVALID	services/surfaceflinger/DisplayDevice.h	/^        DISPLAY_ID_INVALID = -1,$/;"	e	enum:android::DisplayDevice::DisplayType
DISPLAY_ORIENTATION_0	include/ui/DisplayInfo.h	/^    DISPLAY_ORIENTATION_0 = 0,$/;"	e	enum:android::__anon101
DISPLAY_ORIENTATION_180	include/ui/DisplayInfo.h	/^    DISPLAY_ORIENTATION_180 = 2,$/;"	e	enum:android::__anon101
DISPLAY_ORIENTATION_270	include/ui/DisplayInfo.h	/^    DISPLAY_ORIENTATION_270 = 3$/;"	e	enum:android::__anon101
DISPLAY_ORIENTATION_90	include/ui/DisplayInfo.h	/^    DISPLAY_ORIENTATION_90 = 1,$/;"	e	enum:android::__anon101
DISPLAY_PRIMARY	services/surfaceflinger/DisplayDevice.h	/^        DISPLAY_PRIMARY     = HWC_DISPLAY_PRIMARY,$/;"	e	enum:android::DisplayDevice::DisplayType
DISPLAY_SIZE	libs/gui/tests/SRGB_test.cpp	/^        DISPLAY_SIZE = DISPLAY_WIDTH * DISPLAY_HEIGHT * PIXEL_SIZE,$/;"	e	enum:android::SRGBTest::__anon253	file:
DISPLAY_VIRTUAL	services/surfaceflinger/DisplayDevice.h	/^        DISPLAY_VIRTUAL     = HWC_DISPLAY_VIRTUAL,$/;"	e	enum:android::DisplayDevice::DisplayType
DISPLAY_WIDTH	libs/gui/tests/SRGB_test.cpp	/^        DISPLAY_WIDTH = 512,$/;"	e	enum:android::SRGBTest::__anon253	file:
DISPLAY_WIDTH	services/inputflinger/tests/InputReader_test.cpp	/^static const int32_t DISPLAY_WIDTH = 480;$/;"	m	namespace:android	file:
DISTANCE	services/inputflinger/tests/InputReader_test.cpp	/^        DISTANCE = 1 << 7,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
DISTANCE_CALIBRATION_DEFAULT	services/inputflinger/InputReader.h	/^            DISTANCE_CALIBRATION_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::DistanceCalibration
DISTANCE_CALIBRATION_NONE	services/inputflinger/InputReader.h	/^            DISTANCE_CALIBRATION_NONE,$/;"	e	enum:android::TouchInputMapper::Calibration::DistanceCalibration
DISTANCE_CALIBRATION_SCALED	services/inputflinger/InputReader.h	/^            DISTANCE_CALIBRATION_SCALED,$/;"	e	enum:android::TouchInputMapper::Calibration::DistanceCalibration
DITHER_KERNEL_SIZE	cmds/flatland/GLHelper.h	/^    enum { DITHER_KERNEL_SIZE = 4 };$/;"	e	enum:android::GLHelper::__anon7
DONT_MAP_LOCALLY	include/binder/MemoryHeapBase.h	/^        DONT_MAP_LOCALLY = 0x00000100,$/;"	e	enum:android::MemoryHeapBase::__anon202
DO_	opengl/libs/GLES_trace/src/gltrace.pb.cpp	1717;"	d	file:
DO_	opengl/libs/GLES_trace/src/gltrace.pb.cpp	1885;"	d	file:
DO_	opengl/libs/GLES_trace/src/gltrace.pb.cpp	2128;"	d	file:
DO_	opengl/libs/GLES_trace/src/gltrace.pb.cpp	2190;"	d	file:
DO_	opengl/libs/GLES_trace/src/gltrace.pb.cpp	2377;"	d	file:
DO_	opengl/libs/GLES_trace/src/gltrace.pb.cpp	2518;"	d	file:
DO_FLOAT_TO_FIXED	opengl/libagl/context.h	/^        DO_FLOAT_TO_FIXED   = 0x2$/;"	e	enum:android::gl::matrix_stack_t::__anon227
DO_PICKER	opengl/libagl/context.h	/^        DO_PICKER           = 0x1,$/;"	e	enum:android::gl::matrix_stack_t::__anon227
DRM_API_H_	include/media/drm/DrmAPI.h	18;"	d
DROP_REASON_APP_SWITCH	services/inputflinger/InputDispatcher.h	/^        DROP_REASON_APP_SWITCH = 2,$/;"	e	enum:android::InputDispatcher::DropReason
DROP_REASON_BLOCKED	services/inputflinger/InputDispatcher.h	/^        DROP_REASON_BLOCKED = 4,$/;"	e	enum:android::InputDispatcher::DropReason
DROP_REASON_DISABLED	services/inputflinger/InputDispatcher.h	/^        DROP_REASON_DISABLED = 3,$/;"	e	enum:android::InputDispatcher::DropReason
DROP_REASON_NOT_DROPPED	services/inputflinger/InputDispatcher.h	/^        DROP_REASON_NOT_DROPPED = 0,$/;"	e	enum:android::InputDispatcher::DropReason
DROP_REASON_POLICY	services/inputflinger/InputDispatcher.h	/^        DROP_REASON_POLICY = 1,$/;"	e	enum:android::InputDispatcher::DropReason
DROP_REASON_STALE	services/inputflinger/InputDispatcher.h	/^        DROP_REASON_STALE = 5,$/;"	e	enum:android::InputDispatcher::DropReason
DUMP	libs/gui/IGraphicBufferConsumer.cpp	/^    DUMP,$/;"	e	enum:android::__anon261	file:
DUMP_TRANSACTION	include/binder/IBinder.h	/^        DUMP_TRANSACTION        = B_PACK_CHARS('_','D','M','P'),$/;"	e	enum:android::IBinder::__anon209
DXT1HasAlpha	opengl/libagl/dxt.cpp	/^DXT1HasAlpha(const GLvoid *data, int width, int height) {    $/;"	f	namespace:android
Daltonizer	services/surfaceflinger/Effects/Daltonizer.cpp	/^Daltonizer::Daltonizer() :$/;"	f	class:android::Daltonizer
Daltonizer	services/surfaceflinger/Effects/Daltonizer.h	/^class Daltonizer {$/;"	c	namespace:android
DataType	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  typedef GLMessage_DataType DataType;$/;"	t	class:android::gltrace::GLMessage
DataType	opengl/libs/GLES_trace/tools/genapi.py	/^class DataType:$/;"	c
DbgState	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    enum DbgState {$/;"	g	class:android::VirtualDisplaySurface
DdmConnection	services/surfaceflinger/DdmConnection.h	/^class DdmConnection {$/;"	c	namespace:android
DdmConnection_start	services/surfaceflinger/DdmConnection.cpp	/^void DdmConnection_start(const char* name) {$/;"	f	namespace:android
DeathRecipient	include/binder/IBinder.h	/^    class DeathRecipient : public virtual RefBase$/;"	c	class:android::IBinder
DebugProcKHR	opengl/tools/glgen/stubs/gles11/glDebugMessageCallbackKHR.java	/^    public interface DebugProcKHR {$/;"	i
DelayedTask	libs/input/tests/TestHelpers.h	/^    DelayedTask(int delayMillis) : mDelayMillis(delayMillis) { }$/;"	f	class:android::DelayedTask
DelayedTask	libs/input/tests/TestHelpers.h	/^class DelayedTask : public Thread {$/;"	c	namespace:android
Delta	services/inputflinger/InputReader.h	/^        struct Delta {$/;"	s	struct:android::TouchInputMapper::PointerGesture
DequeueBufferResult	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    struct DequeueBufferResult {$/;"	s	class:android::IGraphicBufferProducerTest	file:
DescribeColorFormatParams	include/media/hardware/HardwareAPI.h	/^struct DescribeColorFormatParams {$/;"	s	namespace:android
Description	services/surfaceflinger/RenderEngine/Description.cpp	/^Description::Description() :$/;"	f	class:android::Description
Description	services/surfaceflinger/RenderEngine/Description.h	/^class Description {$/;"	c	namespace:android
Device	services/inputflinger/EventHub.cpp	/^EventHub::Device::Device(int fd, int32_t id, const String8& path,$/;"	f	class:android::EventHub::Device
Device	services/inputflinger/EventHub.h	/^    struct Device {$/;"	s	class:android::EventHub
Device	services/inputflinger/tests/InputReader_test.cpp	/^        Device(uint32_t classes) :$/;"	f	struct:android::FakeEventHub::Device
Device	services/inputflinger/tests/InputReader_test.cpp	/^    struct Device {$/;"	s	class:android::FakeEventHub	file:
DeviceMode	services/inputflinger/InputReader.h	/^    enum DeviceMode {$/;"	g	class:android::TouchInputMapper
DeviceResetEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::DeviceResetEntry::DeviceResetEntry(nsecs_t eventTime, int32_t deviceId) :$/;"	f	class:android::InputDispatcher::DeviceResetEntry
DeviceResetEntry	services/inputflinger/InputDispatcher.h	/^    struct DeviceResetEntry : EventEntry {$/;"	s	class:android::InputDispatcher
DeviceType	services/inputflinger/InputReader.h	/^        enum DeviceType {$/;"	g	struct:android::TouchInputMapper::Parameters
DisconnectWaiter	libs/gui/tests/CpuConsumer_test.cpp	/^        DisconnectWaiter () :$/;"	f	class:android::CpuConsumerTest::DisconnectWaiter
DisconnectWaiter	libs/gui/tests/CpuConsumer_test.cpp	/^    class DisconnectWaiter : public BufferQueue::ConsumerListener {$/;"	c	class:android::CpuConsumerTest	file:
DisconnectWaiter	libs/gui/tests/DisconnectWaiter.h	/^    DisconnectWaiter () :$/;"	f	class:android::DisconnectWaiter
DisconnectWaiter	libs/gui/tests/DisconnectWaiter.h	/^class DisconnectWaiter : public BnConsumerListener {$/;"	c	namespace:android
DispSync	services/surfaceflinger/DispSync.cpp	/^DispSync::DispSync() :$/;"	f	class:android::DispSync
DispSync	services/surfaceflinger/DispSync.h	/^class DispSync {$/;"	c	namespace:android
DispSyncSource	services/surfaceflinger/SurfaceFlinger.cpp	/^    DispSyncSource(DispSync* dispSync, nsecs_t phaseOffset, bool traceVsync,$/;"	f	class:android::DispSyncSource
DispSyncSource	services/surfaceflinger/SurfaceFlinger.cpp	/^class DispSyncSource : public VSyncSource, private DispSync::Callback {$/;"	c	namespace:android	file:
DispSyncThread	services/surfaceflinger/DispSync.cpp	/^    DispSyncThread():$/;"	f	class:android::DispSyncThread
DispSyncThread	services/surfaceflinger/DispSync.cpp	/^class DispSyncThread: public Thread {$/;"	c	namespace:android	file:
DispatchEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::DispatchEntry::DispatchEntry(EventEntry* eventEntry,$/;"	f	class:android::InputDispatcher::DispatchEntry
DispatchEntry	services/inputflinger/InputDispatcher.h	/^    struct DispatchEntry : Link<DispatchEntry> {$/;"	s	class:android::InputDispatcher
DisplayConfig	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    struct DisplayConfig {$/;"	s	class:android::HWComposer
DisplayData	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^HWComposer::DisplayData::DisplayData()$/;"	f	class:android::HWComposer::DisplayData
DisplayData	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    struct DisplayData {$/;"	s	class:android::HWComposer
DisplayDevice	services/surfaceflinger/DisplayDevice.cpp	/^DisplayDevice::DisplayDevice($/;"	f	class:DisplayDevice
DisplayDevice	services/surfaceflinger/DisplayDevice.h	/^class DisplayDevice : public LightRefBase<DisplayDevice>$/;"	c	namespace:android
DisplayDeviceState	services/surfaceflinger/SurfaceFlinger.cpp	/^SurfaceFlinger::DisplayDeviceState::DisplayDeviceState()$/;"	f	class:android::SurfaceFlinger::DisplayDeviceState
DisplayDeviceState	services/surfaceflinger/SurfaceFlinger.cpp	/^SurfaceFlinger::DisplayDeviceState::DisplayDeviceState(DisplayDevice::DisplayType type)$/;"	f	class:android::SurfaceFlinger::DisplayDeviceState
DisplayDeviceState	services/surfaceflinger/SurfaceFlinger.h	/^    struct DisplayDeviceState {$/;"	s	class:android::SurfaceFlinger
DisplayEventReceiver	include/gui/DisplayEventReceiver.h	/^class DisplayEventReceiver {$/;"	c	namespace:android
DisplayEventReceiver	libs/gui/DisplayEventReceiver.cpp	/^DisplayEventReceiver::DisplayEventReceiver() {$/;"	f	class:android::DisplayEventReceiver
DisplayImpl	opengl/libs/EGL/egl_display.h	/^        DisplayImpl() : dpy(EGL_NO_DISPLAY), state(NOT_INITIALIZED) { }$/;"	f	struct:android::egl_display_t::DisplayImpl
DisplayImpl	opengl/libs/EGL/egl_display.h	/^    struct DisplayImpl {$/;"	s	class:android::egl_display_t
DisplayInfo	include/ui/DisplayInfo.h	/^struct DisplayInfo {$/;"	s	namespace:android
DisplayStatInfo	include/ui/DisplayStatInfo.h	/^struct DisplayStatInfo {$/;"	s	namespace:android
DisplayState	include/private/gui/LayerState.h	/^struct DisplayState {$/;"	s	namespace:android
DisplaySurface	services/surfaceflinger/DisplayHardware/DisplaySurface.h	/^    DisplaySurface() {}$/;"	f	class:android::DisplaySurface
DisplaySurface	services/surfaceflinger/DisplayHardware/DisplaySurface.h	/^class DisplaySurface : public virtual RefBase {$/;"	c	namespace:android
DisplayType	services/surfaceflinger/DisplayDevice.h	/^    enum DisplayType {$/;"	g	class:android::DisplayDevice
DisplayViewport	services/inputflinger/InputReader.h	/^    DisplayViewport() :$/;"	f	struct:android::DisplayViewport
DisplayViewport	services/inputflinger/InputReader.h	/^struct DisplayViewport {$/;"	s	namespace:android
DistanceCalibration	services/inputflinger/InputReader.h	/^        enum DistanceCalibration {$/;"	g	struct:android::TouchInputMapper::Calibration
DrmFactory	include/media/drm/DrmAPI.h	/^        DrmFactory() {}$/;"	f	class:android::DrmFactory
DrmFactory	include/media/drm/DrmAPI.h	/^    class DrmFactory {$/;"	c	namespace:android
DrmPlugin	include/media/drm/DrmAPI.h	/^        DrmPlugin() {}$/;"	f	class:android::DrmPlugin
DrmPlugin	include/media/drm/DrmAPI.h	/^    class DrmPlugin {$/;"	c	namespace:android
DrmPluginListener	include/media/drm/DrmAPI.h	/^    class DrmPluginListener: virtual public RefBase$/;"	c	namespace:android
DropReason	services/inputflinger/InputDispatcher.h	/^    enum DropReason {$/;"	g	class:android::InputDispatcher
DummyConsumer	libs/gui/tests/BufferQueue_test.cpp	/^struct DummyConsumer : public BnConsumerListener {$/;"	s	namespace:android	file:
DummyConsumer	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^struct DummyConsumer : public BnConsumerListener {$/;"	s	namespace:android	file:
DummyListener	libs/gui/tests/StreamSplitter_test.cpp	/^struct DummyListener : public BnConsumerListener {$/;"	s	namespace:android	file:
DummyProducerListener	include/gui/IProducerListener.h	/^class DummyProducerListener : public BnProducerListener$/;"	c	namespace:android
EGL	opengl/libs/EGL/Loader.h	/^        EGL         = 0x01,$/;"	e	enum:android::Loader::__anon241
EGLAPI	opengl/include/EGL/eglplatform.h	50;"	d
EGLAPIENTRY	opengl/include/EGL/eglplatform.h	54;"	d
EGLAPIENTRYP	opengl/include/EGL/eglplatform.h	56;"	d
EGLAttributeVector	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^    EGLAttributeVector() {$/;"	f	class:android::EGLAttributeVector
EGLAttributeVector	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^class EGLAttributeVector {$/;"	c	namespace:android	file:
EGLBoolean	opengl/include/EGL/egl.h	/^typedef unsigned int EGLBoolean;$/;"	t
EGLBoolean	opengl/tests/angeles/include/GLES/egltypes.h	/^typedef int EGLBoolean;$/;"	t
EGLBufferObjectManager	opengl/libagl/BufferObjectManager.cpp	/^EGLBufferObjectManager::EGLBufferObjectManager() $/;"	f	class:android::EGLBufferObjectManager
EGLBufferObjectManager	opengl/libagl/BufferObjectManager.h	/^class EGLBufferObjectManager : public TokenManager$/;"	c	namespace:android
EGLCacheSerializationTest	opengl/tests/EGLTest/egl_cache_test.cpp	/^class EGLCacheSerializationTest : public EGLCacheTest {$/;"	c	namespace:android	file:
EGLCacheTest	opengl/tests/EGLTest/egl_cache_test.cpp	/^class EGLCacheTest : public ::testing::Test {$/;"	c	namespace:android	file:
EGLClientBuffer	opengl/include/EGL/egl.h	/^typedef void *EGLClientBuffer;$/;"	t
EGLClientPixmapHI	opengl/include/EGL/eglext.h	/^struct EGLClientPixmapHI$/;"	s
EGLCodeEmitter	opengl/tools/glgen/src/EGLCodeEmitter.java	/^    public EGLCodeEmitter(String classPathName,$/;"	m	class:EGLCodeEmitter
EGLCodeEmitter	opengl/tools/glgen/src/EGLCodeEmitter.java	/^public class EGLCodeEmitter extends JniCodeEmitter {$/;"	c
EGLConfig	opengl/include/EGL/egl.h	/^typedef void *EGLConfig;$/;"	t
EGLConfig	opengl/tests/angeles/include/GLES/egltypes.h	/^typedef void *EGLConfig;$/;"	t
EGLConfig	opengl/tools/glgen/static/egl/EGLConfig.java	/^    private EGLConfig(long handle) {$/;"	m	class:EGLConfig	file:
EGLConfig	opengl/tools/glgen/static/egl/EGLConfig.java	/^public class EGLConfig extends EGLObjectHandle {$/;"	c
EGLContext	opengl/include/EGL/egl.h	/^typedef void *EGLContext;$/;"	t
EGLContext	opengl/tests/angeles/include/GLES/egltypes.h	/^typedef void *EGLContext;$/;"	t
EGLContext	opengl/tools/glgen/static/egl/EGLContext.java	/^    private EGLContext(long handle) {$/;"	m	class:EGLContext	file:
EGLContext	opengl/tools/glgen/static/egl/EGLContext.java	/^public class EGLContext extends EGLObjectHandle {$/;"	c
EGLDisplay	opengl/include/EGL/egl.h	/^typedef void *EGLDisplay;$/;"	t
EGLDisplay	opengl/tests/angeles/include/GLES/egltypes.h	/^typedef void *EGLDisplay;$/;"	t
EGLDisplay	opengl/tools/glgen/static/egl/EGLDisplay.java	/^    private EGLDisplay(long handle) {$/;"	m	class:EGLDisplay	file:
EGLDisplay	opengl/tools/glgen/static/egl/EGLDisplay.java	/^public class EGLDisplay extends EGLObjectHandle {$/;"	c
EGLFuncPointer	opengl/libs/EGL/egl.cpp	/^typedef __eglMustCastToProperFunctionPointerType EGLFuncPointer;$/;"	t	file:
EGLGetBlobFuncANDROID	opengl/include/EGL/eglext.h	/^typedef EGLsizeiANDROID (*EGLGetBlobFuncANDROID) (const void *key, EGLsizeiANDROID keySize, void *value, EGLsizeiANDROID valueSize);$/;"	t
EGLImageKHR	opengl/include/EGL/eglext.h	/^typedef void *EGLImageKHR;$/;"	t
EGLNativeDisplayType	opengl/include/EGL/eglplatform.h	/^typedef Display *EGLNativeDisplayType;$/;"	t
EGLNativeDisplayType	opengl/include/EGL/eglplatform.h	/^typedef HDC     EGLNativeDisplayType;$/;"	t
EGLNativeDisplayType	opengl/include/EGL/eglplatform.h	/^typedef int   EGLNativeDisplayType;$/;"	t
EGLNativeDisplayType	opengl/include/EGL/eglplatform.h	/^typedef void*                           EGLNativeDisplayType;$/;"	t
EGLNativeFileDescriptorKHR	opengl/include/EGL/eglext.h	/^typedef int EGLNativeFileDescriptorKHR;$/;"	t
EGLNativePixmapType	opengl/include/EGL/eglplatform.h	/^typedef HBITMAP EGLNativePixmapType;$/;"	t
EGLNativePixmapType	opengl/include/EGL/eglplatform.h	/^typedef Pixmap   EGLNativePixmapType;$/;"	t
EGLNativePixmapType	opengl/include/EGL/eglplatform.h	/^typedef struct egl_native_pixmap_t*     EGLNativePixmapType;$/;"	t	typeref:struct:egl_native_pixmap_t
EGLNativePixmapType	opengl/include/EGL/eglplatform.h	/^typedef void *EGLNativePixmapType;$/;"	t
EGLNativeWindowType	opengl/include/EGL/eglplatform.h	/^typedef HWND    EGLNativeWindowType;$/;"	t
EGLNativeWindowType	opengl/include/EGL/eglplatform.h	/^typedef Window   EGLNativeWindowType;$/;"	t
EGLNativeWindowType	opengl/include/EGL/eglplatform.h	/^typedef struct ANativeWindow*           EGLNativeWindowType;$/;"	t	typeref:struct:ANativeWindow
EGLNativeWindowType	opengl/include/EGL/eglplatform.h	/^typedef void *EGLNativeWindowType;$/;"	t
EGLObjectHandle	opengl/tools/glgen/static/egl/EGLObjectHandle.java	/^    protected EGLObjectHandle(int handle) {$/;"	m	class:EGLObjectHandle
EGLObjectHandle	opengl/tools/glgen/static/egl/EGLObjectHandle.java	/^    protected EGLObjectHandle(long handle) {$/;"	m	class:EGLObjectHandle
EGLObjectHandle	opengl/tools/glgen/static/egl/EGLObjectHandle.java	/^public abstract class EGLObjectHandle {$/;"	c
EGLSetBlobFuncANDROID	opengl/include/EGL/eglext.h	/^typedef void (*EGLSetBlobFuncANDROID) (const void *key, EGLsizeiANDROID keySize, const void *value, EGLsizeiANDROID valueSize);$/;"	t
EGLStreamKHR	opengl/include/EGL/eglext.h	/^typedef void* EGLStreamKHR;$/;"	t
EGLSurface	opengl/include/EGL/egl.h	/^typedef void *EGLSurface;$/;"	t
EGLSurface	opengl/tests/angeles/include/GLES/egltypes.h	/^typedef void *EGLSurface;$/;"	t
EGLSurface	opengl/tools/glgen/static/egl/EGLSurface.java	/^    private EGLSurface(long handle) {$/;"	m	class:EGLSurface	file:
EGLSurface	opengl/tools/glgen/static/egl/EGLSurface.java	/^public class EGLSurface extends EGLObjectHandle {$/;"	c
EGLSurfaceManager	opengl/libagl/TextureObjectManager.cpp	/^EGLSurfaceManager::EGLSurfaceManager()$/;"	f	class:android::EGLSurfaceManager
EGLSurfaceManager	opengl/libagl/TextureObjectManager.h	/^class EGLSurfaceManager :$/;"	c	namespace:android
EGLSyncKHR	opengl/include/EGL/eglext.h	/^typedef void* EGLSyncKHR;$/;"	t
EGLSyncNV	opengl/include/EGL/eglext.h	/^typedef void* EGLSyncNV;$/;"	t
EGLTest	opengl/tests/EGLTest/EGL_test.cpp	/^    EGLTest() :$/;"	f	class:android::EGLTest
EGLTest	opengl/tests/EGLTest/EGL_test.cpp	/^class EGLTest : public ::testing::Test {$/;"	c	namespace:android	file:
EGLTextureObject	opengl/libagl/TextureObjectManager.cpp	/^EGLTextureObject::EGLTextureObject()$/;"	f	class:android::EGLTextureObject
EGLTextureObject	opengl/libagl/TextureObjectManager.h	/^class EGLTextureObject : public LightRefBase<EGLTextureObject>$/;"	c	namespace:android
EGLTimeKHR	opengl/include/EGL/eglext.h	/^typedef khronos_utime_nanoseconds_t EGLTimeKHR;$/;"	t
EGLTimeNV	opengl/include/EGL/eglext.h	/^typedef khronos_utime_nanoseconds_t EGLTimeNV;$/;"	t
EGLUtils	opengl/tests/include/EGLUtils.h	/^class EGLUtils$/;"	c	namespace:android
EGL_ALPHA_FORMAT	opengl/include/EGL/egl.h	234;"	d
EGL_ALPHA_FORMAT_NONPRE	opengl/include/EGL/egl.h	237;"	d
EGL_ALPHA_FORMAT_PRE	opengl/include/EGL/egl.h	238;"	d
EGL_ALPHA_MASK_SIZE	opengl/include/EGL/egl.h	125;"	d
EGL_ALPHA_SIZE	opengl/include/EGL/egl.h	97;"	d
EGL_ALPHA_SIZE	opengl/tests/angeles/include/GLES/egl.h	119;"	d
EGL_ALREADY_SIGNALED_NV	opengl/include/EGL/eglext.h	201;"	d
EGL_ANDROID_blob_cache	opengl/include/EGL/eglext.h	506;"	d
EGL_ANDROID_framebuffer_target	opengl/include/EGL/eglext.h	493;"	d
EGL_ANDROID_image_crop	opengl/include/EGL/eglext.h	498;"	d
EGL_ANDROID_image_native_buffer	opengl/include/EGL/eglext.h	517;"	d
EGL_ANDROID_native_fence_sync	opengl/include/EGL/eglext.h	522;"	d
EGL_ANDROID_presentation_time	opengl/include/EGL/eglext.h	570;"	d
EGL_ANDROID_recordable	opengl/include/EGL/eglext.h	534;"	d
EGL_ANGLE_d3d_share_handle_client_buffer	opengl/include/EGL/eglext.h	417;"	d
EGL_ANGLE_query_surface_pointer	opengl/include/EGL/eglext.h	296;"	d
EGL_ANGLE_surface_d3d_texture_2d_share_handle	opengl/include/EGL/eglext.h	304;"	d
EGL_AUTO_STEREO_NV	opengl/include/EGL/eglext.h	489;"	d
EGL_BACK_BUFFER	opengl/include/EGL/egl.h	184;"	d
EGL_BAD_ACCESS	opengl/include/EGL/egl.h	79;"	d
EGL_BAD_ACCESS	opengl/tests/angeles/include/GLES/egl.h	101;"	d
EGL_BAD_ALLOC	opengl/include/EGL/egl.h	80;"	d
EGL_BAD_ALLOC	opengl/tests/angeles/include/GLES/egl.h	102;"	d
EGL_BAD_ATTRIBUTE	opengl/include/EGL/egl.h	81;"	d
EGL_BAD_ATTRIBUTE	opengl/tests/angeles/include/GLES/egl.h	103;"	d
EGL_BAD_CONFIG	opengl/include/EGL/egl.h	82;"	d
EGL_BAD_CONFIG	opengl/tests/angeles/include/GLES/egl.h	104;"	d
EGL_BAD_CONTEXT	opengl/include/EGL/egl.h	83;"	d
EGL_BAD_CONTEXT	opengl/tests/angeles/include/GLES/egl.h	105;"	d
EGL_BAD_CURRENT_SURFACE	opengl/include/EGL/egl.h	84;"	d
EGL_BAD_CURRENT_SURFACE	opengl/tests/angeles/include/GLES/egl.h	106;"	d
EGL_BAD_DISPLAY	opengl/include/EGL/egl.h	85;"	d
EGL_BAD_DISPLAY	opengl/tests/angeles/include/GLES/egl.h	107;"	d
EGL_BAD_MATCH	opengl/include/EGL/egl.h	86;"	d
EGL_BAD_MATCH	opengl/tests/angeles/include/GLES/egl.h	108;"	d
EGL_BAD_NATIVE_PIXMAP	opengl/include/EGL/egl.h	87;"	d
EGL_BAD_NATIVE_PIXMAP	opengl/tests/angeles/include/GLES/egl.h	109;"	d
EGL_BAD_NATIVE_WINDOW	opengl/include/EGL/egl.h	88;"	d
EGL_BAD_NATIVE_WINDOW	opengl/tests/angeles/include/GLES/egl.h	110;"	d
EGL_BAD_PARAMETER	opengl/include/EGL/egl.h	89;"	d
EGL_BAD_PARAMETER	opengl/tests/angeles/include/GLES/egl.h	111;"	d
EGL_BAD_STATE_KHR	opengl/include/EGL/eglext.h	345;"	d
EGL_BAD_STREAM_KHR	opengl/include/EGL/eglext.h	344;"	d
EGL_BAD_SURFACE	opengl/include/EGL/egl.h	90;"	d
EGL_BAD_SURFACE	opengl/tests/angeles/include/GLES/egl.h	112;"	d
EGL_BIND_TO_TEXTURE_RGB	opengl/include/EGL/egl.h	120;"	d
EGL_BIND_TO_TEXTURE_RGBA	opengl/include/EGL/egl.h	121;"	d
EGL_BITMAP_ORIGIN_KHR	opengl/include/EGL/eglext.h	62;"	d
EGL_BITMAP_PITCH_KHR	opengl/include/EGL/eglext.h	61;"	d
EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR	opengl/include/EGL/eglext.h	66;"	d
EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR	opengl/include/EGL/eglext.h	65;"	d
EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR	opengl/include/EGL/eglext.h	64;"	d
EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR	opengl/include/EGL/eglext.h	67;"	d
EGL_BITMAP_PIXEL_RED_OFFSET_KHR	opengl/include/EGL/eglext.h	63;"	d
EGL_BITMAP_PIXEL_SIZE_KHR	opengl/include/EGL/eglext.h	176;"	d
EGL_BITMAP_POINTER_KHR	opengl/include/EGL/eglext.h	60;"	d
EGL_BLUE_SIZE	opengl/include/EGL/egl.h	98;"	d
EGL_BLUE_SIZE	opengl/tests/angeles/include/GLES/egl.h	120;"	d
EGL_BUFFER_AGE_EXT	opengl/include/EGL/eglext.h	540;"	d
EGL_BUFFER_DESTROYED	opengl/include/EGL/egl.h	205;"	d
EGL_BUFFER_PRESERVED	opengl/include/EGL/egl.h	204;"	d
EGL_BUFFER_SIZE	opengl/include/EGL/egl.h	96;"	d
EGL_BUFFER_SIZE	opengl/tests/angeles/include/GLES/egl.h	118;"	d
EGL_CLIENT_APIS	opengl/include/EGL/egl.h	164;"	d
EGL_CLIENT_PIXMAP_POINTER_HI	opengl/include/EGL/eglext.h	241;"	d
EGL_COLORSPACE	opengl/include/EGL/egl.h	233;"	d
EGL_COLORSPACE_LINEAR	opengl/include/EGL/egl.h	236;"	d
EGL_COLORSPACE_sRGB	opengl/include/EGL/egl.h	235;"	d
EGL_COLOR_ARGB_HI	opengl/include/EGL/eglext.h	266;"	d
EGL_COLOR_BUFFER_TYPE	opengl/include/EGL/egl.h	126;"	d
EGL_COLOR_FORMAT_HI	opengl/include/EGL/eglext.h	262;"	d
EGL_COLOR_RGBA_HI	opengl/include/EGL/eglext.h	265;"	d
EGL_COLOR_RGB_HI	opengl/include/EGL/eglext.h	264;"	d
EGL_CONDITION_SATISFIED_KHR	opengl/include/EGL/eglext.h	134;"	d
EGL_CONDITION_SATISFIED_NV	opengl/include/EGL/eglext.h	203;"	d
EGL_CONFIG_CAVEAT	opengl/include/EGL/egl.h	103;"	d
EGL_CONFIG_CAVEAT	opengl/tests/angeles/include/GLES/egl.h	125;"	d
EGL_CONFIG_ID	opengl/include/EGL/egl.h	104;"	d
EGL_CONFIG_ID	opengl/tests/angeles/include/GLES/egl.h	126;"	d
EGL_CONFORMANT	opengl/include/EGL/egl.h	129;"	d
EGL_CONFORMANT_KHR	opengl/include/EGL/eglext.h	42;"	d
EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR	opengl/include/EGL/eglext.h	364;"	d
EGL_CONSUMER_FRAME_KHR	opengl/include/EGL/eglext.h	336;"	d
EGL_CONSUMER_LATENCY_USEC_KHR	opengl/include/EGL/eglext.h	334;"	d
EGL_CONTEXT_CLIENT_TYPE	opengl/include/EGL/egl.h	211;"	d
EGL_CONTEXT_CLIENT_VERSION	opengl/include/EGL/egl.h	214;"	d
EGL_CONTEXT_CLIENT_VERSION	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        private static int EGL_CONTEXT_CLIENT_VERSION = 0x3098;$/;"	f	class:GL2JNIView.ContextFactory	file:
EGL_CONTEXT_CLIENT_VERSION	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        private static int EGL_CONTEXT_CLIENT_VERSION = 0x3098;$/;"	f	class:GLPerfView.ContextFactory	file:
EGL_CONTEXT_CLIENT_VERSION	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        private static int EGL_CONTEXT_CLIENT_VERSION = 0x3098;$/;"	f	class:GLDualGL2View.ContextFactory	file:
EGL_CONTEXT_FLAGS_KHR	opengl/include/EGL/eglext.h	425;"	d
EGL_CONTEXT_LOST	opengl/include/EGL/egl.h	91;"	d
EGL_CONTEXT_MAJOR_VERSION_KHR	opengl/include/EGL/eglext.h	423;"	d
EGL_CONTEXT_MINOR_VERSION_KHR	opengl/include/EGL/eglext.h	424;"	d
EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR	opengl/include/EGL/eglext.h	434;"	d
EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR	opengl/include/EGL/eglext.h	433;"	d
EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR	opengl/include/EGL/eglext.h	430;"	d
EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR	opengl/include/EGL/eglext.h	431;"	d
EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR	opengl/include/EGL/eglext.h	426;"	d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT	opengl/include/EGL/eglext.h	411;"	d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR	opengl/include/EGL/eglext.h	427;"	d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR	opengl/include/EGL/eglext.h	432;"	d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT	opengl/include/EGL/eglext.h	410;"	d
EGL_CONTEXT_PRIORITY_HIGH_IMG	opengl/include/EGL/eglext.h	169;"	d
EGL_CONTEXT_PRIORITY_LEVEL_IMG	opengl/include/EGL/eglext.h	168;"	d
EGL_CONTEXT_PRIORITY_LOW_IMG	opengl/include/EGL/eglext.h	171;"	d
EGL_CONTEXT_PRIORITY_MEDIUM_IMG	opengl/include/EGL/eglext.h	170;"	d
EGL_CORE_NATIVE_ENGINE	opengl/include/EGL/egl.h	230;"	d
EGL_CORE_NATIVE_ENGINE	opengl/tests/angeles/include/GLES/egl.h	183;"	d
EGL_COVERAGE_BUFFERS_NV	opengl/include/EGL/eglext.h	181;"	d
EGL_COVERAGE_SAMPLES_NV	opengl/include/EGL/eglext.h	182;"	d
EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV	opengl/include/EGL/eglext.h	311;"	d
EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV	opengl/include/EGL/eglext.h	312;"	d
EGL_COVERAGE_SAMPLE_RESOLVE_NV	opengl/include/EGL/eglext.h	310;"	d
EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE	opengl/include/EGL/eglext.h	305;"	d
EGL_DEFAULT_DISPLAY	opengl/include/EGL/egl.h	68;"	d
EGL_DEFAULT_DISPLAY	opengl/tests/angeles/include/GLES/egltypes.h	17;"	d
EGL_DEPTH_ENCODING_NONE_NV	opengl/include/EGL/eglext.h	188;"	d
EGL_DEPTH_ENCODING_NONLINEAR_NV	opengl/include/EGL/eglext.h	189;"	d
EGL_DEPTH_ENCODING_NV	opengl/include/EGL/eglext.h	187;"	d
EGL_DEPTH_SIZE	opengl/include/EGL/egl.h	101;"	d
EGL_DEPTH_SIZE	opengl/tests/angeles/include/GLES/egl.h	123;"	d
EGL_DISPLAY_SCALING	opengl/include/EGL/egl.h	198;"	d
EGL_DMA_BUF_PLANE0_FD_EXT	opengl/include/EGL/eglext.h	547;"	d
EGL_DMA_BUF_PLANE0_OFFSET_EXT	opengl/include/EGL/eglext.h	548;"	d
EGL_DMA_BUF_PLANE0_PITCH_EXT	opengl/include/EGL/eglext.h	549;"	d
EGL_DMA_BUF_PLANE1_FD_EXT	opengl/include/EGL/eglext.h	550;"	d
EGL_DMA_BUF_PLANE1_OFFSET_EXT	opengl/include/EGL/eglext.h	551;"	d
EGL_DMA_BUF_PLANE1_PITCH_EXT	opengl/include/EGL/eglext.h	552;"	d
EGL_DMA_BUF_PLANE2_FD_EXT	opengl/include/EGL/eglext.h	553;"	d
EGL_DMA_BUF_PLANE2_OFFSET_EXT	opengl/include/EGL/eglext.h	554;"	d
EGL_DMA_BUF_PLANE2_PITCH_EXT	opengl/include/EGL/eglext.h	555;"	d
EGL_DONT_CARE	opengl/include/EGL/egl.h	74;"	d
EGL_DONT_CARE	opengl/tests/angeles/include/GLES/egl.h	152;"	d
EGL_DRAW	opengl/include/EGL/egl.h	226;"	d
EGL_DRAW	opengl/tests/angeles/include/GLES/egl.h	177;"	d
EGL_DRM_BUFFER_FORMAT_ARGB32_MESA	opengl/include/EGL/eglext.h	273;"	d
EGL_DRM_BUFFER_FORMAT_MESA	opengl/include/EGL/eglext.h	271;"	d
EGL_DRM_BUFFER_MESA	opengl/include/EGL/eglext.h	274;"	d
EGL_DRM_BUFFER_STRIDE_MESA	opengl/include/EGL/eglext.h	275;"	d
EGL_DRM_BUFFER_USE_MESA	opengl/include/EGL/eglext.h	272;"	d
EGL_DRM_BUFFER_USE_SCANOUT_MESA	opengl/include/EGL/eglext.h	276;"	d
EGL_DRM_BUFFER_USE_SHARE_MESA	opengl/include/EGL/eglext.h	277;"	d
EGL_EGLEXT_PROTOTYPES	libs/gui/BufferQueueCore.cpp	21;"	d	file:
EGL_EGLEXT_PROTOTYPES	libs/gui/BufferQueueProducer.cpp	23;"	d	file:
EGL_EGLEXT_PROTOTYPES	libs/gui/ConsumerBase.cpp	23;"	d	file:
EGL_EGLEXT_PROTOTYPES	libs/gui/GLConsumer.cpp	22;"	d	file:
EGL_EGLEXT_PROTOTYPES	libs/gui/SyncFeatures.cpp	20;"	d	file:
EGL_EGLEXT_VERSION	opengl/include/EGL/eglext.h	38;"	d
EGL_ENTRY	opengl/libs/EGL/egl.cpp	371;"	d	file:
EGL_ENTRY	opengl/libs/EGL/egl.cpp	373;"	d	file:
EGL_ENTRY	opengl/libs/EGL/egl.cpp	386;"	d	file:
EGL_ENTRY	opengl/libs/hooks.h	57;"	d
EGL_ENTRY	opengl/libs/hooks.h	59;"	d
EGL_ENTRY	opengl/libs/hooks.h	74;"	d
EGL_EXTENSIONS	opengl/include/EGL/egl.h	163;"	d
EGL_EXTENSIONS	opengl/tests/angeles/include/GLES/egl.h	165;"	d
EGL_EXT_buffer_age	opengl/include/EGL/eglext.h	539;"	d
EGL_EXT_create_context_robustness	opengl/include/EGL/eglext.h	409;"	d
EGL_EXT_image_dma_buf_import	opengl/include/EGL/eglext.h	544;"	d
EGL_EXT_multiview_window	opengl/include/EGL/eglext.h	458;"	d
EGL_FALSE	opengl/include/EGL/egl.h	64;"	d
EGL_FALSE	opengl/tests/angeles/include/GLES/egl.h	93;"	d
EGL_FOREVER_KHR	opengl/include/EGL/eglext.h	138;"	d
EGL_FOREVER_NV	opengl/include/EGL/eglext.h	200;"	d
EGL_FORMAT_RGBA_8888_EXACT_KHR	opengl/include/EGL/eglext.h	56;"	d
EGL_FORMAT_RGBA_8888_KHR	opengl/include/EGL/eglext.h	57;"	d
EGL_FORMAT_RGB_565_EXACT_KHR	opengl/include/EGL/eglext.h	54;"	d
EGL_FORMAT_RGB_565_KHR	opengl/include/EGL/eglext.h	55;"	d
EGL_FRAMEBUFFER_TARGET_ANDROID	opengl/include/EGL/eglext.h	494;"	d
EGL_GL_COLORSPACE_KHR	libs/gui/tests/SRGB_test.cpp	427;"	d	file:
EGL_GL_COLORSPACE_KHR	opengl/libs/EGL/eglApi.cpp	378;"	d	file:
EGL_GL_COLORSPACE_LINEAR_KHR	opengl/libs/EGL/eglApi.cpp	380;"	d	file:
EGL_GL_COLORSPACE_SRGB_KHR	libs/gui/tests/SRGB_test.cpp	428;"	d	file:
EGL_GL_COLORSPACE_SRGB_KHR	opengl/libs/EGL/eglApi.cpp	379;"	d	file:
EGL_GL_RENDERBUFFER_KHR	opengl/include/EGL/eglext.h	120;"	d
EGL_GL_TEXTURE_2D_KHR	opengl/include/EGL/eglext.h	98;"	d
EGL_GL_TEXTURE_3D_KHR	opengl/include/EGL/eglext.h	114;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR	opengl/include/EGL/eglext.h	105;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR	opengl/include/EGL/eglext.h	107;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR	opengl/include/EGL/eglext.h	109;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR	opengl/include/EGL/eglext.h	104;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR	opengl/include/EGL/eglext.h	106;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR	opengl/include/EGL/eglext.h	108;"	d
EGL_GL_TEXTURE_LEVEL_KHR	opengl/include/EGL/eglext.h	99;"	d
EGL_GL_TEXTURE_ZOFFSET_KHR	opengl/include/EGL/eglext.h	115;"	d
EGL_GREEN_SIZE	opengl/include/EGL/egl.h	99;"	d
EGL_GREEN_SIZE	opengl/tests/angeles/include/GLES/egl.h	121;"	d
EGL_HEIGHT	opengl/include/EGL/egl.h	167;"	d
EGL_HEIGHT	opengl/tests/angeles/include/GLES/egl.h	170;"	d
EGL_HI_clientpixmap	opengl/include/EGL/eglext.h	238;"	d
EGL_HI_colorformats	opengl/include/EGL/eglext.h	260;"	d
EGL_HORIZONTAL_RESOLUTION	opengl/include/EGL/egl.h	177;"	d
EGL_IMAGE_CROP_BOTTOM_ANDROID	opengl/include/EGL/eglext.h	502;"	d
EGL_IMAGE_CROP_LEFT_ANDROID	opengl/include/EGL/eglext.h	499;"	d
EGL_IMAGE_CROP_RIGHT_ANDROID	opengl/include/EGL/eglext.h	501;"	d
EGL_IMAGE_CROP_TOP_ANDROID	opengl/include/EGL/eglext.h	500;"	d
EGL_IMAGE_PRESERVED_KHR	opengl/include/EGL/eglext.h	158;"	d
EGL_IMG_context_priority	opengl/include/EGL/eglext.h	167;"	d
EGL_ITU_REC2020_EXT	opengl/include/EGL/eglext.h	562;"	d
EGL_ITU_REC601_EXT	opengl/include/EGL/eglext.h	560;"	d
EGL_ITU_REC709_EXT	opengl/include/EGL/eglext.h	561;"	d
EGL_KHR_config_attribs	opengl/include/EGL/eglext.h	41;"	d
EGL_KHR_create_context	opengl/include/EGL/eglext.h	422;"	d
EGL_KHR_fence_sync	opengl/include/EGL/eglext.h	229;"	d
EGL_KHR_gl_renderbuffer_image	opengl/include/EGL/eglext.h	119;"	d
EGL_KHR_gl_texture_2D_image	opengl/include/EGL/eglext.h	97;"	d
EGL_KHR_gl_texture_3D_image	opengl/include/EGL/eglext.h	113;"	d
EGL_KHR_gl_texture_cubemap_image	opengl/include/EGL/eglext.h	103;"	d
EGL_KHR_image	opengl/include/EGL/eglext.h	79;"	d
EGL_KHR_image_base	opengl/include/EGL/eglext.h	156;"	d
EGL_KHR_image_pixmap	opengl/include/EGL/eglext.h	162;"	d
EGL_KHR_lock_surface	opengl/include/EGL/eglext.h	48;"	d
EGL_KHR_lock_surface2	opengl/include/EGL/eglext.h	175;"	d
EGL_KHR_reusable_sync	opengl/include/EGL/eglext.h	125;"	d
EGL_KHR_stream	opengl/include/EGL/eglext.h	330;"	d
EGL_KHR_stream_consumer_gltexture	opengl/include/EGL/eglext.h	363;"	d
EGL_KHR_stream_cross_process_fd	opengl/include/EGL/eglext.h	445;"	d
EGL_KHR_stream_fifo	opengl/include/EGL/eglext.h	395;"	d
EGL_KHR_stream_producer_aldatalocator	opengl/include/EGL/eglext.h	389;"	d
EGL_KHR_stream_producer_eglsurface	opengl/include/EGL/eglext.h	378;"	d
EGL_KHR_surfaceless_context	opengl/include/EGL/eglext.h	439;"	d
EGL_KHR_vg_parent_image	opengl/include/EGL/eglext.h	92;"	d
EGL_KHR_wait_sync	opengl/include/EGL/eglext.h	463;"	d
EGL_LARGEST_PBUFFER	opengl/include/EGL/egl.h	169;"	d
EGL_LARGEST_PBUFFER	opengl/tests/angeles/include/GLES/egl.h	172;"	d
EGL_LEVEL	opengl/include/EGL/egl.h	105;"	d
EGL_LEVEL	opengl/tests/angeles/include/GLES/egl.h	127;"	d
EGL_LINUX_DMA_BUF_EXT	opengl/include/EGL/eglext.h	545;"	d
EGL_LINUX_DRM_FOURCC_EXT	opengl/include/EGL/eglext.h	546;"	d
EGL_LOCK_SURFACE_BIT_KHR	opengl/include/EGL/eglext.h	51;"	d
EGL_LOCK_USAGE_HINT_KHR	opengl/include/EGL/eglext.h	59;"	d
EGL_LOSE_CONTEXT_ON_RESET_EXT	opengl/include/EGL/eglext.h	413;"	d
EGL_LOSE_CONTEXT_ON_RESET_KHR	opengl/include/EGL/eglext.h	429;"	d
EGL_LOWER_LEFT_KHR	opengl/include/EGL/eglext.h	68;"	d
EGL_LUMINANCE_BUFFER	opengl/include/EGL/egl.h	138;"	d
EGL_LUMINANCE_SIZE	opengl/include/EGL/egl.h	124;"	d
EGL_MAP_PRESERVE_PIXELS_KHR	opengl/include/EGL/eglext.h	58;"	d
EGL_MATCH_FORMAT_KHR	opengl/include/EGL/eglext.h	53;"	d
EGL_MATCH_NATIVE_PIXMAP	opengl/include/EGL/egl.h	128;"	d
EGL_MAX_PBUFFER_HEIGHT	opengl/include/EGL/egl.h	106;"	d
EGL_MAX_PBUFFER_HEIGHT	opengl/tests/angeles/include/GLES/egl.h	128;"	d
EGL_MAX_PBUFFER_PIXELS	opengl/include/EGL/egl.h	107;"	d
EGL_MAX_PBUFFER_PIXELS	opengl/tests/angeles/include/GLES/egl.h	129;"	d
EGL_MAX_PBUFFER_WIDTH	opengl/include/EGL/egl.h	108;"	d
EGL_MAX_PBUFFER_WIDTH	opengl/tests/angeles/include/GLES/egl.h	130;"	d
EGL_MAX_SWAP_INTERVAL	opengl/include/EGL/egl.h	123;"	d
EGL_MESA_drm_image	opengl/include/EGL/eglext.h	270;"	d
EGL_MIN_SWAP_INTERVAL	opengl/include/EGL/egl.h	122;"	d
EGL_MIPMAP_LEVEL	opengl/include/EGL/egl.h	173;"	d
EGL_MIPMAP_TEXTURE	opengl/include/EGL/egl.h	172;"	d
EGL_MULTISAMPLE_RESOLVE	opengl/include/EGL/egl.h	181;"	d
EGL_MULTISAMPLE_RESOLVE_BOX	opengl/include/EGL/egl.h	218;"	d
EGL_MULTISAMPLE_RESOLVE_BOX_BIT	opengl/include/EGL/egl.h	152;"	d
EGL_MULTISAMPLE_RESOLVE_DEFAULT	opengl/include/EGL/egl.h	217;"	d
EGL_MULTIVIEW_VIEW_COUNT_EXT	opengl/include/EGL/eglext.h	459;"	d
EGL_NATIVE_BUFFER_ANDROID	opengl/include/EGL/eglext.h	518;"	d
EGL_NATIVE_PIXMAP_KHR	opengl/include/EGL/eglext.h	80;"	d
EGL_NATIVE_RENDERABLE	opengl/include/EGL/egl.h	109;"	d
EGL_NATIVE_RENDERABLE	opengl/tests/angeles/include/GLES/egl.h	131;"	d
EGL_NATIVE_VISUAL_ID	opengl/include/EGL/egl.h	110;"	d
EGL_NATIVE_VISUAL_ID	opengl/tests/angeles/include/GLES/egl.h	132;"	d
EGL_NATIVE_VISUAL_TYPE	opengl/include/EGL/egl.h	111;"	d
EGL_NATIVE_VISUAL_TYPE	opengl/tests/angeles/include/GLES/egl.h	133;"	d
EGL_NONE	opengl/include/EGL/egl.h	119;"	d
EGL_NONE	opengl/tests/angeles/include/GLES/egl.h	146;"	d
EGL_NON_CONFORMANT_CONFIG	opengl/include/EGL/egl.h	135;"	d
EGL_NON_CONFORMANT_CONFIG	opengl/tests/angeles/include/GLES/egl.h	157;"	d
EGL_NOT_INITIALIZED	opengl/include/EGL/egl.h	78;"	d
EGL_NOT_INITIALIZED	opengl/tests/angeles/include/GLES/egl.h	100;"	d
EGL_NO_CONFIG	services/surfaceflinger/RenderEngine/RenderEngine.h	29;"	d
EGL_NO_CONTEXT	opengl/include/EGL/egl.h	69;"	d
EGL_NO_CONTEXT	opengl/tests/angeles/include/GLES/egltypes.h	18;"	d
EGL_NO_DISPLAY	opengl/include/EGL/egl.h	70;"	d
EGL_NO_DISPLAY	opengl/tests/angeles/include/GLES/egltypes.h	19;"	d
EGL_NO_FILE_DESCRIPTOR_KHR	opengl/include/EGL/eglext.h	447;"	d
EGL_NO_IMAGE_KHR	opengl/include/EGL/eglext.h	82;"	d
EGL_NO_NATIVE_FENCE_FD_ANDROID	opengl/include/EGL/eglext.h	526;"	d
EGL_NO_RESET_NOTIFICATION_EXT	opengl/include/EGL/eglext.h	412;"	d
EGL_NO_RESET_NOTIFICATION_KHR	opengl/include/EGL/eglext.h	428;"	d
EGL_NO_STREAM_KHR	opengl/include/EGL/eglext.h	333;"	d
EGL_NO_SURFACE	opengl/include/EGL/egl.h	71;"	d
EGL_NO_SURFACE	opengl/tests/angeles/include/GLES/egltypes.h	20;"	d
EGL_NO_SYNC_KHR	opengl/include/EGL/eglext.h	139;"	d
EGL_NO_SYNC_NV	opengl/include/EGL/eglext.h	207;"	d
EGL_NO_TEXTURE	opengl/include/EGL/egl.h	141;"	d
EGL_NV_3dvision_surface	opengl/include/EGL/eglext.h	488;"	d
EGL_NV_coverage_sample	opengl/include/EGL/eglext.h	180;"	d
EGL_NV_coverage_sample_resolve	opengl/include/EGL/eglext.h	309;"	d
EGL_NV_depth_nonlinear	opengl/include/EGL/eglext.h	186;"	d
EGL_NV_native_query	opengl/include/EGL/eglext.h	476;"	d
EGL_NV_post_convert_rounding	opengl/include/EGL/eglext.h	471;"	d
EGL_NV_post_sub_buffer	opengl/include/EGL/eglext.h	287;"	d
EGL_NV_sync	opengl/include/EGL/eglext.h	194;"	d
EGL_NV_system_time	opengl/include/EGL/eglext.h	317;"	d
EGL_OPENGL_API	opengl/include/EGL/egl.h	223;"	d
EGL_OPENGL_BIT	opengl/include/EGL/egl.h	158;"	d
EGL_OPENGL_ES2_BIT	opengl/include/EGL/egl.h	157;"	d
EGL_OPENGL_ES2_BIT	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        private static int EGL_OPENGL_ES2_BIT = 4;$/;"	f	class:GL2JNIView.ConfigChooser	file:
EGL_OPENGL_ES2_BIT	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        private static int EGL_OPENGL_ES2_BIT = 4;$/;"	f	class:GLPerfView.ConfigChooser	file:
EGL_OPENGL_ES2_BIT	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        private static int EGL_OPENGL_ES2_BIT = 4;$/;"	f	class:GLDualGL2View.ConfigChooser	file:
EGL_OPENGL_ES3_BIT_KHR	opengl/include/EGL/eglext.h	435;"	d
EGL_OPENGL_ES_API	opengl/include/EGL/egl.h	221;"	d
EGL_OPENGL_ES_BIT	opengl/include/EGL/egl.h	155;"	d
EGL_OPENVG_API	opengl/include/EGL/egl.h	222;"	d
EGL_OPENVG_BIT	opengl/include/EGL/egl.h	156;"	d
EGL_OPENVG_IMAGE	opengl/include/EGL/egl.h	208;"	d
EGL_OPTIMAL_FORMAT_BIT_KHR	opengl/include/EGL/eglext.h	52;"	d
EGL_PBUFFER_BIT	opengl/include/EGL/egl.h	147;"	d
EGL_PBUFFER_BIT	opengl/tests/angeles/include/GLES/egl.h	153;"	d
EGL_PIXEL_ASPECT_RATIO	opengl/include/EGL/egl.h	179;"	d
EGL_PIXMAP_BIT	opengl/include/EGL/egl.h	148;"	d
EGL_PIXMAP_BIT	opengl/tests/angeles/include/GLES/egl.h	154;"	d
EGL_POST_SUB_BUFFER_SUPPORTED_NV	opengl/include/EGL/eglext.h	288;"	d
EGL_PRODUCER_FRAME_KHR	opengl/include/EGL/eglext.h	335;"	d
EGL_READ	opengl/include/EGL/egl.h	227;"	d
EGL_READ	opengl/tests/angeles/include/GLES/egl.h	178;"	d
EGL_READ_SURFACE_BIT_KHR	opengl/include/EGL/eglext.h	49;"	d
EGL_RECORDABLE_ANDROID	opengl/include/EGL/eglext.h	535;"	d
EGL_RED_SIZE	opengl/include/EGL/egl.h	100;"	d
EGL_RED_SIZE	opengl/tests/angeles/include/GLES/egl.h	122;"	d
EGL_RENDERABLE_TYPE	opengl/include/EGL/egl.h	127;"	d
EGL_RENDER_BUFFER	opengl/include/EGL/egl.h	174;"	d
EGL_RGB_BUFFER	opengl/include/EGL/egl.h	137;"	d
EGL_SAMPLES	opengl/include/EGL/egl.h	112;"	d
EGL_SAMPLES	opengl/tests/angeles/include/GLES/egl.h	135;"	d
EGL_SAMPLE_BUFFERS	opengl/include/EGL/egl.h	113;"	d
EGL_SAMPLE_BUFFERS	opengl/tests/angeles/include/GLES/egl.h	136;"	d
EGL_SAMPLE_RANGE_HINT_EXT	opengl/include/EGL/eglext.h	557;"	d
EGL_SIGNALED_KHR	opengl/include/EGL/eglext.h	131;"	d
EGL_SIGNALED_NV	opengl/include/EGL/eglext.h	197;"	d
EGL_SINGLE_BUFFER	opengl/include/EGL/egl.h	185;"	d
EGL_SLOW_CONFIG	opengl/include/EGL/egl.h	134;"	d
EGL_SLOW_CONFIG	opengl/tests/angeles/include/GLES/egl.h	156;"	d
EGL_STENCIL_SIZE	opengl/include/EGL/egl.h	102;"	d
EGL_STENCIL_SIZE	opengl/tests/angeles/include/GLES/egl.h	124;"	d
EGL_STREAM_BIT_KHR	opengl/include/EGL/eglext.h	379;"	d
EGL_STREAM_FIFO_LENGTH_KHR	opengl/include/EGL/eglext.h	397;"	d
EGL_STREAM_STATE_CONNECTING_KHR	opengl/include/EGL/eglext.h	339;"	d
EGL_STREAM_STATE_CREATED_KHR	opengl/include/EGL/eglext.h	338;"	d
EGL_STREAM_STATE_DISCONNECTED_KHR	opengl/include/EGL/eglext.h	343;"	d
EGL_STREAM_STATE_EMPTY_KHR	opengl/include/EGL/eglext.h	340;"	d
EGL_STREAM_STATE_KHR	opengl/include/EGL/eglext.h	337;"	d
EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR	opengl/include/EGL/eglext.h	341;"	d
EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR	opengl/include/EGL/eglext.h	342;"	d
EGL_STREAM_TIME_CONSUMER_KHR	opengl/include/EGL/eglext.h	399;"	d
EGL_STREAM_TIME_NOW_KHR	opengl/include/EGL/eglext.h	398;"	d
EGL_STREAM_TIME_PRODUCER_KHR	opengl/include/EGL/eglext.h	400;"	d
EGL_SUCCESS	opengl/include/EGL/egl.h	77;"	d
EGL_SUCCESS	opengl/tests/angeles/include/GLES/egl.h	99;"	d
EGL_SURFACE_TYPE	opengl/include/EGL/egl.h	114;"	d
EGL_SURFACE_TYPE	opengl/tests/angeles/include/GLES/egl.h	137;"	d
EGL_SWAP_BEHAVIOR	opengl/include/EGL/egl.h	180;"	d
EGL_SWAP_BEHAVIOR_PRESERVED_BIT	opengl/include/EGL/egl.h	153;"	d
EGL_SYNC_CONDITION_KHR	opengl/include/EGL/eglext.h	232;"	d
EGL_SYNC_CONDITION_NV	opengl/include/EGL/eglext.h	205;"	d
EGL_SYNC_FENCE_KHR	opengl/include/EGL/eglext.h	233;"	d
EGL_SYNC_FENCE_NV	opengl/include/EGL/eglext.h	206;"	d
EGL_SYNC_FLUSH_COMMANDS_BIT_KHR	opengl/include/EGL/eglext.h	137;"	d
EGL_SYNC_FLUSH_COMMANDS_BIT_NV	opengl/include/EGL/eglext.h	199;"	d
EGL_SYNC_NATIVE_FENCE_ANDROID	opengl/include/EGL/eglext.h	523;"	d
EGL_SYNC_NATIVE_FENCE_FD_ANDROID	opengl/include/EGL/eglext.h	524;"	d
EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID	opengl/include/EGL/eglext.h	525;"	d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR	opengl/include/EGL/eglext.h	231;"	d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV	opengl/include/EGL/eglext.h	195;"	d
EGL_SYNC_REUSABLE_KHR	opengl/include/EGL/eglext.h	136;"	d
EGL_SYNC_STATUS_KHR	opengl/include/EGL/eglext.h	130;"	d
EGL_SYNC_STATUS_NV	opengl/include/EGL/eglext.h	196;"	d
EGL_SYNC_TYPE_KHR	opengl/include/EGL/eglext.h	135;"	d
EGL_SYNC_TYPE_NV	opengl/include/EGL/eglext.h	204;"	d
EGL_TEXTURE_2D	opengl/include/EGL/egl.h	144;"	d
EGL_TEXTURE_FORMAT	opengl/include/EGL/egl.h	170;"	d
EGL_TEXTURE_RGB	opengl/include/EGL/egl.h	142;"	d
EGL_TEXTURE_RGBA	opengl/include/EGL/egl.h	143;"	d
EGL_TEXTURE_TARGET	opengl/include/EGL/egl.h	171;"	d
EGL_TIMEOUT_EXPIRED_KHR	opengl/include/EGL/eglext.h	133;"	d
EGL_TIMEOUT_EXPIRED_NV	opengl/include/EGL/eglext.h	202;"	d
EGL_TRANSPARENT_BLUE_VALUE	opengl/include/EGL/egl.h	116;"	d
EGL_TRANSPARENT_BLUE_VALUE	opengl/tests/angeles/include/GLES/egl.h	139;"	d
EGL_TRANSPARENT_GREEN_VALUE	opengl/include/EGL/egl.h	117;"	d
EGL_TRANSPARENT_GREEN_VALUE	opengl/tests/angeles/include/GLES/egl.h	140;"	d
EGL_TRANSPARENT_RED_VALUE	opengl/include/EGL/egl.h	118;"	d
EGL_TRANSPARENT_RED_VALUE	opengl/tests/angeles/include/GLES/egl.h	141;"	d
EGL_TRANSPARENT_RGB	opengl/include/EGL/egl.h	136;"	d
EGL_TRANSPARENT_RGB	opengl/tests/angeles/include/GLES/egl.h	158;"	d
EGL_TRANSPARENT_TYPE	opengl/include/EGL/egl.h	115;"	d
EGL_TRANSPARENT_TYPE	opengl/tests/angeles/include/GLES/egl.h	138;"	d
EGL_TRUE	opengl/include/EGL/egl.h	65;"	d
EGL_TRUE	opengl/tests/angeles/include/GLES/egl.h	94;"	d
EGL_UNKNOWN	opengl/include/EGL/egl.h	201;"	d
EGL_UNSIGNALED_KHR	opengl/include/EGL/eglext.h	132;"	d
EGL_UNSIGNALED_NV	opengl/include/EGL/eglext.h	198;"	d
EGL_UPPER_LEFT_KHR	opengl/include/EGL/eglext.h	69;"	d
EGL_VENDOR	opengl/include/EGL/egl.h	161;"	d
EGL_VENDOR	opengl/tests/angeles/include/GLES/egl.h	163;"	d
EGL_VERSION	opengl/include/EGL/egl.h	162;"	d
EGL_VERSION	opengl/tests/angeles/include/GLES/egl.h	164;"	d
EGL_VERSION_1_0	opengl/include/EGL/egl.h	53;"	d
EGL_VERSION_1_0	opengl/tests/angeles/include/GLES/egl.h	88;"	d
EGL_VERSION_1_1	opengl/include/EGL/egl.h	54;"	d
EGL_VERSION_1_2	opengl/include/EGL/egl.h	55;"	d
EGL_VERSION_1_3	opengl/include/EGL/egl.h	56;"	d
EGL_VERSION_1_4	opengl/include/EGL/egl.h	57;"	d
EGL_VERTICAL_RESOLUTION	opengl/include/EGL/egl.h	178;"	d
EGL_VG_ALPHA_FORMAT	opengl/include/EGL/egl.h	176;"	d
EGL_VG_ALPHA_FORMAT_NONPRE	opengl/include/EGL/egl.h	192;"	d
EGL_VG_ALPHA_FORMAT_PRE	opengl/include/EGL/egl.h	193;"	d
EGL_VG_ALPHA_FORMAT_PRE_BIT	opengl/include/EGL/egl.h	151;"	d
EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR	opengl/include/EGL/eglext.h	44;"	d
EGL_VG_COLORSPACE	opengl/include/EGL/egl.h	175;"	d
EGL_VG_COLORSPACE_LINEAR	opengl/include/EGL/egl.h	189;"	d
EGL_VG_COLORSPACE_LINEAR_BIT	opengl/include/EGL/egl.h	150;"	d
EGL_VG_COLORSPACE_LINEAR_BIT_KHR	opengl/include/EGL/eglext.h	43;"	d
EGL_VG_COLORSPACE_sRGB	opengl/include/EGL/egl.h	188;"	d
EGL_VG_PARENT_IMAGE_KHR	opengl/include/EGL/eglext.h	93;"	d
EGL_WIDTH	opengl/include/EGL/egl.h	168;"	d
EGL_WIDTH	opengl/tests/angeles/include/GLES/egl.h	171;"	d
EGL_WINDOW_BIT	opengl/include/EGL/egl.h	149;"	d
EGL_WINDOW_BIT	opengl/tests/angeles/include/GLES/egl.h	155;"	d
EGL_WRITE_SURFACE_BIT_KHR	opengl/include/EGL/eglext.h	50;"	d
EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT	opengl/include/EGL/eglext.h	558;"	d
EGL_YUV_CHROMA_SITING_0_5_EXT	opengl/include/EGL/eglext.h	566;"	d
EGL_YUV_CHROMA_SITING_0_EXT	opengl/include/EGL/eglext.h	565;"	d
EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT	opengl/include/EGL/eglext.h	559;"	d
EGL_YUV_COLOR_SPACE_HINT_EXT	opengl/include/EGL/eglext.h	556;"	d
EGL_YUV_FULL_RANGE_EXT	opengl/include/EGL/eglext.h	563;"	d
EGL_YUV_NARROW_RANGE_EXT	opengl/include/EGL/eglext.h	564;"	d
EGLenum	opengl/include/EGL/egl.h	/^typedef unsigned int EGLenum;$/;"	t
EGLint	opengl/include/EGL/eglplatform.h	/^typedef khronos_int32_t EGLint;$/;"	t
EGLint	opengl/tests/angeles/include/GLES/egltypes.h	/^typedef long EGLint;$/;"	t
EGLnsecsANDROID	opengl/include/EGL/eglext.h	/^typedef khronos_stime_nanoseconds_t EGLnsecsANDROID;$/;"	t
EGLsizeiANDROID	opengl/include/EGL/eglext.h	/^typedef khronos_ssize_t EGLsizeiANDROID;$/;"	t
EGLuint64KHR	opengl/include/EGL/eglext.h	/^typedef khronos_uint64_t EGLuint64KHR;$/;"	t
EGLuint64NV	opengl/include/EGL/eglext.h	/^typedef khronos_utime_nanoseconds_t EGLuint64NV;$/;"	t
ENABLE_DISABLE	libs/gui/ISensorEventConnection.cpp	/^    ENABLE_DISABLE,$/;"	e	enum:android::__anon260	file:
ENABLE_EGL_KHR_GL_COLORSPACE	opengl/libs/EGL/eglApi.cpp	54;"	d	file:
ENUM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType_Type GLMessage_DataType::ENUM;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
ENUM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Type ENUM = GLMessage_DataType_Type_ENUM;$/;"	m	class:android::gltrace::GLMessage_DataType
EPOLL_ID_INOTIFY	services/inputflinger/EventHub.cpp	/^const uint32_t EventHub::EPOLL_ID_INOTIFY;$/;"	m	class:android::EventHub	file:
EPOLL_ID_INOTIFY	services/inputflinger/EventHub.h	/^    static const uint32_t EPOLL_ID_INOTIFY = 0x80000001;$/;"	m	class:android::EventHub
EPOLL_ID_WAKE	services/inputflinger/EventHub.cpp	/^const uint32_t EventHub::EPOLL_ID_WAKE;$/;"	m	class:android::EventHub	file:
EPOLL_ID_WAKE	services/inputflinger/EventHub.h	/^    static const uint32_t EPOLL_ID_WAKE = 0x80000002;$/;"	m	class:android::EventHub
EPOLL_MAX_EVENTS	services/inputflinger/EventHub.cpp	/^const int EventHub::EPOLL_MAX_EVENTS;$/;"	m	class:android::EventHub	file:
EPOLL_MAX_EVENTS	services/inputflinger/EventHub.h	/^    static const int EPOLL_MAX_EVENTS = 16;$/;"	m	class:android::EventHub
EPOLL_SIZE_HINT	services/inputflinger/EventHub.cpp	/^const int EventHub::EPOLL_SIZE_HINT;$/;"	m	class:android::EventHub	file:
EPOLL_SIZE_HINT	services/inputflinger/EventHub.h	/^    static const int EPOLL_SIZE_HINT = 8;$/;"	m	class:android::EventHub
EPSILON	services/inputflinger/tests/InputReader_test.cpp	/^static const float EPSILON = 0.001f;$/;"	m	namespace:android	file:
EPSILON	services/surfaceflinger/Transform.cpp	/^static const float EPSILON = 0.0f;$/;"	m	namespace:android	file:
ETC1_DECODED_BLOCK_SIZE	opengl/include/ETC1/etc1.h	19;"	d
ETC1_ENCODED_BLOCK_SIZE	opengl/include/ETC1/etc1.h	18;"	d
ETC1_PKM_ENCODED_HEIGHT_OFFSET	opengl/libs/ETC1/etc1.cpp	/^static const etc1_uint32 ETC1_PKM_ENCODED_HEIGHT_OFFSET = 10;$/;"	v	file:
ETC1_PKM_ENCODED_WIDTH_OFFSET	opengl/libs/ETC1/etc1.cpp	/^static const etc1_uint32 ETC1_PKM_ENCODED_WIDTH_OFFSET = 8;$/;"	v	file:
ETC1_PKM_FORMAT_OFFSET	opengl/libs/ETC1/etc1.cpp	/^static const etc1_uint32 ETC1_PKM_FORMAT_OFFSET = 6;$/;"	v	file:
ETC1_PKM_HEIGHT_OFFSET	opengl/libs/ETC1/etc1.cpp	/^static const etc1_uint32 ETC1_PKM_HEIGHT_OFFSET = 14;$/;"	v	file:
ETC1_PKM_WIDTH_OFFSET	opengl/libs/ETC1/etc1.cpp	/^static const etc1_uint32 ETC1_PKM_WIDTH_OFFSET = 12;$/;"	v	file:
ETC1_RGB8_OES	opengl/include/ETC1/etc1.h	22;"	d
ETC1_RGB_NO_MIPMAPS	opengl/libs/ETC1/etc1.cpp	/^static const etc1_uint32 ETC1_RGB_NO_MIPMAPS = 0;$/;"	v	file:
ETC_PKM_HEADER_SIZE	opengl/include/ETC1/etc1.h	84;"	d
EVENT_BUFFER_SIZE	services/inputflinger/InputReader.h	/^    static const int EVENT_BUFFER_SIZE = 256;$/;"	m	class:android::InputReader
EVENT_ORIENTATION	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        EVENT_ORIENTATION = HWC_EVENT_ORIENTATION$/;"	e	enum:android::HWComposer::__anon18
EVENT_ORIENTATION	services/surfaceflinger/SurfaceFlinger.h	/^        EVENT_ORIENTATION = HWC_EVENT_ORIENTATION$/;"	e	enum:android::SurfaceFlinger::__anon20
EVENT_VSYNC	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        EVENT_VSYNC = HWC_EVENT_VSYNC,$/;"	e	enum:android::HWComposer::__anon18
EVENT_VSYNC	services/surfaceflinger/SurfaceFlinger.h	/^        EVENT_VSYNC = HWC_EVENT_VSYNC,$/;"	e	enum:android::SurfaceFlinger::__anon20
EVIOCSSUSPENDBLOCK	services/inputflinger/EventHub.cpp	1314;"	d	file:
EXPECT_OK	libs/gui/tests/IGraphicBufferProducer_test.cpp	33;"	d	file:
EX_HAS_REPLY_HEADER	libs/binder/Parcel.cpp	63;"	d	file:
EYE	opengl/libagl/context.h	/^        EYE             = 0x0040,$/;"	e	enum:android::gl::vertex_t::__anon220
EglImage	include/gui/GLConsumer.h	/^    class EglImage : public LightRefBase<EglImage>  {$/;"	c	class:android::GLConsumer
EglImage	libs/gui/GLConsumer.cpp	/^GLConsumer::EglImage::EglImage(sp<GraphicBuffer> graphicBuffer) :$/;"	f	class:android::GLConsumer::EglImage
EglSlot	include/gui/GLConsumer.h	/^        EglSlot() : mEglFence(EGL_NO_SYNC_KHR) {}$/;"	f	struct:android::GLConsumer::EglSlot
EglSlot	include/gui/GLConsumer.h	/^    struct EglSlot {$/;"	s	class:android::GLConsumer
ElementArrayBuffer	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^ElementArrayBuffer::ElementArrayBuffer(GLvoid *buf, GLsizeiptr size) {$/;"	f	class:android::gltrace::ElementArrayBuffer
ElementArrayBuffer	opengl/libs/GLES_trace/src/gltrace_context.h	/^    ElementArrayBuffer():mBuf(NULL), mSize(0) {}$/;"	f	class:android::gltrace::ElementArrayBuffer
ElementArrayBuffer	opengl/libs/GLES_trace/src/gltrace_context.h	/^class ElementArrayBuffer {$/;"	c	namespace:android::gltrace
EmptyBufferDone	include/media/openmax/OMX_Core.h	/^    OMX_ERRORTYPE (*EmptyBufferDone)($/;"	m	struct:OMX_CALLBACKTYPE
EmptyThisBuffer	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*EmptyThisBuffer)($/;"	m	struct:OMX_COMPONENTTYPE
EnableAndroidNativeBuffersParams	include/media/hardware/HardwareAPI.h	/^struct EnableAndroidNativeBuffersParams {$/;"	s	namespace:android
Entry	include/binder/PermissionCache.h	/^    struct Entry {$/;"	s	class:android::PermissionCache
EnumInfo	opengl/tools/glgen2/registry/reg.py	/^class EnumInfo(BaseInfo):$/;"	c
ErrMap	include/media/openmax/OMX_Video.h	/^    OMX_U8  ErrMap[1];             \/* Error map hint *\/$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
Estimator	include/input/VelocityTracker.h	/^    struct Estimator {$/;"	s	class:android::VelocityTracker
Event	include/gui/DisplayEventReceiver.h	/^    struct Event {$/;"	s	class:android::DisplayEventReceiver
EventControlThread	services/surfaceflinger/EventControlThread.cpp	/^EventControlThread::EventControlThread(const sp<SurfaceFlinger>& flinger):$/;"	f	class:android::EventControlThread
EventControlThread	services/surfaceflinger/EventControlThread.h	/^class EventControlThread: public Thread {$/;"	c	namespace:android
EventEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::EventEntry::EventEntry(int32_t type, nsecs_t eventTime, uint32_t policyFlags) :$/;"	f	class:android::InputDispatcher::EventEntry
EventEntry	services/inputflinger/InputDispatcher.h	/^    struct EventEntry : Link<EventEntry> {$/;"	s	class:android::InputDispatcher
EventHandler	include/media/openmax/OMX_Core.h	/^   OMX_ERRORTYPE (*EventHandler)($/;"	m	struct:OMX_CALLBACKTYPE
EventHandler	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    class EventHandler {$/;"	c	class:android::HWComposer
EventHub	services/inputflinger/EventHub.cpp	/^EventHub::EventHub(void) :$/;"	f	class:android::EventHub
EventHub	services/inputflinger/EventHub.h	/^class EventHub : public EventHubInterface$/;"	c	namespace:android
EventHubInterface	services/inputflinger/EventHub.h	/^    EventHubInterface() { }$/;"	f	class:android::EventHubInterface
EventHubInterface	services/inputflinger/EventHub.h	/^class EventHubInterface : public virtual RefBase {$/;"	c	namespace:android
EventListener	services/surfaceflinger/DispSync.cpp	/^    struct EventListener {$/;"	s	class:android::DispSyncThread	file:
EventLog	services/surfaceflinger/EventLog/EventLog.cpp	/^EventLog::EventLog() {$/;"	f	class:android::EventLog
EventLog	services/surfaceflinger/EventLog/EventLog.h	/^class EventLog : public Singleton<EventLog> {$/;"	c	namespace:android
EventThread	services/surfaceflinger/EventThread.cpp	/^EventThread::EventThread(const sp<VSyncSource>& src)$/;"	f	class:android::EventThread
EventThread	services/surfaceflinger/EventThread.h	/^class EventThread : public Thread, private VSyncSource::Callback {$/;"	c	namespace:android
EventType	include/media/drm/DrmAPI.h	/^        enum EventType {$/;"	g	class:android::DrmPlugin
Extras	libs/binder/Binder.cpp	/^class BBinder::Extras$/;"	c	class:android::BBinder	file:
FB0	opengl/libs/GLES_trace/src/gltrace_context.h	/^enum FBBinding {CURRENTLY_BOUND_FB, FB0};$/;"	e	enum:android::gltrace::FBBinding
FBBinding	opengl/libs/GLES_trace/src/gltrace_context.h	/^enum FBBinding {CURRENTLY_BOUND_FB, FB0};$/;"	g	namespace:android::gltrace
FBIO_WAITFORVSYNC	services/surfaceflinger/tests/waitforvsync/waitforvsync.cpp	28;"	d	file:
FBO	services/surfaceflinger/LayerBlur.h	/^        FBO() : fbo(0), width(0), height(0) {}$/;"	f	class:android::LayerBlur::FBO
FBO	services/surfaceflinger/LayerBlur.h	/^    class FBO {$/;"	c	class:android::LayerBlur
FENCE_SYNC_HANDLE	opengl/libagl/egl.cpp	2086;"	d	file:
FILE_VERSION	cmds/rawbu/backup.cpp	33;"	d	file:
FILE_VERSION_1	cmds/rawbu/backup.cpp	28;"	d	file:
FILE_VERSION_2	cmds/rawbu/backup.cpp	31;"	d	file:
FILTER_EXTENSIONS	opengl/libs/EGL/eglApi.cpp	161;"	d	file:
FINISHED_DEVICE_SCAN	services/inputflinger/EventHub.h	/^        FINISHED_DEVICE_SCAN = 0x30000000,$/;"	e	enum:android::EventHubInterface::__anon48
FINISH_OPERATION_TRANSACTION	include/binder/IAppOpsService.h	/^        FINISH_OPERATION_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION+3,$/;"	e	enum:android::IAppOpsService::__anon199
FIRST_APPLICATION_WINDOW	services/inputflinger/InputWindow.h	/^        FIRST_APPLICATION_WINDOW = 1,$/;"	e	enum:android::InputWindowInfo::__anon40
FIRST_CALL_TRANSACTION	include/binder/IBinder.h	/^        FIRST_CALL_TRANSACTION  = 0x00000001,$/;"	e	enum:android::IBinder::__anon209
FIRST_SUB_WINDOW	services/inputflinger/InputWindow.h	/^        FIRST_SUB_WINDOW        = 1000,$/;"	e	enum:android::InputWindowInfo::__anon40
FIRST_SYNTHETIC_EVENT	services/inputflinger/EventHub.h	/^        FIRST_SYNTHETIC_EVENT = DEVICE_ADDED,$/;"	e	enum:android::EventHubInterface::__anon48
FIRST_SYSTEM_WINDOW	services/inputflinger/InputWindow.h	/^        FIRST_SYSTEM_WINDOW     = 2000,$/;"	e	enum:android::InputWindowInfo::__anon40
FIXED	opengl/tests/angeles/demo.c	66;"	d	file:
FIXED_ONE	opengl/tests/gl_basic/gl_basic.cpp	23;"	d	file:
FIXED_ONE	opengl/tests/gl_jni/jni/gl_code.cpp	17;"	d	file:
FIXED_ONE	opengl/tests/tritex/tritex.cpp	25;"	d	file:
FLAGS	include/input/InputEventLabels.h	/^static const InputEventLabel FLAGS[] = {$/;"	m	namespace:android
FLAGS_2D_PROJECTION	opengl/libagl/context.h	/^        FLAGS_2D_PROJECTION = 0x1$/;"	e	enum:android::gl::transform_t::__anon224
FLAG_ALLOW_LOCK_WHILE_SCREEN_ON	services/inputflinger/InputWindow.h	/^        FLAG_ALLOW_LOCK_WHILE_SCREEN_ON     = 0x00000001,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_ALT_FOCUSABLE_IM	services/inputflinger/InputWindow.h	/^        FLAG_ALT_FOCUSABLE_IM = 0x00020000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_BLUR_BEHIND	services/inputflinger/InputWindow.h	/^        FLAG_BLUR_BEHIND        = 0x00000004,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_DIM_BEHIND	services/inputflinger/InputWindow.h	/^        FLAG_DIM_BEHIND        = 0x00000002,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_DISMISS_KEYGUARD	services/inputflinger/InputWindow.h	/^        FLAG_DISMISS_KEYGUARD = 0x00400000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_DISPATCH_AS_HOVER_ENTER	services/inputflinger/InputDispatcher.h	/^        FLAG_DISPATCH_AS_HOVER_ENTER = 1 << 10,$/;"	e	enum:android::InputTarget::__anon44
FLAG_DISPATCH_AS_HOVER_EXIT	services/inputflinger/InputDispatcher.h	/^        FLAG_DISPATCH_AS_HOVER_EXIT = 1 << 11,$/;"	e	enum:android::InputTarget::__anon44
FLAG_DISPATCH_AS_IS	services/inputflinger/InputDispatcher.h	/^        FLAG_DISPATCH_AS_IS = 1 << 8,$/;"	e	enum:android::InputTarget::__anon44
FLAG_DISPATCH_AS_OUTSIDE	services/inputflinger/InputDispatcher.h	/^        FLAG_DISPATCH_AS_OUTSIDE = 1 << 9,$/;"	e	enum:android::InputTarget::__anon44
FLAG_DISPATCH_AS_SLIPPERY_ENTER	services/inputflinger/InputDispatcher.h	/^        FLAG_DISPATCH_AS_SLIPPERY_ENTER = 1 << 13,$/;"	e	enum:android::InputTarget::__anon44
FLAG_DISPATCH_AS_SLIPPERY_EXIT	services/inputflinger/InputDispatcher.h	/^        FLAG_DISPATCH_AS_SLIPPERY_EXIT = 1 << 12,$/;"	e	enum:android::InputTarget::__anon44
FLAG_DISPATCH_MASK	services/inputflinger/InputDispatcher.h	/^        FLAG_DISPATCH_MASK = FLAG_DISPATCH_AS_IS$/;"	e	enum:android::InputTarget::__anon44
FLAG_DITHER	services/inputflinger/InputWindow.h	/^        FLAG_DITHER             = 0x00001000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_FORCE_NOT_FULLSCREEN	services/inputflinger/InputWindow.h	/^        FLAG_FORCE_NOT_FULLSCREEN   = 0x00000800,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_FOREGROUND	services/inputflinger/InputDispatcher.h	/^        FLAG_FOREGROUND = 1 << 0,$/;"	e	enum:android::InputTarget::__anon44
FLAG_FULLSCREEN	services/inputflinger/InputWindow.h	/^        FLAG_FULLSCREEN      = 0x00000400,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_IGNORE_CHEEK_PRESSES	services/inputflinger/InputWindow.h	/^        FLAG_IGNORE_CHEEK_PRESSES    = 0x00008000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_KEEP_SCREEN_ON	services/inputflinger/InputWindow.h	/^        FLAG_KEEP_SCREEN_ON     = 0x00000080,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_LAYOUT_INSET_DECOR	services/inputflinger/InputWindow.h	/^        FLAG_LAYOUT_INSET_DECOR = 0x00010000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_LAYOUT_IN_SCREEN	services/inputflinger/InputWindow.h	/^        FLAG_LAYOUT_IN_SCREEN   = 0x00000100,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_LAYOUT_NO_LIMITS	services/inputflinger/InputWindow.h	/^        FLAG_LAYOUT_NO_LIMITS   = 0x00000200,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_MASK_FILTER	libs/binder/MemoryHeapIon.cpp	45;"	d	file:
FLAG_NEEDS_MENU_KEY	services/inputflinger/InputWindow.h	/^        FLAG_NEEDS_MENU_KEY = 0x40000000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_NOT_FOCUSABLE	services/inputflinger/InputWindow.h	/^        FLAG_NOT_FOCUSABLE      = 0x00000008,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_NOT_TOUCHABLE	services/inputflinger/InputWindow.h	/^        FLAG_NOT_TOUCHABLE      = 0x00000010,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_NOT_TOUCH_MODAL	services/inputflinger/InputWindow.h	/^        FLAG_NOT_TOUCH_MODAL    = 0x00000020,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_ONEWAY	include/binder/IBinder.h	/^        FLAG_ONEWAY             = 0x00000001$/;"	e	enum:android::IBinder::__anon209
FLAG_SCALED	services/inputflinger/InputWindow.h	/^        FLAG_SCALED             = 0x00004000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_SECURE	services/inputflinger/InputWindow.h	/^        FLAG_SECURE             = 0x00002000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_SHOW_WALLPAPER	services/inputflinger/InputWindow.h	/^        FLAG_SHOW_WALLPAPER = 0x00100000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_SHOW_WHEN_LOCKED	services/inputflinger/InputWindow.h	/^        FLAG_SHOW_WHEN_LOCKED = 0x00080000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_SLIPPERY	services/inputflinger/InputWindow.h	/^        FLAG_SLIPPERY = 0x20000000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_SPLIT	services/inputflinger/InputDispatcher.h	/^        FLAG_SPLIT = 1 << 2,$/;"	e	enum:android::InputTarget::__anon44
FLAG_SPLIT_TOUCH	services/inputflinger/InputWindow.h	/^        FLAG_SPLIT_TOUCH = 0x00800000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_TOUCHABLE_WHEN_WAKING	services/inputflinger/InputWindow.h	/^        FLAG_TOUCHABLE_WHEN_WAKING = 0x00000040,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_TURN_SCREEN_ON	services/inputflinger/InputWindow.h	/^        FLAG_TURN_SCREEN_ON = 0x00200000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_WATCH_OUTSIDE_TOUCH	services/inputflinger/InputWindow.h	/^        FLAG_WATCH_OUTSIDE_TOUCH = 0x00040000,$/;"	e	enum:android::InputWindowInfo::__anon39
FLAG_WINDOW_IS_OBSCURED	services/inputflinger/InputDispatcher.h	/^        FLAG_WINDOW_IS_OBSCURED = 1 << 1,$/;"	e	enum:android::InputTarget::__anon44
FLAG_ZERO_COORDS	services/inputflinger/InputDispatcher.h	/^        FLAG_ZERO_COORDS = 1 << 3,$/;"	e	enum:android::InputTarget::__anon44
FLIP_H	services/surfaceflinger/Transform.h	/^                FLIP_H  = HAL_TRANSFORM_FLIP_H,$/;"	e	enum:android::Transform::orientation_flags
FLIP_V	services/surfaceflinger/Transform.h	/^                FLIP_V  = HAL_TRANSFORM_FLIP_V,$/;"	e	enum:android::Transform::orientation_flags
FLOAT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType_Type GLMessage_DataType::FLOAT;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
FLOAT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Type FLOAT = GLMessage_DataType_Type_FLOAT;$/;"	m	class:android::gltrace::GLMessage_DataType
FLOAT_SIZE	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       final static int FLOAT_SIZE = 4;$/;"	f	class:TestView.Grid
FLOAT_SIZE_BYTES	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private static final int FLOAT_SIZE_BYTES = 4;$/;"	f	class:CamRenderer	file:
FLOAT_SIZE_BYTES	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^const GLint FLOAT_SIZE_BYTES = 4;$/;"	v
FLUSH_SENSOR	libs/gui/ISensorEventConnection.cpp	/^    FLUSH_SENSOR$/;"	e	enum:android::__anon260	file:
FORMAT_ANY	include/input/KeyCharacterMap.h	/^        FORMAT_ANY = 2,$/;"	e	enum:android::KeyCharacterMap::Format
FORMAT_BASE	include/input/KeyCharacterMap.h	/^        FORMAT_BASE = 0,$/;"	e	enum:android::KeyCharacterMap::Format
FORMAT_OVERLAY	include/input/KeyCharacterMap.h	/^        FORMAT_OVERLAY = 1,$/;"	e	enum:android::KeyCharacterMap::Format
FREE	include/gui/BufferSlot.h	/^        FREE = 0,$/;"	e	enum:android::BufferSlot::BufferState
FREEFORM	services/inputflinger/InputReader.h	/^            FREEFORM,$/;"	e	enum:android::TouchInputMapper::PointerGesture::Mode
FREE_FALL_THRESHOLD	services/sensorservice/Fusion.cpp	/^static const float FREE_FALL_THRESHOLD = 0.981f;$/;"	m	namespace:android	file:
FREE_FALL_THRESHOLD_SQ	services/sensorservice/Fusion.cpp	/^static const float FREE_FALL_THRESHOLD_SQ =$/;"	m	namespace:android	file:
FRUSTUM_CLIP_ALL	opengl/libagl/context.h	/^        FRUSTUM_CLIP_ALL= 0x003F,$/;"	e	enum:android::gl::vertex_t::__anon220
FakeEventHub	services/inputflinger/tests/InputReader_test.cpp	/^    FakeEventHub() { }$/;"	f	class:android::FakeEventHub
FakeEventHub	services/inputflinger/tests/InputReader_test.cpp	/^class FakeEventHub : public EventHubInterface {$/;"	c	namespace:android	file:
FakeInputDispatcherPolicy	services/inputflinger/tests/InputDispatcher_test.cpp	/^    FakeInputDispatcherPolicy() {$/;"	f	class:android::FakeInputDispatcherPolicy
FakeInputDispatcherPolicy	services/inputflinger/tests/InputDispatcher_test.cpp	/^class FakeInputDispatcherPolicy : public InputDispatcherPolicyInterface {$/;"	c	namespace:android	file:
FakeInputListener	services/inputflinger/tests/InputReader_test.cpp	/^    FakeInputListener() {$/;"	f	class:android::FakeInputListener
FakeInputListener	services/inputflinger/tests/InputReader_test.cpp	/^class FakeInputListener : public InputListenerInterface {$/;"	c	namespace:android	file:
FakeInputMapper	services/inputflinger/tests/InputReader_test.cpp	/^    FakeInputMapper(InputDevice* device, uint32_t sources) :$/;"	f	class:android::FakeInputMapper
FakeInputMapper	services/inputflinger/tests/InputReader_test.cpp	/^class FakeInputMapper : public InputMapper {$/;"	c	namespace:android	file:
FakeInputReaderContext	services/inputflinger/tests/InputReader_test.cpp	/^    FakeInputReaderContext(const sp<EventHubInterface>& eventHub,$/;"	f	class:android::FakeInputReaderContext
FakeInputReaderContext	services/inputflinger/tests/InputReader_test.cpp	/^class FakeInputReaderContext : public InputReaderContext {$/;"	c	namespace:android	file:
FakeInputReaderPolicy	services/inputflinger/tests/InputReader_test.cpp	/^    FakeInputReaderPolicy() {$/;"	f	class:android::FakeInputReaderPolicy
FakeInputReaderPolicy	services/inputflinger/tests/InputReader_test.cpp	/^class FakeInputReaderPolicy : public InputReaderPolicyInterface {$/;"	c	namespace:android	file:
FakePointerController	services/inputflinger/tests/InputReader_test.cpp	/^    FakePointerController() :$/;"	f	class:android::FakePointerController
FakePointerController	services/inputflinger/tests/InputReader_test.cpp	/^class FakePointerController : public PointerControllerInterface {$/;"	c	namespace:android	file:
FallbackAction	include/input/KeyCharacterMap.h	/^    struct FallbackAction {$/;"	s	class:android::KeyCharacterMap
FdTextOutput	libs/binder/Static.cpp	/^    FdTextOutput(int fd) : BufferedTextOutput(MULTITHREADED), mFD(fd) { }$/;"	f	class:android::FdTextOutput
FdTextOutput	libs/binder/Static.cpp	/^class FdTextOutput : public BufferedTextOutput$/;"	c	namespace:android	file:
FeatureInfo	opengl/tools/glgen2/registry/reg.py	/^class FeatureInfo(BaseInfo):$/;"	c
Fence	include/ui/Fence.h	/^class Fence$/;"	c	namespace:android
Fence	libs/ui/Fence.cpp	/^Fence::Fence() :$/;"	f	class:android::Fence
Fence	libs/ui/Fence.cpp	/^Fence::Fence(int fenceFd) :$/;"	f	class:android::Fence
Fifo	include/gui/BufferQueueCore.h	/^    typedef Vector<BufferItem> Fifo;$/;"	t	class:android::BufferQueueCore
FillBufferDone	include/media/openmax/OMX_Core.h	/^    OMX_ERRORTYPE (*FillBufferDone)($/;"	m	struct:OMX_CALLBACKTYPE
FillThisBuffer	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*FillThisBuffer)($/;"	m	struct:OMX_COMPONENTTYPE
Finished	include/input/InputTransport.h	/^        struct Finished {$/;"	s	union:android::InputMessage::Body
FlattenableHelper	include/binder/Parcel.h	/^        explicit FlattenableHelper(const Flattenable<T>& val) : val(val) { }$/;"	f	class:android::Parcel::FlattenableHelper
FlattenableHelper	include/binder/Parcel.h	/^    class FlattenableHelper : public FlattenableHelperInterface {$/;"	c	class:android::Parcel
FlattenableHelperInterface	include/binder/Parcel.h	/^    class FlattenableHelperInterface {$/;"	c	class:android::Parcel
FloatRect	services/surfaceflinger/DisplayHardware/FloatRect.h	/^    inline FloatRect() { }$/;"	f	class:android::FloatRect
FloatRect	services/surfaceflinger/DisplayHardware/FloatRect.h	/^    inline FloatRect(const Rect& other)$/;"	f	class:android::FloatRect
FloatRect	services/surfaceflinger/DisplayHardware/FloatRect.h	/^class FloatRect$/;"	c	namespace:android
Floats	services/sensorservice/traits.h	/^            float, double, long double) Floats;$/;"	t	class:android::TypeTraits
FlushInfo	services/sensorservice/SensorService.h	/^            FlushInfo() : mPendingFlushEventsToSend(0), mFirstFlushPending(false) {}$/;"	f	struct:android::SensorService::SensorEventConnection::FlushInfo
FlushInfo	services/sensorservice/SensorService.h	/^        struct FlushInfo {$/;"	s	class:android::SensorService::SensorEventConnection
Foo	libs/input/tests/StructLayout_test.cpp	/^struct Foo {$/;"	s	namespace:android	file:
Format	include/input/KeyCharacterMap.h	/^    enum Format {$/;"	g	class:android::KeyCharacterMap
FormaterManipFunc	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^    typedef Formatter& (*FormaterManipFunc)(Formatter&);$/;"	t	class:android::Formatter	file:
Formatter	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^    Formatter() : mIndent(0) {}$/;"	f	class:android::Formatter
Formatter	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^class Formatter {$/;"	c	namespace:android	file:
FragmentTest	opengl/tests/gl_perf/fragment_shaders.cpp	/^} FragmentTest;$/;"	t	typeref:struct:FragmentTestRec	file:
FragmentTestRec	opengl/tests/gl_perf/fragment_shaders.cpp	/^typedef struct FragmentTestRec {$/;"	s	file:
FrameAvailableListener	include/gui/BufferItemConsumer.h	/^    typedef ConsumerBase::FrameAvailableListener FrameAvailableListener;$/;"	t	class:android::BufferItemConsumer
FrameAvailableListener	include/gui/ConsumerBase.h	/^    struct FrameAvailableListener : public virtual RefBase {$/;"	s	class:android::ConsumerBase
FrameAvailableListener	include/gui/CpuConsumer.h	/^    typedef ConsumerBase::FrameAvailableListener FrameAvailableListener;$/;"	t	class:android::CpuConsumer
FrameAvailableListener	include/gui/GLConsumer.h	/^    typedef ConsumerBase::FrameAvailableListener FrameAvailableListener;$/;"	t	class:android::GLConsumer
FrameBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  typedef GLMessage_FrameBuffer FrameBuffer;$/;"	t	class:android::gltrace::GLMessage
FrameCompletionThread	opengl/libs/EGL/eglApi.cpp	/^    FrameCompletionThread() : mFramesQueued(0), mFramesCompleted(0) {}$/;"	f	class:FrameCompletionThread	file:
FrameCompletionThread	opengl/libs/EGL/eglApi.cpp	/^class FrameCompletionThread : public Thread {$/;"	c	file:
FrameCondition	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        FrameCondition():$/;"	f	class:android::SurfaceTextureGLThreadToGLTest::FrameCondition
FrameCondition	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^    class FrameCondition : public GLConsumer::FrameAvailableListener {$/;"	c	class:android::SurfaceTextureGLThreadToGLTest
FrameRateHelper	services/surfaceflinger/FrameRateHelper.h	/^        FrameRateHelper() : mTime(0), mFps(0), mFpsCount(0) {}$/;"	f	class:android::FrameRateHelper
FrameRateHelper	services/surfaceflinger/FrameRateHelper.h	/^class FrameRateHelper {$/;"	c	namespace:android
FrameRecord	services/surfaceflinger/FrameTracker.h	/^        FrameRecord() :$/;"	f	struct:android::FrameTracker::FrameRecord
FrameRecord	services/surfaceflinger/FrameTracker.h	/^    struct FrameRecord {$/;"	s	class:android::FrameTracker
FrameStats	include/ui/FrameStats.h	/^class FrameStats : public LightFlattenable<FrameStats> {$/;"	c	namespace:android
FrameTracker	services/surfaceflinger/FrameTracker.cpp	/^FrameTracker::FrameTracker() :$/;"	f	class:android::FrameTracker
FrameTracker	services/surfaceflinger/FrameTracker.h	/^class FrameTracker {$/;"	c	namespace:android
FrameWaiter	libs/gui/tests/CpuConsumer_test.cpp	/^        FrameWaiter():$/;"	f	class:android::CpuConsumerTest::FrameWaiter
FrameWaiter	libs/gui/tests/CpuConsumer_test.cpp	/^    class FrameWaiter : public CpuConsumer::FrameAvailableListener {$/;"	c	class:android::CpuConsumerTest	file:
FrameWaiter	libs/gui/tests/FrameWaiter.h	/^    FrameWaiter():$/;"	f	class:android::FrameWaiter
FrameWaiter	libs/gui/tests/FrameWaiter.h	/^class FrameWaiter : public GLConsumer::FrameAvailableListener {$/;"	c	namespace:android
FramebufferNativeWindow	include/ui/FramebufferNativeWindow.h	/^class FramebufferNativeWindow $/;"	c	namespace:android
FramebufferNativeWindow	libs/ui/FramebufferNativeWindow.cpp	/^FramebufferNativeWindow::FramebufferNativeWindow() $/;"	f	class:android::FramebufferNativeWindow
FramebufferSurface	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^FramebufferSurface::FramebufferSurface(HWComposer& hwc, int disp,$/;"	f	class:android::FramebufferSurface
FramebufferSurface	services/surfaceflinger/DisplayHardware/FramebufferSurface.h	/^class FramebufferSurface : public ConsumerBase,$/;"	c	namespace:android
FreeBuffer	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*FreeBuffer)($/;"	m	struct:OMX_COMPONENTTYPE
Function	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  typedef GLMessage_Function Function;$/;"	t	class:android::gltrace::GLMessage
Function_ARRAYSIZE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage::Function_ARRAYSIZE;$/;"	m	class:android::gltrace::GLMessage	file:
Function_ARRAYSIZE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int Function_ARRAYSIZE =$/;"	m	class:android::gltrace::GLMessage
Function_IsValid	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static inline bool Function_IsValid(int value) {$/;"	f	class:android::gltrace::GLMessage
Function_MAX	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::Function_MAX;$/;"	m	class:android::gltrace::GLMessage	file:
Function_MAX	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function Function_MAX =$/;"	m	class:android::gltrace::GLMessage
Function_MIN	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::Function_MIN;$/;"	m	class:android::gltrace::GLMessage	file:
Function_MIN	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function Function_MIN =$/;"	m	class:android::gltrace::GLMessage
Fusion	services/sensorservice/Fusion.cpp	/^Fusion::Fusion() {$/;"	f	class:android::Fusion
Fusion	services/sensorservice/Fusion.h	/^class Fusion {$/;"	c	namespace:android
G11ImplClass	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jclass G11ImplClass;$/;"	v	file:
GAMEPAD_KEYCODES	services/inputflinger/EventHub.cpp	/^static const int32_t GAMEPAD_KEYCODES[] = {$/;"	m	namespace:android	file:
GEOMETRIC_SCALE	services/inputflinger/tests/InputReader_test.cpp	/^    static const float GEOMETRIC_SCALE;$/;"	m	class:android::TouchInputMapperTest	file:
GEOMETRIC_SCALE	services/inputflinger/tests/InputReader_test.cpp	/^const float TouchInputMapperTest::GEOMETRIC_SCALE =$/;"	m	class:android::TouchInputMapperTest	file:
GESTURE_MODE_POINTER	services/inputflinger/InputReader.h	/^            GESTURE_MODE_POINTER,$/;"	e	enum:android::TouchInputMapper::Parameters::GestureMode
GESTURE_MODE_SPOTS	services/inputflinger/InputReader.h	/^            GESTURE_MODE_SPOTS,$/;"	e	enum:android::TouchInputMapper::Parameters::GestureMode
GET_ACTIVE_CONFIG	include/gui/ISurfaceComposer.h	/^        GET_ACTIVE_CONFIG,$/;"	e	enum:android::BnSurfaceComposer::__anon137
GET_ANIMATION_FRAME_STATS	include/gui/ISurfaceComposer.h	/^        GET_ANIMATION_FRAME_STATS,$/;"	e	enum:android::BnSurfaceComposer::__anon137
GET_BUILT_IN_DISPLAY	include/gui/ISurfaceComposer.h	/^        GET_BUILT_IN_DISPLAY,$/;"	e	enum:android::BnSurfaceComposer::__anon137
GET_DATA_CHANNEL	libs/gui/IDisplayEventConnection.cpp	/^    GET_DATA_CHANNEL = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon263	file:
GET_DISPLAY_CONFIGS	include/gui/ISurfaceComposer.h	/^        GET_DISPLAY_CONFIGS,$/;"	e	enum:android::BnSurfaceComposer::__anon137
GET_DISPLAY_STATS	include/gui/ISurfaceComposer.h	/^        GET_DISPLAY_STATS,$/;"	e	enum:android::BnSurfaceComposer::__anon137
GET_DOCK_PROPERTY	include/batteryservice/IBatteryPropertiesRegistrar.h	/^    GET_DOCK_PROPERTY,$/;"	e	enum:android::__anon124
GET_LAYER_FRAME_STATS	libs/gui/ISurfaceComposerClient.cpp	/^    GET_LAYER_FRAME_STATS$/;"	e	enum:android::__anon249	file:
GET_MEMORY	libs/binder/IMemory.cpp	/^    GET_MEMORY = IBinder::FIRST_CALL_TRANSACTION$/;"	e	enum:android::__anon267	file:
GET_PROPERTY	include/batteryservice/IBatteryPropertiesRegistrar.h	/^    GET_PROPERTY,$/;"	e	enum:android::__anon124
GET_RELEASED_BUFFERS	libs/gui/IGraphicBufferConsumer.cpp	/^    GET_RELEASED_BUFFERS,$/;"	e	enum:android::__anon261	file:
GET_SENSOR_CHANNEL	libs/gui/ISensorEventConnection.cpp	/^    GET_SENSOR_CHANNEL = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon260	file:
GET_SENSOR_LIST	libs/gui/ISensorServer.cpp	/^    GET_SENSOR_LIST = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon251	file:
GET_SERVICE_TRANSACTION	include/binder/IServiceManager.h	/^        GET_SERVICE_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::IServiceManager::__anon208
GET_SIDEBAND_STREAM	libs/gui/IGraphicBufferConsumer.cpp	/^    GET_SIDEBAND_STREAM,$/;"	e	enum:android::__anon261	file:
GET_TLS	opengl/libs/EGL/getProcAddress.cpp	216;"	d	file:
GET_TLS	opengl/libs/EGL/getProcAddress.cpp	35;"	d	file:
GET_TLS	opengl/libs/EGL/getProcAddress.cpp	39;"	d	file:
GET_TLS	opengl/libs/GLES_CM/gl.cpp	105;"	d	file:
GET_TOKEN_TRANSACTION	include/binder/IAppOpsService.h	/^        GET_TOKEN_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION+6,$/;"	e	enum:android::IAppOpsService::__anon199
GL	opengl/libagl/context.h	/^    typedef ogles_context_t* GL;$/;"	t	struct:android::gl::prims_t
GL2CameraEye	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^public class GL2CameraEye extends Activity {$/;"	c
GL2JNIActivity	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIActivity.java	/^public class GL2JNIActivity extends Activity {$/;"	c
GL2JNILib	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNILib.java	/^public class GL2JNILib {$/;"	c
GL2JNIView	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^    public GL2JNIView(Context context) {$/;"	m	class:GL2JNIView
GL2JNIView	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^    public GL2JNIView(Context context, boolean translucent, int depth, int stencil) {$/;"	m	class:GL2JNIView
GL2JNIView	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^class GL2JNIView extends GLSurfaceView {$/;"	c
GL2JavaActivity	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaActivity.java	/^public class GL2JavaActivity extends Activity {$/;"	c
GL2JavaView	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^    public GL2JavaView(Context context) {$/;"	m	class:GL2JavaView
GL2JavaView	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^class GL2JavaView extends GLSurfaceView {$/;"	c
GLAPI	opengl/tests/angeles/include/GLES/gl.h	51;"	d
GLConsumer	include/gui/GLConsumer.h	/^class GLConsumer : public ConsumerBase {$/;"	c	namespace:android
GLConsumer	libs/gui/GLConsumer.cpp	/^GLConsumer::GLConsumer(const sp<IGraphicBufferConsumer>& bq, uint32_t tex,$/;"	f	class:android::GLConsumer
GLConsumer	libs/gui/GLConsumer.cpp	/^GLConsumer::GLConsumer(const sp<IGraphicBufferConsumer>& bq, uint32_t texTarget,$/;"	f	class:android::GLConsumer
GLDEBUGPROCKHR	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRY  *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLDualActivity	opengl/tests/gldual/src/com/android/gldual/GLDualActivity.java	/^public class GLDualActivity extends Activity {$/;"	c
GLDualGL2View	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^    public GLDualGL2View(Context context) {$/;"	m	class:GLDualGL2View
GLDualGL2View	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^    public GLDualGL2View(Context context, AttributeSet set) {$/;"	m	class:GLDualGL2View
GLDualGL2View	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^    public GLDualGL2View(Context context, boolean translucent, int depth, int stencil) {$/;"	m	class:GLDualGL2View
GLDualGL2View	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^class GLDualGL2View extends GLSurfaceView {$/;"	c
GLDualLib	opengl/tests/gldual/src/com/android/gldual/GLDualLib.java	/^public class GLDualLib {$/;"	c
GLES10RenderEngine	services/surfaceflinger/RenderEngine/GLES10RenderEngine.h	/^class GLES10RenderEngine : public GLES11RenderEngine {$/;"	c	namespace:android
GLES11RenderEngine	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^GLES11RenderEngine::GLES11RenderEngine() {$/;"	f	class:android::GLES11RenderEngine
GLES11RenderEngine	services/surfaceflinger/RenderEngine/GLES11RenderEngine.h	/^class GLES11RenderEngine : public RenderEngine {$/;"	c	namespace:android
GLES20RenderEngine	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^GLES20RenderEngine::GLES20RenderEngine() :$/;"	f	class:android::GLES20RenderEngine
GLES20RenderEngine	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^class GLES20RenderEngine : public RenderEngine {$/;"	c	namespace:android
GLESCodeEmitter	opengl/tools/glgen/src/GLESCodeEmitter.java	/^    public GLESCodeEmitter(String classPathName,$/;"	m	class:GLESCodeEmitter
GLESCodeEmitter	opengl/tools/glgen/src/GLESCodeEmitter.java	/^public class GLESCodeEmitter extends JniCodeEmitter {$/;"	c
GLES_VERSION_1_0	services/surfaceflinger/RenderEngine/RenderEngine.h	/^        GLES_VERSION_1_0    = 0x10000,$/;"	e	enum:android::RenderEngine::GlesVersion
GLES_VERSION_1_1	services/surfaceflinger/RenderEngine/RenderEngine.h	/^        GLES_VERSION_1_1    = 0x10001,$/;"	e	enum:android::RenderEngine::GlesVersion
GLES_VERSION_2_0	services/surfaceflinger/RenderEngine/RenderEngine.h	/^        GLES_VERSION_2_0    = 0x20000,$/;"	e	enum:android::RenderEngine::GlesVersion
GLES_VERSION_3_0	services/surfaceflinger/RenderEngine/RenderEngine.h	/^        GLES_VERSION_3_0    = 0x30000,$/;"	e	enum:android::RenderEngine::GlesVersion
GLESv1_CM	opengl/libs/EGL/Loader.h	/^        GLESv1_CM   = 0x02,$/;"	e	enum:android::Loader::__anon241
GLESv1_INDEX	opengl/libs/EGL/egldefs.h	/^        GLESv1_INDEX = 0,$/;"	e	enum:android::egl_connection_t::__anon242
GLESv2	opengl/libs/EGL/Loader.h	/^        GLESv2      = 0x04$/;"	e	enum:android::Loader::__anon241
GLESv2_INDEX	opengl/libs/EGL/egldefs.h	/^        GLESv2_INDEX = 1$/;"	e	enum:android::egl_connection_t::__anon242
GLEnumToString	opengl/libs/EGL/trace.cpp	/^static const char* GLEnumToString(GLenum e) {$/;"	f	namespace:android
GLExtensions	services/surfaceflinger/RenderEngine/GLExtensions.cpp	/^GLExtensions::GLExtensions()$/;"	f	class:android::GLExtensions
GLExtensions	services/surfaceflinger/RenderEngine/GLExtensions.h	/^class GLExtensions : public Singleton<GLExtensions>$/;"	c	namespace:android
GLHelper	cmds/flatland/GLHelper.cpp	/^GLHelper::GLHelper() :$/;"	f	class:android::GLHelper
GLHelper	cmds/flatland/GLHelper.h	/^class GLHelper {$/;"	c	namespace:android
GLJNIActivity	opengl/tests/gl_jni/src/com/android/gljni/GLJNIActivity.java	/^public class GLJNIActivity extends Activity {$/;"	c
GLJNILib	opengl/tests/gl_jni/src/com/android/gljni/GLJNILib.java	/^public class GLJNILib {$/;"	c
GLJNIView	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^    GLJNIView(Context context) {$/;"	m	class:GLJNIView
GLJNIView	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^    public GLJNIView(Context context, AttributeSet attrs) {$/;"	m	class:GLJNIView
GLJNIView	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^class GLJNIView extends GLSurfaceView {$/;"	c
GLMessage	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage::GLMessage()$/;"	f	class:android::gltrace::GLMessage
GLMessage	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage::GLMessage(const GLMessage& from)$/;"	f	class:android::gltrace::GLMessage
GLMessage	opengl/libs/GLES_trace/src/gltrace.pb.h	/^class GLMessage : public ::google::protobuf::MessageLite {$/;"	c	namespace:android::gltrace
GLMessage_DataType	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage_DataType::GLMessage_DataType()$/;"	f	class:android::gltrace::GLMessage_DataType
GLMessage_DataType	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage_DataType::GLMessage_DataType(const GLMessage_DataType& from)$/;"	f	class:android::gltrace::GLMessage_DataType
GLMessage_DataType	opengl/libs/GLES_trace/src/gltrace.pb.h	/^class GLMessage_DataType : public ::google::protobuf::MessageLite {$/;"	c	namespace:android::gltrace
GLMessage_DataType_Type	opengl/libs/GLES_trace/src/gltrace.pb.h	/^enum GLMessage_DataType_Type {$/;"	g	namespace:android::gltrace
GLMessage_DataType_Type_BOOL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_DataType_Type_BOOL = 6,$/;"	e	enum:android::gltrace::GLMessage_DataType_Type
GLMessage_DataType_Type_BYTE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_DataType_Type_BYTE = 3,$/;"	e	enum:android::gltrace::GLMessage_DataType_Type
GLMessage_DataType_Type_CHAR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_DataType_Type_CHAR = 2,$/;"	e	enum:android::gltrace::GLMessage_DataType_Type
GLMessage_DataType_Type_ENUM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_DataType_Type_ENUM = 7,$/;"	e	enum:android::gltrace::GLMessage_DataType_Type
GLMessage_DataType_Type_FLOAT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_DataType_Type_FLOAT = 5,$/;"	e	enum:android::gltrace::GLMessage_DataType_Type
GLMessage_DataType_Type_INT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_DataType_Type_INT = 4,$/;"	e	enum:android::gltrace::GLMessage_DataType_Type
GLMessage_DataType_Type_INT64	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_DataType_Type_INT64 = 8$/;"	e	enum:android::gltrace::GLMessage_DataType_Type
GLMessage_DataType_Type_IsValid	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^bool GLMessage_DataType_Type_IsValid(int value) {$/;"	f	namespace:android::gltrace
GLMessage_DataType_Type_Type_ARRAYSIZE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^const int GLMessage_DataType_Type_Type_ARRAYSIZE = GLMessage_DataType_Type_Type_MAX + 1;$/;"	m	namespace:android::gltrace
GLMessage_DataType_Type_Type_MAX	opengl/libs/GLES_trace/src/gltrace.pb.h	/^const GLMessage_DataType_Type GLMessage_DataType_Type_Type_MAX = GLMessage_DataType_Type_INT64;$/;"	m	namespace:android::gltrace
GLMessage_DataType_Type_Type_MIN	opengl/libs/GLES_trace/src/gltrace.pb.h	/^const GLMessage_DataType_Type GLMessage_DataType_Type_Type_MIN = GLMessage_DataType_Type_VOID;$/;"	m	namespace:android::gltrace
GLMessage_DataType_Type_VOID	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_DataType_Type_VOID = 1,$/;"	e	enum:android::gltrace::GLMessage_DataType_Type
GLMessage_FrameBuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage_FrameBuffer::GLMessage_FrameBuffer()$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
GLMessage_FrameBuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage_FrameBuffer::GLMessage_FrameBuffer(const GLMessage_FrameBuffer& from)$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
GLMessage_FrameBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^class GLMessage_FrameBuffer : public ::google::protobuf::MessageLite {$/;"	c	namespace:android::gltrace
GLMessage_Function	opengl/libs/GLES_trace/src/gltrace.pb.h	/^enum GLMessage_Function {$/;"	g	namespace:android::gltrace
GLMessage_Function_Function_ARRAYSIZE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^const int GLMessage_Function_Function_ARRAYSIZE = GLMessage_Function_Function_MAX + 1;$/;"	m	namespace:android::gltrace
GLMessage_Function_Function_MAX	opengl/libs/GLES_trace/src/gltrace.pb.h	/^const GLMessage_Function GLMessage_Function_Function_MAX = GLMessage_Function_glVertexAttribPointerData;$/;"	m	namespace:android::gltrace
GLMessage_Function_Function_MIN	opengl/libs/GLES_trace/src/gltrace.pb.h	/^const GLMessage_Function GLMessage_Function_Function_MIN = GLMessage_Function_glActiveTexture;$/;"	m	namespace:android::gltrace
GLMessage_Function_IsValid	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^bool GLMessage_Function_IsValid(int value) {$/;"	f	namespace:android::gltrace
GLMessage_Function_eglBindAPI	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglBindAPI = 2029,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglBindTexImage	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglBindTexImage = 2026,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglChooseConfig	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglChooseConfig = 2004,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglClientWaitSyncKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglClientWaitSyncKHR = 2040,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglCopyBuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglCopyBuffers = 2021,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglCreateContext	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglCreateContext = 2011,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglCreateImageKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglCreateImageKHR = 2036,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglCreatePbufferFromClientBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglCreatePbufferFromClientBuffer = 2033,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglCreatePbufferSurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglCreatePbufferSurface = 2008,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglCreatePixmapSurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglCreatePixmapSurface = 2007,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglCreateSyncKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglCreateSyncKHR = 2038,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglCreateWindowSurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglCreateWindowSurface = 2006,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglDestroyContext	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglDestroyContext = 2012,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglDestroyImageKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglDestroyImageKHR = 2037,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglDestroySurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglDestroySurface = 2009,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglDestroySyncKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglDestroySyncKHR = 2039,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetConfigAttrib	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetConfigAttrib = 2005,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetConfigs	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetConfigs = 2003,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetCurrentContext	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetCurrentContext = 2014,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetCurrentDisplay	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetCurrentDisplay = 2016,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetCurrentSurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetCurrentSurface = 2015,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetDisplay	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetDisplay = 2000,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetError	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetError = 2022,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetProcAddress	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetProcAddress = 2024,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetRenderBufferANDROID	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetRenderBufferANDROID = 2043,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetSyncAttribKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetSyncAttribKHR = 2041,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetSystemTimeFrequencyNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetSystemTimeFrequencyNV = 2044,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglGetSystemTimeNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglGetSystemTimeNV = 2045,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglInitialize	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglInitialize = 2001,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglLockSurfaceKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglLockSurfaceKHR = 2034,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglMakeCurrent	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglMakeCurrent = 2013,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglQueryAPI	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglQueryAPI = 2030,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglQueryContext	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglQueryContext = 2017,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglQueryString	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglQueryString = 2023,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglQuerySurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglQuerySurface = 2010,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglReleaseTexImage	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglReleaseTexImage = 2027,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglReleaseThread	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglReleaseThread = 2032,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglSetSwapRectangleANDROID	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglSetSwapRectangleANDROID = 2042,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglSurfaceAttrib	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglSurfaceAttrib = 2025,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglSwapBuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglSwapBuffers = 2020,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglSwapInterval	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglSwapInterval = 2028,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglTerminate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglTerminate = 2002,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglUnlockSurfaceKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglUnlockSurfaceKHR = 2035,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglWaitClient	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglWaitClient = 2031,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglWaitGL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglWaitGL = 2018,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_eglWaitNative	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_eglWaitNative = 2019,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glActiveShaderProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glActiveShaderProgram = 640,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glActiveShaderProgramEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glActiveShaderProgramEXT = 502,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glActiveTexture	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glActiveTexture = 0,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glAlphaFunc	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glAlphaFunc = 1,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glAlphaFuncQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glAlphaFuncQCOM = 503,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glAlphaFuncx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glAlphaFuncx = 2,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glAlphaFuncxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glAlphaFuncxOES = 3,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glAttachShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glAttachShader = 4,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBeginPerfMonitorAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBeginPerfMonitorAMD = 5,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBeginPerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBeginPerfQueryINTEL = 480,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBeginQuery	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBeginQuery = 386,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBeginQueryEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBeginQueryEXT = 504,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBeginTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBeginTransformFeedback = 409,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindAttribLocation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindAttribLocation = 6,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindBuffer = 7,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindBufferBase	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindBufferBase = 412,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindBufferRange	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindBufferRange = 411,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindFramebuffer = 8,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindFramebufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindFramebufferOES = 9,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindImageTexture	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindImageTexture = 641,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindProgramPipeline	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindProgramPipeline = 642,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindProgramPipelineEXT = 505,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindRenderbuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindRenderbuffer = 10,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindRenderbufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindRenderbufferOES = 11,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindSampler	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindSampler = 458,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindTexture	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindTexture = 12,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindTransformFeedback = 466,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindVertexArray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindVertexArray = 404,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindVertexArrayOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindVertexArrayOES = 13,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBindVertexBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBindVertexBuffer = 643,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendBarrierKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendBarrierKHR = 490,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendBarrierNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendBarrierNV = 491,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendColor	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendColor = 14,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendEquation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendEquation = 15,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendEquationOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendEquationOES = 16,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendEquationSeparate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendEquationSeparate = 17,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendEquationSeparateOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendEquationSeparateOES = 18,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendEquationSeparateiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendEquationSeparateiEXT = 708,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendEquationiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendEquationiEXT = 709,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendFunc	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendFunc = 19,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendFuncSeparate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendFuncSeparate = 20,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendFuncSeparateOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendFuncSeparateOES = 21,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendFuncSeparateiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendFuncSeparateiEXT = 710,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendFunciEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendFunciEXT = 711,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlendParameteriNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlendParameteriNV = 492,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlitFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlitFramebuffer = 399,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlitFramebufferANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlitFramebufferANGLE = 506,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBlitFramebufferNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBlitFramebufferNV = 493,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBufferData	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBufferData = 22,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glBufferSubData	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glBufferSubData = 23,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCheckFramebufferStatus	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCheckFramebufferStatus = 24,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCheckFramebufferStatusOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCheckFramebufferStatusOES = 25,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClear	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClear = 33,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearBufferfi	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearBufferfi = 435,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearBufferfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearBufferfv = 434,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearBufferiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearBufferiv = 432,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearBufferuiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearBufferuiv = 433,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearColor	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearColor = 26,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearColorx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearColorx = 27,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearColorxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearColorxOES = 28,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearDepthf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearDepthf = 29,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearDepthfOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearDepthfOES = 30,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearDepthx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearDepthx = 31,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearDepthxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearDepthxOES = 32,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClearStencil	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClearStencil = 34,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClientActiveTexture	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClientActiveTexture = 35,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClientWaitSync	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClientWaitSync = 449,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClientWaitSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClientWaitSyncAPPLE = 497,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClipPlanef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClipPlanef = 36,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClipPlanefIMG	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClipPlanefIMG = 37,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClipPlanefOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClipPlanefOES = 38,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClipPlanex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClipPlanex = 39,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClipPlanexIMG	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClipPlanexIMG = 40,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glClipPlanexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glClipPlanexOES = 41,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glColor4f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glColor4f = 42,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glColor4ub	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glColor4ub = 43,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glColor4x	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glColor4x = 44,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glColor4xOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glColor4xOES = 45,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glColorMask	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glColorMask = 46,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glColorMaskiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glColorMaskiEXT = 712,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glColorPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glColorPointer = 47,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCompileShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCompileShader = 48,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCompressedTexImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCompressedTexImage2D = 49,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCompressedTexImage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCompressedTexImage3D = 381,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCompressedTexImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCompressedTexImage3DOES = 50,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCompressedTexSubImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCompressedTexSubImage2D = 51,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCompressedTexSubImage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCompressedTexSubImage3D = 382,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCompressedTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCompressedTexSubImage3DOES = 52,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCopyBufferSubData	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCopyBufferSubData = 437,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCopyBufferSubDataNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCopyBufferSubDataNV = 501,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCopyImageSubDataEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCopyImageSubDataEXT = 713,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCopyTexImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCopyTexImage2D = 53,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCopyTexSubImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCopyTexSubImage2D = 54,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCopyTexSubImage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCopyTexSubImage3D = 380,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCopyTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCopyTexSubImage3DOES = 55,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCopyTextureLevelsAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCopyTextureLevelsAPPLE = 562,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCoverageMaskNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCoverageMaskNV = 56,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCoverageOperationNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCoverageOperationNV = 57,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCreatePerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCreatePerfQueryINTEL = 481,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCreateProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCreateProgram = 58,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCreateShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCreateShader = 59,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCreateShaderProgramv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCreateShaderProgramv = 644,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCreateShaderProgramvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCreateShaderProgramvEXT = 507,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCullFace	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCullFace = 60,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glCurrentPaletteMatrixOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glCurrentPaletteMatrixOES = 61,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDebugMessageCallbackKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDebugMessageCallbackKHR = 565,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDebugMessageControlKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDebugMessageControlKHR = 563,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDebugMessageInsertKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDebugMessageInsertKHR = 564,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteBuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteBuffers = 62,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteFencesNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteFencesNV = 63,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteFramebuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteFramebuffers = 64,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteFramebuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteFramebuffersOES = 65,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeletePerfMonitorsAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeletePerfMonitorsAMD = 66,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeletePerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeletePerfQueryINTEL = 482,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteProgram = 67,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteProgramPipelines	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteProgramPipelines = 645,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteProgramPipelinesEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteProgramPipelinesEXT = 508,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteQueries	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteQueries = 384,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteQueriesEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteQueriesEXT = 509,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteRenderbuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteRenderbuffers = 68,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteRenderbuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteRenderbuffersOES = 69,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteSamplers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteSamplers = 456,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteShader = 70,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteSync	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteSync = 448,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteSyncAPPLE = 496,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteTextures	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteTextures = 71,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteTransformFeedbacks	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteTransformFeedbacks = 467,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteVertexArrays	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteVertexArrays = 405,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDeleteVertexArraysOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDeleteVertexArraysOES = 72,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDepthFunc	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDepthFunc = 73,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDepthMask	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDepthMask = 74,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDepthRangef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDepthRangef = 75,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDepthRangefOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDepthRangefOES = 76,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDepthRangex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDepthRangex = 77,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDepthRangexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDepthRangexOES = 78,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDetachShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDetachShader = 79,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDisable	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDisable = 82,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDisableClientState	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDisableClientState = 80,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDisableDriverControlQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDisableDriverControlQCOM = 81,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDisableVertexAttribArray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDisableVertexAttribArray = 83,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDisableiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDisableiEXT = 714,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDiscardFramebufferEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDiscardFramebufferEXT = 84,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDispatchCompute	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDispatchCompute = 646,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDispatchComputeIndirect	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDispatchComputeIndirect = 647,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawArrays	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawArrays = 85,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawArraysIndirect	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawArraysIndirect = 648,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawArraysInstanced	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawArraysInstanced = 444,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawArraysInstancedANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawArraysInstancedANGLE = 574,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawArraysInstancedEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawArraysInstancedEXT = 577,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawArraysInstancedNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawArraysInstancedNV = 580,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawBuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawBuffers = 392,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawBuffersEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawBuffersEXT = 583,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawBuffersIndexedEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawBuffersIndexedEXT = 585,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawBuffersNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawBuffersNV = 510,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawElements	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawElements = 86,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawElementsIndirect	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawElementsIndirect = 649,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawElementsInstanced	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawElementsInstanced = 445,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawElementsInstancedANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawElementsInstancedANGLE = 575,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawElementsInstancedEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawElementsInstancedEXT = 578,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawElementsInstancedNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawElementsInstancedNV = 581,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawRangeElements	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawRangeElements = 377,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawTexfOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawTexfOES = 87,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawTexfvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawTexfvOES = 88,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawTexiOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawTexiOES = 89,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawTexivOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawTexivOES = 90,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawTexsOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawTexsOES = 91,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawTexsvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawTexsvOES = 92,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawTexxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawTexxOES = 93,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glDrawTexxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glDrawTexxvOES = 94,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEGLImageTargetRenderbufferStorageOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEGLImageTargetRenderbufferStorageOES = 95,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEGLImageTargetTexture2DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEGLImageTargetTexture2DOES = 96,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEnable	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEnable = 99,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEnableClientState	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEnableClientState = 97,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEnableDriverControlQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEnableDriverControlQCOM = 98,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEnableVertexAttribArray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEnableVertexAttribArray = 100,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEnableiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEnableiEXT = 715,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEndPerfMonitorAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEndPerfMonitorAMD = 101,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEndPerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEndPerfQueryINTEL = 483,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEndQuery	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEndQuery = 387,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEndQueryEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEndQueryEXT = 511,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEndTilingQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEndTilingQCOM = 102,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glEndTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glEndTransformFeedback = 410,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtGetBufferPointervQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtGetBufferPointervQCOM = 103,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtGetBuffersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtGetBuffersQCOM = 104,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtGetFramebuffersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtGetFramebuffersQCOM = 105,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtGetProgramBinarySourceQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtGetProgramBinarySourceQCOM = 106,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtGetProgramsQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtGetProgramsQCOM = 107,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtGetRenderbuffersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtGetRenderbuffersQCOM = 108,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtGetShadersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtGetShadersQCOM = 109,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtGetTexLevelParameterivQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtGetTexLevelParameterivQCOM = 110,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtGetTexSubImageQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtGetTexSubImageQCOM = 111,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtGetTexturesQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtGetTexturesQCOM = 112,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtIsProgramBinaryQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtIsProgramBinaryQCOM = 113,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glExtTexObjectStateOverrideiQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glExtTexObjectStateOverrideiQCOM = 114,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFenceSync	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFenceSync = 446,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFenceSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFenceSyncAPPLE = 494,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFinish	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFinish = 116,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFinishFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFinishFenceNV = 115,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFlush	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFlush = 117,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFlushMappedBufferRange	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFlushMappedBufferRange = 403,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFlushMappedBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFlushMappedBufferRangeEXT = 588,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFogf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFogf = 118,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFogfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFogfv = 119,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFogx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFogx = 120,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFogxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFogxOES = 121,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFogxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFogxv = 122,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFogxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFogxvOES = 123,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFramebufferParameteri	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFramebufferParameteri = 650,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFramebufferRenderbuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFramebufferRenderbuffer = 124,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFramebufferRenderbufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFramebufferRenderbufferOES = 125,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFramebufferTexture2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFramebufferTexture2D = 126,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFramebufferTexture2DMultisampleEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFramebufferTexture2DMultisampleEXT = 512,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFramebufferTexture2DMultisampleIMG	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFramebufferTexture2DMultisampleIMG = 127,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFramebufferTexture2DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFramebufferTexture2DOES = 128,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFramebufferTexture3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFramebufferTexture3DOES = 129,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFramebufferTextureEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFramebufferTextureEXT = 716,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFramebufferTextureLayer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFramebufferTextureLayer = 401,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFrontFace	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFrontFace = 130,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFrustumf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFrustumf = 131,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFrustumfOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFrustumfOES = 132,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFrustumx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFrustumx = 133,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glFrustumxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glFrustumxOES = 134,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenBuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenBuffers = 135,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenFencesNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenFencesNV = 138,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenFramebuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenFramebuffers = 139,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenFramebuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenFramebuffersOES = 140,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenPerfMonitorsAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenPerfMonitorsAMD = 141,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenProgramPipelines	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenProgramPipelines = 651,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenProgramPipelinesEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenProgramPipelinesEXT = 513,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenQueries	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenQueries = 383,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenQueriesEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenQueriesEXT = 514,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenRenderbuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenRenderbuffers = 142,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenRenderbuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenRenderbuffersOES = 143,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenSamplers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenSamplers = 455,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenTextures	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenTextures = 144,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenTransformFeedbacks	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenTransformFeedbacks = 468,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenVertexArrays	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenVertexArrays = 406,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenVertexArraysOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenVertexArraysOES = 145,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenerateMipmap	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenerateMipmap = 136,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGenerateMipmapOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGenerateMipmapOES = 137,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetActiveAttrib	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetActiveAttrib = 146,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetActiveUniform	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetActiveUniform = 147,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetActiveUniformBlockName	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetActiveUniformBlockName = 442,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetActiveUniformBlockiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetActiveUniformBlockiv = 441,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetActiveUniformsiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetActiveUniformsiv = 439,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetAttachedShaders	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetAttachedShaders = 148,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetAttribLocation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetAttribLocation = 149,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetBooleani_v	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetBooleani_v = 652,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetBooleanv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetBooleanv = 150,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetBufferParameteri64v	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetBufferParameteri64v = 454,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetBufferParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetBufferParameteriv = 151,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetBufferPointerv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetBufferPointerv = 391,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetBufferPointervOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetBufferPointervOES = 152,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetClipPlanef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetClipPlanef = 153,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetClipPlanefOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetClipPlanefOES = 154,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetClipPlanex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetClipPlanex = 155,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetClipPlanexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetClipPlanexOES = 156,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetDebugMessageLogKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetDebugMessageLogKHR = 566,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetDriverControlStringQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetDriverControlStringQCOM = 158,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetDriverControlsQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetDriverControlsQCOM = 157,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetError	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetError = 159,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetFenceivNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetFenceivNV = 160,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetFirstPerfQueryIdINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetFirstPerfQueryIdINTEL = 484,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetFixedv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetFixedv = 161,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetFixedvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetFixedvOES = 162,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetFloatv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetFloatv = 163,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetFragDataLocation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetFragDataLocation = 423,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetFramebufferAttachmentParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetFramebufferAttachmentParameteriv = 164,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetFramebufferAttachmentParameterivOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetFramebufferAttachmentParameterivOES = 165,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetFramebufferParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetFramebufferParameteriv = 653,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetGraphicsResetStatusEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetGraphicsResetStatusEXT = 515,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetInteger64i_v	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetInteger64i_v = 453,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetInteger64v	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetInteger64v = 451,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetInteger64vAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetInteger64vAPPLE = 499,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetIntegeri_v	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetIntegeri_v = 408,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetIntegeri_vEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetIntegeri_vEXT = 586,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetIntegerv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetIntegerv = 166,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetInternalformativ	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetInternalformativ = 479,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetLightfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetLightfv = 167,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetLightxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetLightxv = 168,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetLightxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetLightxvOES = 169,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetMaterialfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetMaterialfv = 170,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetMaterialxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetMaterialxv = 171,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetMaterialxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetMaterialxvOES = 172,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetMultisamplefv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetMultisamplefv = 654,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetNextPerfQueryIdINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetNextPerfQueryIdINTEL = 485,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetObjectLabelEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetObjectLabelEXT = 516,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetObjectLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetObjectLabelKHR = 570,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetObjectPtrLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetObjectPtrLabelKHR = 572,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPerfCounterInfoINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPerfCounterInfoINTEL = 486,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPerfMonitorCounterDataAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPerfMonitorCounterDataAMD = 173,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPerfMonitorCounterInfoAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPerfMonitorCounterInfoAMD = 174,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPerfMonitorCounterStringAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPerfMonitorCounterStringAMD = 176,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPerfMonitorCountersAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPerfMonitorCountersAMD = 175,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPerfMonitorGroupStringAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPerfMonitorGroupStringAMD = 178,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPerfMonitorGroupsAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPerfMonitorGroupsAMD = 177,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPerfQueryDataINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPerfQueryDataINTEL = 487,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPerfQueryIdByNameINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPerfQueryIdByNameINTEL = 488,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPerfQueryInfoINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPerfQueryInfoINTEL = 489,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPointerv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPointerv = 179,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetPointervKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetPointervKHR = 573,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramBinary	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramBinary = 472,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramBinaryOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramBinaryOES = 180,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramInfoLog	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramInfoLog = 181,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramInterfaceiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramInterfaceiv = 655,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramPipelineInfoLog	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramPipelineInfoLog = 656,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramPipelineInfoLogEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramPipelineInfoLogEXT = 517,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramPipelineiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramPipelineiv = 657,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramPipelineivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramPipelineivEXT = 518,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramResourceIndex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramResourceIndex = 658,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramResourceLocation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramResourceLocation = 659,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramResourceName	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramResourceName = 660,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramResourceiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramResourceiv = 661,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetProgramiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetProgramiv = 182,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetQueryObjecti64vEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetQueryObjecti64vEXT = 590,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetQueryObjectivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetQueryObjectivEXT = 591,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetQueryObjectui64vEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetQueryObjectui64vEXT = 592,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetQueryObjectuiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetQueryObjectuiv = 389,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetQueryObjectuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetQueryObjectuivEXT = 519,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetQueryiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetQueryiv = 388,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetQueryivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetQueryivEXT = 520,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetRenderbufferParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetRenderbufferParameteriv = 183,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetRenderbufferParameterivOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetRenderbufferParameterivOES = 184,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetSamplerParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetSamplerParameterIivEXT = 717,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetSamplerParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetSamplerParameterIuivEXT = 718,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetSamplerParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetSamplerParameterfv = 464,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetSamplerParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetSamplerParameteriv = 463,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetShaderInfoLog	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetShaderInfoLog = 185,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetShaderPrecisionFormat	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetShaderPrecisionFormat = 187,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetShaderSource	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetShaderSource = 188,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetShaderiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetShaderiv = 186,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetString	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetString = 189,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetStringi	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetStringi = 436,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetSynciv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetSynciv = 452,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetSyncivAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetSyncivAPPLE = 500,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexEnvfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexEnvfv = 190,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexEnviv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexEnviv = 191,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexEnvxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexEnvxv = 192,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexEnvxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexEnvxvOES = 193,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexGenfvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexGenfvOES = 194,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexGenivOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexGenivOES = 195,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexGenxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexGenxvOES = 196,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexLevelParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexLevelParameterfv = 662,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexLevelParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexLevelParameteriv = 663,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexParameterIivEXT = 719,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexParameterIuivEXT = 720,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexParameterfv = 197,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexParameteriv = 198,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexParameterxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexParameterxv = 199,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTexParameterxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTexParameterxvOES = 200,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTransformFeedbackVarying	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTransformFeedbackVarying = 414,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetTranslatedShaderSourceANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetTranslatedShaderSourceANGLE = 593,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetUniformBlockIndex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetUniformBlockIndex = 440,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetUniformIndices	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetUniformIndices = 438,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetUniformLocation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetUniformLocation = 203,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetUniformfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetUniformfv = 201,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetUniformiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetUniformiv = 202,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetUniformuiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetUniformuiv = 422,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetVertexAttribIiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetVertexAttribIiv = 416,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetVertexAttribIuiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetVertexAttribIuiv = 417,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetVertexAttribPointerv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetVertexAttribPointerv = 206,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetVertexAttribfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetVertexAttribfv = 204,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetVertexAttribiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetVertexAttribiv = 205,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetnUniformfvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetnUniformfvEXT = 521,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glGetnUniformivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glGetnUniformivEXT = 521,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glHint	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glHint = 207,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glInsertEventMarkerEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glInsertEventMarkerEXT = 522,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glInvalidateFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glInvalidateFramebuffer = 475,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glInvalidateSubFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glInvalidateSubFramebuffer = 476,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsBuffer = 208,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsEnabled	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsEnabled = 209,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsEnablediEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsEnablediEXT = 721,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsFenceNV = 210,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsFramebuffer = 211,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsFramebufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsFramebufferOES = 212,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsProgram = 213,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsProgramPipeline	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsProgramPipeline = 664,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsProgramPipelineEXT = 523,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsQuery	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsQuery = 385,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsQueryEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsQueryEXT = 524,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsRenderbuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsRenderbuffer = 214,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsRenderbufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsRenderbufferOES = 215,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsSampler	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsSampler = 457,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsShader = 216,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsSync	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsSync = 447,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsSyncAPPLE = 495,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsTexture	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsTexture = 217,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsTransformFeedback = 469,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsVertexArray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsVertexArray = 407,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glIsVertexArrayOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glIsVertexArrayOES = 218,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLabelObjectEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLabelObjectEXT = 525,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightModelf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightModelf = 221,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightModelfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightModelfv = 222,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightModelx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightModelx = 223,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightModelxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightModelxOES = 224,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightModelxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightModelxv = 225,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightModelxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightModelxvOES = 226,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightf = 219,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightfv = 220,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightx = 227,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightxOES = 228,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightxv = 229,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLightxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLightxvOES = 230,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLineWidth	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLineWidth = 231,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLineWidthx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLineWidthx = 232,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLineWidthxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLineWidthxOES = 233,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLinkProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLinkProgram = 234,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLoadIdentity	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLoadIdentity = 235,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLoadMatrixf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLoadMatrixf = 236,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLoadMatrixx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLoadMatrixx = 237,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLoadMatrixxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLoadMatrixxOES = 238,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLoadPaletteFromModelViewMatrixOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLoadPaletteFromModelViewMatrixOES = 239,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glLogicOp	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glLogicOp = 240,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMapBufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMapBufferOES = 241,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMapBufferRange	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMapBufferRange = 402,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMapBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMapBufferRangeEXT = 587,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMaterialf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMaterialf = 242,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMaterialfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMaterialfv = 243,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMaterialx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMaterialx = 244,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMaterialxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMaterialxOES = 245,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMaterialxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMaterialxv = 246,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMaterialxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMaterialxvOES = 247,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMatrixIndexPointerOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMatrixIndexPointerOES = 248,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMatrixMode	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMatrixMode = 249,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMemoryBarrier	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMemoryBarrier = 665,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMemoryBarrierByRegion	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMemoryBarrierByRegion = 666,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMinSampleShadingOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMinSampleShadingOES = 594,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultMatrixf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultMatrixf = 255,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultMatrixx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultMatrixx = 256,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultMatrixxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultMatrixxOES = 257,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiDrawArraysEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiDrawArraysEXT = 250,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiDrawElementsEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiDrawElementsEXT = 251,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord1bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord1bOES = 595,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord1bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord1bvOES = 596,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord2bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord2bOES = 597,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord2bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord2bvOES = 598,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord3bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord3bOES = 599,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord3bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord3bvOES = 600,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord4bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord4bOES = 601,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord4bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord4bvOES = 602,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord4f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord4f = 252,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord4x	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord4x = 253,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glMultiTexCoord4xOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glMultiTexCoord4xOES = 254,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glNormal3f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glNormal3f = 258,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glNormal3x	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glNormal3x = 259,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glNormal3xOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glNormal3xOES = 260,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glNormalPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glNormalPointer = 261,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glObjectLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glObjectLabelKHR = 569,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glObjectPtrLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glObjectPtrLabelKHR = 571,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glOrthof	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glOrthof = 262,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glOrthofOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glOrthofOES = 263,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glOrthox	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glOrthox = 264,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glOrthoxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glOrthoxOES = 265,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPatchParameteriEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPatchParameteriEXT = 722,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPauseTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPauseTransformFeedback = 470,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPixelStorei	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPixelStorei = 266,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPointParameterf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPointParameterf = 267,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPointParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPointParameterfv = 268,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPointParameterx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPointParameterx = 269,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPointParameterxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPointParameterxOES = 270,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPointParameterxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPointParameterxv = 271,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPointParameterxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPointParameterxvOES = 272,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPointSize	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPointSize = 273,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPointSizePointerOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPointSizePointerOES = 274,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPointSizex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPointSizex = 275,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPointSizexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPointSizexOES = 276,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPolygonOffset	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPolygonOffset = 277,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPolygonOffsetx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPolygonOffsetx = 278,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPolygonOffsetxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPolygonOffsetxOES = 279,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPopDebugGroupKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPopDebugGroupKHR = 568,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPopGroupMarkerEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPopGroupMarkerEXT = 526,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPopMatrix	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPopMatrix = 280,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPrimitiveBoundingBoxEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPrimitiveBoundingBoxEXT = 723,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramBinary	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramBinary = 473,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramBinaryOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramBinaryOES = 281,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramParameteri	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramParameteri = 474,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramParameteriEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramParameteriEXT = 527,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1f = 667,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1fEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1fEXT = 528,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1fv = 668,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1fvEXT = 529,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1i = 669,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1iEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1iEXT = 530,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1iv = 670,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1ivEXT = 531,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1ui = 671,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1uiEXT = 617,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1uiv = 672,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform1uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform1uivEXT = 621,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2f = 673,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2fEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2fEXT = 532,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2fv = 674,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2fvEXT = 533,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2i = 675,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2iEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2iEXT = 534,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2iv = 676,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2ivEXT = 535,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2ui = 677,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2uiEXT = 618,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2uiv = 678,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform2uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform2uivEXT = 622,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3f = 679,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3fEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3fEXT = 536,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3fv = 680,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3fvEXT = 537,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3i = 681,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3iEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3iEXT = 538,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3iv = 682,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3ivEXT = 539,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3ui = 683,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3uiEXT = 619,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3uiv = 684,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform3uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform3uivEXT = 623,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4f = 685,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4fEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4fEXT = 540,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4fv = 686,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4fvEXT = 541,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4i = 687,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4iEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4iEXT = 542,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4iv = 688,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4ivEXT = 543,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4ui = 689,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4uiEXT = 620,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4uiv = 690,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniform4uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniform4uivEXT = 624,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix2fv = 691,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix2fvEXT = 544,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix2x3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix2x3fv = 692,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix2x3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix2x3fvEXT = 625,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix2x4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix2x4fv = 693,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix2x4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix2x4fvEXT = 627,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix3fv = 694,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix3fvEXT = 545,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix3x2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix3x2fv = 695,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix3x2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix3x2fvEXT = 626,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix3x4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix3x4fv = 696,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix3x4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix3x4fvEXT = 629,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix4fv = 697,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix4fvEXT = 546,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix4x2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix4x2fv = 698,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix4x2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix4x2fvEXT = 628,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix4x3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix4x3fv = 699,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glProgramUniformMatrix4x3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glProgramUniformMatrix4x3fvEXT = 630,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPushDebugGroupKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPushDebugGroupKHR = 567,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPushGroupMarkerEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPushGroupMarkerEXT = 547,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glPushMatrix	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glPushMatrix = 282,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glQueryCounterEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glQueryCounterEXT = 589,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glQueryMatrixxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glQueryMatrixxOES = 283,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glReadBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glReadBuffer = 376,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glReadBufferIndexedEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glReadBufferIndexedEXT = 584,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glReadBufferNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glReadBufferNV = 548,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glReadPixels	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glReadPixels = 284,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glReadnPixelsEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glReadnPixelsEXT = 549,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glReleaseShaderCompiler	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glReleaseShaderCompiler = 285,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRenderbufferStorage	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRenderbufferStorage = 286,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRenderbufferStorageMultisample	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRenderbufferStorageMultisample = 400,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRenderbufferStorageMultisampleANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRenderbufferStorageMultisampleANGLE = 550,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRenderbufferStorageMultisampleAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRenderbufferStorageMultisampleAPPLE = 551,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRenderbufferStorageMultisampleEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRenderbufferStorageMultisampleEXT = 552,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRenderbufferStorageMultisampleIMG	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRenderbufferStorageMultisampleIMG = 287,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRenderbufferStorageMultisampleNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRenderbufferStorageMultisampleNV = 631,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRenderbufferStorageOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRenderbufferStorageOES = 288,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glResolveMultisampleFramebufferAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glResolveMultisampleFramebufferAPPLE = 553,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glResumeTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glResumeTransformFeedback = 471,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRotatef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRotatef = 289,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRotatex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRotatex = 290,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glRotatexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glRotatexOES = 291,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSampleCoverage	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSampleCoverage = 292,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSampleCoverageOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSampleCoverageOES = 632,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSampleCoveragex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSampleCoveragex = 293,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSampleCoveragexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSampleCoveragexOES = 294,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSampleMaski	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSampleMaski = 700,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSamplerParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSamplerParameterIivEXT = 724,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSamplerParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSamplerParameterIuivEXT = 725,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSamplerParameterf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSamplerParameterf = 461,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSamplerParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSamplerParameterfv = 462,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSamplerParameteri	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSamplerParameteri = 459,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSamplerParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSamplerParameteriv = 460,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glScalef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glScalef = 295,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glScalex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glScalex = 296,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glScalexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glScalexOES = 297,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glScissor	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glScissor = 298,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSelectPerfMonitorCountersAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSelectPerfMonitorCountersAMD = 299,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glSetFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glSetFenceNV = 300,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glShadeModel	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glShadeModel = 301,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glShaderBinary	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glShaderBinary = 302,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glShaderSource	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glShaderSource = 303,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glStartTilingQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glStartTilingQCOM = 304,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glStencilFunc	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glStencilFunc = 305,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glStencilFuncSeparate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glStencilFuncSeparate = 306,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glStencilMask	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glStencilMask = 307,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glStencilMaskSeparate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glStencilMaskSeparate = 308,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glStencilOp	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glStencilOp = 309,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glStencilOpSeparate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glStencilOpSeparate = 310,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTestFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTestFenceNV = 311,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexBufferEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexBufferEXT = 726,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexBufferRangeEXT = 727,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexCoord1bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexCoord1bOES = 603,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexCoord1bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexCoord1bvOES = 604,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexCoord2bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexCoord2bOES = 605,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexCoord2bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexCoord2bvOES = 606,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexCoord3bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexCoord3bOES = 607,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexCoord3bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexCoord3bvOES = 608,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexCoord4bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexCoord4bOES = 609,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexCoord4bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexCoord4bvOES = 610,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexCoordPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexCoordPointer = 312,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexEnvf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexEnvf = 313,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexEnvfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexEnvfv = 314,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexEnvi	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexEnvi = 315,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexEnviv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexEnviv = 316,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexEnvx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexEnvx = 317,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexEnvxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexEnvxOES = 318,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexEnvxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexEnvxv = 319,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexEnvxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexEnvxvOES = 320,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexGenfOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexGenfOES = 321,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexGenfvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexGenfvOES = 322,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexGeniOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexGeniOES = 323,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexGenivOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexGenivOES = 324,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexGenxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexGenxOES = 325,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexGenxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexGenxvOES = 326,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexImage2D = 327,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexImage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexImage3D = 378,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexImage3DOES = 328,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexParameterIivEXT = 728,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexParameterIuivEXT = 729,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexParameterf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexParameterf = 329,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexParameterfv = 330,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexParameteri	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexParameteri = 331,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexParameteriv = 332,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexParameterx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexParameterx = 333,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexParameterxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexParameterxOES = 334,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexParameterxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexParameterxv = 335,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexParameterxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexParameterxvOES = 336,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexStorage1DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexStorage1DEXT = 554,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexStorage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexStorage2D = 477,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexStorage2DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexStorage2DEXT = 555,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexStorage2DMultisample	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexStorage2DMultisample = 701,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexStorage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexStorage3D = 478,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexStorage3DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexStorage3DEXT = 556,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexStorage3DMultisampleOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexStorage3DMultisampleOES = 633,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexSubImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexSubImage2D = 337,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexSubImage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexSubImage3D = 379,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTexSubImage3DOES = 338,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTextureStorage1DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTextureStorage1DEXT = 557,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTextureStorage2DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTextureStorage2DEXT = 558,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTextureStorage3DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTextureStorage3DEXT = 559,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTextureViewEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTextureViewEXT = 730,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTransformFeedbackVaryings	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTransformFeedbackVaryings = 413,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTranslatef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTranslatef = 339,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTranslatex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTranslatex = 340,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glTranslatexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glTranslatexOES = 341,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform1f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform1f = 342,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform1fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform1fv = 343,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform1i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform1i = 344,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform1iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform1iv = 345,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform1ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform1ui = 424,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform1uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform1uiv = 428,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform2f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform2f = 346,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform2fv = 347,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform2i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform2i = 348,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform2iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform2iv = 349,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform2ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform2ui = 425,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform2uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform2uiv = 429,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform3f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform3f = 350,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform3fv = 351,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform3i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform3i = 352,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform3iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform3iv = 353,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform3ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform3ui = 426,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform3uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform3uiv = 430,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform4f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform4f = 354,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform4fv = 355,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform4i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform4i = 356,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform4iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform4iv = 357,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform4ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform4ui = 427,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniform4uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniform4uiv = 431,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformBlockBinding	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformBlockBinding = 443,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix2fv = 358,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix2x3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix2x3fv = 393,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix2x3fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix2x3fvNV = 634,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix2x4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix2x4fv = 395,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix2x4fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix2x4fvNV = 636,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix3fv = 359,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix3x2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix3x2fv = 394,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix3x2fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix3x2fvNV = 635,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix3x4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix3x4fv = 397,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix3x4fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix3x4fvNV = 638,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix4fv = 360,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix4x2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix4x2fv = 396,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix4x2fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix4x2fvNV = 637,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix4x3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix4x3fv = 398,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUniformMatrix4x3fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUniformMatrix4x3fvNV = 639,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUnmapBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUnmapBuffer = 390,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUnmapBufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUnmapBufferOES = 361,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUseProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUseProgram = 362,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUseProgramStages	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUseProgramStages = 702,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glUseProgramStagesEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glUseProgramStagesEXT = 560,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glValidateProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glValidateProgram = 363,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glValidateProgramPipeline	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glValidateProgramPipeline = 703,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glValidateProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glValidateProgramPipelineEXT = 561,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertex2bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertex2bOES = 611,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertex2bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertex2bvOES = 612,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertex3bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertex3bOES = 613,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertex3bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertex3bvOES = 614,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertex4bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertex4bOES = 615,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertex4bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertex4bvOES = 616,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttrib1f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttrib1f = 364,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttrib1fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttrib1fv = 365,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttrib2f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttrib2f = 366,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttrib2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttrib2fv = 367,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttrib3f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttrib3f = 368,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttrib3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttrib3fv = 369,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttrib4f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttrib4f = 370,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttrib4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttrib4fv = 371,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribBinding	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribBinding = 704,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribDivisor	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribDivisor = 465,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribDivisorANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribDivisorANGLE = 576,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribDivisorEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribDivisorEXT = 579,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribDivisorNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribDivisorNV = 582,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribFormat	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribFormat = 705,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribI4i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribI4i = 418,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribI4iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribI4iv = 420,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribI4ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribI4ui = 419,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribI4uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribI4uiv = 421,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribIFormat	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribIFormat = 706,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribIPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribIPointer = 415,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribPointer = 372,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexAttribPointerData	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexAttribPointerData = 3001$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexBindingDivisor	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexBindingDivisor = 707,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glVertexPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glVertexPointer = 373,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glViewport	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glViewport = 374,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glWaitSync	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glWaitSync = 450,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glWaitSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glWaitSyncAPPLE = 498,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_glWeightPointerOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_glWeightPointerOES = 375,$/;"	e	enum:android::gltrace::GLMessage_Function
GLMessage_Function_invalid	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  GLMessage_Function_invalid = 3000,$/;"	e	enum:android::gltrace::GLMessage_Function
GLOBJECT	opengl/tests/angeles/demo.c	/^} GLOBJECT;$/;"	t	typeref:struct:__anon235	file:
GLPROTOBUF_TYPE_MAP	opengl/libs/GLES_trace/tools/genapi.py	/^GLPROTOBUF_TYPE_MAP = {$/;"	v
GLPerfActivity	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfActivity.java	/^public class GLPerfActivity extends Activity {$/;"	c
GLPerfLib	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfLib.java	/^public class GLPerfLib {$/;"	c
GLPerfView	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^    public GLPerfView(Context context) {$/;"	m	class:GLPerfView
GLPerfView	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^    public GLPerfView(Context context, boolean translucent, int depth, int stencil) {$/;"	m	class:GLPerfView
GLPerfView	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^class GLPerfView extends GLSurfaceView {$/;"	c
GLTest	libs/gui/tests/GLTest.h	/^    GLTest() :$/;"	f	class:android::GLTest
GLTest	libs/gui/tests/GLTest.h	/^class GLTest : public ::testing::Test {$/;"	c	namespace:android
GLTraceContext	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^GLTraceContext::GLTraceContext(int id, int version, GLTraceState *state,$/;"	f	class:android::gltrace::GLTraceContext
GLTraceContext	opengl/libs/GLES_trace/src/gltrace_context.h	/^class GLTraceContext {$/;"	c	namespace:android::gltrace
GLTraceState	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^GLTraceState::GLTraceState(TCPStream *stream) {$/;"	f	class:android::gltrace::GLTraceState
GLTraceState	opengl/libs/GLES_trace/src/gltrace_context.h	/^class GLTraceState {$/;"	c	namespace:android::gltrace
GLTrace_eglCreateContext	opengl/libs/GLES_trace/src/gltrace_egl.cpp	/^void GLTrace_eglCreateContext(int version, int contextId) {$/;"	f	namespace:android::gltrace
GLTrace_eglCreateContext	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^void GLTrace_eglCreateContext(int version, EGLContext c) {$/;"	f	namespace:android
GLTrace_eglMakeCurrent	opengl/libs/GLES_trace/src/gltrace_egl.cpp	/^void GLTrace_eglMakeCurrent(int contextId) {$/;"	f	namespace:android::gltrace
GLTrace_eglMakeCurrent	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^void GLTrace_eglMakeCurrent(const unsigned version, gl_hooks_t *hooks, EGLContext c) {$/;"	f	namespace:android
GLTrace_eglReleaseThread	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^void GLTrace_eglReleaseThread() {$/;"	f	namespace:android
GLTrace_eglSwapBuffers	opengl/libs/GLES_trace/src/gltrace_egl.cpp	/^void GLTrace_eglSwapBuffers(void* \/*dpy*\/, void* \/*draw*\/) {$/;"	f	namespace:android::gltrace
GLTrace_eglSwapBuffers	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^void GLTrace_eglSwapBuffers(void *dpy, void *draw) {$/;"	f	namespace:android
GLTrace_getGLHooks	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^gl_hooks_t *GLTrace_getGLHooks() {$/;"	f	namespace:android
GLTrace_glActiveShaderProgram	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glActiveShaderProgram(GLuint pipeline, GLuint program) {$/;"	f	namespace:android::gltrace
GLTrace_glActiveShaderProgramEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glActiveShaderProgramEXT(GLuint pipeline, GLuint program) {$/;"	f	namespace:android::gltrace
GLTrace_glActiveTexture	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glActiveTexture(GLenum texture) {$/;"	f	namespace:android::gltrace
GLTrace_glAlphaFunc	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glAlphaFunc(GLenum func, GLfloat ref) {$/;"	f	namespace:android::gltrace
GLTrace_glAlphaFuncQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glAlphaFuncQCOM(GLenum func, GLclampf ref) {$/;"	f	namespace:android::gltrace
GLTrace_glAlphaFuncx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glAlphaFuncx(GLenum func, GLfixed ref) {$/;"	f	namespace:android::gltrace
GLTrace_glAlphaFuncxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glAlphaFuncxOES(GLenum func, GLfixed ref) {$/;"	f	namespace:android::gltrace
GLTrace_glAttachShader	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glAttachShader(GLuint program, GLuint shader) {$/;"	f	namespace:android::gltrace
GLTrace_glBeginPerfMonitorAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBeginPerfMonitorAMD(GLuint monitor) {$/;"	f	namespace:android::gltrace
GLTrace_glBeginPerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBeginPerfQueryINTEL(GLuint queryHandle) {$/;"	f	namespace:android::gltrace
GLTrace_glBeginQuery	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBeginQuery(GLenum target, GLuint id) {$/;"	f	namespace:android::gltrace
GLTrace_glBeginQueryEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBeginQueryEXT(GLenum target, GLuint id) {$/;"	f	namespace:android::gltrace
GLTrace_glBeginTransformFeedback	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBeginTransformFeedback(GLenum primitiveMode) {$/;"	f	namespace:android::gltrace
GLTrace_glBindAttribLocation	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindAttribLocation(GLuint program, GLuint index, const GLchar * name) {$/;"	f	namespace:android::gltrace
GLTrace_glBindBuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindBuffer(GLenum target, GLuint buffer) {$/;"	f	namespace:android::gltrace
GLTrace_glBindBufferBase	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindBufferBase(GLenum target, GLuint index, GLuint buffer) {$/;"	f	namespace:android::gltrace
GLTrace_glBindBufferRange	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) {$/;"	f	namespace:android::gltrace
GLTrace_glBindFramebuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindFramebuffer(GLenum target, GLuint framebuffer) {$/;"	f	namespace:android::gltrace
GLTrace_glBindFramebufferOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindFramebufferOES(GLenum target, GLuint framebuffer) {$/;"	f	namespace:android::gltrace
GLTrace_glBindImageTexture	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format) {$/;"	f	namespace:android::gltrace
GLTrace_glBindProgramPipeline	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindProgramPipeline(GLuint pipeline) {$/;"	f	namespace:android::gltrace
GLTrace_glBindProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindProgramPipelineEXT(GLuint pipeline) {$/;"	f	namespace:android::gltrace
GLTrace_glBindRenderbuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindRenderbuffer(GLenum target, GLuint renderbuffer) {$/;"	f	namespace:android::gltrace
GLTrace_glBindRenderbufferOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindRenderbufferOES(GLenum target, GLuint renderbuffer) {$/;"	f	namespace:android::gltrace
GLTrace_glBindSampler	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindSampler(GLuint unit, GLuint sampler) {$/;"	f	namespace:android::gltrace
GLTrace_glBindTexture	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindTexture(GLenum target, GLuint texture) {$/;"	f	namespace:android::gltrace
GLTrace_glBindTransformFeedback	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindTransformFeedback(GLenum target, GLuint id) {$/;"	f	namespace:android::gltrace
GLTrace_glBindVertexArray	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindVertexArray(GLuint array) {$/;"	f	namespace:android::gltrace
GLTrace_glBindVertexArrayOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindVertexArrayOES(GLuint array) {$/;"	f	namespace:android::gltrace
GLTrace_glBindVertexBuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendBarrierKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendBarrierKHR(void) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendBarrierNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendBarrierNV(void) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendColor	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendEquation	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendEquation(GLenum mode) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendEquationOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendEquationOES(GLenum mode) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendEquationSeparate	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendEquationSeparateOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendEquationSeparateOES(GLenum modeRGB, GLenum modeAlpha) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendEquationSeparateiEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendEquationiEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendEquationiEXT(GLuint buf, GLenum mode) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendFunc	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendFunc(GLenum sfactor, GLenum dfactor) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendFuncSeparate	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendFuncSeparateOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendFuncSeparateOES(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendFuncSeparateiEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendFunciEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst) {$/;"	f	namespace:android::gltrace
GLTrace_glBlendParameteriNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlendParameteriNV(GLenum pname, GLint value) {$/;"	f	namespace:android::gltrace
GLTrace_glBlitFramebuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) {$/;"	f	namespace:android::gltrace
GLTrace_glBlitFramebufferANGLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) {$/;"	f	namespace:android::gltrace
GLTrace_glBlitFramebufferNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) {$/;"	f	namespace:android::gltrace
GLTrace_glBufferData	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBufferData(GLenum target, GLsizeiptr size, const void * data, GLenum usage) {$/;"	f	namespace:android::gltrace
GLTrace_glBufferSubData	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void * data) {$/;"	f	namespace:android::gltrace
GLTrace_glCheckFramebufferStatus	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLenum GLTrace_glCheckFramebufferStatus(GLenum target) {$/;"	f	namespace:android::gltrace
GLTrace_glCheckFramebufferStatusOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLenum GLTrace_glCheckFramebufferStatusOES(GLenum target) {$/;"	f	namespace:android::gltrace
GLTrace_glClear	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClear(GLbitfield mask) {$/;"	f	namespace:android::gltrace
GLTrace_glClearBufferfi	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) {$/;"	f	namespace:android::gltrace
GLTrace_glClearBufferfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glClearBufferiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glClearBufferuiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glClearColor	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) {$/;"	f	namespace:android::gltrace
GLTrace_glClearColorx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearColorx(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) {$/;"	f	namespace:android::gltrace
GLTrace_glClearColorxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) {$/;"	f	namespace:android::gltrace
GLTrace_glClearDepthf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearDepthf(GLfloat d) {$/;"	f	namespace:android::gltrace
GLTrace_glClearDepthfOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearDepthfOES(GLclampf depth) {$/;"	f	namespace:android::gltrace
GLTrace_glClearDepthx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearDepthx(GLfixed depth) {$/;"	f	namespace:android::gltrace
GLTrace_glClearDepthxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearDepthxOES(GLfixed depth) {$/;"	f	namespace:android::gltrace
GLTrace_glClearStencil	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClearStencil(GLint s) {$/;"	f	namespace:android::gltrace
GLTrace_glClientActiveTexture	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClientActiveTexture(GLenum texture) {$/;"	f	namespace:android::gltrace
GLTrace_glClientWaitSync	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLenum GLTrace_glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout) {$/;"	f	namespace:android::gltrace
GLTrace_glClientWaitSyncAPPLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLenum GLTrace_glClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout) {$/;"	f	namespace:android::gltrace
GLTrace_glClipPlanef	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClipPlanef(GLenum p, const GLfloat * eqn) {$/;"	f	namespace:android::gltrace
GLTrace_glClipPlanefIMG	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClipPlanefIMG(GLenum p, const GLfloat * eqn) {$/;"	f	namespace:android::gltrace
GLTrace_glClipPlanefOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClipPlanefOES(GLenum plane, const GLfloat * equation) {$/;"	f	namespace:android::gltrace
GLTrace_glClipPlanex	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClipPlanex(GLenum plane, const GLfixed * equation) {$/;"	f	namespace:android::gltrace
GLTrace_glClipPlanexIMG	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClipPlanexIMG(GLenum p, const GLfixed * eqn) {$/;"	f	namespace:android::gltrace
GLTrace_glClipPlanexOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glClipPlanexOES(GLenum plane, const GLfixed * equation) {$/;"	f	namespace:android::gltrace
GLTrace_glColor4f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) {$/;"	f	namespace:android::gltrace
GLTrace_glColor4ub	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha) {$/;"	f	namespace:android::gltrace
GLTrace_glColor4x	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glColor4x(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) {$/;"	f	namespace:android::gltrace
GLTrace_glColor4xOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha) {$/;"	f	namespace:android::gltrace
GLTrace_glColorMask	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) {$/;"	f	namespace:android::gltrace
GLTrace_glColorMaskiEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) {$/;"	f	namespace:android::gltrace
GLTrace_glColorPointer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glColorPointer(GLint size, GLenum type, GLsizei stride, const void * pointer) {$/;"	f	namespace:android::gltrace
GLTrace_glCompileShader	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCompileShader(GLuint shader) {$/;"	f	namespace:android::gltrace
GLTrace_glCompressedTexImage2D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data) {$/;"	f	namespace:android::gltrace
GLTrace_glCompressedTexImage3D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data) {$/;"	f	namespace:android::gltrace
GLTrace_glCompressedTexImage3DOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data) {$/;"	f	namespace:android::gltrace
GLTrace_glCompressedTexSubImage2D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data) {$/;"	f	namespace:android::gltrace
GLTrace_glCompressedTexSubImage3D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data) {$/;"	f	namespace:android::gltrace
GLTrace_glCompressedTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data) {$/;"	f	namespace:android::gltrace
GLTrace_glCopyBufferSubData	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) {$/;"	f	namespace:android::gltrace
GLTrace_glCopyBufferSubDataNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) {$/;"	f	namespace:android::gltrace
GLTrace_glCopyImageSubDataEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth) {$/;"	f	namespace:android::gltrace
GLTrace_glCopyTexImage2D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) {$/;"	f	namespace:android::gltrace
GLTrace_glCopyTexSubImage2D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glCopyTexSubImage3D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glCopyTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glCopyTextureLevelsAPPLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount) {$/;"	f	namespace:android::gltrace
GLTrace_glCoverageMaskNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCoverageMaskNV(GLboolean mask) {$/;"	f	namespace:android::gltrace
GLTrace_glCoverageOperationNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCoverageOperationNV(GLenum operation) {$/;"	f	namespace:android::gltrace
GLTrace_glCreatePerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCreatePerfQueryINTEL(GLuint queryId, GLuint * queryHandle) {$/;"	f	namespace:android::gltrace
GLTrace_glCreateProgram	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLuint GLTrace_glCreateProgram(void) {$/;"	f	namespace:android::gltrace
GLTrace_glCreateShader	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLuint GLTrace_glCreateShader(GLenum type) {$/;"	f	namespace:android::gltrace
GLTrace_glCreateShaderProgramv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLuint GLTrace_glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const* strings) {$/;"	f	namespace:android::gltrace
GLTrace_glCreateShaderProgramvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLuint GLTrace_glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar ** strings) {$/;"	f	namespace:android::gltrace
GLTrace_glCullFace	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCullFace(GLenum mode) {$/;"	f	namespace:android::gltrace
GLTrace_glCurrentPaletteMatrixOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glCurrentPaletteMatrixOES(GLuint matrixpaletteindex) {$/;"	f	namespace:android::gltrace
GLTrace_glDebugMessageCallbackKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void * userParam) {$/;"	f	namespace:android::gltrace
GLTrace_glDebugMessageControlKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled) {$/;"	f	namespace:android::gltrace
GLTrace_glDebugMessageInsertKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteBuffers	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteBuffers(GLsizei n, const GLuint * buffers) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteFencesNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteFencesNV(GLsizei n, const GLuint * fences) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteFramebuffers	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteFramebuffers(GLsizei n, const GLuint * framebuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteFramebuffersOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteFramebuffersOES(GLsizei n, const GLuint * framebuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glDeletePerfMonitorsAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeletePerfMonitorsAMD(GLsizei n, GLuint * monitors) {$/;"	f	namespace:android::gltrace
GLTrace_glDeletePerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeletePerfQueryINTEL(GLuint queryHandle) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteProgram	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteProgram(GLuint program) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteProgramPipelines	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteProgramPipelines(GLsizei n, const GLuint * pipelines) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteProgramPipelinesEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteProgramPipelinesEXT(GLsizei n, const GLuint * pipelines) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteQueries	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteQueries(GLsizei n, const GLuint * ids) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteQueriesEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteQueriesEXT(GLsizei n, const GLuint * ids) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteRenderbuffers	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteRenderbuffersOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteRenderbuffersOES(GLsizei n, const GLuint * renderbuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteSamplers	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteSamplers(GLsizei count, const GLuint * samplers) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteShader	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteShader(GLuint shader) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteSync	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteSync(GLsync sync) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteSyncAPPLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteSyncAPPLE(GLsync sync) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteTextures	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteTextures(GLsizei n, const GLuint * textures) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteTransformFeedbacks	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteTransformFeedbacks(GLsizei n, const GLuint * ids) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteVertexArrays	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteVertexArrays(GLsizei n, const GLuint * arrays) {$/;"	f	namespace:android::gltrace
GLTrace_glDeleteVertexArraysOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDeleteVertexArraysOES(GLsizei n, const GLuint * arrays) {$/;"	f	namespace:android::gltrace
GLTrace_glDepthFunc	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDepthFunc(GLenum func) {$/;"	f	namespace:android::gltrace
GLTrace_glDepthMask	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDepthMask(GLboolean flag) {$/;"	f	namespace:android::gltrace
GLTrace_glDepthRangef	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDepthRangef(GLfloat n, GLfloat f) {$/;"	f	namespace:android::gltrace
GLTrace_glDepthRangefOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDepthRangefOES(GLclampf n, GLclampf f) {$/;"	f	namespace:android::gltrace
GLTrace_glDepthRangex	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDepthRangex(GLfixed n, GLfixed f) {$/;"	f	namespace:android::gltrace
GLTrace_glDepthRangexOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDepthRangexOES(GLfixed n, GLfixed f) {$/;"	f	namespace:android::gltrace
GLTrace_glDetachShader	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDetachShader(GLuint program, GLuint shader) {$/;"	f	namespace:android::gltrace
GLTrace_glDisable	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDisable(GLenum cap) {$/;"	f	namespace:android::gltrace
GLTrace_glDisableClientState	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDisableClientState(GLenum array) {$/;"	f	namespace:android::gltrace
GLTrace_glDisableDriverControlQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDisableDriverControlQCOM(GLuint driverControl) {$/;"	f	namespace:android::gltrace
GLTrace_glDisableVertexAttribArray	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDisableVertexAttribArray(GLuint index) {$/;"	f	namespace:android::gltrace
GLTrace_glDisableiEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDisableiEXT(GLenum target, GLuint index) {$/;"	f	namespace:android::gltrace
GLTrace_glDiscardFramebufferEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum * attachments) {$/;"	f	namespace:android::gltrace
GLTrace_glDispatchCompute	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z) {$/;"	f	namespace:android::gltrace
GLTrace_glDispatchComputeIndirect	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDispatchComputeIndirect(GLintptr indirect) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawArrays	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawArrays(GLenum mode, GLint first, GLsizei count) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawArraysIndirect	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawArraysIndirect(GLenum mode, const void * indirect) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawArraysInstanced	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawArraysInstancedANGLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawArraysInstancedEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawArraysInstancedNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawBuffers	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawBuffers(GLsizei n, const GLenum * bufs) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawBuffersEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawBuffersEXT(GLsizei n, const GLenum * bufs) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawBuffersIndexedEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawBuffersIndexedEXT(GLint n, const GLenum * location, const GLint * indices) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawBuffersNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawBuffersNV(GLsizei n, const GLenum * bufs) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawElements	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawElements(GLenum mode, GLsizei count, GLenum type, const void * indices) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawElementsIndirect	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawElementsInstanced	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawElementsInstancedANGLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawElementsInstancedEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawElementsInstancedNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawRangeElements	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawTexfOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawTexfvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawTexfvOES(const GLfloat * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawTexiOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawTexivOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawTexivOES(const GLint * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawTexsOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawTexsOES(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawTexsvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawTexsvOES(const GLshort * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawTexxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawTexxOES(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height) {$/;"	f	namespace:android::gltrace
GLTrace_glDrawTexxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glDrawTexxvOES(const GLfixed * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glEGLImageTargetRenderbufferStorageOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image) {$/;"	f	namespace:android::gltrace
GLTrace_glEGLImageTargetTexture2DOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image) {$/;"	f	namespace:android::gltrace
GLTrace_glEnable	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEnable(GLenum cap) {$/;"	f	namespace:android::gltrace
GLTrace_glEnableClientState	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEnableClientState(GLenum array) {$/;"	f	namespace:android::gltrace
GLTrace_glEnableDriverControlQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEnableDriverControlQCOM(GLuint driverControl) {$/;"	f	namespace:android::gltrace
GLTrace_glEnableVertexAttribArray	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEnableVertexAttribArray(GLuint index) {$/;"	f	namespace:android::gltrace
GLTrace_glEnableiEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEnableiEXT(GLenum target, GLuint index) {$/;"	f	namespace:android::gltrace
GLTrace_glEndPerfMonitorAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEndPerfMonitorAMD(GLuint monitor) {$/;"	f	namespace:android::gltrace
GLTrace_glEndPerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEndPerfQueryINTEL(GLuint queryHandle) {$/;"	f	namespace:android::gltrace
GLTrace_glEndQuery	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEndQuery(GLenum target) {$/;"	f	namespace:android::gltrace
GLTrace_glEndQueryEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEndQueryEXT(GLenum target) {$/;"	f	namespace:android::gltrace
GLTrace_glEndTilingQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEndTilingQCOM(GLbitfield preserveMask) {$/;"	f	namespace:android::gltrace
GLTrace_glEndTransformFeedback	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glEndTransformFeedback(void) {$/;"	f	namespace:android::gltrace
GLTrace_glExtGetBufferPointervQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtGetBufferPointervQCOM(GLenum target, void ** params) {$/;"	f	namespace:android::gltrace
GLTrace_glExtGetBuffersQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtGetBuffersQCOM(GLuint * buffers, GLint maxBuffers, GLint * numBuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glExtGetFramebuffersQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtGetFramebuffersQCOM(GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glExtGetProgramBinarySourceQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar * source, GLint * length) {$/;"	f	namespace:android::gltrace
GLTrace_glExtGetProgramsQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtGetProgramsQCOM(GLuint * programs, GLint maxPrograms, GLint * numPrograms) {$/;"	f	namespace:android::gltrace
GLTrace_glExtGetRenderbuffersQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtGetRenderbuffersQCOM(GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glExtGetShadersQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtGetShadersQCOM(GLuint * shaders, GLint maxShaders, GLint * numShaders) {$/;"	f	namespace:android::gltrace
GLTrace_glExtGetTexLevelParameterivQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glExtGetTexSubImageQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels) {$/;"	f	namespace:android::gltrace
GLTrace_glExtGetTexturesQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtGetTexturesQCOM(GLuint * textures, GLint maxTextures, GLint * numTextures) {$/;"	f	namespace:android::gltrace
GLTrace_glExtIsProgramBinaryQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glExtIsProgramBinaryQCOM(GLuint program) {$/;"	f	namespace:android::gltrace
GLTrace_glExtTexObjectStateOverrideiQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param) {$/;"	f	namespace:android::gltrace
GLTrace_glFenceSync	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLsync GLTrace_glFenceSync(GLenum condition, GLbitfield flags) {$/;"	f	namespace:android::gltrace
GLTrace_glFenceSyncAPPLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLsync GLTrace_glFenceSyncAPPLE(GLenum condition, GLbitfield flags) {$/;"	f	namespace:android::gltrace
GLTrace_glFinish	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFinish(void) {$/;"	f	namespace:android::gltrace
GLTrace_glFinishFenceNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFinishFenceNV(GLuint fence) {$/;"	f	namespace:android::gltrace
GLTrace_glFlush	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFlush(void) {$/;"	f	namespace:android::gltrace
GLTrace_glFlushMappedBufferRange	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length) {$/;"	f	namespace:android::gltrace
GLTrace_glFlushMappedBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length) {$/;"	f	namespace:android::gltrace
GLTrace_glFogf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFogf(GLenum pname, GLfloat param) {$/;"	f	namespace:android::gltrace
GLTrace_glFogfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFogfv(GLenum pname, const GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glFogx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFogx(GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glFogxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFogxOES(GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glFogxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFogxv(GLenum pname, const GLfixed * param) {$/;"	f	namespace:android::gltrace
GLTrace_glFogxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFogxvOES(GLenum pname, const GLfixed * param) {$/;"	f	namespace:android::gltrace
GLTrace_glFramebufferParameteri	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFramebufferParameteri(GLenum target, GLenum pname, GLint param) {$/;"	f	namespace:android::gltrace
GLTrace_glFramebufferRenderbuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) {$/;"	f	namespace:android::gltrace
GLTrace_glFramebufferRenderbufferOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFramebufferRenderbufferOES(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) {$/;"	f	namespace:android::gltrace
GLTrace_glFramebufferTexture2D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) {$/;"	f	namespace:android::gltrace
GLTrace_glFramebufferTexture2DMultisampleEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples) {$/;"	f	namespace:android::gltrace
GLTrace_glFramebufferTexture2DMultisampleIMG	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples) {$/;"	f	namespace:android::gltrace
GLTrace_glFramebufferTexture2DOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFramebufferTexture2DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) {$/;"	f	namespace:android::gltrace
GLTrace_glFramebufferTexture3DOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) {$/;"	f	namespace:android::gltrace
GLTrace_glFramebufferTextureEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level) {$/;"	f	namespace:android::gltrace
GLTrace_glFramebufferTextureLayer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) {$/;"	f	namespace:android::gltrace
GLTrace_glFrontFace	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFrontFace(GLenum mode) {$/;"	f	namespace:android::gltrace
GLTrace_glFrustumf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFrustumf(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f) {$/;"	f	namespace:android::gltrace
GLTrace_glFrustumfOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f) {$/;"	f	namespace:android::gltrace
GLTrace_glFrustumx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFrustumx(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f) {$/;"	f	namespace:android::gltrace
GLTrace_glFrustumxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glFrustumxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f) {$/;"	f	namespace:android::gltrace
GLTrace_glGenBuffers	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenBuffers(GLsizei n, GLuint * buffers) {$/;"	f	namespace:android::gltrace
GLTrace_glGenFencesNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenFencesNV(GLsizei n, GLuint * fences) {$/;"	f	namespace:android::gltrace
GLTrace_glGenFramebuffers	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenFramebuffers(GLsizei n, GLuint * framebuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glGenFramebuffersOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenFramebuffersOES(GLsizei n, GLuint * framebuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glGenPerfMonitorsAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenPerfMonitorsAMD(GLsizei n, GLuint * monitors) {$/;"	f	namespace:android::gltrace
GLTrace_glGenProgramPipelines	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenProgramPipelines(GLsizei n, GLuint * pipelines) {$/;"	f	namespace:android::gltrace
GLTrace_glGenProgramPipelinesEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenProgramPipelinesEXT(GLsizei n, GLuint * pipelines) {$/;"	f	namespace:android::gltrace
GLTrace_glGenQueries	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenQueries(GLsizei n, GLuint * ids) {$/;"	f	namespace:android::gltrace
GLTrace_glGenQueriesEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenQueriesEXT(GLsizei n, GLuint * ids) {$/;"	f	namespace:android::gltrace
GLTrace_glGenRenderbuffers	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenRenderbuffers(GLsizei n, GLuint * renderbuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glGenRenderbuffersOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenRenderbuffersOES(GLsizei n, GLuint * renderbuffers) {$/;"	f	namespace:android::gltrace
GLTrace_glGenSamplers	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenSamplers(GLsizei count, GLuint * samplers) {$/;"	f	namespace:android::gltrace
GLTrace_glGenTextures	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenTextures(GLsizei n, GLuint * textures) {$/;"	f	namespace:android::gltrace
GLTrace_glGenTransformFeedbacks	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenTransformFeedbacks(GLsizei n, GLuint * ids) {$/;"	f	namespace:android::gltrace
GLTrace_glGenVertexArrays	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenVertexArrays(GLsizei n, GLuint * arrays) {$/;"	f	namespace:android::gltrace
GLTrace_glGenVertexArraysOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenVertexArraysOES(GLsizei n, GLuint * arrays) {$/;"	f	namespace:android::gltrace
GLTrace_glGenerateMipmap	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenerateMipmap(GLenum target) {$/;"	f	namespace:android::gltrace
GLTrace_glGenerateMipmapOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGenerateMipmapOES(GLenum target) {$/;"	f	namespace:android::gltrace
GLTrace_glGetActiveAttrib	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name) {$/;"	f	namespace:android::gltrace
GLTrace_glGetActiveUniform	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name) {$/;"	f	namespace:android::gltrace
GLTrace_glGetActiveUniformBlockName	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName) {$/;"	f	namespace:android::gltrace
GLTrace_glGetActiveUniformBlockiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetActiveUniformsiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetAttachedShaders	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders) {$/;"	f	namespace:android::gltrace
GLTrace_glGetAttribLocation	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLint GLTrace_glGetAttribLocation(GLuint program, const GLchar * name) {$/;"	f	namespace:android::gltrace
GLTrace_glGetBooleani_v	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetBooleani_v(GLenum target, GLuint index, GLboolean * data) {$/;"	f	namespace:android::gltrace
GLTrace_glGetBooleanv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetBooleanv(GLenum pname, GLboolean * data) {$/;"	f	namespace:android::gltrace
GLTrace_glGetBufferParameteri64v	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetBufferParameteriv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetBufferPointerv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetBufferPointerv(GLenum target, GLenum pname, void ** params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetBufferPointervOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetBufferPointervOES(GLenum target, GLenum pname, void ** params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetClipPlanef	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetClipPlanef(GLenum plane, GLfloat * equation) {$/;"	f	namespace:android::gltrace
GLTrace_glGetClipPlanefOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetClipPlanefOES(GLenum plane, GLfloat * equation) {$/;"	f	namespace:android::gltrace
GLTrace_glGetClipPlanex	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetClipPlanex(GLenum plane, GLfixed * equation) {$/;"	f	namespace:android::gltrace
GLTrace_glGetClipPlanexOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetClipPlanexOES(GLenum plane, GLfixed * equation) {$/;"	f	namespace:android::gltrace
GLTrace_glGetDebugMessageLogKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLuint GLTrace_glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog) {$/;"	f	namespace:android::gltrace
GLTrace_glGetDriverControlStringQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString) {$/;"	f	namespace:android::gltrace
GLTrace_glGetDriverControlsQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetDriverControlsQCOM(GLint * num, GLsizei size, GLuint * driverControls) {$/;"	f	namespace:android::gltrace
GLTrace_glGetError	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLenum GLTrace_glGetError(void) {$/;"	f	namespace:android::gltrace
GLTrace_glGetFenceivNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetFenceivNV(GLuint fence, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetFirstPerfQueryIdINTEL	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetFirstPerfQueryIdINTEL(GLuint * queryId) {$/;"	f	namespace:android::gltrace
GLTrace_glGetFixedv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetFixedv(GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetFixedvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetFixedvOES(GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetFloatv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetFloatv(GLenum pname, GLfloat * data) {$/;"	f	namespace:android::gltrace
GLTrace_glGetFragDataLocation	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLint GLTrace_glGetFragDataLocation(GLuint program, const GLchar * name) {$/;"	f	namespace:android::gltrace
GLTrace_glGetFramebufferAttachmentParameteriv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetFramebufferAttachmentParameterivOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetFramebufferAttachmentParameterivOES(GLenum target, GLenum attachment, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetFramebufferParameteriv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetGraphicsResetStatusEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLenum GLTrace_glGetGraphicsResetStatusEXT(void) {$/;"	f	namespace:android::gltrace
GLTrace_glGetInteger64i_v	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetInteger64i_v(GLenum target, GLuint index, GLint64 * data) {$/;"	f	namespace:android::gltrace
GLTrace_glGetInteger64v	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetInteger64v(GLenum pname, GLint64 * data) {$/;"	f	namespace:android::gltrace
GLTrace_glGetInteger64vAPPLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetInteger64vAPPLE(GLenum pname, GLint64 * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetIntegeri_v	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetIntegeri_v(GLenum target, GLuint index, GLint * data) {$/;"	f	namespace:android::gltrace
GLTrace_glGetIntegeri_vEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetIntegeri_vEXT(GLenum target, GLuint index, GLint * data) {$/;"	f	namespace:android::gltrace
GLTrace_glGetIntegerv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetIntegerv(GLenum pname, GLint * data) {$/;"	f	namespace:android::gltrace
GLTrace_glGetInternalformativ	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetLightfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetLightfv(GLenum light, GLenum pname, GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetLightxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetLightxv(GLenum light, GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetLightxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetLightxvOES(GLenum light, GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetMaterialfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetMaterialfv(GLenum face, GLenum pname, GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetMaterialxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetMaterialxv(GLenum face, GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetMaterialxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetMaterialxvOES(GLenum face, GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetMultisamplefv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetMultisamplefv(GLenum pname, GLuint index, GLfloat * val) {$/;"	f	namespace:android::gltrace
GLTrace_glGetNextPerfQueryIdINTEL	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint * nextQueryId) {$/;"	f	namespace:android::gltrace
GLTrace_glGetObjectLabelEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label) {$/;"	f	namespace:android::gltrace
GLTrace_glGetObjectLabelKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label) {$/;"	f	namespace:android::gltrace
GLTrace_glGetObjectPtrLabelKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetObjectPtrLabelKHR(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPerfCounterInfoINTEL	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPerfMonitorCounterDataAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPerfMonitorCounterInfoAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void * data) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPerfMonitorCounterStringAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPerfMonitorCountersAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPerfMonitorCountersAMD(GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPerfMonitorGroupStringAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPerfMonitorGroupsAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPerfMonitorGroupsAMD(GLint * numGroups, GLsizei groupsSize, GLuint * groups) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPerfQueryDataINTEL	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid * data, GLuint * bytesWritten) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPerfQueryIdByNameINTEL	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPerfQueryIdByNameINTEL(GLchar * queryName, GLuint * queryId) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPerfQueryInfoINTEL	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPointerv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPointerv(GLenum pname, void ** params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetPointervKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetPointervKHR(GLenum pname, void ** params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramBinary	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramBinaryOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramInfoLog	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramInterfaceiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramPipelineInfoLog	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramPipelineInfoLogEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramPipelineiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramPipelineivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramResourceIndex	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLuint GLTrace_glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar * name) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramResourceLocation	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLint GLTrace_glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar * name) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramResourceName	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramResourceiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetProgramiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetProgramiv(GLuint program, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetQueryObjecti64vEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetQueryObjectivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetQueryObjectui64vEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetQueryObjectuiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetQueryObjectuivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetQueryiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetQueryiv(GLenum target, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetQueryivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetQueryivEXT(GLenum target, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetRenderbufferParameteriv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetRenderbufferParameterivOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetRenderbufferParameterivOES(GLenum target, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetSamplerParameterIivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetSamplerParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetSamplerParameterfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetSamplerParameteriv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetShaderInfoLog	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog) {$/;"	f	namespace:android::gltrace
GLTrace_glGetShaderPrecisionFormat	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision) {$/;"	f	namespace:android::gltrace
GLTrace_glGetShaderSource	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source) {$/;"	f	namespace:android::gltrace
GLTrace_glGetShaderiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetShaderiv(GLuint shader, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetString	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^const GLubyte * GLTrace_glGetString(GLenum name) {$/;"	f	namespace:android::gltrace
GLTrace_glGetStringi	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^const GLubyte * GLTrace_glGetStringi(GLenum name, GLuint index) {$/;"	f	namespace:android::gltrace
GLTrace_glGetSynciv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values) {$/;"	f	namespace:android::gltrace
GLTrace_glGetSyncivAPPLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexEnvfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexEnvfv(GLenum target, GLenum pname, GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexEnviv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexEnviv(GLenum target, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexEnvxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexEnvxv(GLenum target, GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexEnvxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexGenfvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexGenfvOES(GLenum coord, GLenum pname, GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexGenivOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexGenivOES(GLenum coord, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexGenxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexLevelParameterfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexLevelParameteriv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexParameterIivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexParameterfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexParameteriv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexParameteriv(GLenum target, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexParameterxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexParameterxv(GLenum target, GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTexParameterxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTransformFeedbackVarying	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name) {$/;"	f	namespace:android::gltrace
GLTrace_glGetTranslatedShaderSourceANGLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufsize, GLsizei * length, GLchar * source) {$/;"	f	namespace:android::gltrace
GLTrace_glGetUniformBlockIndex	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLuint GLTrace_glGetUniformBlockIndex(GLuint program, const GLchar * uniformBlockName) {$/;"	f	namespace:android::gltrace
GLTrace_glGetUniformIndices	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices) {$/;"	f	namespace:android::gltrace
GLTrace_glGetUniformLocation	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLint GLTrace_glGetUniformLocation(GLuint program, const GLchar * name) {$/;"	f	namespace:android::gltrace
GLTrace_glGetUniformfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetUniformfv(GLuint program, GLint location, GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetUniformiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetUniformiv(GLuint program, GLint location, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetUniformuiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetUniformuiv(GLuint program, GLint location, GLuint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetVertexAttribIiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetVertexAttribIiv(GLuint index, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetVertexAttribIuiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetVertexAttribPointerv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer) {$/;"	f	namespace:android::gltrace
GLTrace_glGetVertexAttribfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetVertexAttribiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetnUniformfvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glGetnUniformivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glHint	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glHint(GLenum target, GLenum mode) {$/;"	f	namespace:android::gltrace
GLTrace_glInsertEventMarkerEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glInsertEventMarkerEXT(GLsizei length, const GLchar * marker) {$/;"	f	namespace:android::gltrace
GLTrace_glInvalidateFramebuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments) {$/;"	f	namespace:android::gltrace
GLTrace_glInvalidateSubFramebuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glIsBuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsBuffer(GLuint buffer) {$/;"	f	namespace:android::gltrace
GLTrace_glIsEnabled	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsEnabled(GLenum cap) {$/;"	f	namespace:android::gltrace
GLTrace_glIsEnablediEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsEnablediEXT(GLenum target, GLuint index) {$/;"	f	namespace:android::gltrace
GLTrace_glIsFenceNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsFenceNV(GLuint fence) {$/;"	f	namespace:android::gltrace
GLTrace_glIsFramebuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsFramebuffer(GLuint framebuffer) {$/;"	f	namespace:android::gltrace
GLTrace_glIsFramebufferOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsFramebufferOES(GLuint framebuffer) {$/;"	f	namespace:android::gltrace
GLTrace_glIsProgram	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsProgram(GLuint program) {$/;"	f	namespace:android::gltrace
GLTrace_glIsProgramPipeline	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsProgramPipeline(GLuint pipeline) {$/;"	f	namespace:android::gltrace
GLTrace_glIsProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsProgramPipelineEXT(GLuint pipeline) {$/;"	f	namespace:android::gltrace
GLTrace_glIsQuery	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsQuery(GLuint id) {$/;"	f	namespace:android::gltrace
GLTrace_glIsQueryEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsQueryEXT(GLuint id) {$/;"	f	namespace:android::gltrace
GLTrace_glIsRenderbuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsRenderbuffer(GLuint renderbuffer) {$/;"	f	namespace:android::gltrace
GLTrace_glIsRenderbufferOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsRenderbufferOES(GLuint renderbuffer) {$/;"	f	namespace:android::gltrace
GLTrace_glIsSampler	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsSampler(GLuint sampler) {$/;"	f	namespace:android::gltrace
GLTrace_glIsShader	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsShader(GLuint shader) {$/;"	f	namespace:android::gltrace
GLTrace_glIsSync	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsSync(GLsync sync) {$/;"	f	namespace:android::gltrace
GLTrace_glIsSyncAPPLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsSyncAPPLE(GLsync sync) {$/;"	f	namespace:android::gltrace
GLTrace_glIsTexture	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsTexture(GLuint texture) {$/;"	f	namespace:android::gltrace
GLTrace_glIsTransformFeedback	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsTransformFeedback(GLuint id) {$/;"	f	namespace:android::gltrace
GLTrace_glIsVertexArray	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsVertexArray(GLuint array) {$/;"	f	namespace:android::gltrace
GLTrace_glIsVertexArrayOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glIsVertexArrayOES(GLuint array) {$/;"	f	namespace:android::gltrace
GLTrace_glLabelObjectEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar * label) {$/;"	f	namespace:android::gltrace
GLTrace_glLightModelf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightModelf(GLenum pname, GLfloat param) {$/;"	f	namespace:android::gltrace
GLTrace_glLightModelfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightModelfv(GLenum pname, const GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glLightModelx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightModelx(GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glLightModelxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightModelxOES(GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glLightModelxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightModelxv(GLenum pname, const GLfixed * param) {$/;"	f	namespace:android::gltrace
GLTrace_glLightModelxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightModelxvOES(GLenum pname, const GLfixed * param) {$/;"	f	namespace:android::gltrace
GLTrace_glLightf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightf(GLenum light, GLenum pname, GLfloat param) {$/;"	f	namespace:android::gltrace
GLTrace_glLightfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightfv(GLenum light, GLenum pname, const GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glLightx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightx(GLenum light, GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glLightxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightxOES(GLenum light, GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glLightxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightxv(GLenum light, GLenum pname, const GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glLightxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLightxvOES(GLenum light, GLenum pname, const GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glLineWidth	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLineWidth(GLfloat width) {$/;"	f	namespace:android::gltrace
GLTrace_glLineWidthx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLineWidthx(GLfixed width) {$/;"	f	namespace:android::gltrace
GLTrace_glLineWidthxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLineWidthxOES(GLfixed width) {$/;"	f	namespace:android::gltrace
GLTrace_glLinkProgram	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLinkProgram(GLuint program) {$/;"	f	namespace:android::gltrace
GLTrace_glLoadIdentity	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLoadIdentity(void) {$/;"	f	namespace:android::gltrace
GLTrace_glLoadMatrixf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLoadMatrixf(const GLfloat * m) {$/;"	f	namespace:android::gltrace
GLTrace_glLoadMatrixx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLoadMatrixx(const GLfixed * m) {$/;"	f	namespace:android::gltrace
GLTrace_glLoadMatrixxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLoadMatrixxOES(const GLfixed * m) {$/;"	f	namespace:android::gltrace
GLTrace_glLoadPaletteFromModelViewMatrixOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLoadPaletteFromModelViewMatrixOES(void) {$/;"	f	namespace:android::gltrace
GLTrace_glLogicOp	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glLogicOp(GLenum opcode) {$/;"	f	namespace:android::gltrace
GLTrace_glMapBufferOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void * GLTrace_glMapBufferOES(GLenum target, GLenum access) {$/;"	f	namespace:android::gltrace
GLTrace_glMapBufferRange	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void * GLTrace_glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) {$/;"	f	namespace:android::gltrace
GLTrace_glMapBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void * GLTrace_glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) {$/;"	f	namespace:android::gltrace
GLTrace_glMaterialf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMaterialf(GLenum face, GLenum pname, GLfloat param) {$/;"	f	namespace:android::gltrace
GLTrace_glMaterialfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMaterialfv(GLenum face, GLenum pname, const GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glMaterialx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMaterialx(GLenum face, GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glMaterialxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMaterialxOES(GLenum face, GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glMaterialxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMaterialxv(GLenum face, GLenum pname, const GLfixed * param) {$/;"	f	namespace:android::gltrace
GLTrace_glMaterialxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMaterialxvOES(GLenum face, GLenum pname, const GLfixed * param) {$/;"	f	namespace:android::gltrace
GLTrace_glMatrixIndexPointerOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMatrixIndexPointerOES(GLint size, GLenum type, GLsizei stride, const void * pointer) {$/;"	f	namespace:android::gltrace
GLTrace_glMatrixMode	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMatrixMode(GLenum mode) {$/;"	f	namespace:android::gltrace
GLTrace_glMemoryBarrier	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMemoryBarrier(GLbitfield barriers) {$/;"	f	namespace:android::gltrace
GLTrace_glMemoryBarrierByRegion	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMemoryBarrierByRegion(GLbitfield barriers) {$/;"	f	namespace:android::gltrace
GLTrace_glMinSampleShadingOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMinSampleShadingOES(GLfloat value) {$/;"	f	namespace:android::gltrace
GLTrace_glMultMatrixf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultMatrixf(const GLfloat * m) {$/;"	f	namespace:android::gltrace
GLTrace_glMultMatrixx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultMatrixx(const GLfixed * m) {$/;"	f	namespace:android::gltrace
GLTrace_glMultMatrixxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultMatrixxOES(const GLfixed * m) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiDrawArraysEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiDrawArraysEXT(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiDrawElementsEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiDrawElementsEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord1bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord1bOES(GLenum texture, GLbyte s) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord1bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord1bvOES(GLenum texture, const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord2bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord2bOES(GLenum texture, GLbyte s, GLbyte t) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord2bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord2bvOES(GLenum texture, const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord3bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord3bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord3bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord3bvOES(GLenum texture, const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord4bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord4bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord4bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord4bvOES(GLenum texture, const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord4f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord4x	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord4x(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q) {$/;"	f	namespace:android::gltrace
GLTrace_glMultiTexCoord4xOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glMultiTexCoord4xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q) {$/;"	f	namespace:android::gltrace
GLTrace_glNormal3f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz) {$/;"	f	namespace:android::gltrace
GLTrace_glNormal3x	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glNormal3x(GLfixed nx, GLfixed ny, GLfixed nz) {$/;"	f	namespace:android::gltrace
GLTrace_glNormal3xOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz) {$/;"	f	namespace:android::gltrace
GLTrace_glNormalPointer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glNormalPointer(GLenum type, GLsizei stride, const void * pointer) {$/;"	f	namespace:android::gltrace
GLTrace_glObjectLabelKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar * label) {$/;"	f	namespace:android::gltrace
GLTrace_glObjectPtrLabelKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glObjectPtrLabelKHR(const void * ptr, GLsizei length, const GLchar * label) {$/;"	f	namespace:android::gltrace
GLTrace_glOrthof	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glOrthof(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f) {$/;"	f	namespace:android::gltrace
GLTrace_glOrthofOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glOrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f) {$/;"	f	namespace:android::gltrace
GLTrace_glOrthox	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glOrthox(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f) {$/;"	f	namespace:android::gltrace
GLTrace_glOrthoxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glOrthoxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f) {$/;"	f	namespace:android::gltrace
GLTrace_glPatchParameteriEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPatchParameteriEXT(GLenum pname, GLint value) {$/;"	f	namespace:android::gltrace
GLTrace_glPauseTransformFeedback	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPauseTransformFeedback(void) {$/;"	f	namespace:android::gltrace
GLTrace_glPixelStorei	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPixelStorei(GLenum pname, GLint param) {$/;"	f	namespace:android::gltrace
GLTrace_glPointParameterf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPointParameterf(GLenum pname, GLfloat param) {$/;"	f	namespace:android::gltrace
GLTrace_glPointParameterfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPointParameterfv(GLenum pname, const GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glPointParameterx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPointParameterx(GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glPointParameterxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPointParameterxOES(GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glPointParameterxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPointParameterxv(GLenum pname, const GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glPointParameterxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPointParameterxvOES(GLenum pname, const GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glPointSize	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPointSize(GLfloat size) {$/;"	f	namespace:android::gltrace
GLTrace_glPointSizePointerOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPointSizePointerOES(GLenum type, GLsizei stride, const void * pointer) {$/;"	f	namespace:android::gltrace
GLTrace_glPointSizex	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPointSizex(GLfixed size) {$/;"	f	namespace:android::gltrace
GLTrace_glPointSizexOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPointSizexOES(GLfixed size) {$/;"	f	namespace:android::gltrace
GLTrace_glPolygonOffset	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPolygonOffset(GLfloat factor, GLfloat units) {$/;"	f	namespace:android::gltrace
GLTrace_glPolygonOffsetx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPolygonOffsetx(GLfixed factor, GLfixed units) {$/;"	f	namespace:android::gltrace
GLTrace_glPolygonOffsetxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPolygonOffsetxOES(GLfixed factor, GLfixed units) {$/;"	f	namespace:android::gltrace
GLTrace_glPopDebugGroupKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPopDebugGroupKHR(void) {$/;"	f	namespace:android::gltrace
GLTrace_glPopGroupMarkerEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPopGroupMarkerEXT(void) {$/;"	f	namespace:android::gltrace
GLTrace_glPopMatrix	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPopMatrix(void) {$/;"	f	namespace:android::gltrace
GLTrace_glPrimitiveBoundingBoxEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramBinary	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramBinary(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramBinaryOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramBinaryOES(GLuint program, GLenum binaryFormat, const void * binary, GLint length) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramParameteri	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramParameteri(GLuint program, GLenum pname, GLint value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramParameteriEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramParameteriEXT(GLuint program, GLenum pname, GLint value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1f(GLuint program, GLint location, GLfloat v0) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1fEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1i	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1i(GLuint program, GLint location, GLint v0) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1iEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1iEXT(GLuint program, GLint location, GLint v0) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1iv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1ivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1ui	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1ui(GLuint program, GLint location, GLuint v0) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1uiEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1uiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform1uivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2fEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2i	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2iEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2iv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2ivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2ui	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2uiEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2uiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform2uivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3fEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3i	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3iEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3iv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3ivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3ui	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3uiEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3uiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform3uivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4fEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4i	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4iEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4iv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4ivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4ui	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4uiEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4uiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniform4uivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix2fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix2fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix2x3fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix2x3fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix2x4fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix2x4fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix3fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix3fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix3x2fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix3x2fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix3x4fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix3x4fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix4fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix4fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix4x2fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix4x2fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix4x3fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glProgramUniformMatrix4x3fvEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glPushDebugGroupKHR	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar * message) {$/;"	f	namespace:android::gltrace
GLTrace_glPushGroupMarkerEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPushGroupMarkerEXT(GLsizei length, const GLchar * marker) {$/;"	f	namespace:android::gltrace
GLTrace_glPushMatrix	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glPushMatrix(void) {$/;"	f	namespace:android::gltrace
GLTrace_glQueryCounterEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glQueryCounterEXT(GLuint id, GLenum target) {$/;"	f	namespace:android::gltrace
GLTrace_glQueryMatrixxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLbitfield GLTrace_glQueryMatrixxOES(GLfixed * mantissa, GLint * exponent) {$/;"	f	namespace:android::gltrace
GLTrace_glReadBuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glReadBuffer(GLenum mode) {$/;"	f	namespace:android::gltrace
GLTrace_glReadBufferIndexedEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glReadBufferIndexedEXT(GLenum src, GLint index) {$/;"	f	namespace:android::gltrace
GLTrace_glReadBufferNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glReadBufferNV(GLenum mode) {$/;"	f	namespace:android::gltrace
GLTrace_glReadPixels	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels) {$/;"	f	namespace:android::gltrace
GLTrace_glReadnPixelsEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data) {$/;"	f	namespace:android::gltrace
GLTrace_glReleaseShaderCompiler	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glReleaseShaderCompiler(void) {$/;"	f	namespace:android::gltrace
GLTrace_glRenderbufferStorage	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glRenderbufferStorageMultisample	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glRenderbufferStorageMultisampleANGLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glRenderbufferStorageMultisampleAPPLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glRenderbufferStorageMultisampleEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glRenderbufferStorageMultisampleIMG	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glRenderbufferStorageMultisampleNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glRenderbufferStorageOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRenderbufferStorageOES(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glResolveMultisampleFramebufferAPPLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glResolveMultisampleFramebufferAPPLE(void) {$/;"	f	namespace:android::gltrace
GLTrace_glResumeTransformFeedback	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glResumeTransformFeedback(void) {$/;"	f	namespace:android::gltrace
GLTrace_glRotatef	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z) {$/;"	f	namespace:android::gltrace
GLTrace_glRotatex	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRotatex(GLfixed angle, GLfixed x, GLfixed y, GLfixed z) {$/;"	f	namespace:android::gltrace
GLTrace_glRotatexOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z) {$/;"	f	namespace:android::gltrace
GLTrace_glSampleCoverage	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSampleCoverage(GLfloat value, GLboolean invert) {$/;"	f	namespace:android::gltrace
GLTrace_glSampleCoverageOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSampleCoverageOES(GLfixed value, GLboolean invert) {$/;"	f	namespace:android::gltrace
GLTrace_glSampleCoveragex	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSampleCoveragex(GLclampx value, GLboolean invert) {$/;"	f	namespace:android::gltrace
GLTrace_glSampleCoveragexOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSampleCoveragexOES(GLclampx value, GLboolean invert) {$/;"	f	namespace:android::gltrace
GLTrace_glSampleMaski	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSampleMaski(GLuint maskNumber, GLbitfield mask) {$/;"	f	namespace:android::gltrace
GLTrace_glSamplerParameterIivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint * param) {$/;"	f	namespace:android::gltrace
GLTrace_glSamplerParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint * param) {$/;"	f	namespace:android::gltrace
GLTrace_glSamplerParameterf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param) {$/;"	f	namespace:android::gltrace
GLTrace_glSamplerParameterfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat * param) {$/;"	f	namespace:android::gltrace
GLTrace_glSamplerParameteri	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSamplerParameteri(GLuint sampler, GLenum pname, GLint param) {$/;"	f	namespace:android::gltrace
GLTrace_glSamplerParameteriv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint * param) {$/;"	f	namespace:android::gltrace
GLTrace_glScalef	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glScalef(GLfloat x, GLfloat y, GLfloat z) {$/;"	f	namespace:android::gltrace
GLTrace_glScalex	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glScalex(GLfixed x, GLfixed y, GLfixed z) {$/;"	f	namespace:android::gltrace
GLTrace_glScalexOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glScalexOES(GLfixed x, GLfixed y, GLfixed z) {$/;"	f	namespace:android::gltrace
GLTrace_glScissor	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glScissor(GLint x, GLint y, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glSelectPerfMonitorCountersAMD	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList) {$/;"	f	namespace:android::gltrace
GLTrace_glSetFenceNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glSetFenceNV(GLuint fence, GLenum condition) {$/;"	f	namespace:android::gltrace
GLTrace_glShadeModel	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glShadeModel(GLenum mode) {$/;"	f	namespace:android::gltrace
GLTrace_glShaderBinary	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glShaderBinary(GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length) {$/;"	f	namespace:android::gltrace
GLTrace_glShaderSource	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glShaderSource(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length) {$/;"	f	namespace:android::gltrace
GLTrace_glStartTilingQCOM	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask) {$/;"	f	namespace:android::gltrace
GLTrace_glStencilFunc	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glStencilFunc(GLenum func, GLint ref, GLuint mask) {$/;"	f	namespace:android::gltrace
GLTrace_glStencilFuncSeparate	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask) {$/;"	f	namespace:android::gltrace
GLTrace_glStencilMask	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glStencilMask(GLuint mask) {$/;"	f	namespace:android::gltrace
GLTrace_glStencilMaskSeparate	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glStencilMaskSeparate(GLenum face, GLuint mask) {$/;"	f	namespace:android::gltrace
GLTrace_glStencilOp	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glStencilOp(GLenum fail, GLenum zfail, GLenum zpass) {$/;"	f	namespace:android::gltrace
GLTrace_glStencilOpSeparate	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) {$/;"	f	namespace:android::gltrace
GLTrace_glTestFenceNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glTestFenceNV(GLuint fence) {$/;"	f	namespace:android::gltrace
GLTrace_glTexBufferEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer) {$/;"	f	namespace:android::gltrace
GLTrace_glTexBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size) {$/;"	f	namespace:android::gltrace
GLTrace_glTexCoord1bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexCoord1bOES(GLbyte s) {$/;"	f	namespace:android::gltrace
GLTrace_glTexCoord1bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexCoord1bvOES(const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glTexCoord2bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexCoord2bOES(GLbyte s, GLbyte t) {$/;"	f	namespace:android::gltrace
GLTrace_glTexCoord2bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexCoord2bvOES(const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glTexCoord3bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexCoord3bOES(GLbyte s, GLbyte t, GLbyte r) {$/;"	f	namespace:android::gltrace
GLTrace_glTexCoord3bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexCoord3bvOES(const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glTexCoord4bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexCoord4bOES(GLbyte s, GLbyte t, GLbyte r, GLbyte q) {$/;"	f	namespace:android::gltrace
GLTrace_glTexCoord4bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexCoord4bvOES(const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glTexCoordPointer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const void * pointer) {$/;"	f	namespace:android::gltrace
GLTrace_glTexEnvf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexEnvf(GLenum target, GLenum pname, GLfloat param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexEnvfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexEnvfv(GLenum target, GLenum pname, const GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexEnvi	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexEnvi(GLenum target, GLenum pname, GLint param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexEnviv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexEnviv(GLenum target, GLenum pname, const GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexEnvx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexEnvx(GLenum target, GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexEnvxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexEnvxOES(GLenum target, GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexEnvxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexEnvxv(GLenum target, GLenum pname, const GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexEnvxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexEnvxvOES(GLenum target, GLenum pname, const GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexGenfOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexGenfOES(GLenum coord, GLenum pname, GLfloat param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexGenfvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexGenfvOES(GLenum coord, GLenum pname, const GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexGeniOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexGeniOES(GLenum coord, GLenum pname, GLint param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexGenivOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexGenivOES(GLenum coord, GLenum pname, const GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexGenxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexGenxOES(GLenum coord, GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexGenxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexGenxvOES(GLenum coord, GLenum pname, const GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexImage2D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels) {$/;"	f	namespace:android::gltrace
GLTrace_glTexImage3D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels) {$/;"	f	namespace:android::gltrace
GLTrace_glTexImage3DOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels) {$/;"	f	namespace:android::gltrace
GLTrace_glTexParameterIivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexParameterIivEXT(GLenum target, GLenum pname, const GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexParameterf	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexParameterf(GLenum target, GLenum pname, GLfloat param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexParameterfv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexParameterfv(GLenum target, GLenum pname, const GLfloat * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexParameteri	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexParameteri(GLenum target, GLenum pname, GLint param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexParameteriv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexParameteriv(GLenum target, GLenum pname, const GLint * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexParameterx	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexParameterx(GLenum target, GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexParameterxOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexParameterxOES(GLenum target, GLenum pname, GLfixed param) {$/;"	f	namespace:android::gltrace
GLTrace_glTexParameterxv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexParameterxv(GLenum target, GLenum pname, const GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexParameterxvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexParameterxvOES(GLenum target, GLenum pname, const GLfixed * params) {$/;"	f	namespace:android::gltrace
GLTrace_glTexStorage1DEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width) {$/;"	f	namespace:android::gltrace
GLTrace_glTexStorage2D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glTexStorage2DEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glTexStorage2DMultisample	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) {$/;"	f	namespace:android::gltrace
GLTrace_glTexStorage3D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) {$/;"	f	namespace:android::gltrace
GLTrace_glTexStorage3DEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) {$/;"	f	namespace:android::gltrace
GLTrace_glTexStorage3DMultisampleOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) {$/;"	f	namespace:android::gltrace
GLTrace_glTexSubImage2D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels) {$/;"	f	namespace:android::gltrace
GLTrace_glTexSubImage3D	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels) {$/;"	f	namespace:android::gltrace
GLTrace_glTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels) {$/;"	f	namespace:android::gltrace
GLTrace_glTextureStorage1DEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width) {$/;"	f	namespace:android::gltrace
GLTrace_glTextureStorage2DEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glTextureStorage3DEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) {$/;"	f	namespace:android::gltrace
GLTrace_glTextureViewEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers) {$/;"	f	namespace:android::gltrace
GLTrace_glTransformFeedbackVaryings	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode) {$/;"	f	namespace:android::gltrace
GLTrace_glTranslatef	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTranslatef(GLfloat x, GLfloat y, GLfloat z) {$/;"	f	namespace:android::gltrace
GLTrace_glTranslatex	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTranslatex(GLfixed x, GLfixed y, GLfixed z) {$/;"	f	namespace:android::gltrace
GLTrace_glTranslatexOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glTranslatexOES(GLfixed x, GLfixed y, GLfixed z) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform1f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform1f(GLint location, GLfloat v0) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform1fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform1fv(GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform1i	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform1i(GLint location, GLint v0) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform1iv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform1iv(GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform1ui	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform1ui(GLint location, GLuint v0) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform1uiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform1uiv(GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform2f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform2f(GLint location, GLfloat v0, GLfloat v1) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform2fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform2fv(GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform2i	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform2i(GLint location, GLint v0, GLint v1) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform2iv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform2iv(GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform2ui	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform2ui(GLint location, GLuint v0, GLuint v1) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform2uiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform2uiv(GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform3f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform3fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform3fv(GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform3i	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform3i(GLint location, GLint v0, GLint v1, GLint v2) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform3iv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform3iv(GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform3ui	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform3uiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform3uiv(GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform4f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform4fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform4fv(GLint location, GLsizei count, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform4i	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform4iv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform4iv(GLint location, GLsizei count, const GLint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform4ui	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) {$/;"	f	namespace:android::gltrace
GLTrace_glUniform4uiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniform4uiv(GLint location, GLsizei count, const GLuint * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformBlockBinding	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix2fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix2x3fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix2x3fvNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix2x4fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix2x4fvNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix3fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix3x2fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix3x2fvNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix3x4fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix3x4fvNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix4fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix4x2fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix4x2fvNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix4x3fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUniformMatrix4x3fvNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value) {$/;"	f	namespace:android::gltrace
GLTrace_glUnmapBuffer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glUnmapBuffer(GLenum target) {$/;"	f	namespace:android::gltrace
GLTrace_glUnmapBufferOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^GLboolean GLTrace_glUnmapBufferOES(GLenum target) {$/;"	f	namespace:android::gltrace
GLTrace_glUseProgram	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUseProgram(GLuint program) {$/;"	f	namespace:android::gltrace
GLTrace_glUseProgramStages	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program) {$/;"	f	namespace:android::gltrace
GLTrace_glUseProgramStagesEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program) {$/;"	f	namespace:android::gltrace
GLTrace_glValidateProgram	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glValidateProgram(GLuint program) {$/;"	f	namespace:android::gltrace
GLTrace_glValidateProgramPipeline	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glValidateProgramPipeline(GLuint pipeline) {$/;"	f	namespace:android::gltrace
GLTrace_glValidateProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glValidateProgramPipelineEXT(GLuint pipeline) {$/;"	f	namespace:android::gltrace
GLTrace_glVertex2bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertex2bOES(GLbyte x) {$/;"	f	namespace:android::gltrace
GLTrace_glVertex2bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertex2bvOES(const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glVertex3bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertex3bOES(GLbyte x, GLbyte y) {$/;"	f	namespace:android::gltrace
GLTrace_glVertex3bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertex3bvOES(const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glVertex4bOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertex4bOES(GLbyte x, GLbyte y, GLbyte z) {$/;"	f	namespace:android::gltrace
GLTrace_glVertex4bvOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertex4bvOES(const GLbyte * coords) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttrib1f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttrib1f(GLuint index, GLfloat x) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttrib1fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttrib1fv(GLuint index, const GLfloat * v) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttrib2f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttrib2fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttrib2fv(GLuint index, const GLfloat * v) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttrib3f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttrib3fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttrib3fv(GLuint index, const GLfloat * v) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttrib4f	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttrib4fv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttrib4fv(GLuint index, const GLfloat * v) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribBinding	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribBinding(GLuint attribindex, GLuint bindingindex) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribDivisor	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribDivisor(GLuint index, GLuint divisor) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribDivisorANGLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribDivisorANGLE(GLuint index, GLuint divisor) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribDivisorEXT	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribDivisorEXT(GLuint index, GLuint divisor) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribDivisorNV	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribDivisorNV(GLuint index, GLuint divisor) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribFormat	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribI4i	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribI4iv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribI4iv(GLuint index, const GLint * v) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribI4ui	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribI4uiv	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribI4uiv(GLuint index, const GLuint * v) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribIFormat	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribIPointer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexAttribPointer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexBindingDivisor	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexBindingDivisor(GLuint bindingindex, GLuint divisor) {$/;"	f	namespace:android::gltrace
GLTrace_glVertexPointer	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glVertexPointer(GLint size, GLenum type, GLsizei stride, const void * pointer) {$/;"	f	namespace:android::gltrace
GLTrace_glViewport	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glViewport(GLint x, GLint y, GLsizei width, GLsizei height) {$/;"	f	namespace:android::gltrace
GLTrace_glWaitSync	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout) {$/;"	f	namespace:android::gltrace
GLTrace_glWaitSyncAPPLE	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout) {$/;"	f	namespace:android::gltrace
GLTrace_glWeightPointerOES	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^void GLTrace_glWeightPointerOES(GLint size, GLenum type, GLsizei stride, const void * pointer) {$/;"	f	namespace:android::gltrace
GLTrace_start	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^int GLTrace_start() {$/;"	f	namespace:android
GLTrace_stop	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^void GLTrace_stop() {$/;"	f	namespace:android
GL_3DC_XY_AMD	opengl/include/GLES/glext.h	232;"	d
GL_3DC_XY_AMD	opengl/include/GLES2/gl2ext.h	465;"	d
GL_3DC_X_AMD	opengl/include/GLES/glext.h	231;"	d
GL_3DC_X_AMD	opengl/include/GLES2/gl2ext.h	464;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	opengl/include/GLES3/gl31.h	1010;"	d
GL_ACTIVE_ATTRIBUTES	opengl/include/GLES2/gl2.h	229;"	d
GL_ACTIVE_ATTRIBUTES	opengl/include/GLES3/gl3.h	229;"	d
GL_ACTIVE_ATTRIBUTES	opengl/include/GLES3/gl31.h	229;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	opengl/include/GLES2/gl2.h	230;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	opengl/include/GLES3/gl3.h	230;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	opengl/include/GLES3/gl31.h	230;"	d
GL_ACTIVE_PROGRAM	opengl/include/GLES3/gl31.h	997;"	d
GL_ACTIVE_PROGRAM_EXT	opengl/include/GLES2/gl2ext.h	1052;"	d
GL_ACTIVE_RESOURCES	opengl/include/GLES3/gl31.h	971;"	d
GL_ACTIVE_TEXTURE	opengl/include/GLES/gl.h	481;"	d
GL_ACTIVE_TEXTURE	opengl/include/GLES2/gl2.h	304;"	d
GL_ACTIVE_TEXTURE	opengl/include/GLES3/gl3.h	304;"	d
GL_ACTIVE_TEXTURE	opengl/include/GLES3/gl31.h	304;"	d
GL_ACTIVE_UNIFORMS	opengl/include/GLES2/gl2.h	227;"	d
GL_ACTIVE_UNIFORMS	opengl/include/GLES3/gl3.h	227;"	d
GL_ACTIVE_UNIFORMS	opengl/include/GLES3/gl31.h	227;"	d
GL_ACTIVE_UNIFORM_BLOCKS	opengl/include/GLES3/gl3.h	761;"	d
GL_ACTIVE_UNIFORM_BLOCKS	opengl/include/GLES3/gl31.h	761;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	opengl/include/GLES3/gl3.h	760;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	opengl/include/GLES3/gl31.h	760;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	opengl/include/GLES2/gl2.h	228;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	opengl/include/GLES3/gl3.h	228;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	opengl/include/GLES3/gl31.h	228;"	d
GL_ACTIVE_VARIABLES	opengl/include/GLES3/gl31.h	986;"	d
GL_ADD	opengl/include/GLES/gl.h	416;"	d
GL_ADD	opengl/tests/angeles/include/GLES/gl.h	373;"	d
GL_ADD_BLEND_IMG	opengl/include/GLES/glext.h	448;"	d
GL_ADD_SIGNED	opengl/include/GLES/gl.h	527;"	d
GL_ALIASED_LINE_WIDTH_RANGE	opengl/include/GLES/gl.h	202;"	d
GL_ALIASED_LINE_WIDTH_RANGE	opengl/include/GLES2/gl2.h	146;"	d
GL_ALIASED_LINE_WIDTH_RANGE	opengl/include/GLES3/gl3.h	146;"	d
GL_ALIASED_LINE_WIDTH_RANGE	opengl/include/GLES3/gl31.h	146;"	d
GL_ALIASED_LINE_WIDTH_RANGE	opengl/tests/angeles/include/GLES/gl.h	220;"	d
GL_ALIASED_POINT_SIZE_RANGE	opengl/include/GLES/gl.h	201;"	d
GL_ALIASED_POINT_SIZE_RANGE	opengl/include/GLES2/gl2.h	145;"	d
GL_ALIASED_POINT_SIZE_RANGE	opengl/include/GLES3/gl3.h	145;"	d
GL_ALIASED_POINT_SIZE_RANGE	opengl/include/GLES3/gl31.h	145;"	d
GL_ALIASED_POINT_SIZE_RANGE	opengl/tests/angeles/include/GLES/gl.h	219;"	d
GL_ALL_BARRIER_BITS	opengl/include/GLES3/gl31.h	1034;"	d
GL_ALL_COMPLETED_NV	opengl/include/GLES/glext.h	477;"	d
GL_ALL_COMPLETED_NV	opengl/include/GLES2/gl2ext.h	1647;"	d
GL_ALL_SHADER_BITS	opengl/include/GLES3/gl31.h	995;"	d
GL_ALL_SHADER_BITS_EXT	opengl/include/GLES2/gl2ext.h	1055;"	d
GL_ALPHA	opengl/include/GLES/gl.h	362;"	d
GL_ALPHA	opengl/include/GLES2/gl2.h	205;"	d
GL_ALPHA	opengl/include/GLES3/gl3.h	205;"	d
GL_ALPHA	opengl/include/GLES3/gl31.h	205;"	d
GL_ALPHA	opengl/tests/angeles/include/GLES/gl.h	319;"	d
GL_ALPHA16F_EXT	opengl/include/GLES/glext.h	415;"	d
GL_ALPHA16F_EXT	opengl/include/GLES2/gl2ext.h	1346;"	d
GL_ALPHA32F_EXT	opengl/include/GLES/glext.h	410;"	d
GL_ALPHA32F_EXT	opengl/include/GLES2/gl2ext.h	1343;"	d
GL_ALPHA8_EXT	opengl/include/GLES/glext.h	405;"	d
GL_ALPHA8_EXT	opengl/include/GLES2/gl2ext.h	1338;"	d
GL_ALPHA8_OES	opengl/include/GLES2/gl2ext.h	286;"	d
GL_ALPHA_BITS	opengl/include/GLES/gl.h	249;"	d
GL_ALPHA_BITS	opengl/include/GLES2/gl2.h	180;"	d
GL_ALPHA_BITS	opengl/include/GLES3/gl3.h	180;"	d
GL_ALPHA_BITS	opengl/include/GLES3/gl31.h	180;"	d
GL_ALPHA_BITS	opengl/tests/angeles/include/GLES/gl.h	238;"	d
GL_ALPHA_SCALE	opengl/include/GLES/gl.h	539;"	d
GL_ALPHA_TEST	opengl/include/GLES/gl.h	134;"	d
GL_ALPHA_TEST	opengl/tests/angeles/include/GLES/gl.h	161;"	d
GL_ALPHA_TEST_FUNC	opengl/include/GLES/gl.h	226;"	d
GL_ALPHA_TEST_FUNC_QCOM	opengl/include/GLES2/gl2ext.h	1794;"	d
GL_ALPHA_TEST_QCOM	opengl/include/GLES2/gl2ext.h	1793;"	d
GL_ALPHA_TEST_REF	opengl/include/GLES/gl.h	227;"	d
GL_ALPHA_TEST_REF_QCOM	opengl/include/GLES2/gl2ext.h	1795;"	d
GL_ALREADY_SIGNALED	opengl/include/GLES3/gl3.h	789;"	d
GL_ALREADY_SIGNALED	opengl/include/GLES3/gl31.h	789;"	d
GL_ALREADY_SIGNALED_APPLE	opengl/include/GLES/glext.h	284;"	d
GL_ALREADY_SIGNALED_APPLE	opengl/include/GLES2/gl2ext.h	635;"	d
GL_ALWAYS	opengl/include/GLES/gl.h	72;"	d
GL_ALWAYS	opengl/include/GLES2/gl2.h	240;"	d
GL_ALWAYS	opengl/include/GLES3/gl3.h	240;"	d
GL_ALWAYS	opengl/include/GLES3/gl31.h	240;"	d
GL_ALWAYS	opengl/tests/angeles/include/GLES/gl.h	107;"	d
GL_AMBIENT	opengl/include/GLES/gl.h	302;"	d
GL_AMBIENT	opengl/tests/angeles/include/GLES/gl.h	259;"	d
GL_AMBIENT_AND_DIFFUSE	opengl/include/GLES/gl.h	345;"	d
GL_AMBIENT_AND_DIFFUSE	opengl/tests/angeles/include/GLES/gl.h	302;"	d
GL_AMD_compressed_3DC_texture	opengl/include/GLES/glext.h	937;"	d
GL_AMD_compressed_3DC_texture	opengl/include/GLES2/gl2ext.h	463;"	d
GL_AMD_compressed_ATC_texture	opengl/include/GLES/glext.h	942;"	d
GL_AMD_compressed_ATC_texture	opengl/include/GLES2/gl2ext.h	469;"	d
GL_AMD_performance_monitor	opengl/include/GLES2/gl2ext.h	476;"	d
GL_AMD_program_binary_Z400	opengl/include/GLES2/gl2ext.h	511;"	d
GL_AND	opengl/include/GLES/gl.h	323;"	d
GL_AND	opengl/tests/angeles/include/GLES/gl.h	280;"	d
GL_AND_INVERTED	opengl/include/GLES/gl.h	326;"	d
GL_AND_INVERTED	opengl/tests/angeles/include/GLES/gl.h	283;"	d
GL_AND_REVERSE	opengl/include/GLES/gl.h	324;"	d
GL_AND_REVERSE	opengl/tests/angeles/include/GLES/gl.h	281;"	d
GL_ANGLE_depth_texture	opengl/include/GLES2/gl2ext.h	516;"	d
GL_ANGLE_framebuffer_blit	opengl/include/GLES2/gl2ext.h	520;"	d
GL_ANGLE_framebuffer_multisample	opengl/include/GLES2/gl2ext.h	532;"	d
GL_ANGLE_instanced_arrays	opengl/include/GLES2/gl2ext.h	543;"	d
GL_ANGLE_pack_reverse_row_order	opengl/include/GLES2/gl2ext.h	556;"	d
GL_ANGLE_program_binary	opengl/include/GLES2/gl2ext.h	561;"	d
GL_ANGLE_texture_compression_dxt3	opengl/include/GLES2/gl2ext.h	566;"	d
GL_ANGLE_texture_compression_dxt5	opengl/include/GLES2/gl2ext.h	571;"	d
GL_ANGLE_texture_usage	opengl/include/GLES2/gl2ext.h	576;"	d
GL_ANGLE_translated_shader_source	opengl/include/GLES2/gl2ext.h	582;"	d
GL_ANY_SAMPLES_PASSED	opengl/include/GLES3/gl3.h	796;"	d
GL_ANY_SAMPLES_PASSED	opengl/include/GLES3/gl31.h	796;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	opengl/include/GLES3/gl3.h	797;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	opengl/include/GLES3/gl31.h	797;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT	opengl/include/GLES2/gl2ext.h	988;"	d
GL_ANY_SAMPLES_PASSED_EXT	opengl/include/GLES2/gl2ext.h	987;"	d
GL_API	opengl/include/GLES/glplatform.h	23;"	d
GL_APICALL	opengl/include/GLES2/gl2platform.h	23;"	d
GL_APICALL	opengl/include/GLES3/gl3platform.h	23;"	d
GL_APIENTRY	opengl/include/GLES/glplatform.h	27;"	d
GL_APIENTRY	opengl/include/GLES2/gl2platform.h	27;"	d
GL_APIENTRY	opengl/include/GLES3/gl3platform.h	27;"	d
GL_APIENTRYP	opengl/include/GLES/glext.h	16;"	d
GL_APIENTRYP	opengl/include/GLES2/gl2ext.h	40;"	d
GL_APPLE_copy_texture_levels	opengl/include/GLES/glext.h	951;"	d
GL_APPLE_copy_texture_levels	opengl/include/GLES2/gl2ext.h	591;"	d
GL_APPLE_framebuffer_multisample	opengl/include/GLES/glext.h	960;"	d
GL_APPLE_framebuffer_multisample	opengl/include/GLES2/gl2ext.h	599;"	d
GL_APPLE_rgb_422	opengl/include/GLES2/gl2ext.h	616;"	d
GL_APPLE_sync	opengl/include/GLES/glext.h	971;"	d
GL_APPLE_sync	opengl/include/GLES2/gl2ext.h	624;"	d
GL_APPLE_texture_2D_limited_npot	opengl/include/GLES/glext.h	992;"	d
GL_APPLE_texture_format_BGRA8888	opengl/include/GLES/glext.h	997;"	d
GL_APPLE_texture_format_BGRA8888	opengl/include/GLES2/gl2ext.h	660;"	d
GL_APPLE_texture_max_level	opengl/include/GLES/glext.h	1002;"	d
GL_APPLE_texture_max_level	opengl/include/GLES2/gl2ext.h	666;"	d
GL_ARM_mali_program_binary	opengl/include/GLES2/gl2ext.h	671;"	d
GL_ARM_mali_shader_binary	opengl/include/GLES2/gl2ext.h	676;"	d
GL_ARM_rgba8	opengl/include/GLES/glext.h	1011;"	d
GL_ARM_rgba8	opengl/include/GLES2/gl2ext.h	681;"	d
GL_ARM_shader_framebuffer_fetch	opengl/include/GLES2/gl2ext.h	685;"	d
GL_ARM_shader_framebuffer_fetch_depth_stencil	opengl/include/GLES2/gl2ext.h	691;"	d
GL_ARRAY_BUFFER	opengl/include/GLES/gl.h	505;"	d
GL_ARRAY_BUFFER	opengl/include/GLES2/gl2.h	114;"	d
GL_ARRAY_BUFFER	opengl/include/GLES3/gl3.h	114;"	d
GL_ARRAY_BUFFER	opengl/include/GLES3/gl31.h	114;"	d
GL_ARRAY_BUFFER_BINDING	opengl/include/GLES/gl.h	508;"	d
GL_ARRAY_BUFFER_BINDING	opengl/include/GLES2/gl2.h	116;"	d
GL_ARRAY_BUFFER_BINDING	opengl/include/GLES3/gl3.h	116;"	d
GL_ARRAY_BUFFER_BINDING	opengl/include/GLES3/gl31.h	116;"	d
GL_ARRAY_SIZE	opengl/include/GLES3/gl31.h	976;"	d
GL_ARRAY_STRIDE	opengl/include/GLES3/gl31.h	979;"	d
GL_ATC_RGBA_EXPLICIT_ALPHA_AMD	opengl/include/GLES/glext.h	238;"	d
GL_ATC_RGBA_EXPLICIT_ALPHA_AMD	opengl/include/GLES2/gl2ext.h	471;"	d
GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD	opengl/include/GLES/glext.h	239;"	d
GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD	opengl/include/GLES2/gl2ext.h	472;"	d
GL_ATC_RGB_AMD	opengl/include/GLES/glext.h	237;"	d
GL_ATC_RGB_AMD	opengl/include/GLES2/gl2ext.h	470;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	opengl/include/GLES3/gl31.h	1033;"	d
GL_ATOMIC_COUNTER_BUFFER	opengl/include/GLES3/gl31.h	969;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	opengl/include/GLES3/gl31.h	999;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	opengl/include/GLES3/gl31.h	982;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	opengl/include/GLES3/gl31.h	1001;"	d
GL_ATOMIC_COUNTER_BUFFER_START	opengl/include/GLES3/gl31.h	1000;"	d
GL_ATTACHED_SHADERS	opengl/include/GLES2/gl2.h	226;"	d
GL_ATTACHED_SHADERS	opengl/include/GLES3/gl3.h	226;"	d
GL_ATTACHED_SHADERS	opengl/include/GLES3/gl31.h	226;"	d
GL_BACK	opengl/include/GLES/gl.h	116;"	d
GL_BACK	opengl/include/GLES2/gl2.h	125;"	d
GL_BACK	opengl/include/GLES3/gl3.h	125;"	d
GL_BACK	opengl/include/GLES3/gl31.h	125;"	d
GL_BACK	opengl/tests/angeles/include/GLES/gl.h	143;"	d
GL_BGRA8_EXT	opengl/include/GLES/glext.h	420;"	d
GL_BGRA8_EXT	opengl/include/GLES2/gl2ext.h	662;"	d
GL_BGRA_EXT	opengl/include/GLES/glext.h	297;"	d
GL_BGRA_EXT	opengl/include/GLES/glext.h	353;"	d
GL_BGRA_EXT	opengl/include/GLES/glext.h	392;"	d
GL_BGRA_EXT	opengl/include/GLES2/gl2ext.h	661;"	d
GL_BGRA_IMG	opengl/include/GLES/glext.h	429;"	d
GL_BGRA_IMG	opengl/include/GLES2/gl2ext.h	1418;"	d
GL_BINNING_CONTROL_HINT_QCOM	opengl/include/GLES2/gl2ext.h	1804;"	d
GL_BLEND	opengl/include/GLES/gl.h	135;"	d
GL_BLEND	opengl/include/GLES2/gl2.h	129;"	d
GL_BLEND	opengl/include/GLES3/gl3.h	129;"	d
GL_BLEND	opengl/include/GLES3/gl31.h	129;"	d
GL_BLEND	opengl/tests/angeles/include/GLES/gl.h	162;"	d
GL_BLEND_ADVANCED_COHERENT_KHR	opengl/include/GLES2/gl2ext.h	57;"	d
GL_BLEND_ADVANCED_COHERENT_NV	opengl/include/GLES2/gl2ext.h	1548;"	d
GL_BLEND_COLOR	opengl/include/GLES2/gl2.h	113;"	d
GL_BLEND_COLOR	opengl/include/GLES3/gl3.h	113;"	d
GL_BLEND_COLOR	opengl/include/GLES3/gl31.h	113;"	d
GL_BLEND_DST	opengl/include/GLES/gl.h	228;"	d
GL_BLEND_DST_ALPHA	opengl/include/GLES2/gl2.h	107;"	d
GL_BLEND_DST_ALPHA	opengl/include/GLES3/gl3.h	107;"	d
GL_BLEND_DST_ALPHA	opengl/include/GLES3/gl31.h	107;"	d
GL_BLEND_DST_ALPHA_OES	opengl/include/GLES/glext.h	34;"	d
GL_BLEND_DST_RGB	opengl/include/GLES2/gl2.h	105;"	d
GL_BLEND_DST_RGB	opengl/include/GLES3/gl3.h	105;"	d
GL_BLEND_DST_RGB	opengl/include/GLES3/gl31.h	105;"	d
GL_BLEND_DST_RGB_OES	opengl/include/GLES/glext.h	32;"	d
GL_BLEND_EQUATION	opengl/include/GLES2/gl2.h	100;"	d
GL_BLEND_EQUATION	opengl/include/GLES3/gl3.h	100;"	d
GL_BLEND_EQUATION	opengl/include/GLES3/gl31.h	100;"	d
GL_BLEND_EQUATION_ALPHA	opengl/include/GLES2/gl2.h	102;"	d
GL_BLEND_EQUATION_ALPHA	opengl/include/GLES3/gl3.h	102;"	d
GL_BLEND_EQUATION_ALPHA	opengl/include/GLES3/gl31.h	102;"	d
GL_BLEND_EQUATION_ALPHA_OES	opengl/include/GLES/glext.h	27;"	d
GL_BLEND_EQUATION_OES	opengl/include/GLES/glext.h	40;"	d
GL_BLEND_EQUATION_RGB	opengl/include/GLES2/gl2.h	101;"	d
GL_BLEND_EQUATION_RGB	opengl/include/GLES3/gl3.h	101;"	d
GL_BLEND_EQUATION_RGB	opengl/include/GLES3/gl31.h	101;"	d
GL_BLEND_EQUATION_RGB_OES	opengl/include/GLES/glext.h	26;"	d
GL_BLEND_OVERLAP_NV	opengl/include/GLES2/gl2ext.h	1489;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	opengl/include/GLES2/gl2ext.h	1490;"	d
GL_BLEND_SRC	opengl/include/GLES/gl.h	229;"	d
GL_BLEND_SRC_ALPHA	opengl/include/GLES2/gl2.h	108;"	d
GL_BLEND_SRC_ALPHA	opengl/include/GLES3/gl3.h	108;"	d
GL_BLEND_SRC_ALPHA	opengl/include/GLES3/gl31.h	108;"	d
GL_BLEND_SRC_ALPHA_OES	opengl/include/GLES/glext.h	35;"	d
GL_BLEND_SRC_RGB	opengl/include/GLES2/gl2.h	106;"	d
GL_BLEND_SRC_RGB	opengl/include/GLES3/gl3.h	106;"	d
GL_BLEND_SRC_RGB	opengl/include/GLES3/gl31.h	106;"	d
GL_BLEND_SRC_RGB_OES	opengl/include/GLES/glext.h	33;"	d
GL_BLOCK_INDEX	opengl/include/GLES3/gl31.h	978;"	d
GL_BLUE	opengl/include/GLES3/gl3.h	805;"	d
GL_BLUE	opengl/include/GLES3/gl31.h	805;"	d
GL_BLUE_BITS	opengl/include/GLES/gl.h	248;"	d
GL_BLUE_BITS	opengl/include/GLES2/gl2.h	179;"	d
GL_BLUE_BITS	opengl/include/GLES3/gl3.h	179;"	d
GL_BLUE_BITS	opengl/include/GLES3/gl31.h	179;"	d
GL_BLUE_BITS	opengl/tests/angeles/include/GLES/gl.h	237;"	d
GL_BLUE_NV	opengl/include/GLES2/gl2ext.h	1491;"	d
GL_BOOL	opengl/include/GLES2/gl2.h	314;"	d
GL_BOOL	opengl/include/GLES3/gl3.h	314;"	d
GL_BOOL	opengl/include/GLES3/gl31.h	314;"	d
GL_BOOL_VEC2	opengl/include/GLES2/gl2.h	315;"	d
GL_BOOL_VEC2	opengl/include/GLES3/gl3.h	315;"	d
GL_BOOL_VEC2	opengl/include/GLES3/gl31.h	315;"	d
GL_BOOL_VEC3	opengl/include/GLES2/gl2.h	316;"	d
GL_BOOL_VEC3	opengl/include/GLES3/gl3.h	316;"	d
GL_BOOL_VEC3	opengl/include/GLES3/gl31.h	316;"	d
GL_BOOL_VEC4	opengl/include/GLES2/gl2.h	317;"	d
GL_BOOL_VEC4	opengl/include/GLES3/gl3.h	317;"	d
GL_BOOL_VEC4	opengl/include/GLES3/gl31.h	317;"	d
GL_BUFFER_ACCESS_FLAGS	opengl/include/GLES3/gl3.h	665;"	d
GL_BUFFER_ACCESS_FLAGS	opengl/include/GLES3/gl31.h	665;"	d
GL_BUFFER_ACCESS_OES	opengl/include/GLES/glext.h	129;"	d
GL_BUFFER_ACCESS_OES	opengl/include/GLES2/gl2ext.h	264;"	d
GL_BUFFER_BINDING	opengl/include/GLES3/gl31.h	983;"	d
GL_BUFFER_DATA_SIZE	opengl/include/GLES3/gl31.h	984;"	d
GL_BUFFER_KHR	opengl/include/GLES2/gl2ext.h	105;"	d
GL_BUFFER_MAPPED	opengl/include/GLES3/gl3.h	560;"	d
GL_BUFFER_MAPPED	opengl/include/GLES3/gl31.h	560;"	d
GL_BUFFER_MAPPED_OES	opengl/include/GLES/glext.h	130;"	d
GL_BUFFER_MAPPED_OES	opengl/include/GLES2/gl2ext.h	265;"	d
GL_BUFFER_MAP_LENGTH	opengl/include/GLES3/gl3.h	666;"	d
GL_BUFFER_MAP_LENGTH	opengl/include/GLES3/gl31.h	666;"	d
GL_BUFFER_MAP_OFFSET	opengl/include/GLES3/gl3.h	667;"	d
GL_BUFFER_MAP_OFFSET	opengl/include/GLES3/gl31.h	667;"	d
GL_BUFFER_MAP_POINTER	opengl/include/GLES3/gl3.h	561;"	d
GL_BUFFER_MAP_POINTER	opengl/include/GLES3/gl31.h	561;"	d
GL_BUFFER_MAP_POINTER_OES	opengl/include/GLES/glext.h	131;"	d
GL_BUFFER_MAP_POINTER_OES	opengl/include/GLES2/gl2ext.h	266;"	d
GL_BUFFER_OBJECT_EXT	opengl/include/GLES2/gl2ext.h	728;"	d
GL_BUFFER_SIZE	opengl/include/GLES/gl.h	518;"	d
GL_BUFFER_SIZE	opengl/include/GLES2/gl2.h	121;"	d
GL_BUFFER_SIZE	opengl/include/GLES3/gl3.h	121;"	d
GL_BUFFER_SIZE	opengl/include/GLES3/gl31.h	121;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	opengl/include/GLES3/gl31.h	1030;"	d
GL_BUFFER_USAGE	opengl/include/GLES/gl.h	519;"	d
GL_BUFFER_USAGE	opengl/include/GLES2/gl2.h	122;"	d
GL_BUFFER_USAGE	opengl/include/GLES3/gl3.h	122;"	d
GL_BUFFER_USAGE	opengl/include/GLES3/gl31.h	122;"	d
GL_BUFFER_VARIABLE	opengl/include/GLES3/gl31.h	967;"	d
GL_BYTE	opengl/include/GLES/gl.h	314;"	d
GL_BYTE	opengl/include/GLES2/gl2.h	196;"	d
GL_BYTE	opengl/include/GLES3/gl3.h	196;"	d
GL_BYTE	opengl/include/GLES3/gl31.h	196;"	d
GL_BYTE	opengl/tests/angeles/include/GLES/gl.h	271;"	d
GL_CCW	opengl/include/GLES/gl.h	187;"	d
GL_CCW	opengl/include/GLES2/gl2.h	143;"	d
GL_CCW	opengl/include/GLES3/gl3.h	143;"	d
GL_CCW	opengl/include/GLES3/gl31.h	143;"	d
GL_CCW	opengl/tests/angeles/include/GLES/gl.h	214;"	d
GL_CLAMP_TO_BORDER_EXT	opengl/include/GLES2/gl2ext.h	1240;"	d
GL_CLAMP_TO_BORDER_NV	opengl/include/GLES2/gl2ext.h	1780;"	d
GL_CLAMP_TO_EDGE	opengl/include/GLES/gl.h	486;"	d
GL_CLAMP_TO_EDGE	opengl/include/GLES2/gl2.h	306;"	d
GL_CLAMP_TO_EDGE	opengl/include/GLES3/gl3.h	306;"	d
GL_CLAMP_TO_EDGE	opengl/include/GLES3/gl31.h	306;"	d
GL_CLAMP_TO_EDGE	opengl/tests/angeles/include/GLES/gl.h	440;"	d
GL_CLEAR	opengl/include/GLES/gl.h	322;"	d
GL_CLEAR	opengl/tests/angeles/include/GLES/gl.h	279;"	d
GL_CLIENT_ACTIVE_TEXTURE	opengl/include/GLES/gl.h	482;"	d
GL_CLIP_PLANE0	opengl/include/GLES/gl.h	96;"	d
GL_CLIP_PLANE0_IMG	opengl/include/GLES/glext.h	454;"	d
GL_CLIP_PLANE1	opengl/include/GLES/gl.h	97;"	d
GL_CLIP_PLANE1_IMG	opengl/include/GLES/glext.h	455;"	d
GL_CLIP_PLANE2	opengl/include/GLES/gl.h	98;"	d
GL_CLIP_PLANE2_IMG	opengl/include/GLES/glext.h	456;"	d
GL_CLIP_PLANE3	opengl/include/GLES/gl.h	99;"	d
GL_CLIP_PLANE3_IMG	opengl/include/GLES/glext.h	457;"	d
GL_CLIP_PLANE4	opengl/include/GLES/gl.h	100;"	d
GL_CLIP_PLANE4_IMG	opengl/include/GLES/glext.h	458;"	d
GL_CLIP_PLANE5	opengl/include/GLES/gl.h	101;"	d
GL_CLIP_PLANE5_IMG	opengl/include/GLES/glext.h	459;"	d
GL_COLOR	opengl/include/GLES3/gl3.h	531;"	d
GL_COLOR	opengl/include/GLES3/gl31.h	531;"	d
GL_COLORBURN_KHR	opengl/include/GLES2/gl2ext.h	64;"	d
GL_COLORBURN_NV	opengl/include/GLES2/gl2ext.h	1492;"	d
GL_COLORDODGE_KHR	opengl/include/GLES2/gl2ext.h	63;"	d
GL_COLORDODGE_NV	opengl/include/GLES2/gl2ext.h	1493;"	d
GL_COLOR_ARRAY	opengl/include/GLES/gl.h	157;"	d
GL_COLOR_ARRAY	opengl/tests/angeles/include/GLES/gl.h	184;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	opengl/include/GLES/gl.h	512;"	d
GL_COLOR_ARRAY_POINTER	opengl/include/GLES/gl.h	269;"	d
GL_COLOR_ARRAY_SIZE	opengl/include/GLES/gl.h	261;"	d
GL_COLOR_ARRAY_STRIDE	opengl/include/GLES/gl.h	263;"	d
GL_COLOR_ARRAY_TYPE	opengl/include/GLES/gl.h	262;"	d
GL_COLOR_ATTACHMENT0	opengl/include/GLES2/gl2.h	364;"	d
GL_COLOR_ATTACHMENT0	opengl/include/GLES3/gl3.h	364;"	d
GL_COLOR_ATTACHMENT0	opengl/include/GLES3/gl31.h	364;"	d
GL_COLOR_ATTACHMENT0_EXT	opengl/include/GLES2/gl2ext.h	818;"	d
GL_COLOR_ATTACHMENT0_NV	opengl/include/GLES2/gl2ext.h	1604;"	d
GL_COLOR_ATTACHMENT0_OES	opengl/include/GLES/glext.h	111;"	d
GL_COLOR_ATTACHMENT1	opengl/include/GLES3/gl3.h	693;"	d
GL_COLOR_ATTACHMENT1	opengl/include/GLES3/gl31.h	693;"	d
GL_COLOR_ATTACHMENT10	opengl/include/GLES3/gl3.h	702;"	d
GL_COLOR_ATTACHMENT10	opengl/include/GLES3/gl31.h	702;"	d
GL_COLOR_ATTACHMENT10_EXT	opengl/include/GLES2/gl2ext.h	828;"	d
GL_COLOR_ATTACHMENT10_NV	opengl/include/GLES2/gl2ext.h	1614;"	d
GL_COLOR_ATTACHMENT11	opengl/include/GLES3/gl3.h	703;"	d
GL_COLOR_ATTACHMENT11	opengl/include/GLES3/gl31.h	703;"	d
GL_COLOR_ATTACHMENT11_EXT	opengl/include/GLES2/gl2ext.h	829;"	d
GL_COLOR_ATTACHMENT11_NV	opengl/include/GLES2/gl2ext.h	1615;"	d
GL_COLOR_ATTACHMENT12	opengl/include/GLES3/gl3.h	704;"	d
GL_COLOR_ATTACHMENT12	opengl/include/GLES3/gl31.h	704;"	d
GL_COLOR_ATTACHMENT12_EXT	opengl/include/GLES2/gl2ext.h	830;"	d
GL_COLOR_ATTACHMENT12_NV	opengl/include/GLES2/gl2ext.h	1616;"	d
GL_COLOR_ATTACHMENT13	opengl/include/GLES3/gl3.h	705;"	d
GL_COLOR_ATTACHMENT13	opengl/include/GLES3/gl31.h	705;"	d
GL_COLOR_ATTACHMENT13_EXT	opengl/include/GLES2/gl2ext.h	831;"	d
GL_COLOR_ATTACHMENT13_NV	opengl/include/GLES2/gl2ext.h	1617;"	d
GL_COLOR_ATTACHMENT14	opengl/include/GLES3/gl3.h	706;"	d
GL_COLOR_ATTACHMENT14	opengl/include/GLES3/gl31.h	706;"	d
GL_COLOR_ATTACHMENT14_EXT	opengl/include/GLES2/gl2ext.h	832;"	d
GL_COLOR_ATTACHMENT14_NV	opengl/include/GLES2/gl2ext.h	1618;"	d
GL_COLOR_ATTACHMENT15	opengl/include/GLES3/gl3.h	707;"	d
GL_COLOR_ATTACHMENT15	opengl/include/GLES3/gl31.h	707;"	d
GL_COLOR_ATTACHMENT15_EXT	opengl/include/GLES2/gl2ext.h	833;"	d
GL_COLOR_ATTACHMENT15_NV	opengl/include/GLES2/gl2ext.h	1619;"	d
GL_COLOR_ATTACHMENT1_EXT	opengl/include/GLES2/gl2ext.h	819;"	d
GL_COLOR_ATTACHMENT1_NV	opengl/include/GLES2/gl2ext.h	1605;"	d
GL_COLOR_ATTACHMENT2	opengl/include/GLES3/gl3.h	694;"	d
GL_COLOR_ATTACHMENT2	opengl/include/GLES3/gl31.h	694;"	d
GL_COLOR_ATTACHMENT2_EXT	opengl/include/GLES2/gl2ext.h	820;"	d
GL_COLOR_ATTACHMENT2_NV	opengl/include/GLES2/gl2ext.h	1606;"	d
GL_COLOR_ATTACHMENT3	opengl/include/GLES3/gl3.h	695;"	d
GL_COLOR_ATTACHMENT3	opengl/include/GLES3/gl31.h	695;"	d
GL_COLOR_ATTACHMENT3_EXT	opengl/include/GLES2/gl2ext.h	821;"	d
GL_COLOR_ATTACHMENT3_NV	opengl/include/GLES2/gl2ext.h	1607;"	d
GL_COLOR_ATTACHMENT4	opengl/include/GLES3/gl3.h	696;"	d
GL_COLOR_ATTACHMENT4	opengl/include/GLES3/gl31.h	696;"	d
GL_COLOR_ATTACHMENT4_EXT	opengl/include/GLES2/gl2ext.h	822;"	d
GL_COLOR_ATTACHMENT4_NV	opengl/include/GLES2/gl2ext.h	1608;"	d
GL_COLOR_ATTACHMENT5	opengl/include/GLES3/gl3.h	697;"	d
GL_COLOR_ATTACHMENT5	opengl/include/GLES3/gl31.h	697;"	d
GL_COLOR_ATTACHMENT5_EXT	opengl/include/GLES2/gl2ext.h	823;"	d
GL_COLOR_ATTACHMENT5_NV	opengl/include/GLES2/gl2ext.h	1609;"	d
GL_COLOR_ATTACHMENT6	opengl/include/GLES3/gl3.h	698;"	d
GL_COLOR_ATTACHMENT6	opengl/include/GLES3/gl31.h	698;"	d
GL_COLOR_ATTACHMENT6_EXT	opengl/include/GLES2/gl2ext.h	824;"	d
GL_COLOR_ATTACHMENT6_NV	opengl/include/GLES2/gl2ext.h	1610;"	d
GL_COLOR_ATTACHMENT7	opengl/include/GLES3/gl3.h	699;"	d
GL_COLOR_ATTACHMENT7	opengl/include/GLES3/gl31.h	699;"	d
GL_COLOR_ATTACHMENT7_EXT	opengl/include/GLES2/gl2ext.h	825;"	d
GL_COLOR_ATTACHMENT7_NV	opengl/include/GLES2/gl2ext.h	1611;"	d
GL_COLOR_ATTACHMENT8	opengl/include/GLES3/gl3.h	700;"	d
GL_COLOR_ATTACHMENT8	opengl/include/GLES3/gl31.h	700;"	d
GL_COLOR_ATTACHMENT8_EXT	opengl/include/GLES2/gl2ext.h	826;"	d
GL_COLOR_ATTACHMENT8_NV	opengl/include/GLES2/gl2ext.h	1612;"	d
GL_COLOR_ATTACHMENT9	opengl/include/GLES3/gl3.h	701;"	d
GL_COLOR_ATTACHMENT9	opengl/include/GLES3/gl31.h	701;"	d
GL_COLOR_ATTACHMENT9_EXT	opengl/include/GLES2/gl2ext.h	827;"	d
GL_COLOR_ATTACHMENT9_NV	opengl/include/GLES2/gl2ext.h	1613;"	d
GL_COLOR_ATTACHMENT_EXT	opengl/include/GLES2/gl2ext.h	970;"	d
GL_COLOR_BUFFER_BIT	opengl/include/GLES/gl.h	49;"	d
GL_COLOR_BUFFER_BIT	opengl/include/GLES2/gl2.h	78;"	d
GL_COLOR_BUFFER_BIT	opengl/include/GLES3/gl3.h	78;"	d
GL_COLOR_BUFFER_BIT	opengl/include/GLES3/gl31.h	78;"	d
GL_COLOR_BUFFER_BIT	opengl/tests/angeles/include/GLES/gl.h	84;"	d
GL_COLOR_BUFFER_BIT0_QCOM	opengl/include/GLES/glext.h	519;"	d
GL_COLOR_BUFFER_BIT0_QCOM	opengl/include/GLES2/gl2ext.h	1878;"	d
GL_COLOR_BUFFER_BIT1_QCOM	opengl/include/GLES/glext.h	520;"	d
GL_COLOR_BUFFER_BIT1_QCOM	opengl/include/GLES2/gl2ext.h	1879;"	d
GL_COLOR_BUFFER_BIT2_QCOM	opengl/include/GLES/glext.h	521;"	d
GL_COLOR_BUFFER_BIT2_QCOM	opengl/include/GLES2/gl2ext.h	1880;"	d
GL_COLOR_BUFFER_BIT3_QCOM	opengl/include/GLES/glext.h	522;"	d
GL_COLOR_BUFFER_BIT3_QCOM	opengl/include/GLES2/gl2ext.h	1881;"	d
GL_COLOR_BUFFER_BIT4_QCOM	opengl/include/GLES/glext.h	523;"	d
GL_COLOR_BUFFER_BIT4_QCOM	opengl/include/GLES2/gl2ext.h	1882;"	d
GL_COLOR_BUFFER_BIT5_QCOM	opengl/include/GLES/glext.h	524;"	d
GL_COLOR_BUFFER_BIT5_QCOM	opengl/include/GLES2/gl2ext.h	1883;"	d
GL_COLOR_BUFFER_BIT6_QCOM	opengl/include/GLES/glext.h	525;"	d
GL_COLOR_BUFFER_BIT6_QCOM	opengl/include/GLES2/gl2ext.h	1884;"	d
GL_COLOR_BUFFER_BIT7_QCOM	opengl/include/GLES/glext.h	526;"	d
GL_COLOR_BUFFER_BIT7_QCOM	opengl/include/GLES2/gl2ext.h	1885;"	d
GL_COLOR_CLEAR_VALUE	opengl/include/GLES/gl.h	233;"	d
GL_COLOR_CLEAR_VALUE	opengl/include/GLES2/gl2.h	170;"	d
GL_COLOR_CLEAR_VALUE	opengl/include/GLES3/gl3.h	170;"	d
GL_COLOR_CLEAR_VALUE	opengl/include/GLES3/gl31.h	170;"	d
GL_COLOR_EXT	opengl/include/GLES/glext.h	324;"	d
GL_COLOR_EXT	opengl/include/GLES2/gl2ext.h	754;"	d
GL_COLOR_LOGIC_OP	opengl/include/GLES/gl.h	136;"	d
GL_COLOR_LOGIC_OP	opengl/tests/angeles/include/GLES/gl.h	163;"	d
GL_COLOR_MATERIAL	opengl/include/GLES/gl.h	151;"	d
GL_COLOR_MATERIAL	opengl/tests/angeles/include/GLES/gl.h	178;"	d
GL_COLOR_WRITEMASK	opengl/include/GLES/gl.h	234;"	d
GL_COLOR_WRITEMASK	opengl/include/GLES2/gl2.h	171;"	d
GL_COLOR_WRITEMASK	opengl/include/GLES3/gl3.h	171;"	d
GL_COLOR_WRITEMASK	opengl/include/GLES3/gl31.h	171;"	d
GL_COMBINE	opengl/include/GLES/gl.h	523;"	d
GL_COMBINE_ALPHA	opengl/include/GLES/gl.h	525;"	d
GL_COMBINE_RGB	opengl/include/GLES/gl.h	524;"	d
GL_COMMAND_BARRIER_BIT	opengl/include/GLES3/gl31.h	1027;"	d
GL_COMPARE_REF_TO_TEXTURE	opengl/include/GLES3/gl3.h	603;"	d
GL_COMPARE_REF_TO_TEXTURE	opengl/include/GLES3/gl31.h	603;"	d
GL_COMPARE_REF_TO_TEXTURE_EXT	opengl/include/GLES2/gl2ext.h	1182;"	d
GL_COMPILE_STATUS	opengl/include/GLES2/gl2.h	332;"	d
GL_COMPILE_STATUS	opengl/include/GLES3/gl3.h	332;"	d
GL_COMPILE_STATUS	opengl/include/GLES3/gl31.h	332;"	d
GL_COMPRESSED_R11_EAC	opengl/include/GLES3/gl3.h	815;"	d
GL_COMPRESSED_R11_EAC	opengl/include/GLES3/gl31.h	815;"	d
GL_COMPRESSED_RG11_EAC	opengl/include/GLES3/gl3.h	817;"	d
GL_COMPRESSED_RG11_EAC	opengl/include/GLES3/gl31.h	817;"	d
GL_COMPRESSED_RGB8_ETC2	opengl/include/GLES3/gl3.h	819;"	d
GL_COMPRESSED_RGB8_ETC2	opengl/include/GLES3/gl31.h	819;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	opengl/include/GLES3/gl3.h	821;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	opengl/include/GLES3/gl31.h	821;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	opengl/include/GLES3/gl3.h	823;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	opengl/include/GLES3/gl31.h	823;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	opengl/include/GLES2/gl2ext.h	161;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	opengl/include/GLES2/gl2ext.h	158;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	opengl/include/GLES2/gl2ext.h	159;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	opengl/include/GLES2/gl2ext.h	160;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	opengl/include/GLES2/gl2ext.h	162;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	opengl/include/GLES2/gl2ext.h	163;"	d
GL_COMPRESSED_RGBA_ASTC_3x3x3_OES	opengl/include/GLES2/gl2ext.h	375;"	d
GL_COMPRESSED_RGBA_ASTC_4x3x3_OES	opengl/include/GLES2/gl2ext.h	376;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	opengl/include/GLES2/gl2ext.h	150;"	d
GL_COMPRESSED_RGBA_ASTC_4x4x3_OES	opengl/include/GLES2/gl2ext.h	377;"	d
GL_COMPRESSED_RGBA_ASTC_4x4x4_OES	opengl/include/GLES2/gl2ext.h	378;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	opengl/include/GLES2/gl2ext.h	151;"	d
GL_COMPRESSED_RGBA_ASTC_5x4x4_OES	opengl/include/GLES2/gl2ext.h	379;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	opengl/include/GLES2/gl2ext.h	152;"	d
GL_COMPRESSED_RGBA_ASTC_5x5x4_OES	opengl/include/GLES2/gl2ext.h	380;"	d
GL_COMPRESSED_RGBA_ASTC_5x5x5_OES	opengl/include/GLES2/gl2ext.h	381;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	opengl/include/GLES2/gl2ext.h	153;"	d
GL_COMPRESSED_RGBA_ASTC_6x5x5_OES	opengl/include/GLES2/gl2ext.h	382;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	opengl/include/GLES2/gl2ext.h	154;"	d
GL_COMPRESSED_RGBA_ASTC_6x6x5_OES	opengl/include/GLES2/gl2ext.h	383;"	d
GL_COMPRESSED_RGBA_ASTC_6x6x6_OES	opengl/include/GLES2/gl2ext.h	384;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	opengl/include/GLES2/gl2ext.h	155;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	opengl/include/GLES2/gl2ext.h	156;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	opengl/include/GLES2/gl2ext.h	157;"	d
GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG	opengl/include/GLES/glext.h	438;"	d
GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG	opengl/include/GLES2/gl2ext.h	1432;"	d
GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG	opengl/include/GLES2/gl2ext.h	1437;"	d
GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG	opengl/include/GLES/glext.h	437;"	d
GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG	opengl/include/GLES2/gl2ext.h	1431;"	d
GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG	opengl/include/GLES2/gl2ext.h	1438;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	opengl/include/GLES/glext.h	381;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	opengl/include/GLES2/gl2ext.h	1288;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE	opengl/include/GLES2/gl2ext.h	567;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	opengl/include/GLES2/gl2ext.h	1293;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE	opengl/include/GLES2/gl2ext.h	572;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	opengl/include/GLES2/gl2ext.h	1294;"	d
GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG	opengl/include/GLES/glext.h	436;"	d
GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG	opengl/include/GLES2/gl2ext.h	1430;"	d
GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG	opengl/include/GLES/glext.h	435;"	d
GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG	opengl/include/GLES2/gl2ext.h	1429;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	opengl/include/GLES/glext.h	380;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	opengl/include/GLES2/gl2ext.h	1287;"	d
GL_COMPRESSED_SIGNED_R11_EAC	opengl/include/GLES3/gl3.h	816;"	d
GL_COMPRESSED_SIGNED_R11_EAC	opengl/include/GLES3/gl31.h	816;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	opengl/include/GLES3/gl3.h	818;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	opengl/include/GLES3/gl31.h	818;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	opengl/include/GLES2/gl2ext.h	175;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	opengl/include/GLES2/gl2ext.h	172;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	opengl/include/GLES2/gl2ext.h	173;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	opengl/include/GLES2/gl2ext.h	174;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	opengl/include/GLES2/gl2ext.h	176;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	opengl/include/GLES2/gl2ext.h	177;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES	opengl/include/GLES2/gl2ext.h	385;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES	opengl/include/GLES2/gl2ext.h	386;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	opengl/include/GLES2/gl2ext.h	164;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES	opengl/include/GLES2/gl2ext.h	387;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES	opengl/include/GLES2/gl2ext.h	388;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	opengl/include/GLES2/gl2ext.h	165;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES	opengl/include/GLES2/gl2ext.h	389;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	opengl/include/GLES2/gl2ext.h	166;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES	opengl/include/GLES2/gl2ext.h	390;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES	opengl/include/GLES2/gl2ext.h	391;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	opengl/include/GLES2/gl2ext.h	167;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES	opengl/include/GLES2/gl2ext.h	392;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	opengl/include/GLES2/gl2ext.h	168;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES	opengl/include/GLES2/gl2ext.h	393;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES	opengl/include/GLES2/gl2ext.h	394;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	opengl/include/GLES2/gl2ext.h	169;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	opengl/include/GLES2/gl2ext.h	170;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	opengl/include/GLES2/gl2ext.h	171;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	opengl/include/GLES3/gl3.h	824;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	opengl/include/GLES3/gl31.h	824;"	d
GL_COMPRESSED_SRGB8_ETC2	opengl/include/GLES3/gl3.h	820;"	d
GL_COMPRESSED_SRGB8_ETC2	opengl/include/GLES3/gl31.h	820;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	opengl/include/GLES3/gl3.h	822;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	opengl/include/GLES3/gl31.h	822;"	d
GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT	opengl/include/GLES2/gl2ext.h	1004;"	d
GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG	opengl/include/GLES2/gl2ext.h	1006;"	d
GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT	opengl/include/GLES2/gl2ext.h	1005;"	d
GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG	opengl/include/GLES2/gl2ext.h	1007;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV	opengl/include/GLES2/gl2ext.h	1761;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV	opengl/include/GLES2/gl2ext.h	1762;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV	opengl/include/GLES2/gl2ext.h	1763;"	d
GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT	opengl/include/GLES2/gl2ext.h	1002;"	d
GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT	opengl/include/GLES2/gl2ext.h	1003;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_NV	opengl/include/GLES2/gl2ext.h	1760;"	d
GL_COMPRESSED_TEXTURE_FORMATS	opengl/include/GLES/gl.h	283;"	d
GL_COMPRESSED_TEXTURE_FORMATS	opengl/include/GLES2/gl2.h	191;"	d
GL_COMPRESSED_TEXTURE_FORMATS	opengl/include/GLES3/gl3.h	191;"	d
GL_COMPRESSED_TEXTURE_FORMATS	opengl/include/GLES3/gl31.h	191;"	d
GL_COMPRESSED_TEXTURE_FORMATS	opengl/tests/angeles/include/GLES/gl.h	233;"	d
GL_COMPUTE_SHADER	opengl/include/GLES3/gl31.h	937;"	d
GL_COMPUTE_SHADER_BIT	opengl/include/GLES3/gl31.h	952;"	d
GL_COMPUTE_WORK_GROUP_SIZE	opengl/include/GLES3/gl31.h	949;"	d
GL_CONDITION_SATISFIED	opengl/include/GLES3/gl3.h	791;"	d
GL_CONDITION_SATISFIED	opengl/include/GLES3/gl31.h	791;"	d
GL_CONDITION_SATISFIED_APPLE	opengl/include/GLES/glext.h	286;"	d
GL_CONDITION_SATISFIED_APPLE	opengl/include/GLES2/gl2ext.h	637;"	d
GL_CONJOINT_NV	opengl/include/GLES2/gl2ext.h	1494;"	d
GL_CONSTANT	opengl/include/GLES/gl.h	529;"	d
GL_CONSTANT_ALPHA	opengl/include/GLES2/gl2.h	111;"	d
GL_CONSTANT_ALPHA	opengl/include/GLES3/gl3.h	111;"	d
GL_CONSTANT_ALPHA	opengl/include/GLES3/gl31.h	111;"	d
GL_CONSTANT_ATTENUATION	opengl/include/GLES/gl.h	309;"	d
GL_CONSTANT_ATTENUATION	opengl/tests/angeles/include/GLES/gl.h	266;"	d
GL_CONSTANT_COLOR	opengl/include/GLES2/gl2.h	109;"	d
GL_CONSTANT_COLOR	opengl/include/GLES3/gl3.h	109;"	d
GL_CONSTANT_COLOR	opengl/include/GLES3/gl31.h	109;"	d
GL_CONTEXT_FLAG_DEBUG_BIT_KHR	opengl/include/GLES2/gl2ext.h	119;"	d
GL_CONTEXT_ROBUST_ACCESS_EXT	opengl/include/GLES/glext.h	364;"	d
GL_CONTEXT_ROBUST_ACCESS_EXT	opengl/include/GLES2/gl2ext.h	1021;"	d
GL_CONTRAST_NV	opengl/include/GLES2/gl2ext.h	1495;"	d
GL_COORD_REPLACE_OES	opengl/include/GLES/gl.h	587;"	d
GL_COPY	opengl/include/GLES/gl.h	325;"	d
GL_COPY	opengl/tests/angeles/include/GLES/gl.h	282;"	d
GL_COPY_INVERTED	opengl/include/GLES/gl.h	334;"	d
GL_COPY_INVERTED	opengl/tests/angeles/include/GLES/gl.h	291;"	d
GL_COPY_READ_BUFFER	opengl/include/GLES3/gl3.h	744;"	d
GL_COPY_READ_BUFFER	opengl/include/GLES3/gl31.h	744;"	d
GL_COPY_READ_BUFFER_BINDING	opengl/include/GLES3/gl3.h	746;"	d
GL_COPY_READ_BUFFER_BINDING	opengl/include/GLES3/gl31.h	746;"	d
GL_COPY_READ_BUFFER_NV	opengl/include/GLES2/gl2ext.h	1553;"	d
GL_COPY_WRITE_BUFFER	opengl/include/GLES3/gl3.h	745;"	d
GL_COPY_WRITE_BUFFER	opengl/include/GLES3/gl31.h	745;"	d
GL_COPY_WRITE_BUFFER_BINDING	opengl/include/GLES3/gl3.h	747;"	d
GL_COPY_WRITE_BUFFER_BINDING	opengl/include/GLES3/gl31.h	747;"	d
GL_COPY_WRITE_BUFFER_NV	opengl/include/GLES2/gl2ext.h	1554;"	d
GL_COUNTER_RANGE_AMD	opengl/include/GLES2/gl2ext.h	478;"	d
GL_COUNTER_TYPE_AMD	opengl/include/GLES2/gl2ext.h	477;"	d
GL_COVERAGE_ALL_FRAGMENTS_NV	opengl/include/GLES2/gl2ext.h	1568;"	d
GL_COVERAGE_ATTACHMENT_NV	opengl/include/GLES2/gl2ext.h	1565;"	d
GL_COVERAGE_AUTOMATIC_NV	opengl/include/GLES2/gl2ext.h	1570;"	d
GL_COVERAGE_BUFFERS_NV	opengl/include/GLES2/gl2ext.h	1566;"	d
GL_COVERAGE_BUFFER_BIT_NV	opengl/include/GLES2/gl2ext.h	1571;"	d
GL_COVERAGE_COMPONENT4_NV	opengl/include/GLES2/gl2ext.h	1564;"	d
GL_COVERAGE_COMPONENT_NV	opengl/include/GLES2/gl2ext.h	1563;"	d
GL_COVERAGE_EDGE_FRAGMENTS_NV	opengl/include/GLES2/gl2ext.h	1569;"	d
GL_COVERAGE_SAMPLES_NV	opengl/include/GLES2/gl2ext.h	1567;"	d
GL_CPU_OPTIMIZED_QCOM	opengl/include/GLES2/gl2ext.h	1805;"	d
GL_CULL_FACE	opengl/include/GLES/gl.h	133;"	d
GL_CULL_FACE	opengl/include/GLES2/gl2.h	128;"	d
GL_CULL_FACE	opengl/include/GLES3/gl3.h	128;"	d
GL_CULL_FACE	opengl/include/GLES3/gl31.h	128;"	d
GL_CULL_FACE	opengl/tests/angeles/include/GLES/gl.h	160;"	d
GL_CULL_FACE_MODE	opengl/include/GLES/gl.h	203;"	d
GL_CULL_FACE_MODE	opengl/include/GLES2/gl2.h	147;"	d
GL_CULL_FACE_MODE	opengl/include/GLES3/gl3.h	147;"	d
GL_CULL_FACE_MODE	opengl/include/GLES3/gl31.h	147;"	d
GL_CURRENT_COLOR	opengl/include/GLES/gl.h	190;"	d
GL_CURRENT_NORMAL	opengl/include/GLES/gl.h	191;"	d
GL_CURRENT_PALETTE_MATRIX_OES	opengl/include/GLES/glext.h	148;"	d
GL_CURRENT_PROGRAM	opengl/include/GLES2/gl2.h	232;"	d
GL_CURRENT_PROGRAM	opengl/include/GLES3/gl3.h	232;"	d
GL_CURRENT_PROGRAM	opengl/include/GLES3/gl31.h	232;"	d
GL_CURRENT_QUERY	opengl/include/GLES3/gl3.h	557;"	d
GL_CURRENT_QUERY	opengl/include/GLES3/gl31.h	557;"	d
GL_CURRENT_QUERY_EXT	opengl/include/GLES2/gl2ext.h	766;"	d
GL_CURRENT_TEXTURE_COORDS	opengl/include/GLES/gl.h	192;"	d
GL_CURRENT_VERTEX_ATTRIB	opengl/include/GLES2/gl2.h	123;"	d
GL_CURRENT_VERTEX_ATTRIB	opengl/include/GLES3/gl3.h	123;"	d
GL_CURRENT_VERTEX_ATTRIB	opengl/include/GLES3/gl31.h	123;"	d
GL_CW	opengl/include/GLES/gl.h	186;"	d
GL_CW	opengl/include/GLES2/gl2.h	142;"	d
GL_CW	opengl/include/GLES3/gl3.h	142;"	d
GL_CW	opengl/include/GLES3/gl31.h	142;"	d
GL_CW	opengl/tests/angeles/include/GLES/gl.h	213;"	d
GL_DARKEN_KHR	opengl/include/GLES2/gl2ext.h	61;"	d
GL_DARKEN_NV	opengl/include/GLES2/gl2ext.h	1496;"	d
GL_DEBUG_CALLBACK_FUNCTION_KHR	opengl/include/GLES2/gl2ext.h	85;"	d
GL_DEBUG_CALLBACK_USER_PARAM_KHR	opengl/include/GLES2/gl2ext.h	86;"	d
GL_DEBUG_GROUP_STACK_DEPTH_KHR	opengl/include/GLES2/gl2ext.h	104;"	d
GL_DEBUG_LOGGED_MESSAGES_KHR	opengl/include/GLES2/gl2ext.h	114;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR	opengl/include/GLES2/gl2ext.h	84;"	d
GL_DEBUG_OUTPUT_KHR	opengl/include/GLES2/gl2ext.h	118;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR	opengl/include/GLES2/gl2ext.h	83;"	d
GL_DEBUG_SEVERITY_HIGH_KHR	opengl/include/GLES2/gl2ext.h	115;"	d
GL_DEBUG_SEVERITY_LOW_KHR	opengl/include/GLES2/gl2ext.h	117;"	d
GL_DEBUG_SEVERITY_MEDIUM_KHR	opengl/include/GLES2/gl2ext.h	116;"	d
GL_DEBUG_SEVERITY_NOTIFICATION_KHR	opengl/include/GLES2/gl2ext.h	102;"	d
GL_DEBUG_SOURCE_API_KHR	opengl/include/GLES2/gl2ext.h	87;"	d
GL_DEBUG_SOURCE_APPLICATION_KHR	opengl/include/GLES2/gl2ext.h	91;"	d
GL_DEBUG_SOURCE_OTHER_KHR	opengl/include/GLES2/gl2ext.h	92;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_KHR	opengl/include/GLES2/gl2ext.h	89;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_KHR	opengl/include/GLES2/gl2ext.h	90;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR	opengl/include/GLES2/gl2ext.h	88;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR	opengl/include/GLES2/gl2ext.h	94;"	d
GL_DEBUG_TYPE_ERROR_KHR	opengl/include/GLES2/gl2ext.h	93;"	d
GL_DEBUG_TYPE_MARKER_KHR	opengl/include/GLES2/gl2ext.h	99;"	d
GL_DEBUG_TYPE_OTHER_KHR	opengl/include/GLES2/gl2ext.h	98;"	d
GL_DEBUG_TYPE_PERFORMANCE_KHR	opengl/include/GLES2/gl2ext.h	97;"	d
GL_DEBUG_TYPE_POP_GROUP_KHR	opengl/include/GLES2/gl2ext.h	101;"	d
GL_DEBUG_TYPE_PORTABILITY_KHR	opengl/include/GLES2/gl2ext.h	96;"	d
GL_DEBUG_TYPE_PUSH_GROUP_KHR	opengl/include/GLES2/gl2ext.h	100;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR	opengl/include/GLES2/gl2ext.h	95;"	d
GL_DECAL	opengl/include/GLES/gl.h	414;"	d
GL_DECAL	opengl/tests/angeles/include/GLES/gl.h	371;"	d
GL_DECODE_EXT	opengl/include/GLES2/gl2ext.h	1331;"	d
GL_DECR	opengl/include/GLES/gl.h	397;"	d
GL_DECR	opengl/include/GLES2/gl2.h	244;"	d
GL_DECR	opengl/include/GLES3/gl3.h	244;"	d
GL_DECR	opengl/include/GLES3/gl31.h	244;"	d
GL_DECR	opengl/tests/angeles/include/GLES/gl.h	354;"	d
GL_DECR_WRAP	opengl/include/GLES2/gl2.h	247;"	d
GL_DECR_WRAP	opengl/include/GLES3/gl3.h	247;"	d
GL_DECR_WRAP	opengl/include/GLES3/gl31.h	247;"	d
GL_DECR_WRAP_OES	opengl/include/GLES/glext.h	195;"	d
GL_DELETE_STATUS	opengl/include/GLES2/gl2.h	223;"	d
GL_DELETE_STATUS	opengl/include/GLES3/gl3.h	223;"	d
GL_DELETE_STATUS	opengl/include/GLES3/gl31.h	223;"	d
GL_DEPTH	opengl/include/GLES3/gl3.h	532;"	d
GL_DEPTH	opengl/include/GLES3/gl31.h	532;"	d
GL_DEPTH24_STENCIL8	opengl/include/GLES3/gl3.h	684;"	d
GL_DEPTH24_STENCIL8	opengl/include/GLES3/gl31.h	684;"	d
GL_DEPTH24_STENCIL8_OES	opengl/include/GLES/glext.h	165;"	d
GL_DEPTH24_STENCIL8_OES	opengl/include/GLES2/gl2ext.h	281;"	d
GL_DEPTH32F_STENCIL8	opengl/include/GLES3/gl3.h	669;"	d
GL_DEPTH32F_STENCIL8	opengl/include/GLES3/gl31.h	669;"	d
GL_DEPTH_ATTACHMENT	opengl/include/GLES2/gl2.h	365;"	d
GL_DEPTH_ATTACHMENT	opengl/include/GLES3/gl3.h	365;"	d
GL_DEPTH_ATTACHMENT	opengl/include/GLES3/gl31.h	365;"	d
GL_DEPTH_ATTACHMENT_OES	opengl/include/GLES/glext.h	112;"	d
GL_DEPTH_BITS	opengl/include/GLES/gl.h	250;"	d
GL_DEPTH_BITS	opengl/include/GLES2/gl2.h	181;"	d
GL_DEPTH_BITS	opengl/include/GLES3/gl3.h	181;"	d
GL_DEPTH_BITS	opengl/include/GLES3/gl31.h	181;"	d
GL_DEPTH_BITS	opengl/tests/angeles/include/GLES/gl.h	239;"	d
GL_DEPTH_BUFFER_BIT	opengl/include/GLES/gl.h	47;"	d
GL_DEPTH_BUFFER_BIT	opengl/include/GLES2/gl2.h	76;"	d
GL_DEPTH_BUFFER_BIT	opengl/include/GLES3/gl3.h	76;"	d
GL_DEPTH_BUFFER_BIT	opengl/include/GLES3/gl31.h	76;"	d
GL_DEPTH_BUFFER_BIT	opengl/tests/angeles/include/GLES/gl.h	82;"	d
GL_DEPTH_BUFFER_BIT0_QCOM	opengl/include/GLES/glext.h	527;"	d
GL_DEPTH_BUFFER_BIT0_QCOM	opengl/include/GLES2/gl2ext.h	1886;"	d
GL_DEPTH_BUFFER_BIT1_QCOM	opengl/include/GLES/glext.h	528;"	d
GL_DEPTH_BUFFER_BIT1_QCOM	opengl/include/GLES2/gl2ext.h	1887;"	d
GL_DEPTH_BUFFER_BIT2_QCOM	opengl/include/GLES/glext.h	529;"	d
GL_DEPTH_BUFFER_BIT2_QCOM	opengl/include/GLES2/gl2ext.h	1888;"	d
GL_DEPTH_BUFFER_BIT3_QCOM	opengl/include/GLES/glext.h	530;"	d
GL_DEPTH_BUFFER_BIT3_QCOM	opengl/include/GLES2/gl2ext.h	1889;"	d
GL_DEPTH_BUFFER_BIT4_QCOM	opengl/include/GLES/glext.h	531;"	d
GL_DEPTH_BUFFER_BIT4_QCOM	opengl/include/GLES2/gl2ext.h	1890;"	d
GL_DEPTH_BUFFER_BIT5_QCOM	opengl/include/GLES/glext.h	532;"	d
GL_DEPTH_BUFFER_BIT5_QCOM	opengl/include/GLES2/gl2ext.h	1891;"	d
GL_DEPTH_BUFFER_BIT6_QCOM	opengl/include/GLES/glext.h	533;"	d
GL_DEPTH_BUFFER_BIT6_QCOM	opengl/include/GLES2/gl2ext.h	1892;"	d
GL_DEPTH_BUFFER_BIT7_QCOM	opengl/include/GLES/glext.h	534;"	d
GL_DEPTH_BUFFER_BIT7_QCOM	opengl/include/GLES2/gl2ext.h	1893;"	d
GL_DEPTH_CLEAR_VALUE	opengl/include/GLES/gl.h	208;"	d
GL_DEPTH_CLEAR_VALUE	opengl/include/GLES2/gl2.h	151;"	d
GL_DEPTH_CLEAR_VALUE	opengl/include/GLES3/gl3.h	151;"	d
GL_DEPTH_CLEAR_VALUE	opengl/include/GLES3/gl31.h	151;"	d
GL_DEPTH_COMPONENT	opengl/include/GLES2/gl2.h	204;"	d
GL_DEPTH_COMPONENT	opengl/include/GLES3/gl3.h	204;"	d
GL_DEPTH_COMPONENT	opengl/include/GLES3/gl31.h	204;"	d
GL_DEPTH_COMPONENT16	opengl/include/GLES2/gl2.h	349;"	d
GL_DEPTH_COMPONENT16	opengl/include/GLES3/gl3.h	349;"	d
GL_DEPTH_COMPONENT16	opengl/include/GLES3/gl31.h	349;"	d
GL_DEPTH_COMPONENT16_NONLINEAR_NV	opengl/include/GLES2/gl2ext.h	1582;"	d
GL_DEPTH_COMPONENT16_OES	opengl/include/GLES/glext.h	97;"	d
GL_DEPTH_COMPONENT16_OES	opengl/include/GLES2/gl2ext.h	287;"	d
GL_DEPTH_COMPONENT24	opengl/include/GLES3/gl3.h	553;"	d
GL_DEPTH_COMPONENT24	opengl/include/GLES3/gl31.h	553;"	d
GL_DEPTH_COMPONENT24_OES	opengl/include/GLES/glext.h	53;"	d
GL_DEPTH_COMPONENT24_OES	opengl/include/GLES2/gl2ext.h	224;"	d
GL_DEPTH_COMPONENT32F	opengl/include/GLES3/gl3.h	668;"	d
GL_DEPTH_COMPONENT32F	opengl/include/GLES3/gl31.h	668;"	d
GL_DEPTH_COMPONENT32_OES	opengl/include/GLES/glext.h	58;"	d
GL_DEPTH_COMPONENT32_OES	opengl/include/GLES2/gl2ext.h	229;"	d
GL_DEPTH_EXT	opengl/include/GLES/glext.h	325;"	d
GL_DEPTH_EXT	opengl/include/GLES2/gl2ext.h	755;"	d
GL_DEPTH_FUNC	opengl/include/GLES/gl.h	209;"	d
GL_DEPTH_FUNC	opengl/include/GLES2/gl2.h	152;"	d
GL_DEPTH_FUNC	opengl/include/GLES3/gl3.h	152;"	d
GL_DEPTH_FUNC	opengl/include/GLES3/gl31.h	152;"	d
GL_DEPTH_RANGE	opengl/include/GLES/gl.h	206;"	d
GL_DEPTH_RANGE	opengl/include/GLES2/gl2.h	149;"	d
GL_DEPTH_RANGE	opengl/include/GLES3/gl3.h	149;"	d
GL_DEPTH_RANGE	opengl/include/GLES3/gl31.h	149;"	d
GL_DEPTH_STENCIL	opengl/include/GLES3/gl3.h	682;"	d
GL_DEPTH_STENCIL	opengl/include/GLES3/gl31.h	682;"	d
GL_DEPTH_STENCIL_ATTACHMENT	opengl/include/GLES3/gl3.h	681;"	d
GL_DEPTH_STENCIL_ATTACHMENT	opengl/include/GLES3/gl31.h	681;"	d
GL_DEPTH_STENCIL_OES	opengl/include/GLES/glext.h	163;"	d
GL_DEPTH_STENCIL_OES	opengl/include/GLES2/gl2ext.h	279;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	opengl/include/GLES3/gl31.h	1066;"	d
GL_DEPTH_TEST	opengl/include/GLES/gl.h	139;"	d
GL_DEPTH_TEST	opengl/include/GLES2/gl2.h	132;"	d
GL_DEPTH_TEST	opengl/include/GLES3/gl3.h	132;"	d
GL_DEPTH_TEST	opengl/include/GLES3/gl31.h	132;"	d
GL_DEPTH_TEST	opengl/tests/angeles/include/GLES/gl.h	166;"	d
GL_DEPTH_WRITEMASK	opengl/include/GLES/gl.h	207;"	d
GL_DEPTH_WRITEMASK	opengl/include/GLES2/gl2.h	150;"	d
GL_DEPTH_WRITEMASK	opengl/include/GLES3/gl3.h	150;"	d
GL_DEPTH_WRITEMASK	opengl/include/GLES3/gl31.h	150;"	d
GL_DIFFERENCE_KHR	opengl/include/GLES2/gl2ext.h	67;"	d
GL_DIFFERENCE_NV	opengl/include/GLES2/gl2ext.h	1497;"	d
GL_DIFFUSE	opengl/include/GLES/gl.h	303;"	d
GL_DIFFUSE	opengl/tests/angeles/include/GLES/gl.h	260;"	d
GL_DISJOINT_NV	opengl/include/GLES2/gl2ext.h	1498;"	d
GL_DISPATCH_INDIRECT_BUFFER	opengl/include/GLES3/gl31.h	950;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	opengl/include/GLES3/gl31.h	951;"	d
GL_DITHER	opengl/include/GLES/gl.h	137;"	d
GL_DITHER	opengl/include/GLES2/gl2.h	130;"	d
GL_DITHER	opengl/include/GLES3/gl3.h	130;"	d
GL_DITHER	opengl/include/GLES3/gl31.h	130;"	d
GL_DITHER	opengl/tests/angeles/include/GLES/gl.h	164;"	d
GL_DMP_shader_binary	opengl/include/GLES2/gl2ext.h	695;"	d
GL_DONT_CARE	opengl/include/GLES/gl.h	286;"	d
GL_DONT_CARE	opengl/include/GLES2/gl2.h	192;"	d
GL_DONT_CARE	opengl/include/GLES3/gl3.h	192;"	d
GL_DONT_CARE	opengl/include/GLES3/gl31.h	192;"	d
GL_DONT_CARE	opengl/tests/angeles/include/GLES/gl.h	243;"	d
GL_DOT3_RGB	opengl/include/GLES/gl.h	548;"	d
GL_DOT3_RGBA	opengl/include/GLES/gl.h	549;"	d
GL_DOT3_RGBA_IMG	opengl/include/GLES/glext.h	449;"	d
GL_DRAW_BUFFER0	opengl/include/GLES3/gl3.h	569;"	d
GL_DRAW_BUFFER0	opengl/include/GLES3/gl31.h	569;"	d
GL_DRAW_BUFFER0_EXT	opengl/include/GLES2/gl2ext.h	802;"	d
GL_DRAW_BUFFER0_NV	opengl/include/GLES2/gl2ext.h	1588;"	d
GL_DRAW_BUFFER1	opengl/include/GLES3/gl3.h	570;"	d
GL_DRAW_BUFFER1	opengl/include/GLES3/gl31.h	570;"	d
GL_DRAW_BUFFER10	opengl/include/GLES3/gl3.h	579;"	d
GL_DRAW_BUFFER10	opengl/include/GLES3/gl31.h	579;"	d
GL_DRAW_BUFFER10_EXT	opengl/include/GLES2/gl2ext.h	812;"	d
GL_DRAW_BUFFER10_NV	opengl/include/GLES2/gl2ext.h	1598;"	d
GL_DRAW_BUFFER11	opengl/include/GLES3/gl3.h	580;"	d
GL_DRAW_BUFFER11	opengl/include/GLES3/gl31.h	580;"	d
GL_DRAW_BUFFER11_EXT	opengl/include/GLES2/gl2ext.h	813;"	d
GL_DRAW_BUFFER11_NV	opengl/include/GLES2/gl2ext.h	1599;"	d
GL_DRAW_BUFFER12	opengl/include/GLES3/gl3.h	581;"	d
GL_DRAW_BUFFER12	opengl/include/GLES3/gl31.h	581;"	d
GL_DRAW_BUFFER12_EXT	opengl/include/GLES2/gl2ext.h	814;"	d
GL_DRAW_BUFFER12_NV	opengl/include/GLES2/gl2ext.h	1600;"	d
GL_DRAW_BUFFER13	opengl/include/GLES3/gl3.h	582;"	d
GL_DRAW_BUFFER13	opengl/include/GLES3/gl31.h	582;"	d
GL_DRAW_BUFFER13_EXT	opengl/include/GLES2/gl2ext.h	815;"	d
GL_DRAW_BUFFER13_NV	opengl/include/GLES2/gl2ext.h	1601;"	d
GL_DRAW_BUFFER14	opengl/include/GLES3/gl3.h	583;"	d
GL_DRAW_BUFFER14	opengl/include/GLES3/gl31.h	583;"	d
GL_DRAW_BUFFER14_EXT	opengl/include/GLES2/gl2ext.h	816;"	d
GL_DRAW_BUFFER14_NV	opengl/include/GLES2/gl2ext.h	1602;"	d
GL_DRAW_BUFFER15	opengl/include/GLES3/gl3.h	584;"	d
GL_DRAW_BUFFER15	opengl/include/GLES3/gl31.h	584;"	d
GL_DRAW_BUFFER15_EXT	opengl/include/GLES2/gl2ext.h	817;"	d
GL_DRAW_BUFFER15_NV	opengl/include/GLES2/gl2ext.h	1603;"	d
GL_DRAW_BUFFER1_EXT	opengl/include/GLES2/gl2ext.h	803;"	d
GL_DRAW_BUFFER1_NV	opengl/include/GLES2/gl2ext.h	1589;"	d
GL_DRAW_BUFFER2	opengl/include/GLES3/gl3.h	571;"	d
GL_DRAW_BUFFER2	opengl/include/GLES3/gl31.h	571;"	d
GL_DRAW_BUFFER2_EXT	opengl/include/GLES2/gl2ext.h	804;"	d
GL_DRAW_BUFFER2_NV	opengl/include/GLES2/gl2ext.h	1590;"	d
GL_DRAW_BUFFER3	opengl/include/GLES3/gl3.h	572;"	d
GL_DRAW_BUFFER3	opengl/include/GLES3/gl31.h	572;"	d
GL_DRAW_BUFFER3_EXT	opengl/include/GLES2/gl2ext.h	805;"	d
GL_DRAW_BUFFER3_NV	opengl/include/GLES2/gl2ext.h	1591;"	d
GL_DRAW_BUFFER4	opengl/include/GLES3/gl3.h	573;"	d
GL_DRAW_BUFFER4	opengl/include/GLES3/gl31.h	573;"	d
GL_DRAW_BUFFER4_EXT	opengl/include/GLES2/gl2ext.h	806;"	d
GL_DRAW_BUFFER4_NV	opengl/include/GLES2/gl2ext.h	1592;"	d
GL_DRAW_BUFFER5	opengl/include/GLES3/gl3.h	574;"	d
GL_DRAW_BUFFER5	opengl/include/GLES3/gl31.h	574;"	d
GL_DRAW_BUFFER5_EXT	opengl/include/GLES2/gl2ext.h	807;"	d
GL_DRAW_BUFFER5_NV	opengl/include/GLES2/gl2ext.h	1593;"	d
GL_DRAW_BUFFER6	opengl/include/GLES3/gl3.h	575;"	d
GL_DRAW_BUFFER6	opengl/include/GLES3/gl31.h	575;"	d
GL_DRAW_BUFFER6_EXT	opengl/include/GLES2/gl2ext.h	808;"	d
GL_DRAW_BUFFER6_NV	opengl/include/GLES2/gl2ext.h	1594;"	d
GL_DRAW_BUFFER7	opengl/include/GLES3/gl3.h	576;"	d
GL_DRAW_BUFFER7	opengl/include/GLES3/gl31.h	576;"	d
GL_DRAW_BUFFER7_EXT	opengl/include/GLES2/gl2ext.h	809;"	d
GL_DRAW_BUFFER7_NV	opengl/include/GLES2/gl2ext.h	1595;"	d
GL_DRAW_BUFFER8	opengl/include/GLES3/gl3.h	577;"	d
GL_DRAW_BUFFER8	opengl/include/GLES3/gl31.h	577;"	d
GL_DRAW_BUFFER8_EXT	opengl/include/GLES2/gl2ext.h	810;"	d
GL_DRAW_BUFFER8_NV	opengl/include/GLES2/gl2ext.h	1596;"	d
GL_DRAW_BUFFER9	opengl/include/GLES3/gl3.h	578;"	d
GL_DRAW_BUFFER9	opengl/include/GLES3/gl31.h	578;"	d
GL_DRAW_BUFFER9_EXT	opengl/include/GLES2/gl2ext.h	811;"	d
GL_DRAW_BUFFER9_NV	opengl/include/GLES2/gl2ext.h	1597;"	d
GL_DRAW_BUFFER_EXT	opengl/include/GLES2/gl2ext.h	972;"	d
GL_DRAW_FRAMEBUFFER	opengl/include/GLES3/gl3.h	688;"	d
GL_DRAW_FRAMEBUFFER	opengl/include/GLES3/gl31.h	688;"	d
GL_DRAW_FRAMEBUFFER_ANGLE	opengl/include/GLES2/gl2ext.h	522;"	d
GL_DRAW_FRAMEBUFFER_APPLE	opengl/include/GLES/glext.h	255;"	d
GL_DRAW_FRAMEBUFFER_APPLE	opengl/include/GLES2/gl2ext.h	604;"	d
GL_DRAW_FRAMEBUFFER_BINDING	opengl/include/GLES3/gl3.h	686;"	d
GL_DRAW_FRAMEBUFFER_BINDING	opengl/include/GLES3/gl31.h	686;"	d
GL_DRAW_FRAMEBUFFER_BINDING_ANGLE	opengl/include/GLES2/gl2ext.h	523;"	d
GL_DRAW_FRAMEBUFFER_BINDING_APPLE	opengl/include/GLES/glext.h	256;"	d
GL_DRAW_FRAMEBUFFER_BINDING_APPLE	opengl/include/GLES2/gl2ext.h	605;"	d
GL_DRAW_FRAMEBUFFER_BINDING_NV	opengl/include/GLES2/gl2ext.h	1672;"	d
GL_DRAW_FRAMEBUFFER_NV	opengl/include/GLES2/gl2ext.h	1671;"	d
GL_DRAW_INDIRECT_BUFFER	opengl/include/GLES3/gl31.h	953;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	opengl/include/GLES3/gl31.h	954;"	d
GL_DST_ALPHA	opengl/include/GLES/gl.h	81;"	d
GL_DST_ALPHA	opengl/include/GLES2/gl2.h	94;"	d
GL_DST_ALPHA	opengl/include/GLES3/gl3.h	94;"	d
GL_DST_ALPHA	opengl/include/GLES3/gl31.h	94;"	d
GL_DST_ALPHA	opengl/tests/angeles/include/GLES/gl.h	116;"	d
GL_DST_ATOP_NV	opengl/include/GLES2/gl2ext.h	1499;"	d
GL_DST_COLOR	opengl/include/GLES/gl.h	87;"	d
GL_DST_COLOR	opengl/include/GLES2/gl2.h	96;"	d
GL_DST_COLOR	opengl/include/GLES3/gl3.h	96;"	d
GL_DST_COLOR	opengl/include/GLES3/gl31.h	96;"	d
GL_DST_COLOR	opengl/tests/angeles/include/GLES/gl.h	122;"	d
GL_DST_IN_NV	opengl/include/GLES2/gl2ext.h	1500;"	d
GL_DST_NV	opengl/include/GLES2/gl2ext.h	1501;"	d
GL_DST_OUT_NV	opengl/include/GLES2/gl2ext.h	1502;"	d
GL_DST_OVER_NV	opengl/include/GLES2/gl2ext.h	1503;"	d
GL_DYNAMIC_COPY	opengl/include/GLES3/gl3.h	567;"	d
GL_DYNAMIC_COPY	opengl/include/GLES3/gl31.h	567;"	d
GL_DYNAMIC_DRAW	opengl/include/GLES/gl.h	516;"	d
GL_DYNAMIC_DRAW	opengl/include/GLES2/gl2.h	120;"	d
GL_DYNAMIC_DRAW	opengl/include/GLES3/gl3.h	120;"	d
GL_DYNAMIC_DRAW	opengl/include/GLES3/gl31.h	120;"	d
GL_DYNAMIC_READ	opengl/include/GLES3/gl3.h	566;"	d
GL_DYNAMIC_READ	opengl/include/GLES3/gl31.h	566;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	opengl/include/GLES3/gl31.h	1023;"	d
GL_ELEMENT_ARRAY_BUFFER	opengl/include/GLES/gl.h	506;"	d
GL_ELEMENT_ARRAY_BUFFER	opengl/include/GLES2/gl2.h	115;"	d
GL_ELEMENT_ARRAY_BUFFER	opengl/include/GLES3/gl3.h	115;"	d
GL_ELEMENT_ARRAY_BUFFER	opengl/include/GLES3/gl31.h	115;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	opengl/include/GLES/gl.h	509;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	opengl/include/GLES2/gl2.h	117;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	opengl/include/GLES3/gl3.h	117;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	opengl/include/GLES3/gl31.h	117;"	d
GL_EMISSION	opengl/include/GLES/gl.h	343;"	d
GL_EMISSION	opengl/tests/angeles/include/GLES/gl.h	300;"	d
GL_ENTRY	opengl/libs/EGL/egl.cpp	370;"	d	file:
GL_ENTRY	opengl/libs/EGL/egl.cpp	372;"	d	file:
GL_ENTRY	opengl/libs/EGL/egl.cpp	385;"	d	file:
GL_ENTRY	opengl/libs/EGL/trace.cpp	349;"	d	file:
GL_ENTRY	opengl/libs/EGL/trace.cpp	358;"	d	file:
GL_ENTRY	opengl/libs/EGL/trace.cpp	391;"	d	file:
GL_ENTRY	opengl/libs/EGL/trace.cpp	400;"	d	file:
GL_ENTRY	opengl/libs/EGL/trace.cpp	444;"	d	file:
GL_ENTRY	opengl/libs/EGL/trace.cpp	453;"	d	file:
GL_ENTRY	opengl/libs/GLES_trace/src/gltrace_hooks.cpp	25;"	d	file:
GL_ENTRY	opengl/libs/GLES_trace/src/gltrace_hooks.cpp	34;"	d	file:
GL_ENTRY	opengl/libs/hooks.h	56;"	d
GL_ENTRY	opengl/libs/hooks.h	58;"	d
GL_ENTRY	opengl/libs/hooks.h	73;"	d
GL_ENUM	opengl/libs/EGL/trace.cpp	45;"	d	file:
GL_ENUM	opengl/libs/EGL/trace.cpp	46;"	d	file:
GL_ENUM	opengl/libs/EGL/trace.cpp	51;"	d	file:
GL_EQUAL	opengl/include/GLES/gl.h	67;"	d
GL_EQUAL	opengl/include/GLES2/gl2.h	235;"	d
GL_EQUAL	opengl/include/GLES3/gl3.h	235;"	d
GL_EQUAL	opengl/include/GLES3/gl31.h	235;"	d
GL_EQUAL	opengl/tests/angeles/include/GLES/gl.h	102;"	d
GL_EQUIV	opengl/include/GLES/gl.h	331;"	d
GL_EQUIV	opengl/tests/angeles/include/GLES/gl.h	288;"	d
GL_ES_VERSION_2_0	opengl/include/GLES2/gl2.h	54;"	d
GL_ES_VERSION_2_0	opengl/include/GLES3/gl3.h	54;"	d
GL_ES_VERSION_2_0	opengl/include/GLES3/gl31.h	54;"	d
GL_ES_VERSION_3_0	opengl/include/GLES3/gl3.h	522;"	d
GL_ES_VERSION_3_0	opengl/include/GLES3/gl31.h	522;"	d
GL_ES_VERSION_3_1	opengl/include/GLES3/gl31.h	936;"	d
GL_ETC1_RGB8_OES	opengl/include/GLES/glext.h	48;"	d
GL_ETC1_RGB8_OES	opengl/include/GLES2/gl2ext.h	205;"	d
GL_ETC1_SRGB8_NV	opengl/include/GLES2/gl2ext.h	1764;"	d
GL_EXCLUSION_KHR	opengl/include/GLES2/gl2ext.h	68;"	d
GL_EXCLUSION_NV	opengl/include/GLES2/gl2ext.h	1504;"	d
GL_EXP	opengl/include/GLES/gl.h	175;"	d
GL_EXP	opengl/tests/angeles/include/GLES/gl.h	202;"	d
GL_EXP2	opengl/include/GLES/gl.h	176;"	d
GL_EXP2	opengl/tests/angeles/include/GLES/gl.h	203;"	d
GL_EXTENSION	opengl/libs/EGL/getProcAddress.cpp	159;"	d	file:
GL_EXTENSION	opengl/libs/EGL/getProcAddress.cpp	220;"	d	file:
GL_EXTENSION	opengl/libs/EGL/getProcAddress.cpp	31;"	d	file:
GL_EXTENSIONS	opengl/include/GLES/gl.h	404;"	d
GL_EXTENSIONS	opengl/include/GLES2/gl2.h	251;"	d
GL_EXTENSIONS	opengl/include/GLES3/gl3.h	251;"	d
GL_EXTENSIONS	opengl/include/GLES3/gl31.h	251;"	d
GL_EXTENSIONS	opengl/tests/angeles/include/GLES/gl.h	361;"	d
GL_EXTENSION_ARRAY	opengl/libs/EGL/getProcAddress.cpp	210;"	d	file:
GL_EXTENSION_ARRAY	opengl/libs/EGL/getProcAddress.cpp	218;"	d	file:
GL_EXTENSION_ARRAY	opengl/libs/EGL/getProcAddress.cpp	33;"	d	file:
GL_EXTENSION_LIST	opengl/libs/EGL/getProcAddress.cpp	172;"	d	file:
GL_EXTENSION_LIST	opengl/libs/EGL/getProcAddress.cpp	217;"	d	file:
GL_EXTENSION_LIST	opengl/libs/EGL/getProcAddress.cpp	34;"	d	file:
GL_EXTENSION_NAME	opengl/libs/EGL/getProcAddress.cpp	157;"	d	file:
GL_EXTENSION_NAME	opengl/libs/EGL/getProcAddress.cpp	219;"	d	file:
GL_EXTENSION_NAME	opengl/libs/EGL/getProcAddress.cpp	32;"	d	file:
GL_EXT_blend_minmax	opengl/include/GLES/glext.h	1020;"	d
GL_EXT_blend_minmax	opengl/include/GLES2/gl2ext.h	700;"	d
GL_EXT_color_buffer_half_float	opengl/include/GLES2/gl2ext.h	706;"	d
GL_EXT_copy_image	opengl/include/GLES2/gl2ext.h	716;"	d
GL_EXT_debug_label	opengl/include/GLES2/gl2ext.h	724;"	d
GL_EXT_debug_marker	opengl/include/GLES2/gl2ext.h	741;"	d
GL_EXT_discard_framebuffer	opengl/include/GLES/glext.h	1025;"	d
GL_EXT_discard_framebuffer	opengl/include/GLES2/gl2ext.h	753;"	d
GL_EXT_disjoint_timer_query	opengl/include/GLES2/gl2ext.h	764;"	d
GL_EXT_draw_buffers	opengl/include/GLES2/gl2ext.h	799;"	d
GL_EXT_draw_buffers_indexed	opengl/include/GLES2/gl2ext.h	841;"	d
GL_EXT_draw_instanced	opengl/include/GLES2/gl2ext.h	865;"	d
GL_EXT_geometry_shader	opengl/include/GLES2/gl2ext.h	875;"	d
GL_EXT_gpu_shader5	opengl/include/GLES2/gl2ext.h	916;"	d
GL_EXT_instanced_arrays	opengl/include/GLES2/gl2ext.h	920;"	d
GL_EXT_map_buffer_range	opengl/include/GLES/glext.h	1034;"	d
GL_EXT_map_buffer_range	opengl/include/GLES2/gl2ext.h	929;"	d
GL_EXT_multi_draw_arrays	opengl/include/GLES/glext.h	1056;"	d
GL_EXT_multi_draw_arrays	opengl/include/GLES2/gl2ext.h	945;"	d
GL_EXT_multisampled_render_to_texture	opengl/include/GLES/glext.h	1045;"	d
GL_EXT_multisampled_render_to_texture	opengl/include/GLES2/gl2ext.h	955;"	d
GL_EXT_multiview_draw_buffers	opengl/include/GLES2/gl2ext.h	969;"	d
GL_EXT_occlusion_query_boolean	opengl/include/GLES2/gl2ext.h	986;"	d
GL_EXT_primitive_bounding_box	opengl/include/GLES2/gl2ext.h	992;"	d
GL_EXT_pvrtc_sRGB	opengl/include/GLES2/gl2ext.h	1001;"	d
GL_EXT_read_format_bgra	opengl/include/GLES/glext.h	1067;"	d
GL_EXT_read_format_bgra	opengl/include/GLES2/gl2ext.h	1011;"	d
GL_EXT_robustness	opengl/include/GLES/glext.h	1072;"	d
GL_EXT_robustness	opengl/include/GLES2/gl2ext.h	1017;"	d
GL_EXT_sRGB	opengl/include/GLES/glext.h	1087;"	d
GL_EXT_sRGB	opengl/include/GLES2/gl2ext.h	1038;"	d
GL_EXT_sRGB_write_control	opengl/include/GLES2/gl2ext.h	1046;"	d
GL_EXT_separate_shader_objects	opengl/include/GLES2/gl2ext.h	1051;"	d
GL_EXT_shader_framebuffer_fetch	opengl/include/GLES2/gl2ext.h	1151;"	d
GL_EXT_shader_implicit_conversions	opengl/include/GLES2/gl2ext.h	1156;"	d
GL_EXT_shader_integer_mix	opengl/include/GLES2/gl2ext.h	1160;"	d
GL_EXT_shader_io_blocks	opengl/include/GLES2/gl2ext.h	1164;"	d
GL_EXT_shader_pixel_local_storage	opengl/include/GLES2/gl2ext.h	1168;"	d
GL_EXT_shader_texture_lod	opengl/include/GLES2/gl2ext.h	1175;"	d
GL_EXT_shadow_samplers	opengl/include/GLES2/gl2ext.h	1179;"	d
GL_EXT_tessellation_shader	opengl/include/GLES2/gl2ext.h	1187;"	d
GL_EXT_texture_border_clamp	opengl/include/GLES2/gl2ext.h	1238;"	d
GL_EXT_texture_buffer	opengl/include/GLES2/gl2ext.h	1262;"	d
GL_EXT_texture_compression_dxt1	opengl/include/GLES/glext.h	1092;"	d
GL_EXT_texture_compression_dxt1	opengl/include/GLES2/gl2ext.h	1286;"	d
GL_EXT_texture_compression_s3tc	opengl/include/GLES2/gl2ext.h	1292;"	d
GL_EXT_texture_cube_map_array	opengl/include/GLES2/gl2ext.h	1298;"	d
GL_EXT_texture_filter_anisotropic	opengl/include/GLES/glext.h	1097;"	d
GL_EXT_texture_filter_anisotropic	opengl/include/GLES2/gl2ext.h	1311;"	d
GL_EXT_texture_format_BGRA8888	opengl/include/GLES/glext.h	1102;"	d
GL_EXT_texture_format_BGRA8888	opengl/include/GLES2/gl2ext.h	1317;"	d
GL_EXT_texture_lod_bias	opengl/include/GLES/glext.h	1107;"	d
GL_EXT_texture_rg	opengl/include/GLES2/gl2ext.h	1321;"	d
GL_EXT_texture_sRGB_decode	opengl/include/GLES2/gl2ext.h	1329;"	d
GL_EXT_texture_storage	opengl/include/GLES/glext.h	1112;"	d
GL_EXT_texture_storage	opengl/include/GLES2/gl2ext.h	1336;"	d
GL_EXT_texture_type_2_10_10_10_REV	opengl/include/GLES2/gl2ext.h	1368;"	d
GL_EXT_texture_view	opengl/include/GLES2/gl2ext.h	1373;"	d
GL_EXT_unpack_subimage	opengl/include/GLES2/gl2ext.h	1386;"	d
GL_FACTOR_ALPHA_MODULATE_IMG	opengl/include/GLES/glext.h	446;"	d
GL_FALSE	opengl/include/GLES/gl.h	52;"	d
GL_FALSE	opengl/include/GLES2/gl2.h	79;"	d
GL_FALSE	opengl/include/GLES3/gl3.h	79;"	d
GL_FALSE	opengl/include/GLES3/gl31.h	79;"	d
GL_FALSE	opengl/tests/angeles/include/GLES/gl.h	87;"	d
GL_FASTEST	opengl/include/GLES/gl.h	287;"	d
GL_FASTEST	opengl/include/GLES2/gl2.h	193;"	d
GL_FASTEST	opengl/include/GLES3/gl3.h	193;"	d
GL_FASTEST	opengl/include/GLES3/gl31.h	193;"	d
GL_FASTEST	opengl/tests/angeles/include/GLES/gl.h	244;"	d
GL_FENCE_CONDITION_NV	opengl/include/GLES/glext.h	479;"	d
GL_FENCE_CONDITION_NV	opengl/include/GLES2/gl2ext.h	1649;"	d
GL_FENCE_STATUS_NV	opengl/include/GLES/glext.h	478;"	d
GL_FENCE_STATUS_NV	opengl/include/GLES2/gl2ext.h	1648;"	d
GL_FETCH_PER_SAMPLE_ARM	opengl/include/GLES2/gl2ext.h	686;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	opengl/include/GLES2/gl2ext.h	900;"	d
GL_FIXED	opengl/include/GLES/gl.h	319;"	d
GL_FIXED	opengl/include/GLES2/gl2.h	203;"	d
GL_FIXED	opengl/include/GLES3/gl3.h	203;"	d
GL_FIXED	opengl/include/GLES3/gl31.h	203;"	d
GL_FIXED	opengl/tests/angeles/include/GLES/gl.h	276;"	d
GL_FIXED_OES	opengl/include/GLES/glext.h	86;"	d
GL_FJ_shader_binary_GCCSO	opengl/include/GLES2/gl2ext.h	1393;"	d
GL_FLAT	opengl/include/GLES/gl.h	379;"	d
GL_FLAT	opengl/tests/angeles/include/GLES/gl.h	336;"	d
GL_FLOAT	opengl/include/GLES/gl.h	318;"	d
GL_FLOAT	opengl/include/GLES2/gl2.h	202;"	d
GL_FLOAT	opengl/include/GLES3/gl3.h	202;"	d
GL_FLOAT	opengl/include/GLES3/gl31.h	202;"	d
GL_FLOAT	opengl/tests/angeles/include/GLES/gl.h	275;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	opengl/include/GLES3/gl3.h	670;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	opengl/include/GLES3/gl31.h	670;"	d
GL_FLOAT_MAT2	opengl/include/GLES2/gl2.h	318;"	d
GL_FLOAT_MAT2	opengl/include/GLES3/gl3.h	318;"	d
GL_FLOAT_MAT2	opengl/include/GLES3/gl31.h	318;"	d
GL_FLOAT_MAT2x3	opengl/include/GLES3/gl3.h	594;"	d
GL_FLOAT_MAT2x3	opengl/include/GLES3/gl31.h	594;"	d
GL_FLOAT_MAT2x3_NV	opengl/include/GLES2/gl2ext.h	1706;"	d
GL_FLOAT_MAT2x4	opengl/include/GLES3/gl3.h	595;"	d
GL_FLOAT_MAT2x4	opengl/include/GLES3/gl31.h	595;"	d
GL_FLOAT_MAT2x4_NV	opengl/include/GLES2/gl2ext.h	1707;"	d
GL_FLOAT_MAT3	opengl/include/GLES2/gl2.h	319;"	d
GL_FLOAT_MAT3	opengl/include/GLES3/gl3.h	319;"	d
GL_FLOAT_MAT3	opengl/include/GLES3/gl31.h	319;"	d
GL_FLOAT_MAT3x2	opengl/include/GLES3/gl3.h	596;"	d
GL_FLOAT_MAT3x2	opengl/include/GLES3/gl31.h	596;"	d
GL_FLOAT_MAT3x2_NV	opengl/include/GLES2/gl2ext.h	1708;"	d
GL_FLOAT_MAT3x4	opengl/include/GLES3/gl3.h	597;"	d
GL_FLOAT_MAT3x4	opengl/include/GLES3/gl31.h	597;"	d
GL_FLOAT_MAT3x4_NV	opengl/include/GLES2/gl2ext.h	1709;"	d
GL_FLOAT_MAT4	opengl/include/GLES2/gl2.h	320;"	d
GL_FLOAT_MAT4	opengl/include/GLES3/gl3.h	320;"	d
GL_FLOAT_MAT4	opengl/include/GLES3/gl31.h	320;"	d
GL_FLOAT_MAT4x2	opengl/include/GLES3/gl3.h	598;"	d
GL_FLOAT_MAT4x2	opengl/include/GLES3/gl31.h	598;"	d
GL_FLOAT_MAT4x2_NV	opengl/include/GLES2/gl2ext.h	1710;"	d
GL_FLOAT_MAT4x3	opengl/include/GLES3/gl3.h	599;"	d
GL_FLOAT_MAT4x3	opengl/include/GLES3/gl31.h	599;"	d
GL_FLOAT_MAT4x3_NV	opengl/include/GLES2/gl2ext.h	1711;"	d
GL_FLOAT_VEC2	opengl/include/GLES2/gl2.h	308;"	d
GL_FLOAT_VEC2	opengl/include/GLES3/gl3.h	308;"	d
GL_FLOAT_VEC2	opengl/include/GLES3/gl31.h	308;"	d
GL_FLOAT_VEC3	opengl/include/GLES2/gl2.h	309;"	d
GL_FLOAT_VEC3	opengl/include/GLES3/gl3.h	309;"	d
GL_FLOAT_VEC3	opengl/include/GLES3/gl31.h	309;"	d
GL_FLOAT_VEC4	opengl/include/GLES2/gl2.h	310;"	d
GL_FLOAT_VEC4	opengl/include/GLES3/gl3.h	310;"	d
GL_FLOAT_VEC4	opengl/include/GLES3/gl31.h	310;"	d
GL_FOG	opengl/include/GLES/gl.h	130;"	d
GL_FOG	opengl/tests/angeles/include/GLES/gl.h	157;"	d
GL_FOG_COLOR	opengl/include/GLES/gl.h	183;"	d
GL_FOG_COLOR	opengl/tests/angeles/include/GLES/gl.h	210;"	d
GL_FOG_DENSITY	opengl/include/GLES/gl.h	179;"	d
GL_FOG_DENSITY	opengl/tests/angeles/include/GLES/gl.h	206;"	d
GL_FOG_END	opengl/include/GLES/gl.h	181;"	d
GL_FOG_END	opengl/tests/angeles/include/GLES/gl.h	208;"	d
GL_FOG_HINT	opengl/include/GLES/gl.h	294;"	d
GL_FOG_HINT	opengl/tests/angeles/include/GLES/gl.h	252;"	d
GL_FOG_MODE	opengl/include/GLES/gl.h	182;"	d
GL_FOG_MODE	opengl/tests/angeles/include/GLES/gl.h	209;"	d
GL_FOG_START	opengl/include/GLES/gl.h	180;"	d
GL_FOG_START	opengl/tests/angeles/include/GLES/gl.h	207;"	d
GL_FRACTIONAL_EVEN_EXT	opengl/include/GLES2/gl2ext.h	1198;"	d
GL_FRACTIONAL_ODD_EXT	opengl/include/GLES2/gl2ext.h	1197;"	d
GL_FRAGMENT_ALPHA_MODULATE_IMG	opengl/include/GLES/glext.h	447;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES	opengl/include/GLES2/gl2ext.h	326;"	d
GL_FRAGMENT_SHADER	opengl/include/GLES2/gl2.h	213;"	d
GL_FRAGMENT_SHADER	opengl/include/GLES3/gl3.h	213;"	d
GL_FRAGMENT_SHADER	opengl/include/GLES3/gl31.h	213;"	d
GL_FRAGMENT_SHADER_BIT	opengl/include/GLES3/gl31.h	994;"	d
GL_FRAGMENT_SHADER_BIT_EXT	opengl/include/GLES2/gl2ext.h	1054;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	opengl/include/GLES3/gl3.h	589;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	opengl/include/GLES3/gl31.h	589;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES	opengl/include/GLES2/gl2ext.h	331;"	d
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT	opengl/include/GLES2/gl2ext.h	1152;"	d
GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM	opengl/include/GLES2/gl2ext.h	687;"	d
GL_FRAMEBUFFER	opengl/include/GLES2/gl2.h	344;"	d
GL_FRAMEBUFFER	opengl/include/GLES3/gl3.h	344;"	d
GL_FRAMEBUFFER	opengl/include/GLES3/gl31.h	344;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	opengl/include/GLES3/gl3.h	676;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	opengl/include/GLES3/gl31.h	676;"	d
GL_FRAMEBUFFER_ATTACHMENT_ANGLE	opengl/include/GLES2/gl2ext.h	578;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	opengl/include/GLES3/gl3.h	675;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	opengl/include/GLES3/gl31.h	675;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	opengl/include/GLES3/gl3.h	671;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	opengl/include/GLES3/gl31.h	671;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT	opengl/include/GLES/glext.h	375;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT	opengl/include/GLES2/gl2ext.h	1042;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	opengl/include/GLES3/gl3.h	672;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	opengl/include/GLES3/gl31.h	672;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT	opengl/include/GLES2/gl2ext.h	711;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	opengl/include/GLES3/gl3.h	677;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	opengl/include/GLES3/gl31.h	677;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	opengl/include/GLES3/gl3.h	674;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	opengl/include/GLES3/gl31.h	674;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	opengl/include/GLES2/gl2ext.h	907;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	opengl/include/GLES2/gl2.h	361;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	opengl/include/GLES3/gl3.h	361;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	opengl/include/GLES3/gl31.h	361;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES	opengl/include/GLES/glext.h	108;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	opengl/include/GLES2/gl2.h	360;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	opengl/include/GLES3/gl3.h	360;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	opengl/include/GLES3/gl31.h	360;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES	opengl/include/GLES/glext.h	107;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	opengl/include/GLES3/gl3.h	673;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	opengl/include/GLES3/gl31.h	673;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	opengl/include/GLES3/gl3.h	678;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	opengl/include/GLES3/gl31.h	678;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES	opengl/include/GLES2/gl2ext.h	356;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	opengl/include/GLES2/gl2.h	363;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	opengl/include/GLES3/gl3.h	363;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	opengl/include/GLES3/gl31.h	363;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES	opengl/include/GLES/glext.h	110;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	opengl/include/GLES3/gl3.h	691;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	opengl/include/GLES3/gl31.h	691;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	opengl/include/GLES2/gl2.h	362;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	opengl/include/GLES3/gl3.h	362;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	opengl/include/GLES3/gl31.h	362;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES	opengl/include/GLES/glext.h	109;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT	opengl/include/GLES/glext.h	341;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT	opengl/include/GLES2/gl2ext.h	956;"	d
GL_FRAMEBUFFER_BARRIER_BIT	opengl/include/GLES3/gl31.h	1031;"	d
GL_FRAMEBUFFER_BINDING	opengl/include/GLES2/gl2.h	373;"	d
GL_FRAMEBUFFER_BINDING	opengl/include/GLES3/gl3.h	373;"	d
GL_FRAMEBUFFER_BINDING	opengl/include/GLES3/gl31.h	373;"	d
GL_FRAMEBUFFER_BINDING_OES	opengl/include/GLES/glext.h	120;"	d
GL_FRAMEBUFFER_COMPLETE	opengl/include/GLES2/gl2.h	368;"	d
GL_FRAMEBUFFER_COMPLETE	opengl/include/GLES3/gl3.h	368;"	d
GL_FRAMEBUFFER_COMPLETE	opengl/include/GLES3/gl31.h	368;"	d
GL_FRAMEBUFFER_COMPLETE_OES	opengl/include/GLES/glext.h	114;"	d
GL_FRAMEBUFFER_DEFAULT	opengl/include/GLES3/gl3.h	679;"	d
GL_FRAMEBUFFER_DEFAULT	opengl/include/GLES3/gl31.h	679;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	opengl/include/GLES3/gl31.h	959;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	opengl/include/GLES3/gl31.h	957;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT	opengl/include/GLES2/gl2ext.h	904;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	opengl/include/GLES3/gl31.h	958;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	opengl/include/GLES3/gl31.h	956;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	opengl/include/GLES2/gl2.h	369;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	opengl/include/GLES3/gl3.h	369;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	opengl/include/GLES3/gl31.h	369;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES	opengl/include/GLES/glext.h	115;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS	opengl/include/GLES2/gl2.h	371;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS	opengl/include/GLES3/gl3.h	371;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS	opengl/include/GLES3/gl31.h	371;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES	opengl/include/GLES/glext.h	117;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES	opengl/include/GLES/glext.h	118;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	opengl/include/GLES2/gl2ext.h	906;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	opengl/include/GLES2/gl2.h	370;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	opengl/include/GLES3/gl3.h	370;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	opengl/include/GLES3/gl31.h	370;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES	opengl/include/GLES/glext.h	116;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	opengl/include/GLES3/gl3.h	708;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	opengl/include/GLES3/gl31.h	708;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE	opengl/include/GLES2/gl2ext.h	534;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE	opengl/include/GLES/glext.h	252;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE	opengl/include/GLES2/gl2ext.h	601;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	opengl/include/GLES/glext.h	344;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	opengl/include/GLES2/gl2ext.h	958;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG	opengl/include/GLES/glext.h	466;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG	opengl/include/GLES2/gl2ext.h	1400;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV	opengl/include/GLES2/gl2ext.h	1683;"	d
GL_FRAMEBUFFER_OES	opengl/include/GLES/glext.h	92;"	d
GL_FRAMEBUFFER_SRGB_EXT	opengl/include/GLES2/gl2ext.h	1047;"	d
GL_FRAMEBUFFER_UNDEFINED	opengl/include/GLES3/gl3.h	680;"	d
GL_FRAMEBUFFER_UNDEFINED	opengl/include/GLES3/gl31.h	680;"	d
GL_FRAMEBUFFER_UNDEFINED_OES	opengl/include/GLES2/gl2ext.h	346;"	d
GL_FRAMEBUFFER_UNSUPPORTED	opengl/include/GLES2/gl2.h	372;"	d
GL_FRAMEBUFFER_UNSUPPORTED	opengl/include/GLES3/gl3.h	372;"	d
GL_FRAMEBUFFER_UNSUPPORTED	opengl/include/GLES3/gl31.h	372;"	d
GL_FRAMEBUFFER_UNSUPPORTED_OES	opengl/include/GLES/glext.h	119;"	d
GL_FRONT	opengl/include/GLES/gl.h	115;"	d
GL_FRONT	opengl/include/GLES2/gl2.h	124;"	d
GL_FRONT	opengl/include/GLES3/gl3.h	124;"	d
GL_FRONT	opengl/include/GLES3/gl31.h	124;"	d
GL_FRONT	opengl/tests/angeles/include/GLES/gl.h	142;"	d
GL_FRONT_AND_BACK	opengl/include/GLES/gl.h	117;"	d
GL_FRONT_AND_BACK	opengl/include/GLES2/gl2.h	126;"	d
GL_FRONT_AND_BACK	opengl/include/GLES3/gl3.h	126;"	d
GL_FRONT_AND_BACK	opengl/include/GLES3/gl31.h	126;"	d
GL_FRONT_AND_BACK	opengl/tests/angeles/include/GLES/gl.h	144;"	d
GL_FRONT_FACE	opengl/include/GLES/gl.h	204;"	d
GL_FRONT_FACE	opengl/include/GLES2/gl2.h	148;"	d
GL_FRONT_FACE	opengl/include/GLES3/gl3.h	148;"	d
GL_FRONT_FACE	opengl/include/GLES3/gl31.h	148;"	d
GL_FUNC_ADD	opengl/include/GLES2/gl2.h	99;"	d
GL_FUNC_ADD	opengl/include/GLES3/gl3.h	99;"	d
GL_FUNC_ADD	opengl/include/GLES3/gl31.h	99;"	d
GL_FUNC_ADD_OES	opengl/include/GLES/glext.h	41;"	d
GL_FUNC_REVERSE_SUBTRACT	opengl/include/GLES2/gl2.h	104;"	d
GL_FUNC_REVERSE_SUBTRACT	opengl/include/GLES3/gl3.h	104;"	d
GL_FUNC_REVERSE_SUBTRACT	opengl/include/GLES3/gl31.h	104;"	d
GL_FUNC_REVERSE_SUBTRACT_OES	opengl/include/GLES/glext.h	43;"	d
GL_FUNC_SUBTRACT	opengl/include/GLES2/gl2.h	103;"	d
GL_FUNC_SUBTRACT	opengl/include/GLES3/gl3.h	103;"	d
GL_FUNC_SUBTRACT	opengl/include/GLES3/gl31.h	103;"	d
GL_FUNC_SUBTRACT_OES	opengl/include/GLES/glext.h	42;"	d
GL_GCCSO_SHADER_BINARY_FJ	opengl/include/GLES2/gl2ext.h	1394;"	d
GL_GENERATE_MIPMAP	opengl/include/GLES/gl.h	443;"	d
GL_GENERATE_MIPMAP_HINT	opengl/include/GLES/gl.h	295;"	d
GL_GENERATE_MIPMAP_HINT	opengl/include/GLES2/gl2.h	195;"	d
GL_GENERATE_MIPMAP_HINT	opengl/include/GLES3/gl3.h	195;"	d
GL_GENERATE_MIPMAP_HINT	opengl/include/GLES3/gl31.h	195;"	d
GL_GEOMETRY_LINKED_INPUT_TYPE_EXT	opengl/include/GLES2/gl2ext.h	879;"	d
GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT	opengl/include/GLES2/gl2ext.h	880;"	d
GL_GEOMETRY_LINKED_VERTICES_OUT_EXT	opengl/include/GLES2/gl2ext.h	878;"	d
GL_GEOMETRY_SHADER_BIT_EXT	opengl/include/GLES2/gl2ext.h	877;"	d
GL_GEOMETRY_SHADER_EXT	opengl/include/GLES2/gl2ext.h	876;"	d
GL_GEOMETRY_SHADER_INVOCATIONS_EXT	opengl/include/GLES2/gl2ext.h	881;"	d
GL_GEQUAL	opengl/include/GLES/gl.h	71;"	d
GL_GEQUAL	opengl/include/GLES2/gl2.h	239;"	d
GL_GEQUAL	opengl/include/GLES3/gl3.h	239;"	d
GL_GEQUAL	opengl/include/GLES3/gl31.h	239;"	d
GL_GEQUAL	opengl/tests/angeles/include/GLES/gl.h	106;"	d
GL_GLEXT_PROTOTYPES	libs/gui/GLConsumer.cpp	21;"	d	file:
GL_GLEXT_PROTOTYPES	libs/gui/SyncFeatures.cpp	19;"	d	file:
GL_GPU_DISJOINT_EXT	opengl/include/GLES2/gl2ext.h	771;"	d
GL_GPU_OPTIMIZED_QCOM	opengl/include/GLES2/gl2ext.h	1806;"	d
GL_GREATER	opengl/include/GLES/gl.h	69;"	d
GL_GREATER	opengl/include/GLES2/gl2.h	237;"	d
GL_GREATER	opengl/include/GLES3/gl3.h	237;"	d
GL_GREATER	opengl/include/GLES3/gl31.h	237;"	d
GL_GREATER	opengl/tests/angeles/include/GLES/gl.h	104;"	d
GL_GREEN	opengl/include/GLES3/gl3.h	804;"	d
GL_GREEN	opengl/include/GLES3/gl31.h	804;"	d
GL_GREEN_BITS	opengl/include/GLES/gl.h	247;"	d
GL_GREEN_BITS	opengl/include/GLES2/gl2.h	178;"	d
GL_GREEN_BITS	opengl/include/GLES3/gl3.h	178;"	d
GL_GREEN_BITS	opengl/include/GLES3/gl31.h	178;"	d
GL_GREEN_BITS	opengl/tests/angeles/include/GLES/gl.h	236;"	d
GL_GREEN_NV	opengl/include/GLES2/gl2ext.h	1505;"	d
GL_GUILTY_CONTEXT_RESET_EXT	opengl/include/GLES/glext.h	361;"	d
GL_GUILTY_CONTEXT_RESET_EXT	opengl/include/GLES2/gl2ext.h	1018;"	d
GL_HALF_FLOAT	opengl/include/GLES3/gl3.h	710;"	d
GL_HALF_FLOAT	opengl/include/GLES3/gl31.h	710;"	d
GL_HALF_FLOAT_OES	opengl/include/GLES2/gl2ext.h	407;"	d
GL_HARDLIGHT_KHR	opengl/include/GLES2/gl2ext.h	65;"	d
GL_HARDLIGHT_NV	opengl/include/GLES2/gl2ext.h	1506;"	d
GL_HARDMIX_NV	opengl/include/GLES2/gl2ext.h	1507;"	d
GL_HIGH_FLOAT	opengl/include/GLES2/gl2.h	340;"	d
GL_HIGH_FLOAT	opengl/include/GLES3/gl3.h	340;"	d
GL_HIGH_FLOAT	opengl/include/GLES3/gl31.h	340;"	d
GL_HIGH_INT	opengl/include/GLES2/gl2.h	343;"	d
GL_HIGH_INT	opengl/include/GLES3/gl3.h	343;"	d
GL_HIGH_INT	opengl/include/GLES3/gl31.h	343;"	d
GL_HSL_COLOR_KHR	opengl/include/GLES2/gl2ext.h	71;"	d
GL_HSL_COLOR_NV	opengl/include/GLES2/gl2ext.h	1508;"	d
GL_HSL_HUE_KHR	opengl/include/GLES2/gl2ext.h	69;"	d
GL_HSL_HUE_NV	opengl/include/GLES2/gl2ext.h	1509;"	d
GL_HSL_LUMINOSITY_KHR	opengl/include/GLES2/gl2ext.h	72;"	d
GL_HSL_LUMINOSITY_NV	opengl/include/GLES2/gl2ext.h	1510;"	d
GL_HSL_SATURATION_KHR	opengl/include/GLES2/gl2ext.h	70;"	d
GL_HSL_SATURATION_NV	opengl/include/GLES2/gl2ext.h	1511;"	d
GL_IMAGE_2D	opengl/include/GLES3/gl31.h	1035;"	d
GL_IMAGE_2D_ARRAY	opengl/include/GLES3/gl31.h	1038;"	d
GL_IMAGE_3D	opengl/include/GLES3/gl31.h	1036;"	d
GL_IMAGE_BINDING_ACCESS	opengl/include/GLES3/gl31.h	1020;"	d
GL_IMAGE_BINDING_FORMAT	opengl/include/GLES3/gl31.h	1021;"	d
GL_IMAGE_BINDING_LAYER	opengl/include/GLES3/gl31.h	1019;"	d
GL_IMAGE_BINDING_LAYERED	opengl/include/GLES3/gl31.h	1018;"	d
GL_IMAGE_BINDING_LEVEL	opengl/include/GLES3/gl31.h	1017;"	d
GL_IMAGE_BINDING_NAME	opengl/include/GLES3/gl31.h	1016;"	d
GL_IMAGE_BUFFER_EXT	opengl/include/GLES2/gl2ext.h	1272;"	d
GL_IMAGE_CUBE	opengl/include/GLES3/gl31.h	1037;"	d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	opengl/include/GLES2/gl2ext.h	1305;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	opengl/include/GLES3/gl31.h	1049;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	opengl/include/GLES3/gl31.h	1048;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	opengl/include/GLES3/gl31.h	1047;"	d
GL_IMG_multisampled_render_to_texture	opengl/include/GLES/glext.h	1161;"	d
GL_IMG_multisampled_render_to_texture	opengl/include/GLES2/gl2ext.h	1398;"	d
GL_IMG_program_binary	opengl/include/GLES2/gl2ext.h	1412;"	d
GL_IMG_read_format	opengl/include/GLES/glext.h	1135;"	d
GL_IMG_read_format	opengl/include/GLES2/gl2ext.h	1417;"	d
GL_IMG_shader_binary	opengl/include/GLES2/gl2ext.h	1423;"	d
GL_IMG_texture_compression_pvrtc	opengl/include/GLES/glext.h	1140;"	d
GL_IMG_texture_compression_pvrtc	opengl/include/GLES2/gl2ext.h	1428;"	d
GL_IMG_texture_compression_pvrtc2	opengl/include/GLES2/gl2ext.h	1436;"	d
GL_IMG_texture_env_enhanced_fixed_function	opengl/include/GLES/glext.h	1145;"	d
GL_IMG_user_clip_plane	opengl/include/GLES/glext.h	1150;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	opengl/include/GLES2/gl2.h	331;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	opengl/include/GLES3/gl3.h	331;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	opengl/include/GLES3/gl31.h	331;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	opengl/include/GLES/gl.h	558;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	opengl/tests/angeles/include/GLES/gl.h	222;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	opengl/include/GLES2/gl2.h	330;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	opengl/include/GLES3/gl3.h	330;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	opengl/include/GLES3/gl31.h	330;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	opengl/include/GLES/gl.h	557;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	opengl/tests/angeles/include/GLES/gl.h	221;"	d
GL_INCR	opengl/include/GLES/gl.h	396;"	d
GL_INCR	opengl/include/GLES2/gl2.h	243;"	d
GL_INCR	opengl/include/GLES3/gl3.h	243;"	d
GL_INCR	opengl/include/GLES3/gl31.h	243;"	d
GL_INCR	opengl/tests/angeles/include/GLES/gl.h	353;"	d
GL_INCR_WRAP	opengl/include/GLES2/gl2.h	246;"	d
GL_INCR_WRAP	opengl/include/GLES3/gl3.h	246;"	d
GL_INCR_WRAP	opengl/include/GLES3/gl31.h	246;"	d
GL_INCR_WRAP_OES	opengl/include/GLES/glext.h	194;"	d
GL_INFO_LOG_LENGTH	opengl/include/GLES2/gl2.h	333;"	d
GL_INFO_LOG_LENGTH	opengl/include/GLES3/gl3.h	333;"	d
GL_INFO_LOG_LENGTH	opengl/include/GLES3/gl31.h	333;"	d
GL_INNOCENT_CONTEXT_RESET_EXT	opengl/include/GLES/glext.h	362;"	d
GL_INNOCENT_CONTEXT_RESET_EXT	opengl/include/GLES2/gl2ext.h	1019;"	d
GL_INT	opengl/include/GLES2/gl2.h	200;"	d
GL_INT	opengl/include/GLES3/gl3.h	200;"	d
GL_INT	opengl/include/GLES3/gl31.h	200;"	d
GL_INTEL_performance_query	opengl/include/GLES2/gl2ext.h	1442;"	d
GL_INTERLEAVED_ATTRIBS	opengl/include/GLES3/gl3.h	632;"	d
GL_INTERLEAVED_ATTRIBS	opengl/include/GLES3/gl31.h	632;"	d
GL_INTERPOLATE	opengl/include/GLES/gl.h	528;"	d
GL_INT_10_10_10_2_OES	opengl/include/GLES2/gl2ext.h	459;"	d
GL_INT_2_10_10_10_REV	opengl/include/GLES3/gl3.h	806;"	d
GL_INT_2_10_10_10_REV	opengl/include/GLES3/gl31.h	806;"	d
GL_INT_IMAGE_2D	opengl/include/GLES3/gl31.h	1039;"	d
GL_INT_IMAGE_2D_ARRAY	opengl/include/GLES3/gl31.h	1042;"	d
GL_INT_IMAGE_3D	opengl/include/GLES3/gl31.h	1040;"	d
GL_INT_IMAGE_BUFFER_EXT	opengl/include/GLES2/gl2ext.h	1273;"	d
GL_INT_IMAGE_CUBE	opengl/include/GLES3/gl31.h	1041;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	opengl/include/GLES2/gl2ext.h	1306;"	d
GL_INT_SAMPLER_2D	opengl/include/GLES3/gl3.h	657;"	d
GL_INT_SAMPLER_2D	opengl/include/GLES3/gl31.h	657;"	d
GL_INT_SAMPLER_2D_ARRAY	opengl/include/GLES3/gl3.h	660;"	d
GL_INT_SAMPLER_2D_ARRAY	opengl/include/GLES3/gl31.h	660;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	opengl/include/GLES3/gl31.h	1099;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES	opengl/include/GLES2/gl2ext.h	429;"	d
GL_INT_SAMPLER_3D	opengl/include/GLES3/gl3.h	658;"	d
GL_INT_SAMPLER_3D	opengl/include/GLES3/gl31.h	658;"	d
GL_INT_SAMPLER_BUFFER_EXT	opengl/include/GLES2/gl2ext.h	1270;"	d
GL_INT_SAMPLER_CUBE	opengl/include/GLES3/gl3.h	659;"	d
GL_INT_SAMPLER_CUBE	opengl/include/GLES3/gl31.h	659;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT	opengl/include/GLES2/gl2ext.h	1303;"	d
GL_INT_VEC2	opengl/include/GLES2/gl2.h	311;"	d
GL_INT_VEC2	opengl/include/GLES3/gl3.h	311;"	d
GL_INT_VEC2	opengl/include/GLES3/gl31.h	311;"	d
GL_INT_VEC3	opengl/include/GLES2/gl2.h	312;"	d
GL_INT_VEC3	opengl/include/GLES3/gl3.h	312;"	d
GL_INT_VEC3	opengl/include/GLES3/gl31.h	312;"	d
GL_INT_VEC4	opengl/include/GLES2/gl2.h	313;"	d
GL_INT_VEC4	opengl/include/GLES3/gl3.h	313;"	d
GL_INT_VEC4	opengl/include/GLES3/gl31.h	313;"	d
GL_INVALID_ENUM	opengl/include/GLES/gl.h	166;"	d
GL_INVALID_ENUM	opengl/include/GLES2/gl2.h	138;"	d
GL_INVALID_ENUM	opengl/include/GLES3/gl3.h	138;"	d
GL_INVALID_ENUM	opengl/include/GLES3/gl31.h	138;"	d
GL_INVALID_ENUM	opengl/tests/angeles/include/GLES/gl.h	193;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	opengl/include/GLES2/gl2.h	376;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	opengl/include/GLES3/gl3.h	376;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	opengl/include/GLES3/gl31.h	376;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_OES	opengl/include/GLES/glext.h	123;"	d
GL_INVALID_INDEX	opengl/include/GLES3/gl3.h	777;"	d
GL_INVALID_INDEX	opengl/include/GLES3/gl31.h	777;"	d
GL_INVALID_OPERATION	opengl/include/GLES/gl.h	168;"	d
GL_INVALID_OPERATION	opengl/include/GLES2/gl2.h	140;"	d
GL_INVALID_OPERATION	opengl/include/GLES3/gl3.h	140;"	d
GL_INVALID_OPERATION	opengl/include/GLES3/gl31.h	140;"	d
GL_INVALID_OPERATION	opengl/tests/angeles/include/GLES/gl.h	195;"	d
GL_INVALID_VALUE	opengl/include/GLES/gl.h	167;"	d
GL_INVALID_VALUE	opengl/include/GLES2/gl2.h	139;"	d
GL_INVALID_VALUE	opengl/include/GLES3/gl3.h	139;"	d
GL_INVALID_VALUE	opengl/include/GLES3/gl31.h	139;"	d
GL_INVALID_VALUE	opengl/tests/angeles/include/GLES/gl.h	194;"	d
GL_INVERT	opengl/include/GLES/gl.h	332;"	d
GL_INVERT	opengl/include/GLES2/gl2.h	245;"	d
GL_INVERT	opengl/include/GLES3/gl3.h	245;"	d
GL_INVERT	opengl/include/GLES3/gl31.h	245;"	d
GL_INVERT	opengl/tests/angeles/include/GLES/gl.h	289;"	d
GL_INVERT_OVG_NV	opengl/include/GLES2/gl2ext.h	1512;"	d
GL_INVERT_RGB_NV	opengl/include/GLES2/gl2ext.h	1513;"	d
GL_ISOLINES_EXT	opengl/include/GLES2/gl2ext.h	1195;"	d
GL_IS_PER_PATCH_EXT	opengl/include/GLES2/gl2ext.h	1224;"	d
GL_IS_ROW_MAJOR	opengl/include/GLES3/gl31.h	981;"	d
GL_KEEP	opengl/include/GLES/gl.h	394;"	d
GL_KEEP	opengl/include/GLES2/gl2.h	241;"	d
GL_KEEP	opengl/include/GLES3/gl3.h	241;"	d
GL_KEEP	opengl/include/GLES3/gl31.h	241;"	d
GL_KEEP	opengl/tests/angeles/include/GLES/gl.h	351;"	d
GL_KHR_blend_equation_advanced	opengl/include/GLES2/gl2ext.h	56;"	d
GL_KHR_debug	opengl/include/GLES2/gl2ext.h	80;"	d
GL_KHR_texture_compression_astc_hdr	opengl/include/GLES2/gl2ext.h	149;"	d
GL_KHR_texture_compression_astc_ldr	opengl/include/GLES2/gl2ext.h	181;"	d
GL_LAST_VERTEX_CONVENTION_EXT	opengl/include/GLES2/gl2ext.h	901;"	d
GL_LAYER_PROVOKING_VERTEX_EXT	opengl/include/GLES2/gl2ext.h	882;"	d
GL_LEQUAL	opengl/include/GLES/gl.h	68;"	d
GL_LEQUAL	opengl/include/GLES2/gl2.h	236;"	d
GL_LEQUAL	opengl/include/GLES3/gl3.h	236;"	d
GL_LEQUAL	opengl/include/GLES3/gl31.h	236;"	d
GL_LEQUAL	opengl/tests/angeles/include/GLES/gl.h	103;"	d
GL_LESS	opengl/include/GLES/gl.h	66;"	d
GL_LESS	opengl/include/GLES2/gl2.h	234;"	d
GL_LESS	opengl/include/GLES3/gl3.h	234;"	d
GL_LESS	opengl/include/GLES3/gl31.h	234;"	d
GL_LESS	opengl/tests/angeles/include/GLES/gl.h	101;"	d
GL_LIGHT0	opengl/include/GLES/gl.h	495;"	d
GL_LIGHT0	opengl/tests/angeles/include/GLES/gl.h	461;"	d
GL_LIGHT1	opengl/include/GLES/gl.h	496;"	d
GL_LIGHT1	opengl/tests/angeles/include/GLES/gl.h	462;"	d
GL_LIGHT2	opengl/include/GLES/gl.h	497;"	d
GL_LIGHT2	opengl/tests/angeles/include/GLES/gl.h	463;"	d
GL_LIGHT3	opengl/include/GLES/gl.h	498;"	d
GL_LIGHT3	opengl/tests/angeles/include/GLES/gl.h	464;"	d
GL_LIGHT4	opengl/include/GLES/gl.h	499;"	d
GL_LIGHT4	opengl/tests/angeles/include/GLES/gl.h	465;"	d
GL_LIGHT5	opengl/include/GLES/gl.h	500;"	d
GL_LIGHT5	opengl/tests/angeles/include/GLES/gl.h	466;"	d
GL_LIGHT6	opengl/include/GLES/gl.h	501;"	d
GL_LIGHT6	opengl/tests/angeles/include/GLES/gl.h	467;"	d
GL_LIGHT7	opengl/include/GLES/gl.h	502;"	d
GL_LIGHT7	opengl/tests/angeles/include/GLES/gl.h	468;"	d
GL_LIGHTEN_KHR	opengl/include/GLES2/gl2ext.h	62;"	d
GL_LIGHTEN_NV	opengl/include/GLES2/gl2ext.h	1514;"	d
GL_LIGHTING	opengl/include/GLES/gl.h	131;"	d
GL_LIGHTING	opengl/tests/angeles/include/GLES/gl.h	158;"	d
GL_LIGHT_MODEL_AMBIENT	opengl/include/GLES/gl.h	298;"	d
GL_LIGHT_MODEL_AMBIENT	opengl/tests/angeles/include/GLES/gl.h	255;"	d
GL_LIGHT_MODEL_TWO_SIDE	opengl/include/GLES/gl.h	299;"	d
GL_LIGHT_MODEL_TWO_SIDE	opengl/tests/angeles/include/GLES/gl.h	256;"	d
GL_LINEAR	opengl/include/GLES/gl.h	428;"	d
GL_LINEAR	opengl/include/GLES2/gl2.h	253;"	d
GL_LINEAR	opengl/include/GLES3/gl3.h	253;"	d
GL_LINEAR	opengl/include/GLES3/gl31.h	253;"	d
GL_LINEAR	opengl/tests/angeles/include/GLES/gl.h	385;"	d
GL_LINEARBURN_NV	opengl/include/GLES2/gl2ext.h	1515;"	d
GL_LINEARDODGE_NV	opengl/include/GLES2/gl2ext.h	1516;"	d
GL_LINEARLIGHT_NV	opengl/include/GLES2/gl2ext.h	1517;"	d
GL_LINEAR_ATTENUATION	opengl/include/GLES/gl.h	310;"	d
GL_LINEAR_ATTENUATION	opengl/tests/angeles/include/GLES/gl.h	267;"	d
GL_LINEAR_MIPMAP_LINEAR	opengl/include/GLES/gl.h	436;"	d
GL_LINEAR_MIPMAP_LINEAR	opengl/include/GLES2/gl2.h	257;"	d
GL_LINEAR_MIPMAP_LINEAR	opengl/include/GLES3/gl3.h	257;"	d
GL_LINEAR_MIPMAP_LINEAR	opengl/include/GLES3/gl31.h	257;"	d
GL_LINEAR_MIPMAP_LINEAR	opengl/tests/angeles/include/GLES/gl.h	393;"	d
GL_LINEAR_MIPMAP_NEAREST	opengl/include/GLES/gl.h	434;"	d
GL_LINEAR_MIPMAP_NEAREST	opengl/include/GLES2/gl2.h	255;"	d
GL_LINEAR_MIPMAP_NEAREST	opengl/include/GLES3/gl3.h	255;"	d
GL_LINEAR_MIPMAP_NEAREST	opengl/include/GLES3/gl31.h	255;"	d
GL_LINEAR_MIPMAP_NEAREST	opengl/tests/angeles/include/GLES/gl.h	391;"	d
GL_LINES	opengl/include/GLES/gl.h	57;"	d
GL_LINES	opengl/include/GLES2/gl2.h	82;"	d
GL_LINES	opengl/include/GLES3/gl3.h	82;"	d
GL_LINES	opengl/include/GLES3/gl31.h	82;"	d
GL_LINES	opengl/tests/angeles/include/GLES/gl.h	92;"	d
GL_LINES_ADJACENCY_EXT	opengl/include/GLES2/gl2ext.h	883;"	d
GL_LINE_LOOP	opengl/include/GLES/gl.h	58;"	d
GL_LINE_LOOP	opengl/include/GLES2/gl2.h	83;"	d
GL_LINE_LOOP	opengl/include/GLES3/gl3.h	83;"	d
GL_LINE_LOOP	opengl/include/GLES3/gl31.h	83;"	d
GL_LINE_LOOP	opengl/tests/angeles/include/GLES/gl.h	93;"	d
GL_LINE_SMOOTH	opengl/include/GLES/gl.h	149;"	d
GL_LINE_SMOOTH	opengl/tests/angeles/include/GLES/gl.h	176;"	d
GL_LINE_SMOOTH_HINT	opengl/include/GLES/gl.h	293;"	d
GL_LINE_SMOOTH_HINT	opengl/tests/angeles/include/GLES/gl.h	250;"	d
GL_LINE_STRIP	opengl/include/GLES/gl.h	59;"	d
GL_LINE_STRIP	opengl/include/GLES2/gl2.h	84;"	d
GL_LINE_STRIP	opengl/include/GLES3/gl3.h	84;"	d
GL_LINE_STRIP	opengl/include/GLES3/gl31.h	84;"	d
GL_LINE_STRIP	opengl/tests/angeles/include/GLES/gl.h	94;"	d
GL_LINE_STRIP_ADJACENCY_EXT	opengl/include/GLES2/gl2ext.h	884;"	d
GL_LINE_WIDTH	opengl/include/GLES/gl.h	199;"	d
GL_LINE_WIDTH	opengl/include/GLES2/gl2.h	144;"	d
GL_LINE_WIDTH	opengl/include/GLES3/gl3.h	144;"	d
GL_LINE_WIDTH	opengl/include/GLES3/gl31.h	144;"	d
GL_LINK_STATUS	opengl/include/GLES2/gl2.h	224;"	d
GL_LINK_STATUS	opengl/include/GLES3/gl3.h	224;"	d
GL_LINK_STATUS	opengl/include/GLES3/gl31.h	224;"	d
GL_LOCATION	opengl/include/GLES3/gl31.h	992;"	d
GL_LOGIC_OP_MODE	opengl/include/GLES/gl.h	230;"	d
GL_LOSE_CONTEXT_ON_RESET_EXT	opengl/include/GLES/glext.h	366;"	d
GL_LOSE_CONTEXT_ON_RESET_EXT	opengl/include/GLES2/gl2ext.h	1023;"	d
GL_LOW_FLOAT	opengl/include/GLES2/gl2.h	338;"	d
GL_LOW_FLOAT	opengl/include/GLES3/gl3.h	338;"	d
GL_LOW_FLOAT	opengl/include/GLES3/gl31.h	338;"	d
GL_LOW_INT	opengl/include/GLES2/gl2.h	341;"	d
GL_LOW_INT	opengl/include/GLES3/gl3.h	341;"	d
GL_LOW_INT	opengl/include/GLES3/gl31.h	341;"	d
GL_LUMINANCE	opengl/include/GLES/gl.h	365;"	d
GL_LUMINANCE	opengl/include/GLES2/gl2.h	208;"	d
GL_LUMINANCE	opengl/include/GLES3/gl3.h	208;"	d
GL_LUMINANCE	opengl/include/GLES3/gl31.h	208;"	d
GL_LUMINANCE	opengl/tests/angeles/include/GLES/gl.h	322;"	d
GL_LUMINANCE16F_EXT	opengl/include/GLES/glext.h	416;"	d
GL_LUMINANCE16F_EXT	opengl/include/GLES2/gl2ext.h	1347;"	d
GL_LUMINANCE32F_EXT	opengl/include/GLES/glext.h	411;"	d
GL_LUMINANCE32F_EXT	opengl/include/GLES2/gl2ext.h	1344;"	d
GL_LUMINANCE4_ALPHA4_OES	opengl/include/GLES2/gl2ext.h	288;"	d
GL_LUMINANCE8_ALPHA8_EXT	opengl/include/GLES/glext.h	407;"	d
GL_LUMINANCE8_ALPHA8_EXT	opengl/include/GLES2/gl2ext.h	1340;"	d
GL_LUMINANCE8_ALPHA8_OES	opengl/include/GLES2/gl2ext.h	289;"	d
GL_LUMINANCE8_EXT	opengl/include/GLES/glext.h	406;"	d
GL_LUMINANCE8_EXT	opengl/include/GLES2/gl2ext.h	1339;"	d
GL_LUMINANCE8_OES	opengl/include/GLES2/gl2ext.h	290;"	d
GL_LUMINANCE_ALPHA	opengl/include/GLES/gl.h	366;"	d
GL_LUMINANCE_ALPHA	opengl/include/GLES2/gl2.h	209;"	d
GL_LUMINANCE_ALPHA	opengl/include/GLES3/gl3.h	209;"	d
GL_LUMINANCE_ALPHA	opengl/include/GLES3/gl31.h	209;"	d
GL_LUMINANCE_ALPHA	opengl/tests/angeles/include/GLES/gl.h	323;"	d
GL_LUMINANCE_ALPHA16F_EXT	opengl/include/GLES/glext.h	417;"	d
GL_LUMINANCE_ALPHA16F_EXT	opengl/include/GLES2/gl2ext.h	1348;"	d
GL_LUMINANCE_ALPHA32F_EXT	opengl/include/GLES/glext.h	412;"	d
GL_LUMINANCE_ALPHA32F_EXT	opengl/include/GLES2/gl2ext.h	1345;"	d
GL_MAJOR_VERSION	opengl/include/GLES3/gl3.h	604;"	d
GL_MAJOR_VERSION	opengl/include/GLES3/gl31.h	604;"	d
GL_MALI_PROGRAM_BINARY_ARM	opengl/include/GLES2/gl2ext.h	672;"	d
GL_MALI_SHADER_BINARY_ARM	opengl/include/GLES2/gl2ext.h	677;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	opengl/include/GLES3/gl3.h	715;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	opengl/include/GLES3/gl31.h	715;"	d
GL_MAP_FLUSH_EXPLICIT_BIT_EXT	opengl/include/GLES/glext.h	335;"	d
GL_MAP_FLUSH_EXPLICIT_BIT_EXT	opengl/include/GLES2/gl2ext.h	934;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	opengl/include/GLES3/gl3.h	714;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	opengl/include/GLES3/gl31.h	714;"	d
GL_MAP_INVALIDATE_BUFFER_BIT_EXT	opengl/include/GLES/glext.h	334;"	d
GL_MAP_INVALIDATE_BUFFER_BIT_EXT	opengl/include/GLES2/gl2ext.h	933;"	d
GL_MAP_INVALIDATE_RANGE_BIT	opengl/include/GLES3/gl3.h	713;"	d
GL_MAP_INVALIDATE_RANGE_BIT	opengl/include/GLES3/gl31.h	713;"	d
GL_MAP_INVALIDATE_RANGE_BIT_EXT	opengl/include/GLES/glext.h	333;"	d
GL_MAP_INVALIDATE_RANGE_BIT_EXT	opengl/include/GLES2/gl2ext.h	932;"	d
GL_MAP_READ_BIT	opengl/include/GLES3/gl3.h	711;"	d
GL_MAP_READ_BIT	opengl/include/GLES3/gl31.h	711;"	d
GL_MAP_READ_BIT_EXT	opengl/include/GLES/glext.h	331;"	d
GL_MAP_READ_BIT_EXT	opengl/include/GLES2/gl2ext.h	930;"	d
GL_MAP_UNSYNCHRONIZED_BIT	opengl/include/GLES3/gl3.h	716;"	d
GL_MAP_UNSYNCHRONIZED_BIT	opengl/include/GLES3/gl31.h	716;"	d
GL_MAP_UNSYNCHRONIZED_BIT_EXT	opengl/include/GLES/glext.h	336;"	d
GL_MAP_UNSYNCHRONIZED_BIT_EXT	opengl/include/GLES2/gl2ext.h	935;"	d
GL_MAP_WRITE_BIT	opengl/include/GLES3/gl3.h	712;"	d
GL_MAP_WRITE_BIT	opengl/include/GLES3/gl31.h	712;"	d
GL_MAP_WRITE_BIT_EXT	opengl/include/GLES/glext.h	332;"	d
GL_MAP_WRITE_BIT_EXT	opengl/include/GLES2/gl2ext.h	931;"	d
GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES	opengl/include/GLES/glext.h	153;"	d
GL_MATRIX_INDEX_ARRAY_OES	opengl/include/GLES/glext.h	146;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_OES	opengl/include/GLES/glext.h	152;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_OES	opengl/include/GLES/glext.h	149;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_OES	opengl/include/GLES/glext.h	151;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_OES	opengl/include/GLES/glext.h	150;"	d
GL_MATRIX_MODE	opengl/include/GLES/gl.h	218;"	d
GL_MATRIX_PALETTE_OES	opengl/include/GLES/glext.h	145;"	d
GL_MATRIX_STRIDE	opengl/include/GLES3/gl31.h	980;"	d
GL_MAX	opengl/include/GLES2/gl2ext.h	843;"	d
GL_MAX	opengl/include/GLES3/gl3.h	552;"	d
GL_MAX	opengl/include/GLES3/gl31.h	552;"	d
GL_MAX_3D_TEXTURE_SIZE	opengl/include/GLES3/gl3.h	543;"	d
GL_MAX_3D_TEXTURE_SIZE	opengl/include/GLES3/gl31.h	543;"	d
GL_MAX_3D_TEXTURE_SIZE_OES	opengl/include/GLES2/gl2ext.h	354;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	opengl/include/GLES3/gl3.h	612;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	opengl/include/GLES3/gl31.h	612;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	opengl/include/GLES3/gl31.h	1009;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	opengl/include/GLES3/gl31.h	1008;"	d
GL_MAX_CLIP_PLANES	opengl/include/GLES/gl.h	238;"	d
GL_MAX_CLIP_PLANES_IMG	opengl/include/GLES/glext.h	460;"	d
GL_MAX_COLOR_ATTACHMENTS	opengl/include/GLES3/gl3.h	692;"	d
GL_MAX_COLOR_ATTACHMENTS	opengl/include/GLES3/gl31.h	692;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	opengl/include/GLES2/gl2ext.h	800;"	d
GL_MAX_COLOR_ATTACHMENTS_NV	opengl/include/GLES2/gl2ext.h	1642;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	opengl/include/GLES3/gl31.h	1075;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	opengl/include/GLES3/gl31.h	1007;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	opengl/include/GLES3/gl31.h	1004;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	opengl/include/GLES3/gl31.h	945;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	opengl/include/GLES3/gl3.h	758;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	opengl/include/GLES3/gl31.h	758;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	889;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	opengl/include/GLES3/gl31.h	1015;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	opengl/include/GLES3/gl31.h	1065;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	opengl/include/GLES3/gl31.h	1060;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	1213;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	1214;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	opengl/include/GLES2/gl2.h	218;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	opengl/include/GLES3/gl3.h	218;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	opengl/include/GLES3/gl31.h	218;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	opengl/include/GLES3/gl3.h	754;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	opengl/include/GLES3/gl31.h	754;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	opengl/include/GLES3/gl3.h	757;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	opengl/include/GLES3/gl31.h	757;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	opengl/include/GLES3/gl31.h	944;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	opengl/include/GLES3/gl31.h	943;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	opengl/include/GLES3/gl31.h	940;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	opengl/include/GLES3/gl31.h	1059;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	opengl/include/GLES3/gl31.h	941;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	opengl/include/GLES3/gl31.h	939;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	opengl/include/GLES3/gl31.h	938;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	opengl/include/GLES3/gl31.h	942;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	opengl/include/GLES3/gl31.h	947;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	opengl/include/GLES3/gl31.h	946;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	opengl/include/GLES3/gl31.h	948;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	opengl/include/GLES2/gl2.h	271;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	opengl/include/GLES3/gl3.h	271;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	opengl/include/GLES3/gl31.h	271;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES	opengl/include/GLES/glext.h	210;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR	opengl/include/GLES2/gl2ext.h	103;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_KHR	opengl/include/GLES2/gl2ext.h	113;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_KHR	opengl/include/GLES2/gl2ext.h	112;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	opengl/include/GLES3/gl31.h	1076;"	d
GL_MAX_DRAW_BUFFERS	opengl/include/GLES3/gl3.h	568;"	d
GL_MAX_DRAW_BUFFERS	opengl/include/GLES3/gl31.h	568;"	d
GL_MAX_DRAW_BUFFERS_EXT	opengl/include/GLES2/gl2ext.h	801;"	d
GL_MAX_DRAW_BUFFERS_NV	opengl/include/GLES2/gl2ext.h	1587;"	d
GL_MAX_ELEMENTS_INDICES	opengl/include/GLES3/gl3.h	546;"	d
GL_MAX_ELEMENTS_INDICES	opengl/include/GLES3/gl31.h	546;"	d
GL_MAX_ELEMENTS_INDICES	opengl/tests/angeles/include/GLES/gl.h	230;"	d
GL_MAX_ELEMENTS_VERTICES	opengl/include/GLES3/gl3.h	545;"	d
GL_MAX_ELEMENTS_VERTICES	opengl/include/GLES3/gl31.h	545;"	d
GL_MAX_ELEMENTS_VERTICES	opengl/tests/angeles/include/GLES/gl.h	229;"	d
GL_MAX_ELEMENT_INDEX	opengl/include/GLES3/gl3.h	826;"	d
GL_MAX_ELEMENT_INDEX	opengl/include/GLES3/gl31.h	826;"	d
GL_MAX_EXT	opengl/include/GLES/glext.h	319;"	d
GL_MAX_EXT	opengl/include/GLES2/gl2ext.h	702;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	opengl/include/GLES3/gl31.h	1006;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	opengl/include/GLES3/gl31.h	1003;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	opengl/include/GLES3/gl31.h	1014;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	opengl/include/GLES3/gl3.h	779;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	opengl/include/GLES3/gl31.h	779;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES	opengl/include/GLES2/gl2ext.h	325;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	opengl/include/GLES3/gl31.h	1058;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	opengl/include/GLES3/gl3.h	753;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	opengl/include/GLES3/gl31.h	753;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	opengl/include/GLES3/gl3.h	585;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	opengl/include/GLES3/gl31.h	585;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	opengl/include/GLES2/gl2.h	221;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	opengl/include/GLES3/gl3.h	221;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	opengl/include/GLES3/gl31.h	221;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	opengl/include/GLES3/gl31.h	961;"	d
GL_MAX_FRAMEBUFFER_LAYERS_EXT	opengl/include/GLES2/gl2ext.h	905;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	opengl/include/GLES3/gl31.h	962;"	d
GL_MAX_FRAMEBUFFER_WIDTH	opengl/include/GLES3/gl31.h	960;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT	opengl/include/GLES2/gl2ext.h	897;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT	opengl/include/GLES2/gl2ext.h	896;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT	opengl/include/GLES2/gl2ext.h	898;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	890;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	891;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	opengl/include/GLES2/gl2ext.h	892;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT	opengl/include/GLES2/gl2ext.h	894;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT	opengl/include/GLES2/gl2ext.h	899;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	opengl/include/GLES2/gl2ext.h	895;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	893;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT	opengl/include/GLES2/gl2ext.h	888;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	887;"	d
GL_MAX_IMAGE_UNITS	opengl/include/GLES3/gl31.h	1012;"	d
GL_MAX_INTEGER_SAMPLES	opengl/include/GLES3/gl31.h	1077;"	d
GL_MAX_LABEL_LENGTH_KHR	opengl/include/GLES2/gl2ext.h	111;"	d
GL_MAX_LIGHTS	opengl/include/GLES/gl.h	237;"	d
GL_MAX_LIGHTS	opengl/tests/angeles/include/GLES/gl.h	223;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	opengl/include/GLES/gl.h	240;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	opengl/tests/angeles/include/GLES/gl.h	225;"	d
GL_MAX_MULTIVIEW_BUFFERS_EXT	opengl/include/GLES2/gl2ext.h	974;"	d
GL_MAX_NAME_LENGTH	opengl/include/GLES3/gl31.h	972;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	opengl/include/GLES3/gl31.h	973;"	d
GL_MAX_PALETTE_MATRICES_OES	opengl/include/GLES/glext.h	144;"	d
GL_MAX_PATCH_VERTICES_EXT	opengl/include/GLES2/gl2ext.h	1199;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	opengl/include/GLES3/gl3.h	614;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	opengl/include/GLES3/gl31.h	614;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	opengl/include/GLES3/gl31.h	1069;"	d
GL_MAX_PROJECTION_STACK_DEPTH	opengl/include/GLES/gl.h	241;"	d
GL_MAX_PROJECTION_STACK_DEPTH	opengl/tests/angeles/include/GLES/gl.h	226;"	d
GL_MAX_RENDERBUFFER_SIZE	opengl/include/GLES2/gl2.h	375;"	d
GL_MAX_RENDERBUFFER_SIZE	opengl/include/GLES3/gl3.h	375;"	d
GL_MAX_RENDERBUFFER_SIZE	opengl/include/GLES3/gl31.h	375;"	d
GL_MAX_RENDERBUFFER_SIZE_OES	opengl/include/GLES/glext.h	122;"	d
GL_MAX_SAMPLES	opengl/include/GLES3/gl3.h	709;"	d
GL_MAX_SAMPLES	opengl/include/GLES3/gl31.h	709;"	d
GL_MAX_SAMPLES_ANGLE	opengl/include/GLES2/gl2ext.h	535;"	d
GL_MAX_SAMPLES_APPLE	opengl/include/GLES/glext.h	253;"	d
GL_MAX_SAMPLES_APPLE	opengl/include/GLES2/gl2ext.h	602;"	d
GL_MAX_SAMPLES_EXT	opengl/include/GLES/glext.h	345;"	d
GL_MAX_SAMPLES_EXT	opengl/include/GLES2/gl2ext.h	959;"	d
GL_MAX_SAMPLES_IMG	opengl/include/GLES/glext.h	467;"	d
GL_MAX_SAMPLES_IMG	opengl/include/GLES2/gl2ext.h	1401;"	d
GL_MAX_SAMPLES_NV	opengl/include/GLES2/gl2ext.h	1684;"	d
GL_MAX_SAMPLE_MASK_WORDS	opengl/include/GLES3/gl31.h	1074;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	opengl/include/GLES3/gl3.h	780;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	opengl/include/GLES3/gl31.h	780;"	d
GL_MAX_SERVER_WAIT_TIMEOUT_APPLE	opengl/include/GLES/glext.h	275;"	d
GL_MAX_SERVER_WAIT_TIMEOUT_APPLE	opengl/include/GLES2/gl2ext.h	626;"	d
GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT	opengl/include/GLES2/gl2ext.h	1169;"	d
GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT	opengl/include/GLES2/gl2ext.h	1170;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	opengl/include/GLES3/gl31.h	1062;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	opengl/include/GLES3/gl31.h	1061;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT	opengl/include/GLES2/gl2ext.h	1217;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT	opengl/include/GLES2/gl2ext.h	1215;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT	opengl/include/GLES2/gl2ext.h	1219;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	1211;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	1205;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT	opengl/include/GLES2/gl2ext.h	1221;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT	opengl/include/GLES2/gl2ext.h	1203;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	1207;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT	opengl/include/GLES2/gl2ext.h	1209;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	1201;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT	opengl/include/GLES2/gl2ext.h	1218;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT	opengl/include/GLES2/gl2ext.h	1216;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT	opengl/include/GLES2/gl2ext.h	1220;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	1212;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	1208;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT	opengl/include/GLES2/gl2ext.h	1222;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT	opengl/include/GLES2/gl2ext.h	1204;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT	opengl/include/GLES2/gl2ext.h	1210;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	1202;"	d
GL_MAX_TESS_GEN_LEVEL_EXT	opengl/include/GLES2/gl2ext.h	1200;"	d
GL_MAX_TESS_PATCH_COMPONENTS_EXT	opengl/include/GLES2/gl2ext.h	1206;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	opengl/include/GLES2/gl2ext.h	1265;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	opengl/include/GLES2/gl2.h	220;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	opengl/include/GLES3/gl3.h	220;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	opengl/include/GLES3/gl31.h	220;"	d
GL_MAX_TEXTURE_LOD_BIAS	opengl/include/GLES3/gl3.h	554;"	d
GL_MAX_TEXTURE_LOD_BIAS	opengl/include/GLES3/gl31.h	554;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	opengl/include/GLES/glext.h	397;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	opengl/include/GLES/glext.h	387;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	opengl/include/GLES2/gl2ext.h	1313;"	d
GL_MAX_TEXTURE_SIZE	opengl/include/GLES/gl.h	239;"	d
GL_MAX_TEXTURE_SIZE	opengl/include/GLES2/gl2.h	174;"	d
GL_MAX_TEXTURE_SIZE	opengl/include/GLES3/gl3.h	174;"	d
GL_MAX_TEXTURE_SIZE	opengl/include/GLES3/gl31.h	174;"	d
GL_MAX_TEXTURE_SIZE	opengl/tests/angeles/include/GLES/gl.h	224;"	d
GL_MAX_TEXTURE_STACK_DEPTH	opengl/include/GLES/gl.h	242;"	d
GL_MAX_TEXTURE_STACK_DEPTH	opengl/tests/angeles/include/GLES/gl.h	227;"	d
GL_MAX_TEXTURE_UNITS	opengl/include/GLES/gl.h	244;"	d
GL_MAX_TEXTURE_UNITS	opengl/tests/angeles/include/GLES/gl.h	231;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	opengl/include/GLES3/gl3.h	630;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	opengl/include/GLES3/gl31.h	630;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	opengl/include/GLES3/gl3.h	631;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	opengl/include/GLES3/gl31.h	631;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	opengl/include/GLES3/gl3.h	624;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	opengl/include/GLES3/gl31.h	624;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	opengl/include/GLES3/gl3.h	756;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	opengl/include/GLES3/gl31.h	756;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	opengl/include/GLES3/gl3.h	755;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	opengl/include/GLES3/gl31.h	755;"	d
GL_MAX_UNIFORM_LOCATIONS	opengl/include/GLES3/gl31.h	955;"	d
GL_MAX_VARYING_COMPONENTS	opengl/include/GLES3/gl3.h	615;"	d
GL_MAX_VARYING_COMPONENTS	opengl/include/GLES3/gl31.h	615;"	d
GL_MAX_VARYING_VECTORS	opengl/include/GLES2/gl2.h	217;"	d
GL_MAX_VARYING_VECTORS	opengl/include/GLES3/gl3.h	217;"	d
GL_MAX_VARYING_VECTORS	opengl/include/GLES3/gl31.h	217;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	opengl/include/GLES3/gl31.h	1005;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	opengl/include/GLES3/gl31.h	1002;"	d
GL_MAX_VERTEX_ATTRIBS	opengl/include/GLES2/gl2.h	215;"	d
GL_MAX_VERTEX_ATTRIBS	opengl/include/GLES3/gl3.h	215;"	d
GL_MAX_VERTEX_ATTRIBS	opengl/include/GLES3/gl31.h	215;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	opengl/include/GLES3/gl31.h	1108;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	opengl/include/GLES3/gl31.h	1107;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	opengl/include/GLES3/gl31.h	1109;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	opengl/include/GLES3/gl31.h	1013;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	opengl/include/GLES3/gl3.h	778;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	opengl/include/GLES3/gl31.h	778;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	opengl/include/GLES3/gl31.h	1057;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	opengl/include/GLES2/gl2.h	219;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	opengl/include/GLES3/gl3.h	219;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	opengl/include/GLES3/gl31.h	219;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	opengl/include/GLES3/gl3.h	752;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	opengl/include/GLES3/gl31.h	752;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	opengl/include/GLES3/gl3.h	586;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	opengl/include/GLES3/gl31.h	586;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	opengl/include/GLES2/gl2.h	216;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	opengl/include/GLES3/gl3.h	216;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	opengl/include/GLES3/gl31.h	216;"	d
GL_MAX_VERTEX_UNITS_OES	opengl/include/GLES/glext.h	143;"	d
GL_MAX_VIEWPORT_DIMS	opengl/include/GLES/gl.h	243;"	d
GL_MAX_VIEWPORT_DIMS	opengl/include/GLES2/gl2.h	175;"	d
GL_MAX_VIEWPORT_DIMS	opengl/include/GLES3/gl3.h	175;"	d
GL_MAX_VIEWPORT_DIMS	opengl/include/GLES3/gl31.h	175;"	d
GL_MAX_VIEWPORT_DIMS	opengl/tests/angeles/include/GLES/gl.h	228;"	d
GL_MEDIUM_FLOAT	opengl/include/GLES2/gl2.h	339;"	d
GL_MEDIUM_FLOAT	opengl/include/GLES3/gl3.h	339;"	d
GL_MEDIUM_FLOAT	opengl/include/GLES3/gl31.h	339;"	d
GL_MEDIUM_INT	opengl/include/GLES2/gl2.h	342;"	d
GL_MEDIUM_INT	opengl/include/GLES3/gl3.h	342;"	d
GL_MEDIUM_INT	opengl/include/GLES3/gl31.h	342;"	d
GL_MIN	opengl/include/GLES2/gl2ext.h	842;"	d
GL_MIN	opengl/include/GLES3/gl3.h	551;"	d
GL_MIN	opengl/include/GLES3/gl31.h	551;"	d
GL_MINOR_VERSION	opengl/include/GLES3/gl3.h	605;"	d
GL_MINOR_VERSION	opengl/include/GLES3/gl31.h	605;"	d
GL_MINUS_CLAMPED_NV	opengl/include/GLES2/gl2ext.h	1518;"	d
GL_MINUS_NV	opengl/include/GLES2/gl2ext.h	1519;"	d
GL_MIN_EXT	opengl/include/GLES/glext.h	318;"	d
GL_MIN_EXT	opengl/include/GLES2/gl2ext.h	701;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES	opengl/include/GLES2/gl2ext.h	324;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	opengl/include/GLES3/gl3.h	613;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	opengl/include/GLES3/gl31.h	613;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	opengl/include/GLES3/gl31.h	1068;"	d
GL_MIN_SAMPLE_SHADING_VALUE_OES	opengl/include/GLES2/gl2ext.h	307;"	d
GL_MIRRORED_REPEAT	opengl/include/GLES2/gl2.h	307;"	d
GL_MIRRORED_REPEAT	opengl/include/GLES3/gl3.h	307;"	d
GL_MIRRORED_REPEAT	opengl/include/GLES3/gl31.h	307;"	d
GL_MIRRORED_REPEAT_OES	opengl/include/GLES/glext.h	217;"	d
GL_MODELVIEW	opengl/include/GLES/gl.h	351;"	d
GL_MODELVIEW	opengl/tests/angeles/include/GLES/gl.h	308;"	d
GL_MODELVIEW_MATRIX	opengl/include/GLES/gl.h	223;"	d
GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES	opengl/include/GLES/glext.h	136;"	d
GL_MODELVIEW_STACK_DEPTH	opengl/include/GLES/gl.h	220;"	d
GL_MODULATE	opengl/include/GLES/gl.h	413;"	d
GL_MODULATE	opengl/tests/angeles/include/GLES/gl.h	370;"	d
GL_MODULATE_COLOR_IMG	opengl/include/GLES/glext.h	443;"	d
GL_MULTIPLY_KHR	opengl/include/GLES2/gl2ext.h	58;"	d
GL_MULTIPLY_NV	opengl/include/GLES2/gl2ext.h	1520;"	d
GL_MULTISAMPLE	opengl/include/GLES/gl.h	159;"	d
GL_MULTISAMPLE	opengl/tests/angeles/include/GLES/gl.h	186;"	d
GL_MULTISAMPLE_BUFFER_BIT0_QCOM	opengl/include/GLES/glext.h	543;"	d
GL_MULTISAMPLE_BUFFER_BIT0_QCOM	opengl/include/GLES2/gl2ext.h	1902;"	d
GL_MULTISAMPLE_BUFFER_BIT1_QCOM	opengl/include/GLES/glext.h	544;"	d
GL_MULTISAMPLE_BUFFER_BIT1_QCOM	opengl/include/GLES2/gl2ext.h	1903;"	d
GL_MULTISAMPLE_BUFFER_BIT2_QCOM	opengl/include/GLES/glext.h	545;"	d
GL_MULTISAMPLE_BUFFER_BIT2_QCOM	opengl/include/GLES2/gl2ext.h	1904;"	d
GL_MULTISAMPLE_BUFFER_BIT3_QCOM	opengl/include/GLES/glext.h	546;"	d
GL_MULTISAMPLE_BUFFER_BIT3_QCOM	opengl/include/GLES2/gl2ext.h	1905;"	d
GL_MULTISAMPLE_BUFFER_BIT4_QCOM	opengl/include/GLES/glext.h	547;"	d
GL_MULTISAMPLE_BUFFER_BIT4_QCOM	opengl/include/GLES2/gl2ext.h	1906;"	d
GL_MULTISAMPLE_BUFFER_BIT5_QCOM	opengl/include/GLES/glext.h	548;"	d
GL_MULTISAMPLE_BUFFER_BIT5_QCOM	opengl/include/GLES2/gl2ext.h	1907;"	d
GL_MULTISAMPLE_BUFFER_BIT6_QCOM	opengl/include/GLES/glext.h	549;"	d
GL_MULTISAMPLE_BUFFER_BIT6_QCOM	opengl/include/GLES2/gl2ext.h	1908;"	d
GL_MULTISAMPLE_BUFFER_BIT7_QCOM	opengl/include/GLES/glext.h	550;"	d
GL_MULTISAMPLE_BUFFER_BIT7_QCOM	opengl/include/GLES2/gl2ext.h	1909;"	d
GL_MULTIVIEW_EXT	opengl/include/GLES2/gl2ext.h	971;"	d
GL_NAME_LENGTH	opengl/include/GLES3/gl31.h	974;"	d
GL_NAND	opengl/include/GLES/gl.h	336;"	d
GL_NAND	opengl/tests/angeles/include/GLES/gl.h	293;"	d
GL_NEAREST	opengl/include/GLES/gl.h	427;"	d
GL_NEAREST	opengl/include/GLES2/gl2.h	252;"	d
GL_NEAREST	opengl/include/GLES3/gl3.h	252;"	d
GL_NEAREST	opengl/include/GLES3/gl31.h	252;"	d
GL_NEAREST	opengl/tests/angeles/include/GLES/gl.h	384;"	d
GL_NEAREST_MIPMAP_LINEAR	opengl/include/GLES/gl.h	435;"	d
GL_NEAREST_MIPMAP_LINEAR	opengl/include/GLES2/gl2.h	256;"	d
GL_NEAREST_MIPMAP_LINEAR	opengl/include/GLES3/gl3.h	256;"	d
GL_NEAREST_MIPMAP_LINEAR	opengl/include/GLES3/gl31.h	256;"	d
GL_NEAREST_MIPMAP_LINEAR	opengl/tests/angeles/include/GLES/gl.h	392;"	d
GL_NEAREST_MIPMAP_NEAREST	opengl/include/GLES/gl.h	433;"	d
GL_NEAREST_MIPMAP_NEAREST	opengl/include/GLES2/gl2.h	254;"	d
GL_NEAREST_MIPMAP_NEAREST	opengl/include/GLES3/gl3.h	254;"	d
GL_NEAREST_MIPMAP_NEAREST	opengl/include/GLES3/gl31.h	254;"	d
GL_NEAREST_MIPMAP_NEAREST	opengl/tests/angeles/include/GLES/gl.h	390;"	d
GL_NEVER	opengl/include/GLES/gl.h	65;"	d
GL_NEVER	opengl/include/GLES2/gl2.h	233;"	d
GL_NEVER	opengl/include/GLES3/gl3.h	233;"	d
GL_NEVER	opengl/include/GLES3/gl31.h	233;"	d
GL_NEVER	opengl/tests/angeles/include/GLES/gl.h	100;"	d
GL_NICEST	opengl/include/GLES/gl.h	288;"	d
GL_NICEST	opengl/include/GLES2/gl2.h	194;"	d
GL_NICEST	opengl/include/GLES3/gl3.h	194;"	d
GL_NICEST	opengl/include/GLES3/gl31.h	194;"	d
GL_NICEST	opengl/tests/angeles/include/GLES/gl.h	245;"	d
GL_NONE	opengl/include/GLES2/gl2.h	367;"	d
GL_NONE	opengl/include/GLES3/gl3.h	367;"	d
GL_NONE	opengl/include/GLES3/gl31.h	367;"	d
GL_NONE_OES	opengl/include/GLES/glext.h	91;"	d
GL_NOOP	opengl/include/GLES/gl.h	327;"	d
GL_NOOP	opengl/tests/angeles/include/GLES/gl.h	284;"	d
GL_NOR	opengl/include/GLES/gl.h	330;"	d
GL_NOR	opengl/tests/angeles/include/GLES/gl.h	287;"	d
GL_NORMALIZE	opengl/include/GLES/gl.h	152;"	d
GL_NORMALIZE	opengl/tests/angeles/include/GLES/gl.h	179;"	d
GL_NORMAL_ARRAY	opengl/include/GLES/gl.h	156;"	d
GL_NORMAL_ARRAY	opengl/tests/angeles/include/GLES/gl.h	183;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	opengl/include/GLES/gl.h	511;"	d
GL_NORMAL_ARRAY_POINTER	opengl/include/GLES/gl.h	268;"	d
GL_NORMAL_ARRAY_STRIDE	opengl/include/GLES/gl.h	260;"	d
GL_NORMAL_ARRAY_TYPE	opengl/include/GLES/gl.h	259;"	d
GL_NORMAL_MAP_OES	opengl/include/GLES/glext.h	200;"	d
GL_NOTEQUAL	opengl/include/GLES/gl.h	70;"	d
GL_NOTEQUAL	opengl/include/GLES2/gl2.h	238;"	d
GL_NOTEQUAL	opengl/include/GLES3/gl3.h	238;"	d
GL_NOTEQUAL	opengl/include/GLES3/gl31.h	238;"	d
GL_NOTEQUAL	opengl/tests/angeles/include/GLES/gl.h	105;"	d
GL_NO_ERROR	opengl/include/GLES/gl.h	165;"	d
GL_NO_ERROR	opengl/include/GLES2/gl2.h	137;"	d
GL_NO_ERROR	opengl/include/GLES3/gl3.h	137;"	d
GL_NO_ERROR	opengl/include/GLES3/gl31.h	137;"	d
GL_NO_ERROR	opengl/tests/angeles/include/GLES/gl.h	192;"	d
GL_NO_RESET_NOTIFICATION_EXT	opengl/include/GLES/glext.h	367;"	d
GL_NO_RESET_NOTIFICATION_EXT	opengl/include/GLES2/gl2ext.h	1024;"	d
GL_NUM_ACTIVE_VARIABLES	opengl/include/GLES3/gl31.h	985;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	opengl/include/GLES/gl.h	282;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	opengl/include/GLES2/gl2.h	190;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	opengl/include/GLES3/gl3.h	190;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	opengl/include/GLES3/gl31.h	190;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	opengl/tests/angeles/include/GLES/gl.h	232;"	d
GL_NUM_EXTENSIONS	opengl/include/GLES3/gl3.h	606;"	d
GL_NUM_EXTENSIONS	opengl/include/GLES3/gl31.h	606;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	opengl/include/GLES3/gl3.h	813;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	opengl/include/GLES3/gl31.h	813;"	d
GL_NUM_PROGRAM_BINARY_FORMATS_OES	opengl/include/GLES2/gl2ext.h	251;"	d
GL_NUM_SAMPLE_COUNTS	opengl/include/GLES3/gl3.h	827;"	d
GL_NUM_SAMPLE_COUNTS	opengl/include/GLES3/gl31.h	827;"	d
GL_NUM_SHADER_BINARY_FORMATS	opengl/include/GLES2/gl2.h	337;"	d
GL_NUM_SHADER_BINARY_FORMATS	opengl/include/GLES3/gl3.h	337;"	d
GL_NUM_SHADER_BINARY_FORMATS	opengl/include/GLES3/gl31.h	337;"	d
GL_NV_blend_equation_advanced	opengl/include/GLES2/gl2ext.h	1488;"	d
GL_NV_blend_equation_advanced_coherent	opengl/include/GLES2/gl2ext.h	1547;"	d
GL_NV_copy_buffer	opengl/include/GLES2/gl2ext.h	1552;"	d
GL_NV_coverage_sample	opengl/include/GLES2/gl2ext.h	1562;"	d
GL_NV_depth_nonlinear	opengl/include/GLES2/gl2ext.h	1581;"	d
GL_NV_draw_buffers	opengl/include/GLES2/gl2ext.h	1586;"	d
GL_NV_draw_instanced	opengl/include/GLES2/gl2ext.h	1627;"	d
GL_NV_explicit_attrib_location	opengl/include/GLES2/gl2ext.h	1637;"	d
GL_NV_fbo_color_attachments	opengl/include/GLES2/gl2ext.h	1641;"	d
GL_NV_fence	opengl/include/GLES/glext.h	1176;"	d
GL_NV_fence	opengl/include/GLES2/gl2ext.h	1646;"	d
GL_NV_framebuffer_blit	opengl/include/GLES2/gl2ext.h	1669;"	d
GL_NV_framebuffer_multisample	opengl/include/GLES2/gl2ext.h	1681;"	d
GL_NV_generate_mipmap_sRGB	opengl/include/GLES2/gl2ext.h	1692;"	d
GL_NV_instanced_arrays	opengl/include/GLES2/gl2ext.h	1696;"	d
GL_NV_non_square_matrices	opengl/include/GLES2/gl2ext.h	1705;"	d
GL_NV_read_buffer	opengl/include/GLES2/gl2ext.h	1729;"	d
GL_NV_read_buffer_front	opengl/include/GLES2/gl2ext.h	1738;"	d
GL_NV_read_depth	opengl/include/GLES2/gl2ext.h	1742;"	d
GL_NV_read_depth_stencil	opengl/include/GLES2/gl2ext.h	1746;"	d
GL_NV_read_stencil	opengl/include/GLES2/gl2ext.h	1750;"	d
GL_NV_sRGB_formats	opengl/include/GLES2/gl2ext.h	1754;"	d
GL_NV_shadow_samplers_array	opengl/include/GLES2/gl2ext.h	1768;"	d
GL_NV_shadow_samplers_cube	opengl/include/GLES2/gl2ext.h	1773;"	d
GL_NV_texture_border_clamp	opengl/include/GLES2/gl2ext.h	1778;"	d
GL_NV_texture_compression_s3tc_update	opengl/include/GLES2/gl2ext.h	1784;"	d
GL_NV_texture_npot_2D_mipmap	opengl/include/GLES2/gl2ext.h	1788;"	d
GL_OBJECT_TYPE	opengl/include/GLES3/gl3.h	781;"	d
GL_OBJECT_TYPE	opengl/include/GLES3/gl31.h	781;"	d
GL_OBJECT_TYPE_APPLE	opengl/include/GLES/glext.h	276;"	d
GL_OBJECT_TYPE_APPLE	opengl/include/GLES2/gl2ext.h	627;"	d
GL_OES_EGL_image	opengl/include/GLES/glext.h	633;"	d
GL_OES_EGL_image	opengl/include/GLES2/gl2ext.h	185;"	d
GL_OES_EGL_image_external	opengl/include/GLES/glext.h	644;"	d
GL_OES_EGL_image_external	opengl/include/GLES2/gl2ext.h	196;"	d
GL_OES_VERSION_1_0	opengl/tests/angeles/include/GLES/gl.h	77;"	d
GL_OES_blend_equation_separate	opengl/include/GLES/glext.h	563;"	d
GL_OES_blend_func_separate	opengl/include/GLES/glext.h	572;"	d
GL_OES_blend_subtract	opengl/include/GLES/glext.h	581;"	d
GL_OES_byte_coordinates	opengl/include/GLES/glext.h	590;"	d
GL_OES_compressed_ETC1_RGB8_texture	opengl/include/GLES/glext.h	595;"	d
GL_OES_compressed_ETC1_RGB8_texture	opengl/include/GLES2/gl2ext.h	204;"	d
GL_OES_compressed_paletted_texture	opengl/include/GLES/gl.h	751;"	d
GL_OES_compressed_paletted_texture	opengl/include/GLES2/gl2ext.h	209;"	d
GL_OES_compressed_paletted_texture	opengl/tests/angeles/include/GLES/gl.h	79;"	d
GL_OES_depth24	opengl/include/GLES/glext.h	600;"	d
GL_OES_depth24	opengl/include/GLES2/gl2ext.h	223;"	d
GL_OES_depth32	opengl/include/GLES/glext.h	605;"	d
GL_OES_depth32	opengl/include/GLES2/gl2ext.h	228;"	d
GL_OES_depth_texture	opengl/include/GLES2/gl2ext.h	233;"	d
GL_OES_draw_texture	opengl/include/GLES/glext.h	610;"	d
GL_OES_element_index_uint	opengl/include/GLES/glext.h	650;"	d
GL_OES_element_index_uint	opengl/include/GLES2/gl2ext.h	237;"	d
GL_OES_extended_matrix_palette	opengl/include/GLES/glext.h	655;"	d
GL_OES_fbo_render_mipmap	opengl/include/GLES/glext.h	660;"	d
GL_OES_fbo_render_mipmap	opengl/include/GLES2/gl2ext.h	241;"	d
GL_OES_fixed_point	opengl/include/GLES/glext.h	665;"	d
GL_OES_fragment_precision_high	opengl/include/GLES2/gl2ext.h	245;"	d
GL_OES_framebuffer_object	opengl/include/GLES/glext.h	750;"	d
GL_OES_get_program_binary	opengl/include/GLES2/gl2ext.h	249;"	d
GL_OES_mapbuffer	opengl/include/GLES/glext.h	787;"	d
GL_OES_mapbuffer	opengl/include/GLES2/gl2ext.h	262;"	d
GL_OES_matrix_get	opengl/include/GLES/glext.h	800;"	d
GL_OES_matrix_palette	opengl/include/GLES/glext.h	805;"	d
GL_OES_packed_depth_stencil	opengl/include/GLES/glext.h	820;"	d
GL_OES_packed_depth_stencil	opengl/include/GLES2/gl2ext.h	278;"	d
GL_OES_point_size_array	opengl/include/GLES/gl.h	756;"	d
GL_OES_point_sprite	opengl/include/GLES/gl.h	762;"	d
GL_OES_query_matrix	opengl/include/GLES/glext.h	830;"	d
GL_OES_read_format	opengl/include/GLES/gl.h	746;"	d
GL_OES_read_format	opengl/tests/angeles/include/GLES/gl.h	78;"	d
GL_OES_required_internalformat	opengl/include/GLES/glext.h	825;"	d
GL_OES_required_internalformat	opengl/include/GLES2/gl2ext.h	285;"	d
GL_OES_rgb8_rgba8	opengl/include/GLES/glext.h	839;"	d
GL_OES_rgb8_rgba8	opengl/include/GLES2/gl2ext.h	301;"	d
GL_OES_sample_shading	opengl/include/GLES2/gl2ext.h	305;"	d
GL_OES_sample_variables	opengl/include/GLES2/gl2ext.h	315;"	d
GL_OES_shader_image_atomic	opengl/include/GLES2/gl2ext.h	319;"	d
GL_OES_shader_multisample_interpolation	opengl/include/GLES2/gl2ext.h	323;"	d
GL_OES_single_precision	opengl/include/GLES/glext.h	844;"	d
GL_OES_standard_derivatives	opengl/include/GLES2/gl2ext.h	330;"	d
GL_OES_stencil1	opengl/include/GLES/glext.h	863;"	d
GL_OES_stencil1	opengl/include/GLES2/gl2ext.h	335;"	d
GL_OES_stencil4	opengl/include/GLES/glext.h	868;"	d
GL_OES_stencil4	opengl/include/GLES2/gl2ext.h	340;"	d
GL_OES_stencil8	opengl/include/GLES/glext.h	873;"	d
GL_OES_stencil_wrap	opengl/include/GLES/glext.h	878;"	d
GL_OES_surfaceless_context	opengl/include/GLES2/gl2ext.h	345;"	d
GL_OES_texture_3D	opengl/include/GLES2/gl2ext.h	350;"	d
GL_OES_texture_compression_astc	opengl/include/GLES2/gl2ext.h	374;"	d
GL_OES_texture_cube_map	opengl/include/GLES/glext.h	883;"	d
GL_OES_texture_env_crossbar	opengl/include/GLES/glext.h	908;"	d
GL_OES_texture_float	opengl/include/GLES2/gl2ext.h	398;"	d
GL_OES_texture_float_linear	opengl/include/GLES2/gl2ext.h	402;"	d
GL_OES_texture_half_float	opengl/include/GLES2/gl2ext.h	406;"	d
GL_OES_texture_half_float_linear	opengl/include/GLES2/gl2ext.h	411;"	d
GL_OES_texture_mirrored_repeat	opengl/include/GLES/glext.h	913;"	d
GL_OES_texture_npot	opengl/include/GLES2/gl2ext.h	415;"	d
GL_OES_texture_stencil8	opengl/include/GLES2/gl2ext.h	419;"	d
GL_OES_texture_storage_multisample_2d_array	opengl/include/GLES2/gl2ext.h	425;"	d
GL_OES_vertex_array_object	opengl/include/GLES/glext.h	918;"	d
GL_OES_vertex_array_object	opengl/include/GLES2/gl2ext.h	438;"	d
GL_OES_vertex_half_float	opengl/include/GLES2/gl2ext.h	453;"	d
GL_OES_vertex_type_10_10_10_2	opengl/include/GLES2/gl2ext.h	457;"	d
GL_OFFSET	opengl/include/GLES3/gl31.h	977;"	d
GL_ONE	opengl/include/GLES/gl.h	76;"	d
GL_ONE	opengl/include/GLES2/gl2.h	89;"	d
GL_ONE	opengl/include/GLES3/gl3.h	89;"	d
GL_ONE	opengl/include/GLES3/gl31.h	89;"	d
GL_ONE	opengl/tests/angeles/include/GLES/gl.h	111;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	opengl/include/GLES2/gl2.h	112;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	opengl/include/GLES3/gl3.h	112;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	opengl/include/GLES3/gl31.h	112;"	d
GL_ONE_MINUS_CONSTANT_COLOR	opengl/include/GLES2/gl2.h	110;"	d
GL_ONE_MINUS_CONSTANT_COLOR	opengl/include/GLES3/gl3.h	110;"	d
GL_ONE_MINUS_CONSTANT_COLOR	opengl/include/GLES3/gl31.h	110;"	d
GL_ONE_MINUS_DST_ALPHA	opengl/include/GLES/gl.h	82;"	d
GL_ONE_MINUS_DST_ALPHA	opengl/include/GLES2/gl2.h	95;"	d
GL_ONE_MINUS_DST_ALPHA	opengl/include/GLES3/gl3.h	95;"	d
GL_ONE_MINUS_DST_ALPHA	opengl/include/GLES3/gl31.h	95;"	d
GL_ONE_MINUS_DST_ALPHA	opengl/tests/angeles/include/GLES/gl.h	117;"	d
GL_ONE_MINUS_DST_COLOR	opengl/include/GLES/gl.h	88;"	d
GL_ONE_MINUS_DST_COLOR	opengl/include/GLES2/gl2.h	97;"	d
GL_ONE_MINUS_DST_COLOR	opengl/include/GLES3/gl3.h	97;"	d
GL_ONE_MINUS_DST_COLOR	opengl/include/GLES3/gl31.h	97;"	d
GL_ONE_MINUS_DST_COLOR	opengl/tests/angeles/include/GLES/gl.h	123;"	d
GL_ONE_MINUS_SRC_ALPHA	opengl/include/GLES/gl.h	80;"	d
GL_ONE_MINUS_SRC_ALPHA	opengl/include/GLES2/gl2.h	93;"	d
GL_ONE_MINUS_SRC_ALPHA	opengl/include/GLES3/gl3.h	93;"	d
GL_ONE_MINUS_SRC_ALPHA	opengl/include/GLES3/gl31.h	93;"	d
GL_ONE_MINUS_SRC_ALPHA	opengl/tests/angeles/include/GLES/gl.h	115;"	d
GL_ONE_MINUS_SRC_COLOR	opengl/include/GLES/gl.h	78;"	d
GL_ONE_MINUS_SRC_COLOR	opengl/include/GLES2/gl2.h	91;"	d
GL_ONE_MINUS_SRC_COLOR	opengl/include/GLES3/gl3.h	91;"	d
GL_ONE_MINUS_SRC_COLOR	opengl/include/GLES3/gl31.h	91;"	d
GL_ONE_MINUS_SRC_COLOR	opengl/tests/angeles/include/GLES/gl.h	113;"	d
GL_OPERAND0_ALPHA	opengl/include/GLES/gl.h	535;"	d
GL_OPERAND0_RGB	opengl/include/GLES/gl.h	532;"	d
GL_OPERAND1_ALPHA	opengl/include/GLES/gl.h	536;"	d
GL_OPERAND1_RGB	opengl/include/GLES/gl.h	533;"	d
GL_OPERAND2_ALPHA	opengl/include/GLES/gl.h	537;"	d
GL_OPERAND2_RGB	opengl/include/GLES/gl.h	534;"	d
GL_OR	opengl/include/GLES/gl.h	329;"	d
GL_OR	opengl/tests/angeles/include/GLES/gl.h	286;"	d
GL_OR_INVERTED	opengl/include/GLES/gl.h	335;"	d
GL_OR_INVERTED	opengl/tests/angeles/include/GLES/gl.h	292;"	d
GL_OR_REVERSE	opengl/include/GLES/gl.h	333;"	d
GL_OR_REVERSE	opengl/tests/angeles/include/GLES/gl.h	290;"	d
GL_OUT_OF_MEMORY	opengl/include/GLES/gl.h	171;"	d
GL_OUT_OF_MEMORY	opengl/include/GLES2/gl2.h	141;"	d
GL_OUT_OF_MEMORY	opengl/include/GLES3/gl3.h	141;"	d
GL_OUT_OF_MEMORY	opengl/include/GLES3/gl31.h	141;"	d
GL_OUT_OF_MEMORY	opengl/tests/angeles/include/GLES/gl.h	198;"	d
GL_OVERLAY_KHR	opengl/include/GLES2/gl2ext.h	60;"	d
GL_OVERLAY_NV	opengl/include/GLES2/gl2ext.h	1521;"	d
GL_PACK_ALIGNMENT	opengl/include/GLES/gl.h	236;"	d
GL_PACK_ALIGNMENT	opengl/include/GLES/gl.h	370;"	d
GL_PACK_ALIGNMENT	opengl/include/GLES2/gl2.h	173;"	d
GL_PACK_ALIGNMENT	opengl/include/GLES3/gl3.h	173;"	d
GL_PACK_ALIGNMENT	opengl/include/GLES3/gl31.h	173;"	d
GL_PACK_ALIGNMENT	opengl/tests/angeles/include/GLES/gl.h	327;"	d
GL_PACK_REVERSE_ROW_ORDER_ANGLE	opengl/include/GLES2/gl2ext.h	557;"	d
GL_PACK_ROW_LENGTH	opengl/include/GLES3/gl3.h	528;"	d
GL_PACK_ROW_LENGTH	opengl/include/GLES3/gl31.h	528;"	d
GL_PACK_SKIP_PIXELS	opengl/include/GLES3/gl3.h	530;"	d
GL_PACK_SKIP_PIXELS	opengl/include/GLES3/gl31.h	530;"	d
GL_PACK_SKIP_ROWS	opengl/include/GLES3/gl3.h	529;"	d
GL_PACK_SKIP_ROWS	opengl/include/GLES3/gl31.h	529;"	d
GL_PALETTE4_R5_G6_B5_OES	opengl/include/GLES/gl.h	565;"	d
GL_PALETTE4_R5_G6_B5_OES	opengl/include/GLES2/gl2ext.h	212;"	d
GL_PALETTE4_R5_G6_B5_OES	opengl/tests/angeles/include/GLES/gl.h	445;"	d
GL_PALETTE4_RGB5_A1_OES	opengl/include/GLES/gl.h	567;"	d
GL_PALETTE4_RGB5_A1_OES	opengl/include/GLES2/gl2ext.h	214;"	d
GL_PALETTE4_RGB5_A1_OES	opengl/tests/angeles/include/GLES/gl.h	447;"	d
GL_PALETTE4_RGB8_OES	opengl/include/GLES/gl.h	563;"	d
GL_PALETTE4_RGB8_OES	opengl/include/GLES2/gl2ext.h	210;"	d
GL_PALETTE4_RGB8_OES	opengl/tests/angeles/include/GLES/gl.h	443;"	d
GL_PALETTE4_RGBA4_OES	opengl/include/GLES/gl.h	566;"	d
GL_PALETTE4_RGBA4_OES	opengl/include/GLES2/gl2ext.h	213;"	d
GL_PALETTE4_RGBA4_OES	opengl/tests/angeles/include/GLES/gl.h	446;"	d
GL_PALETTE4_RGBA8_OES	opengl/include/GLES/gl.h	564;"	d
GL_PALETTE4_RGBA8_OES	opengl/include/GLES2/gl2ext.h	211;"	d
GL_PALETTE4_RGBA8_OES	opengl/tests/angeles/include/GLES/gl.h	444;"	d
GL_PALETTE8_R5_G6_B5_OES	opengl/include/GLES/gl.h	570;"	d
GL_PALETTE8_R5_G6_B5_OES	opengl/include/GLES2/gl2ext.h	217;"	d
GL_PALETTE8_R5_G6_B5_OES	opengl/tests/angeles/include/GLES/gl.h	450;"	d
GL_PALETTE8_RGB5_A1_OES	opengl/include/GLES/gl.h	572;"	d
GL_PALETTE8_RGB5_A1_OES	opengl/include/GLES2/gl2ext.h	219;"	d
GL_PALETTE8_RGB5_A1_OES	opengl/tests/angeles/include/GLES/gl.h	452;"	d
GL_PALETTE8_RGB8_OES	opengl/include/GLES/gl.h	568;"	d
GL_PALETTE8_RGB8_OES	opengl/include/GLES2/gl2ext.h	215;"	d
GL_PALETTE8_RGB8_OES	opengl/tests/angeles/include/GLES/gl.h	448;"	d
GL_PALETTE8_RGBA4_OES	opengl/include/GLES/gl.h	571;"	d
GL_PALETTE8_RGBA4_OES	opengl/include/GLES2/gl2ext.h	218;"	d
GL_PALETTE8_RGBA4_OES	opengl/tests/angeles/include/GLES/gl.h	451;"	d
GL_PALETTE8_RGBA8_OES	opengl/include/GLES/gl.h	569;"	d
GL_PALETTE8_RGBA8_OES	opengl/include/GLES2/gl2ext.h	216;"	d
GL_PALETTE8_RGBA8_OES	opengl/tests/angeles/include/GLES/gl.h	449;"	d
GL_PATCHES_EXT	opengl/include/GLES2/gl2ext.h	1188;"	d
GL_PATCH_VERTICES_EXT	opengl/include/GLES2/gl2ext.h	1189;"	d
GL_PERCENTAGE_AMD	opengl/include/GLES2/gl2ext.h	480;"	d
GL_PERFMON_GLOBAL_MODE_QCOM	opengl/include/GLES/glext.h	509;"	d
GL_PERFMON_GLOBAL_MODE_QCOM	opengl/include/GLES2/gl2ext.h	1873;"	d
GL_PERFMON_RESULT_AMD	opengl/include/GLES2/gl2ext.h	483;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	opengl/include/GLES2/gl2ext.h	481;"	d
GL_PERFMON_RESULT_SIZE_AMD	opengl/include/GLES2/gl2ext.h	482;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	opengl/include/GLES2/gl2ext.h	1458;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	opengl/include/GLES2/gl2ext.h	1457;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	opengl/include/GLES2/gl2ext.h	1456;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	opengl/include/GLES2/gl2ext.h	1454;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	opengl/include/GLES2/gl2ext.h	1455;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	opengl/include/GLES2/gl2ext.h	1461;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	opengl/include/GLES2/gl2ext.h	1449;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	opengl/include/GLES2/gl2ext.h	1450;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	opengl/include/GLES2/gl2ext.h	1448;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	opengl/include/GLES2/gl2ext.h	1460;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	opengl/include/GLES2/gl2ext.h	1452;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	opengl/include/GLES2/gl2ext.h	1451;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	opengl/include/GLES2/gl2ext.h	1453;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	opengl/include/GLES2/gl2ext.h	1447;"	d
GL_PERFQUERY_FLUSH_INTEL	opengl/include/GLES2/gl2ext.h	1446;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	opengl/include/GLES2/gl2ext.h	1444;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	opengl/include/GLES2/gl2ext.h	1462;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	opengl/include/GLES2/gl2ext.h	1459;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	opengl/include/GLES2/gl2ext.h	1443;"	d
GL_PERFQUERY_WAIT_INTEL	opengl/include/GLES2/gl2ext.h	1445;"	d
GL_PERSPECTIVE_CORRECTION_HINT	opengl/include/GLES/gl.h	291;"	d
GL_PERSPECTIVE_CORRECTION_HINT	opengl/tests/angeles/include/GLES/gl.h	248;"	d
GL_PINLIGHT_NV	opengl/include/GLES2/gl2ext.h	1522;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	opengl/include/GLES3/gl31.h	1028;"	d
GL_PIXEL_PACK_BUFFER	opengl/include/GLES3/gl3.h	590;"	d
GL_PIXEL_PACK_BUFFER	opengl/include/GLES3/gl31.h	590;"	d
GL_PIXEL_PACK_BUFFER_BINDING	opengl/include/GLES3/gl3.h	592;"	d
GL_PIXEL_PACK_BUFFER_BINDING	opengl/include/GLES3/gl31.h	592;"	d
GL_PIXEL_UNPACK_BUFFER	opengl/include/GLES3/gl3.h	591;"	d
GL_PIXEL_UNPACK_BUFFER	opengl/include/GLES3/gl31.h	591;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	opengl/include/GLES3/gl3.h	593;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	opengl/include/GLES3/gl31.h	593;"	d
GL_PLUS_CLAMPED_ALPHA_NV	opengl/include/GLES2/gl2ext.h	1523;"	d
GL_PLUS_CLAMPED_NV	opengl/include/GLES2/gl2ext.h	1524;"	d
GL_PLUS_DARKER_NV	opengl/include/GLES2/gl2ext.h	1525;"	d
GL_PLUS_NV	opengl/include/GLES2/gl2ext.h	1526;"	d
GL_POINTS	opengl/include/GLES/gl.h	56;"	d
GL_POINTS	opengl/include/GLES2/gl2.h	81;"	d
GL_POINTS	opengl/include/GLES3/gl3.h	81;"	d
GL_POINTS	opengl/include/GLES3/gl31.h	81;"	d
GL_POINTS	opengl/tests/angeles/include/GLES/gl.h	91;"	d
GL_POINT_DISTANCE_ATTENUATION	opengl/include/GLES/gl.h	197;"	d
GL_POINT_FADE_THRESHOLD_SIZE	opengl/include/GLES/gl.h	196;"	d
GL_POINT_SIZE	opengl/include/GLES/gl.h	193;"	d
GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES	opengl/include/GLES/gl.h	581;"	d
GL_POINT_SIZE_ARRAY_OES	opengl/include/GLES/gl.h	577;"	d
GL_POINT_SIZE_ARRAY_POINTER_OES	opengl/include/GLES/gl.h	580;"	d
GL_POINT_SIZE_ARRAY_STRIDE_OES	opengl/include/GLES/gl.h	579;"	d
GL_POINT_SIZE_ARRAY_TYPE_OES	opengl/include/GLES/gl.h	578;"	d
GL_POINT_SIZE_MAX	opengl/include/GLES/gl.h	195;"	d
GL_POINT_SIZE_MIN	opengl/include/GLES/gl.h	194;"	d
GL_POINT_SMOOTH	opengl/include/GLES/gl.h	148;"	d
GL_POINT_SMOOTH	opengl/tests/angeles/include/GLES/gl.h	175;"	d
GL_POINT_SMOOTH_HINT	opengl/include/GLES/gl.h	292;"	d
GL_POINT_SMOOTH_HINT	opengl/tests/angeles/include/GLES/gl.h	249;"	d
GL_POINT_SPRITE_OES	opengl/include/GLES/gl.h	586;"	d
GL_POLYGON_OFFSET_FACTOR	opengl/include/GLES/gl.h	254;"	d
GL_POLYGON_OFFSET_FACTOR	opengl/include/GLES2/gl2.h	184;"	d
GL_POLYGON_OFFSET_FACTOR	opengl/include/GLES3/gl3.h	184;"	d
GL_POLYGON_OFFSET_FACTOR	opengl/include/GLES3/gl31.h	184;"	d
GL_POLYGON_OFFSET_FILL	opengl/include/GLES/gl.h	154;"	d
GL_POLYGON_OFFSET_FILL	opengl/include/GLES/gl.h	253;"	d
GL_POLYGON_OFFSET_FILL	opengl/include/GLES2/gl2.h	134;"	d
GL_POLYGON_OFFSET_FILL	opengl/include/GLES3/gl3.h	134;"	d
GL_POLYGON_OFFSET_FILL	opengl/include/GLES3/gl31.h	134;"	d
GL_POLYGON_OFFSET_FILL	opengl/tests/angeles/include/GLES/gl.h	181;"	d
GL_POLYGON_OFFSET_UNITS	opengl/include/GLES/gl.h	252;"	d
GL_POLYGON_OFFSET_UNITS	opengl/include/GLES2/gl2.h	183;"	d
GL_POLYGON_OFFSET_UNITS	opengl/include/GLES3/gl3.h	183;"	d
GL_POLYGON_OFFSET_UNITS	opengl/include/GLES3/gl31.h	183;"	d
GL_POLYGON_SMOOTH_HINT	opengl/tests/angeles/include/GLES/gl.h	251;"	d
GL_POSITION	opengl/include/GLES/gl.h	305;"	d
GL_POSITION	opengl/tests/angeles/include/GLES/gl.h	262;"	d
GL_PRESERVE	services/surfaceflinger/SurfaceFlinger.h	/^       GL_PRESERVE      = 1$/;"	e	enum:android::SurfaceFlinger::__anon22
GL_PRESERVE_NONE	services/surfaceflinger/SurfaceFlinger.h	/^       GL_PRESERVE_NONE = 0,$/;"	e	enum:android::SurfaceFlinger::__anon22
GL_PREVIOUS	opengl/include/GLES/gl.h	531;"	d
GL_PRIMARY_COLOR	opengl/include/GLES/gl.h	530;"	d
GL_PRIMITIVES_GENERATED_EXT	opengl/include/GLES2/gl2ext.h	903;"	d
GL_PRIMITIVE_BOUNDING_BOX_EXT	opengl/include/GLES2/gl2ext.h	993;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	opengl/include/GLES3/gl3.h	743;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	opengl/include/GLES3/gl31.h	743;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	opengl/include/GLES2/gl2ext.h	1223;"	d
GL_PROGRAM_BINARY_ANGLE	opengl/include/GLES2/gl2ext.h	562;"	d
GL_PROGRAM_BINARY_FORMATS	opengl/include/GLES3/gl3.h	814;"	d
GL_PROGRAM_BINARY_FORMATS	opengl/include/GLES3/gl31.h	814;"	d
GL_PROGRAM_BINARY_FORMATS_OES	opengl/include/GLES2/gl2ext.h	252;"	d
GL_PROGRAM_BINARY_LENGTH	opengl/include/GLES3/gl3.h	812;"	d
GL_PROGRAM_BINARY_LENGTH	opengl/include/GLES3/gl31.h	812;"	d
GL_PROGRAM_BINARY_LENGTH_OES	opengl/include/GLES2/gl2ext.h	250;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	opengl/include/GLES3/gl3.h	811;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	opengl/include/GLES3/gl31.h	811;"	d
GL_PROGRAM_INPUT	opengl/include/GLES3/gl31.h	965;"	d
GL_PROGRAM_KHR	opengl/include/GLES2/gl2ext.h	107;"	d
GL_PROGRAM_OBJECT_EXT	opengl/include/GLES2/gl2ext.h	726;"	d
GL_PROGRAM_OUTPUT	opengl/include/GLES3/gl31.h	966;"	d
GL_PROGRAM_PIPELINE_BINDING	opengl/include/GLES3/gl31.h	998;"	d
GL_PROGRAM_PIPELINE_BINDING_EXT	opengl/include/GLES2/gl2ext.h	1057;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	opengl/include/GLES2/gl2ext.h	725;"	d
GL_PROGRAM_SEPARABLE	opengl/include/GLES3/gl31.h	996;"	d
GL_PROGRAM_SEPARABLE_EXT	opengl/include/GLES2/gl2ext.h	1056;"	d
GL_PROJECTION	opengl/include/GLES/gl.h	352;"	d
GL_PROJECTION	opengl/tests/angeles/include/GLES/gl.h	309;"	d
GL_PROJECTION_MATRIX	opengl/include/GLES/gl.h	224;"	d
GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES	opengl/include/GLES/glext.h	137;"	d
GL_PROJECTION_STACK_DEPTH	opengl/include/GLES/gl.h	221;"	d
GL_QCOM_alpha_test	opengl/include/GLES2/gl2ext.h	1792;"	d
GL_QCOM_binning_control	opengl/include/GLES2/gl2ext.h	1803;"	d
GL_QCOM_driver_control	opengl/include/GLES/glext.h	1201;"	d
GL_QCOM_driver_control	opengl/include/GLES2/gl2ext.h	1811;"	d
GL_QCOM_extended_get	opengl/include/GLES/glext.h	1216;"	d
GL_QCOM_extended_get	opengl/include/GLES2/gl2ext.h	1825;"	d
GL_QCOM_extended_get2	opengl/include/GLES/glext.h	1239;"	d
GL_QCOM_extended_get2	opengl/include/GLES2/gl2ext.h	1858;"	d
GL_QCOM_perfmon_global_mode	opengl/include/GLES/glext.h	1254;"	d
GL_QCOM_perfmon_global_mode	opengl/include/GLES2/gl2ext.h	1872;"	d
GL_QCOM_tiled_rendering	opengl/include/GLES/glext.h	1264;"	d
GL_QCOM_tiled_rendering	opengl/include/GLES2/gl2ext.h	1877;"	d
GL_QCOM_writeonly_rendering	opengl/include/GLES/glext.h	1259;"	d
GL_QCOM_writeonly_rendering	opengl/include/GLES2/gl2ext.h	1919;"	d
GL_QUADRATIC_ATTENUATION	opengl/include/GLES/gl.h	311;"	d
GL_QUADRATIC_ATTENUATION	opengl/tests/angeles/include/GLES/gl.h	268;"	d
GL_QUADS_EXT	opengl/include/GLES2/gl2ext.h	1196;"	d
GL_QUERY_COUNTER_BITS_EXT	opengl/include/GLES2/gl2ext.h	765;"	d
GL_QUERY_KHR	opengl/include/GLES2/gl2ext.h	109;"	d
GL_QUERY_OBJECT_EXT	opengl/include/GLES2/gl2ext.h	729;"	d
GL_QUERY_RESULT	opengl/include/GLES3/gl3.h	558;"	d
GL_QUERY_RESULT	opengl/include/GLES3/gl31.h	558;"	d
GL_QUERY_RESULT_AVAILABLE	opengl/include/GLES3/gl3.h	559;"	d
GL_QUERY_RESULT_AVAILABLE	opengl/include/GLES3/gl31.h	559;"	d
GL_QUERY_RESULT_AVAILABLE_EXT	opengl/include/GLES2/gl2ext.h	768;"	d
GL_QUERY_RESULT_EXT	opengl/include/GLES2/gl2ext.h	767;"	d
GL_R11F_G11F_B10F	opengl/include/GLES3/gl3.h	618;"	d
GL_R11F_G11F_B10F	opengl/include/GLES3/gl31.h	618;"	d
GL_R16F	opengl/include/GLES3/gl3.h	721;"	d
GL_R16F	opengl/include/GLES3/gl31.h	721;"	d
GL_R16F_EXT	opengl/include/GLES2/gl2ext.h	710;"	d
GL_R16I	opengl/include/GLES3/gl3.h	727;"	d
GL_R16I	opengl/include/GLES3/gl31.h	727;"	d
GL_R16UI	opengl/include/GLES3/gl3.h	728;"	d
GL_R16UI	opengl/include/GLES3/gl31.h	728;"	d
GL_R32F	opengl/include/GLES3/gl3.h	722;"	d
GL_R32F	opengl/include/GLES3/gl31.h	722;"	d
GL_R32F_EXT	opengl/include/GLES2/gl2ext.h	1349;"	d
GL_R32I	opengl/include/GLES3/gl3.h	729;"	d
GL_R32I	opengl/include/GLES3/gl31.h	729;"	d
GL_R32UI	opengl/include/GLES3/gl3.h	730;"	d
GL_R32UI	opengl/include/GLES3/gl31.h	730;"	d
GL_R8	opengl/include/GLES3/gl3.h	719;"	d
GL_R8	opengl/include/GLES3/gl31.h	719;"	d
GL_R8I	opengl/include/GLES3/gl3.h	725;"	d
GL_R8I	opengl/include/GLES3/gl31.h	725;"	d
GL_R8UI	opengl/include/GLES3/gl3.h	726;"	d
GL_R8UI	opengl/include/GLES3/gl31.h	726;"	d
GL_R8_EXT	opengl/include/GLES2/gl2ext.h	1324;"	d
GL_R8_SNORM	opengl/include/GLES3/gl3.h	738;"	d
GL_R8_SNORM	opengl/include/GLES3/gl31.h	738;"	d
GL_RASTERIZER_DISCARD	opengl/include/GLES3/gl3.h	629;"	d
GL_RASTERIZER_DISCARD	opengl/include/GLES3/gl31.h	629;"	d
GL_READ_BUFFER	opengl/include/GLES3/gl3.h	524;"	d
GL_READ_BUFFER	opengl/include/GLES3/gl31.h	524;"	d
GL_READ_BUFFER_EXT	opengl/include/GLES2/gl2ext.h	973;"	d
GL_READ_BUFFER_NV	opengl/include/GLES2/gl2ext.h	1730;"	d
GL_READ_FRAMEBUFFER	opengl/include/GLES3/gl3.h	687;"	d
GL_READ_FRAMEBUFFER	opengl/include/GLES3/gl31.h	687;"	d
GL_READ_FRAMEBUFFER_ANGLE	opengl/include/GLES2/gl2ext.h	521;"	d
GL_READ_FRAMEBUFFER_APPLE	opengl/include/GLES/glext.h	254;"	d
GL_READ_FRAMEBUFFER_APPLE	opengl/include/GLES2/gl2ext.h	603;"	d
GL_READ_FRAMEBUFFER_BINDING	opengl/include/GLES3/gl3.h	689;"	d
GL_READ_FRAMEBUFFER_BINDING	opengl/include/GLES3/gl31.h	689;"	d
GL_READ_FRAMEBUFFER_BINDING_ANGLE	opengl/include/GLES2/gl2ext.h	524;"	d
GL_READ_FRAMEBUFFER_BINDING_APPLE	opengl/include/GLES/glext.h	257;"	d
GL_READ_FRAMEBUFFER_BINDING_APPLE	opengl/include/GLES2/gl2ext.h	606;"	d
GL_READ_FRAMEBUFFER_BINDING_NV	opengl/include/GLES2/gl2ext.h	1673;"	d
GL_READ_FRAMEBUFFER_NV	opengl/include/GLES2/gl2ext.h	1670;"	d
GL_READ_ONLY	opengl/include/GLES3/gl31.h	1050;"	d
GL_READ_WRITE	opengl/include/GLES3/gl31.h	1052;"	d
GL_RECIP_ADD_SIGNED_ALPHA_IMG	opengl/include/GLES/glext.h	444;"	d
GL_RED	opengl/include/GLES3/gl3.h	534;"	d
GL_RED	opengl/include/GLES3/gl31.h	534;"	d
GL_RED_BITS	opengl/include/GLES/gl.h	246;"	d
GL_RED_BITS	opengl/include/GLES2/gl2.h	177;"	d
GL_RED_BITS	opengl/include/GLES3/gl3.h	177;"	d
GL_RED_BITS	opengl/include/GLES3/gl31.h	177;"	d
GL_RED_BITS	opengl/tests/angeles/include/GLES/gl.h	235;"	d
GL_RED_EXT	opengl/include/GLES2/gl2ext.h	1322;"	d
GL_RED_INTEGER	opengl/include/GLES3/gl3.h	648;"	d
GL_RED_INTEGER	opengl/include/GLES3/gl31.h	648;"	d
GL_RED_NV	opengl/include/GLES2/gl2ext.h	1527;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	opengl/include/GLES3/gl31.h	989;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	opengl/include/GLES3/gl31.h	988;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER_EXT	opengl/include/GLES2/gl2ext.h	908;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT	opengl/include/GLES2/gl2ext.h	1225;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT	opengl/include/GLES2/gl2ext.h	1226;"	d
GL_REFERENCED_BY_VERTEX_SHADER	opengl/include/GLES3/gl31.h	987;"	d
GL_REFLECTION_MAP_OES	opengl/include/GLES/glext.h	201;"	d
GL_RENDERBUFFER	opengl/include/GLES2/gl2.h	345;"	d
GL_RENDERBUFFER	opengl/include/GLES3/gl3.h	345;"	d
GL_RENDERBUFFER	opengl/include/GLES3/gl31.h	345;"	d
GL_RENDERBUFFER_ALPHA_SIZE	opengl/include/GLES2/gl2.h	357;"	d
GL_RENDERBUFFER_ALPHA_SIZE	opengl/include/GLES3/gl3.h	357;"	d
GL_RENDERBUFFER_ALPHA_SIZE	opengl/include/GLES3/gl31.h	357;"	d
GL_RENDERBUFFER_ALPHA_SIZE_OES	opengl/include/GLES/glext.h	104;"	d
GL_RENDERBUFFER_BINDING	opengl/include/GLES2/gl2.h	374;"	d
GL_RENDERBUFFER_BINDING	opengl/include/GLES3/gl3.h	374;"	d
GL_RENDERBUFFER_BINDING	opengl/include/GLES3/gl31.h	374;"	d
GL_RENDERBUFFER_BINDING_OES	opengl/include/GLES/glext.h	121;"	d
GL_RENDERBUFFER_BLUE_SIZE	opengl/include/GLES2/gl2.h	356;"	d
GL_RENDERBUFFER_BLUE_SIZE	opengl/include/GLES3/gl3.h	356;"	d
GL_RENDERBUFFER_BLUE_SIZE	opengl/include/GLES3/gl31.h	356;"	d
GL_RENDERBUFFER_BLUE_SIZE_OES	opengl/include/GLES/glext.h	103;"	d
GL_RENDERBUFFER_DEPTH_SIZE	opengl/include/GLES2/gl2.h	358;"	d
GL_RENDERBUFFER_DEPTH_SIZE	opengl/include/GLES3/gl3.h	358;"	d
GL_RENDERBUFFER_DEPTH_SIZE	opengl/include/GLES3/gl31.h	358;"	d
GL_RENDERBUFFER_DEPTH_SIZE_OES	opengl/include/GLES/glext.h	105;"	d
GL_RENDERBUFFER_GREEN_SIZE	opengl/include/GLES2/gl2.h	355;"	d
GL_RENDERBUFFER_GREEN_SIZE	opengl/include/GLES3/gl3.h	355;"	d
GL_RENDERBUFFER_GREEN_SIZE	opengl/include/GLES3/gl31.h	355;"	d
GL_RENDERBUFFER_GREEN_SIZE_OES	opengl/include/GLES/glext.h	102;"	d
GL_RENDERBUFFER_HEIGHT	opengl/include/GLES2/gl2.h	352;"	d
GL_RENDERBUFFER_HEIGHT	opengl/include/GLES3/gl3.h	352;"	d
GL_RENDERBUFFER_HEIGHT	opengl/include/GLES3/gl31.h	352;"	d
GL_RENDERBUFFER_HEIGHT_OES	opengl/include/GLES/glext.h	99;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	opengl/include/GLES2/gl2.h	353;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	opengl/include/GLES3/gl3.h	353;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	opengl/include/GLES3/gl31.h	353;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_OES	opengl/include/GLES/glext.h	100;"	d
GL_RENDERBUFFER_OES	opengl/include/GLES/glext.h	93;"	d
GL_RENDERBUFFER_RED_SIZE	opengl/include/GLES2/gl2.h	354;"	d
GL_RENDERBUFFER_RED_SIZE	opengl/include/GLES3/gl3.h	354;"	d
GL_RENDERBUFFER_RED_SIZE	opengl/include/GLES3/gl31.h	354;"	d
GL_RENDERBUFFER_RED_SIZE_OES	opengl/include/GLES/glext.h	101;"	d
GL_RENDERBUFFER_SAMPLES	opengl/include/GLES3/gl3.h	690;"	d
GL_RENDERBUFFER_SAMPLES	opengl/include/GLES3/gl31.h	690;"	d
GL_RENDERBUFFER_SAMPLES_ANGLE	opengl/include/GLES2/gl2ext.h	533;"	d
GL_RENDERBUFFER_SAMPLES_APPLE	opengl/include/GLES/glext.h	251;"	d
GL_RENDERBUFFER_SAMPLES_APPLE	opengl/include/GLES2/gl2ext.h	600;"	d
GL_RENDERBUFFER_SAMPLES_EXT	opengl/include/GLES/glext.h	343;"	d
GL_RENDERBUFFER_SAMPLES_EXT	opengl/include/GLES2/gl2ext.h	957;"	d
GL_RENDERBUFFER_SAMPLES_IMG	opengl/include/GLES/glext.h	465;"	d
GL_RENDERBUFFER_SAMPLES_IMG	opengl/include/GLES2/gl2ext.h	1399;"	d
GL_RENDERBUFFER_SAMPLES_NV	opengl/include/GLES2/gl2ext.h	1682;"	d
GL_RENDERBUFFER_STENCIL_SIZE	opengl/include/GLES2/gl2.h	359;"	d
GL_RENDERBUFFER_STENCIL_SIZE	opengl/include/GLES3/gl3.h	359;"	d
GL_RENDERBUFFER_STENCIL_SIZE	opengl/include/GLES3/gl31.h	359;"	d
GL_RENDERBUFFER_STENCIL_SIZE_OES	opengl/include/GLES/glext.h	106;"	d
GL_RENDERBUFFER_WIDTH	opengl/include/GLES2/gl2.h	351;"	d
GL_RENDERBUFFER_WIDTH	opengl/include/GLES3/gl3.h	351;"	d
GL_RENDERBUFFER_WIDTH	opengl/include/GLES3/gl31.h	351;"	d
GL_RENDERBUFFER_WIDTH_OES	opengl/include/GLES/glext.h	98;"	d
GL_RENDERER	opengl/include/GLES/gl.h	402;"	d
GL_RENDERER	opengl/include/GLES2/gl2.h	249;"	d
GL_RENDERER	opengl/include/GLES3/gl3.h	249;"	d
GL_RENDERER	opengl/include/GLES3/gl31.h	249;"	d
GL_RENDERER	opengl/tests/angeles/include/GLES/gl.h	359;"	d
GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM	opengl/include/GLES2/gl2ext.h	1807;"	d
GL_REPEAT	opengl/include/GLES/gl.h	485;"	d
GL_REPEAT	opengl/include/GLES2/gl2.h	305;"	d
GL_REPEAT	opengl/include/GLES3/gl3.h	305;"	d
GL_REPEAT	opengl/include/GLES3/gl31.h	305;"	d
GL_REPEAT	opengl/tests/angeles/include/GLES/gl.h	439;"	d
GL_REPLACE	opengl/include/GLES/gl.h	395;"	d
GL_REPLACE	opengl/include/GLES2/gl2.h	242;"	d
GL_REPLACE	opengl/include/GLES3/gl3.h	242;"	d
GL_REPLACE	opengl/include/GLES3/gl31.h	242;"	d
GL_REPLACE	opengl/tests/angeles/include/GLES/gl.h	352;"	d
GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES	opengl/include/GLES/glext.h	76;"	d
GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES	opengl/include/GLES2/gl2ext.h	199;"	d
GL_RESCALE_NORMAL	opengl/include/GLES/gl.h	153;"	d
GL_RESCALE_NORMAL	opengl/tests/angeles/include/GLES/gl.h	180;"	d
GL_RESET_NOTIFICATION_STRATEGY_EXT	opengl/include/GLES/glext.h	365;"	d
GL_RESET_NOTIFICATION_STRATEGY_EXT	opengl/include/GLES2/gl2ext.h	1022;"	d
GL_RG	opengl/include/GLES3/gl3.h	717;"	d
GL_RG	opengl/include/GLES3/gl31.h	717;"	d
GL_RG16F	opengl/include/GLES3/gl3.h	723;"	d
GL_RG16F	opengl/include/GLES3/gl31.h	723;"	d
GL_RG16F_EXT	opengl/include/GLES2/gl2ext.h	709;"	d
GL_RG16I	opengl/include/GLES3/gl3.h	733;"	d
GL_RG16I	opengl/include/GLES3/gl31.h	733;"	d
GL_RG16UI	opengl/include/GLES3/gl3.h	734;"	d
GL_RG16UI	opengl/include/GLES3/gl31.h	734;"	d
GL_RG32F	opengl/include/GLES3/gl3.h	724;"	d
GL_RG32F	opengl/include/GLES3/gl31.h	724;"	d
GL_RG32F_EXT	opengl/include/GLES2/gl2ext.h	1350;"	d
GL_RG32I	opengl/include/GLES3/gl3.h	735;"	d
GL_RG32I	opengl/include/GLES3/gl31.h	735;"	d
GL_RG32UI	opengl/include/GLES3/gl3.h	736;"	d
GL_RG32UI	opengl/include/GLES3/gl31.h	736;"	d
GL_RG8	opengl/include/GLES3/gl3.h	720;"	d
GL_RG8	opengl/include/GLES3/gl31.h	720;"	d
GL_RG8I	opengl/include/GLES3/gl3.h	731;"	d
GL_RG8I	opengl/include/GLES3/gl31.h	731;"	d
GL_RG8UI	opengl/include/GLES3/gl3.h	732;"	d
GL_RG8UI	opengl/include/GLES3/gl31.h	732;"	d
GL_RG8_EXT	opengl/include/GLES2/gl2ext.h	1325;"	d
GL_RG8_SNORM	opengl/include/GLES3/gl3.h	739;"	d
GL_RG8_SNORM	opengl/include/GLES3/gl31.h	739;"	d
GL_RGB	opengl/include/GLES/gl.h	363;"	d
GL_RGB	opengl/include/GLES2/gl2.h	206;"	d
GL_RGB	opengl/include/GLES3/gl3.h	206;"	d
GL_RGB	opengl/include/GLES3/gl31.h	206;"	d
GL_RGB	opengl/tests/angeles/include/GLES/gl.h	320;"	d
GL_RGB10_A2	opengl/include/GLES3/gl3.h	537;"	d
GL_RGB10_A2	opengl/include/GLES3/gl31.h	537;"	d
GL_RGB10_A2UI	opengl/include/GLES3/gl3.h	799;"	d
GL_RGB10_A2UI	opengl/include/GLES3/gl31.h	799;"	d
GL_RGB10_A2_EXT	opengl/include/GLES/glext.h	418;"	d
GL_RGB10_A2_EXT	opengl/include/GLES2/gl2ext.h	297;"	d
GL_RGB10_EXT	opengl/include/GLES/glext.h	419;"	d
GL_RGB10_EXT	opengl/include/GLES2/gl2ext.h	296;"	d
GL_RGB16F	opengl/include/GLES3/gl3.h	610;"	d
GL_RGB16F	opengl/include/GLES3/gl31.h	610;"	d
GL_RGB16F_EXT	opengl/include/GLES/glext.h	414;"	d
GL_RGB16F_EXT	opengl/include/GLES2/gl2ext.h	708;"	d
GL_RGB16I	opengl/include/GLES3/gl3.h	645;"	d
GL_RGB16I	opengl/include/GLES3/gl31.h	645;"	d
GL_RGB16UI	opengl/include/GLES3/gl3.h	639;"	d
GL_RGB16UI	opengl/include/GLES3/gl31.h	639;"	d
GL_RGB32F	opengl/include/GLES3/gl3.h	608;"	d
GL_RGB32F	opengl/include/GLES3/gl31.h	608;"	d
GL_RGB32F_EXT	opengl/include/GLES/glext.h	409;"	d
GL_RGB32F_EXT	opengl/include/GLES2/gl2ext.h	1342;"	d
GL_RGB32I	opengl/include/GLES3/gl3.h	643;"	d
GL_RGB32I	opengl/include/GLES3/gl31.h	643;"	d
GL_RGB32UI	opengl/include/GLES3/gl3.h	637;"	d
GL_RGB32UI	opengl/include/GLES3/gl31.h	637;"	d
GL_RGB565	opengl/include/GLES2/gl2.h	348;"	d
GL_RGB565	opengl/include/GLES3/gl3.h	348;"	d
GL_RGB565	opengl/include/GLES3/gl31.h	348;"	d
GL_RGB565_OES	opengl/include/GLES/glext.h	96;"	d
GL_RGB565_OES	opengl/include/GLES2/gl2ext.h	293;"	d
GL_RGB5_A1	opengl/include/GLES2/gl2.h	347;"	d
GL_RGB5_A1	opengl/include/GLES3/gl3.h	347;"	d
GL_RGB5_A1	opengl/include/GLES3/gl31.h	347;"	d
GL_RGB5_A1_OES	opengl/include/GLES/glext.h	95;"	d
GL_RGB5_A1_OES	opengl/include/GLES2/gl2ext.h	292;"	d
GL_RGB8	opengl/include/GLES3/gl3.h	535;"	d
GL_RGB8	opengl/include/GLES3/gl31.h	535;"	d
GL_RGB8I	opengl/include/GLES3/gl3.h	647;"	d
GL_RGB8I	opengl/include/GLES3/gl31.h	647;"	d
GL_RGB8UI	opengl/include/GLES3/gl3.h	641;"	d
GL_RGB8UI	opengl/include/GLES3/gl31.h	641;"	d
GL_RGB8_OES	opengl/include/GLES/glext.h	173;"	d
GL_RGB8_OES	opengl/include/GLES2/gl2ext.h	294;"	d
GL_RGB8_SNORM	opengl/include/GLES3/gl3.h	740;"	d
GL_RGB8_SNORM	opengl/include/GLES3/gl31.h	740;"	d
GL_RGB9_E5	opengl/include/GLES3/gl3.h	620;"	d
GL_RGB9_E5	opengl/include/GLES3/gl31.h	620;"	d
GL_RGBA	opengl/include/GLES/gl.h	364;"	d
GL_RGBA	opengl/include/GLES2/gl2.h	207;"	d
GL_RGBA	opengl/include/GLES3/gl3.h	207;"	d
GL_RGBA	opengl/include/GLES3/gl31.h	207;"	d
GL_RGBA	opengl/tests/angeles/include/GLES/gl.h	321;"	d
GL_RGBA16F	opengl/include/GLES3/gl3.h	609;"	d
GL_RGBA16F	opengl/include/GLES3/gl31.h	609;"	d
GL_RGBA16F_EXT	opengl/include/GLES2/gl2ext.h	707;"	d
GL_RGBA16I	opengl/include/GLES3/gl3.h	644;"	d
GL_RGBA16I	opengl/include/GLES3/gl31.h	644;"	d
GL_RGBA16UI	opengl/include/GLES3/gl3.h	638;"	d
GL_RGBA16UI	opengl/include/GLES3/gl31.h	638;"	d
GL_RGBA32F	opengl/include/GLES3/gl3.h	607;"	d
GL_RGBA32F	opengl/include/GLES3/gl31.h	607;"	d
GL_RGBA32F_EXT	opengl/include/GLES/glext.h	408;"	d
GL_RGBA32F_EXT	opengl/include/GLES2/gl2ext.h	1341;"	d
GL_RGBA32I	opengl/include/GLES3/gl3.h	642;"	d
GL_RGBA32I	opengl/include/GLES3/gl31.h	642;"	d
GL_RGBA32UI	opengl/include/GLES3/gl3.h	636;"	d
GL_RGBA32UI	opengl/include/GLES3/gl31.h	636;"	d
GL_RGBA4	opengl/include/GLES2/gl2.h	346;"	d
GL_RGBA4	opengl/include/GLES3/gl3.h	346;"	d
GL_RGBA4	opengl/include/GLES3/gl31.h	346;"	d
GL_RGBA4_OES	opengl/include/GLES/glext.h	94;"	d
GL_RGBA4_OES	opengl/include/GLES2/gl2ext.h	291;"	d
GL_RGBA8	opengl/include/GLES3/gl3.h	536;"	d
GL_RGBA8	opengl/include/GLES3/gl31.h	536;"	d
GL_RGBA8I	opengl/include/GLES3/gl3.h	646;"	d
GL_RGBA8I	opengl/include/GLES3/gl31.h	646;"	d
GL_RGBA8UI	opengl/include/GLES3/gl3.h	640;"	d
GL_RGBA8UI	opengl/include/GLES3/gl31.h	640;"	d
GL_RGBA8_OES	opengl/include/GLES/glext.h	174;"	d
GL_RGBA8_OES	opengl/include/GLES2/gl2ext.h	295;"	d
GL_RGBA8_SNORM	opengl/include/GLES3/gl3.h	741;"	d
GL_RGBA8_SNORM	opengl/include/GLES3/gl31.h	741;"	d
GL_RGBA_INTEGER	opengl/include/GLES3/gl3.h	650;"	d
GL_RGBA_INTEGER	opengl/include/GLES3/gl31.h	650;"	d
GL_RGB_422_APPLE	opengl/include/GLES2/gl2ext.h	617;"	d
GL_RGB_INTEGER	opengl/include/GLES3/gl3.h	649;"	d
GL_RGB_INTEGER	opengl/include/GLES3/gl31.h	649;"	d
GL_RGB_RAW_422_APPLE	opengl/include/GLES2/gl2ext.h	620;"	d
GL_RGB_SCALE	opengl/include/GLES/gl.h	526;"	d
GL_RG_EXT	opengl/include/GLES2/gl2ext.h	1323;"	d
GL_RG_INTEGER	opengl/include/GLES3/gl3.h	718;"	d
GL_RG_INTEGER	opengl/include/GLES3/gl31.h	718;"	d
GL_SAMPLER	opengl/include/GLES2/gl2ext.h	82;"	d
GL_SAMPLER_2D	opengl/include/GLES2/gl2.h	321;"	d
GL_SAMPLER_2D	opengl/include/GLES3/gl3.h	321;"	d
GL_SAMPLER_2D	opengl/include/GLES3/gl31.h	321;"	d
GL_SAMPLER_2D_ARRAY	opengl/include/GLES3/gl3.h	651;"	d
GL_SAMPLER_2D_ARRAY	opengl/include/GLES3/gl31.h	651;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	opengl/include/GLES3/gl3.h	652;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	opengl/include/GLES3/gl31.h	652;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_NV	opengl/include/GLES2/gl2ext.h	1769;"	d
GL_SAMPLER_2D_MULTISAMPLE	opengl/include/GLES3/gl31.h	1098;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES	opengl/include/GLES2/gl2ext.h	428;"	d
GL_SAMPLER_2D_SHADOW	opengl/include/GLES3/gl3.h	588;"	d
GL_SAMPLER_2D_SHADOW	opengl/include/GLES3/gl31.h	588;"	d
GL_SAMPLER_2D_SHADOW_EXT	opengl/include/GLES2/gl2ext.h	1183;"	d
GL_SAMPLER_3D	opengl/include/GLES3/gl3.h	587;"	d
GL_SAMPLER_3D	opengl/include/GLES3/gl31.h	587;"	d
GL_SAMPLER_3D_OES	opengl/include/GLES2/gl2ext.h	355;"	d
GL_SAMPLER_BINDING	opengl/include/GLES3/gl3.h	798;"	d
GL_SAMPLER_BINDING	opengl/include/GLES3/gl31.h	798;"	d
GL_SAMPLER_BUFFER_EXT	opengl/include/GLES2/gl2ext.h	1269;"	d
GL_SAMPLER_CUBE	opengl/include/GLES2/gl2.h	322;"	d
GL_SAMPLER_CUBE	opengl/include/GLES3/gl3.h	322;"	d
GL_SAMPLER_CUBE	opengl/include/GLES3/gl31.h	322;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_EXT	opengl/include/GLES2/gl2ext.h	1301;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT	opengl/include/GLES2/gl2ext.h	1302;"	d
GL_SAMPLER_CUBE_SHADOW	opengl/include/GLES3/gl3.h	653;"	d
GL_SAMPLER_CUBE_SHADOW	opengl/include/GLES3/gl31.h	653;"	d
GL_SAMPLER_CUBE_SHADOW_NV	opengl/include/GLES2/gl2ext.h	1774;"	d
GL_SAMPLER_EXTERNAL_OES	opengl/include/GLES2/gl2ext.h	200;"	d
GL_SAMPLER_KHR	opengl/include/GLES2/gl2ext.h	110;"	d
GL_SAMPLES	opengl/include/GLES/gl.h	272;"	d
GL_SAMPLES	opengl/include/GLES2/gl2.h	187;"	d
GL_SAMPLES	opengl/include/GLES3/gl3.h	187;"	d
GL_SAMPLES	opengl/include/GLES3/gl31.h	187;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	opengl/include/GLES/gl.h	160;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	opengl/include/GLES2/gl2.h	135;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	opengl/include/GLES3/gl3.h	135;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	opengl/include/GLES3/gl31.h	135;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	opengl/tests/angeles/include/GLES/gl.h	187;"	d
GL_SAMPLE_ALPHA_TO_ONE	opengl/include/GLES/gl.h	161;"	d
GL_SAMPLE_ALPHA_TO_ONE	opengl/tests/angeles/include/GLES/gl.h	188;"	d
GL_SAMPLE_BUFFERS	opengl/include/GLES/gl.h	271;"	d
GL_SAMPLE_BUFFERS	opengl/include/GLES2/gl2.h	186;"	d
GL_SAMPLE_BUFFERS	opengl/include/GLES3/gl3.h	186;"	d
GL_SAMPLE_BUFFERS	opengl/include/GLES3/gl31.h	186;"	d
GL_SAMPLE_COVERAGE	opengl/include/GLES/gl.h	162;"	d
GL_SAMPLE_COVERAGE	opengl/include/GLES2/gl2.h	136;"	d
GL_SAMPLE_COVERAGE	opengl/include/GLES3/gl3.h	136;"	d
GL_SAMPLE_COVERAGE	opengl/include/GLES3/gl31.h	136;"	d
GL_SAMPLE_COVERAGE	opengl/tests/angeles/include/GLES/gl.h	189;"	d
GL_SAMPLE_COVERAGE_INVERT	opengl/include/GLES/gl.h	274;"	d
GL_SAMPLE_COVERAGE_INVERT	opengl/include/GLES2/gl2.h	189;"	d
GL_SAMPLE_COVERAGE_INVERT	opengl/include/GLES3/gl3.h	189;"	d
GL_SAMPLE_COVERAGE_INVERT	opengl/include/GLES3/gl31.h	189;"	d
GL_SAMPLE_COVERAGE_VALUE	opengl/include/GLES/gl.h	273;"	d
GL_SAMPLE_COVERAGE_VALUE	opengl/include/GLES2/gl2.h	188;"	d
GL_SAMPLE_COVERAGE_VALUE	opengl/include/GLES3/gl3.h	188;"	d
GL_SAMPLE_COVERAGE_VALUE	opengl/include/GLES3/gl31.h	188;"	d
GL_SAMPLE_MASK	opengl/include/GLES3/gl31.h	1071;"	d
GL_SAMPLE_MASK_VALUE	opengl/include/GLES3/gl31.h	1072;"	d
GL_SAMPLE_POSITION	opengl/include/GLES3/gl31.h	1070;"	d
GL_SAMPLE_SHADING_OES	opengl/include/GLES2/gl2ext.h	306;"	d
GL_SCISSOR_BOX	opengl/include/GLES/gl.h	231;"	d
GL_SCISSOR_BOX	opengl/include/GLES2/gl2.h	169;"	d
GL_SCISSOR_BOX	opengl/include/GLES3/gl3.h	169;"	d
GL_SCISSOR_BOX	opengl/include/GLES3/gl31.h	169;"	d
GL_SCISSOR_TEST	opengl/include/GLES/gl.h	150;"	d
GL_SCISSOR_TEST	opengl/include/GLES/gl.h	232;"	d
GL_SCISSOR_TEST	opengl/include/GLES2/gl2.h	133;"	d
GL_SCISSOR_TEST	opengl/include/GLES3/gl3.h	133;"	d
GL_SCISSOR_TEST	opengl/include/GLES3/gl31.h	133;"	d
GL_SCISSOR_TEST	opengl/tests/angeles/include/GLES/gl.h	177;"	d
GL_SCREEN_KHR	opengl/include/GLES2/gl2ext.h	59;"	d
GL_SCREEN_NV	opengl/include/GLES2/gl2ext.h	1528;"	d
GL_SEPARATE_ATTRIBS	opengl/include/GLES3/gl3.h	633;"	d
GL_SEPARATE_ATTRIBS	opengl/include/GLES3/gl31.h	633;"	d
GL_SET	opengl/include/GLES/gl.h	337;"	d
GL_SET	opengl/tests/angeles/include/GLES/gl.h	294;"	d
GL_SGX_BINARY_IMG	opengl/include/GLES2/gl2ext.h	1424;"	d
GL_SGX_PROGRAM_BINARY_IMG	opengl/include/GLES2/gl2ext.h	1413;"	d
GL_SHADER_BINARY_DMP	opengl/include/GLES2/gl2ext.h	696;"	d
GL_SHADER_BINARY_FORMATS	opengl/include/GLES2/gl2.h	336;"	d
GL_SHADER_BINARY_FORMATS	opengl/include/GLES3/gl3.h	336;"	d
GL_SHADER_BINARY_FORMATS	opengl/include/GLES3/gl31.h	336;"	d
GL_SHADER_BINARY_VIV	opengl/include/GLES2/gl2ext.h	1925;"	d
GL_SHADER_COMPILER	opengl/include/GLES2/gl2.h	335;"	d
GL_SHADER_COMPILER	opengl/include/GLES3/gl3.h	335;"	d
GL_SHADER_COMPILER	opengl/include/GLES3/gl31.h	335;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	opengl/include/GLES3/gl31.h	1026;"	d
GL_SHADER_KHR	opengl/include/GLES2/gl2ext.h	106;"	d
GL_SHADER_OBJECT_EXT	opengl/include/GLES2/gl2ext.h	727;"	d
GL_SHADER_PIXEL_LOCAL_STORAGE_EXT	opengl/include/GLES2/gl2ext.h	1171;"	d
GL_SHADER_SOURCE_LENGTH	opengl/include/GLES2/gl2.h	334;"	d
GL_SHADER_SOURCE_LENGTH	opengl/include/GLES3/gl3.h	334;"	d
GL_SHADER_SOURCE_LENGTH	opengl/include/GLES3/gl31.h	334;"	d
GL_SHADER_STORAGE_BARRIER_BIT	opengl/include/GLES3/gl31.h	1064;"	d
GL_SHADER_STORAGE_BLOCK	opengl/include/GLES3/gl31.h	968;"	d
GL_SHADER_STORAGE_BUFFER	opengl/include/GLES3/gl31.h	1053;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	opengl/include/GLES3/gl31.h	1054;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	opengl/include/GLES3/gl31.h	1063;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	opengl/include/GLES3/gl31.h	1056;"	d
GL_SHADER_STORAGE_BUFFER_START	opengl/include/GLES3/gl31.h	1055;"	d
GL_SHADER_TYPE	opengl/include/GLES2/gl2.h	222;"	d
GL_SHADER_TYPE	opengl/include/GLES3/gl3.h	222;"	d
GL_SHADER_TYPE	opengl/include/GLES3/gl31.h	222;"	d
GL_SHADE_MODEL	opengl/include/GLES/gl.h	205;"	d
GL_SHADING_LANGUAGE_VERSION	opengl/include/GLES2/gl2.h	231;"	d
GL_SHADING_LANGUAGE_VERSION	opengl/include/GLES3/gl3.h	231;"	d
GL_SHADING_LANGUAGE_VERSION	opengl/include/GLES3/gl31.h	231;"	d
GL_SHININESS	opengl/include/GLES/gl.h	344;"	d
GL_SHININESS	opengl/tests/angeles/include/GLES/gl.h	301;"	d
GL_SHORT	opengl/include/GLES/gl.h	316;"	d
GL_SHORT	opengl/include/GLES2/gl2.h	198;"	d
GL_SHORT	opengl/include/GLES3/gl3.h	198;"	d
GL_SHORT	opengl/include/GLES3/gl31.h	198;"	d
GL_SHORT	opengl/tests/angeles/include/GLES/gl.h	273;"	d
GL_SIGNALED	opengl/include/GLES3/gl3.h	788;"	d
GL_SIGNALED	opengl/include/GLES3/gl31.h	788;"	d
GL_SIGNALED_APPLE	opengl/include/GLES/glext.h	283;"	d
GL_SIGNALED_APPLE	opengl/include/GLES2/gl2ext.h	634;"	d
GL_SIGNED_NORMALIZED	opengl/include/GLES3/gl3.h	742;"	d
GL_SIGNED_NORMALIZED	opengl/include/GLES3/gl31.h	742;"	d
GL_SKIP_DECODE_EXT	opengl/include/GLES2/gl2ext.h	1332;"	d
GL_SLUMINANCE8_ALPHA8_NV	opengl/include/GLES2/gl2ext.h	1759;"	d
GL_SLUMINANCE8_NV	opengl/include/GLES2/gl2ext.h	1758;"	d
GL_SLUMINANCE_ALPHA_NV	opengl/include/GLES2/gl2ext.h	1756;"	d
GL_SLUMINANCE_NV	opengl/include/GLES2/gl2ext.h	1755;"	d
GL_SMOOTH	opengl/include/GLES/gl.h	380;"	d
GL_SMOOTH	opengl/tests/angeles/include/GLES/gl.h	337;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	opengl/include/GLES/gl.h	200;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	opengl/tests/angeles/include/GLES/gl.h	218;"	d
GL_SMOOTH_POINT_SIZE_RANGE	opengl/include/GLES/gl.h	198;"	d
GL_SMOOTH_POINT_SIZE_RANGE	opengl/tests/angeles/include/GLES/gl.h	217;"	d
GL_SOFTLIGHT_KHR	opengl/include/GLES2/gl2ext.h	66;"	d
GL_SOFTLIGHT_NV	opengl/include/GLES2/gl2ext.h	1529;"	d
GL_SPECULAR	opengl/include/GLES/gl.h	304;"	d
GL_SPECULAR	opengl/tests/angeles/include/GLES/gl.h	261;"	d
GL_SPOT_CUTOFF	opengl/include/GLES/gl.h	308;"	d
GL_SPOT_CUTOFF	opengl/tests/angeles/include/GLES/gl.h	265;"	d
GL_SPOT_DIRECTION	opengl/include/GLES/gl.h	306;"	d
GL_SPOT_DIRECTION	opengl/tests/angeles/include/GLES/gl.h	263;"	d
GL_SPOT_EXPONENT	opengl/include/GLES/gl.h	307;"	d
GL_SPOT_EXPONENT	opengl/tests/angeles/include/GLES/gl.h	264;"	d
GL_SRC0_ALPHA	opengl/include/GLES/gl.h	544;"	d
GL_SRC0_RGB	opengl/include/GLES/gl.h	541;"	d
GL_SRC1_ALPHA	opengl/include/GLES/gl.h	545;"	d
GL_SRC1_RGB	opengl/include/GLES/gl.h	542;"	d
GL_SRC2_ALPHA	opengl/include/GLES/gl.h	546;"	d
GL_SRC2_RGB	opengl/include/GLES/gl.h	543;"	d
GL_SRC_ALPHA	opengl/include/GLES/gl.h	79;"	d
GL_SRC_ALPHA	opengl/include/GLES2/gl2.h	92;"	d
GL_SRC_ALPHA	opengl/include/GLES3/gl3.h	92;"	d
GL_SRC_ALPHA	opengl/include/GLES3/gl31.h	92;"	d
GL_SRC_ALPHA	opengl/tests/angeles/include/GLES/gl.h	114;"	d
GL_SRC_ALPHA_SATURATE	opengl/include/GLES/gl.h	89;"	d
GL_SRC_ALPHA_SATURATE	opengl/include/GLES2/gl2.h	98;"	d
GL_SRC_ALPHA_SATURATE	opengl/include/GLES3/gl3.h	98;"	d
GL_SRC_ALPHA_SATURATE	opengl/include/GLES3/gl31.h	98;"	d
GL_SRC_ALPHA_SATURATE	opengl/tests/angeles/include/GLES/gl.h	124;"	d
GL_SRC_ATOP_NV	opengl/include/GLES2/gl2ext.h	1530;"	d
GL_SRC_COLOR	opengl/include/GLES/gl.h	77;"	d
GL_SRC_COLOR	opengl/include/GLES2/gl2.h	90;"	d
GL_SRC_COLOR	opengl/include/GLES3/gl3.h	90;"	d
GL_SRC_COLOR	opengl/include/GLES3/gl31.h	90;"	d
GL_SRC_COLOR	opengl/tests/angeles/include/GLES/gl.h	112;"	d
GL_SRC_IN_NV	opengl/include/GLES2/gl2ext.h	1531;"	d
GL_SRC_NV	opengl/include/GLES2/gl2ext.h	1532;"	d
GL_SRC_OUT_NV	opengl/include/GLES2/gl2ext.h	1533;"	d
GL_SRC_OVER_NV	opengl/include/GLES2/gl2ext.h	1534;"	d
GL_SRGB	opengl/include/GLES3/gl3.h	600;"	d
GL_SRGB	opengl/include/GLES3/gl31.h	600;"	d
GL_SRGB8	opengl/include/GLES3/gl3.h	601;"	d
GL_SRGB8	opengl/include/GLES3/gl31.h	601;"	d
GL_SRGB8_ALPHA8	opengl/include/GLES3/gl3.h	602;"	d
GL_SRGB8_ALPHA8	opengl/include/GLES3/gl31.h	602;"	d
GL_SRGB8_ALPHA8_EXT	opengl/include/GLES/glext.h	374;"	d
GL_SRGB8_ALPHA8_EXT	opengl/include/GLES2/gl2ext.h	1041;"	d
GL_SRGB8_NV	opengl/include/GLES2/gl2ext.h	1757;"	d
GL_SRGB_ALPHA_EXT	opengl/include/GLES/glext.h	373;"	d
GL_SRGB_ALPHA_EXT	opengl/include/GLES2/gl2ext.h	1040;"	d
GL_SRGB_EXT	opengl/include/GLES/glext.h	372;"	d
GL_SRGB_EXT	opengl/include/GLES2/gl2ext.h	1039;"	d
GL_STACK_OVERFLOW	opengl/include/GLES/gl.h	169;"	d
GL_STACK_OVERFLOW	opengl/tests/angeles/include/GLES/gl.h	196;"	d
GL_STACK_OVERFLOW_KHR	opengl/include/GLES2/gl2ext.h	120;"	d
GL_STACK_UNDERFLOW	opengl/include/GLES/gl.h	170;"	d
GL_STACK_UNDERFLOW	opengl/tests/angeles/include/GLES/gl.h	197;"	d
GL_STACK_UNDERFLOW_KHR	opengl/include/GLES2/gl2ext.h	121;"	d
GL_STATE_RESTORE	opengl/include/GLES/glext.h	501;"	d
GL_STATE_RESTORE	opengl/include/GLES2/gl2ext.h	1836;"	d
GL_STATIC_COPY	opengl/include/GLES3/gl3.h	565;"	d
GL_STATIC_COPY	opengl/include/GLES3/gl31.h	565;"	d
GL_STATIC_DRAW	opengl/include/GLES/gl.h	515;"	d
GL_STATIC_DRAW	opengl/include/GLES2/gl2.h	119;"	d
GL_STATIC_DRAW	opengl/include/GLES3/gl3.h	119;"	d
GL_STATIC_DRAW	opengl/include/GLES3/gl31.h	119;"	d
GL_STATIC_READ	opengl/include/GLES3/gl3.h	564;"	d
GL_STATIC_READ	opengl/include/GLES3/gl31.h	564;"	d
GL_STENCIL	opengl/include/GLES3/gl3.h	533;"	d
GL_STENCIL	opengl/include/GLES3/gl31.h	533;"	d
GL_STENCIL_ATTACHMENT	opengl/include/GLES2/gl2.h	366;"	d
GL_STENCIL_ATTACHMENT	opengl/include/GLES3/gl3.h	366;"	d
GL_STENCIL_ATTACHMENT	opengl/include/GLES3/gl31.h	366;"	d
GL_STENCIL_ATTACHMENT_OES	opengl/include/GLES/glext.h	113;"	d
GL_STENCIL_BACK_FAIL	opengl/include/GLES2/gl2.h	162;"	d
GL_STENCIL_BACK_FAIL	opengl/include/GLES3/gl3.h	162;"	d
GL_STENCIL_BACK_FAIL	opengl/include/GLES3/gl31.h	162;"	d
GL_STENCIL_BACK_FUNC	opengl/include/GLES2/gl2.h	161;"	d
GL_STENCIL_BACK_FUNC	opengl/include/GLES3/gl3.h	161;"	d
GL_STENCIL_BACK_FUNC	opengl/include/GLES3/gl31.h	161;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	opengl/include/GLES2/gl2.h	163;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	opengl/include/GLES3/gl3.h	163;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	opengl/include/GLES3/gl31.h	163;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	opengl/include/GLES2/gl2.h	164;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	opengl/include/GLES3/gl3.h	164;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	opengl/include/GLES3/gl31.h	164;"	d
GL_STENCIL_BACK_REF	opengl/include/GLES2/gl2.h	165;"	d
GL_STENCIL_BACK_REF	opengl/include/GLES3/gl3.h	165;"	d
GL_STENCIL_BACK_REF	opengl/include/GLES3/gl31.h	165;"	d
GL_STENCIL_BACK_VALUE_MASK	opengl/include/GLES2/gl2.h	166;"	d
GL_STENCIL_BACK_VALUE_MASK	opengl/include/GLES3/gl3.h	166;"	d
GL_STENCIL_BACK_VALUE_MASK	opengl/include/GLES3/gl31.h	166;"	d
GL_STENCIL_BACK_WRITEMASK	opengl/include/GLES2/gl2.h	167;"	d
GL_STENCIL_BACK_WRITEMASK	opengl/include/GLES3/gl3.h	167;"	d
GL_STENCIL_BACK_WRITEMASK	opengl/include/GLES3/gl31.h	167;"	d
GL_STENCIL_BITS	opengl/include/GLES/gl.h	251;"	d
GL_STENCIL_BITS	opengl/include/GLES2/gl2.h	182;"	d
GL_STENCIL_BITS	opengl/include/GLES3/gl3.h	182;"	d
GL_STENCIL_BITS	opengl/include/GLES3/gl31.h	182;"	d
GL_STENCIL_BITS	opengl/tests/angeles/include/GLES/gl.h	240;"	d
GL_STENCIL_BUFFER_BIT	opengl/include/GLES/gl.h	48;"	d
GL_STENCIL_BUFFER_BIT	opengl/include/GLES2/gl2.h	77;"	d
GL_STENCIL_BUFFER_BIT	opengl/include/GLES3/gl3.h	77;"	d
GL_STENCIL_BUFFER_BIT	opengl/include/GLES3/gl31.h	77;"	d
GL_STENCIL_BUFFER_BIT	opengl/tests/angeles/include/GLES/gl.h	83;"	d
GL_STENCIL_BUFFER_BIT0_QCOM	opengl/include/GLES/glext.h	535;"	d
GL_STENCIL_BUFFER_BIT0_QCOM	opengl/include/GLES2/gl2ext.h	1894;"	d
GL_STENCIL_BUFFER_BIT1_QCOM	opengl/include/GLES/glext.h	536;"	d
GL_STENCIL_BUFFER_BIT1_QCOM	opengl/include/GLES2/gl2ext.h	1895;"	d
GL_STENCIL_BUFFER_BIT2_QCOM	opengl/include/GLES/glext.h	537;"	d
GL_STENCIL_BUFFER_BIT2_QCOM	opengl/include/GLES2/gl2ext.h	1896;"	d
GL_STENCIL_BUFFER_BIT3_QCOM	opengl/include/GLES/glext.h	538;"	d
GL_STENCIL_BUFFER_BIT3_QCOM	opengl/include/GLES2/gl2ext.h	1897;"	d
GL_STENCIL_BUFFER_BIT4_QCOM	opengl/include/GLES/glext.h	539;"	d
GL_STENCIL_BUFFER_BIT4_QCOM	opengl/include/GLES2/gl2ext.h	1898;"	d
GL_STENCIL_BUFFER_BIT5_QCOM	opengl/include/GLES/glext.h	540;"	d
GL_STENCIL_BUFFER_BIT5_QCOM	opengl/include/GLES2/gl2ext.h	1899;"	d
GL_STENCIL_BUFFER_BIT6_QCOM	opengl/include/GLES/glext.h	541;"	d
GL_STENCIL_BUFFER_BIT6_QCOM	opengl/include/GLES2/gl2ext.h	1900;"	d
GL_STENCIL_BUFFER_BIT7_QCOM	opengl/include/GLES/glext.h	542;"	d
GL_STENCIL_BUFFER_BIT7_QCOM	opengl/include/GLES2/gl2ext.h	1901;"	d
GL_STENCIL_CLEAR_VALUE	opengl/include/GLES/gl.h	210;"	d
GL_STENCIL_CLEAR_VALUE	opengl/include/GLES2/gl2.h	153;"	d
GL_STENCIL_CLEAR_VALUE	opengl/include/GLES3/gl3.h	153;"	d
GL_STENCIL_CLEAR_VALUE	opengl/include/GLES3/gl31.h	153;"	d
GL_STENCIL_EXT	opengl/include/GLES/glext.h	326;"	d
GL_STENCIL_EXT	opengl/include/GLES2/gl2ext.h	756;"	d
GL_STENCIL_FAIL	opengl/include/GLES/gl.h	213;"	d
GL_STENCIL_FAIL	opengl/include/GLES2/gl2.h	155;"	d
GL_STENCIL_FAIL	opengl/include/GLES3/gl3.h	155;"	d
GL_STENCIL_FAIL	opengl/include/GLES3/gl31.h	155;"	d
GL_STENCIL_FUNC	opengl/include/GLES/gl.h	211;"	d
GL_STENCIL_FUNC	opengl/include/GLES2/gl2.h	154;"	d
GL_STENCIL_FUNC	opengl/include/GLES3/gl3.h	154;"	d
GL_STENCIL_FUNC	opengl/include/GLES3/gl31.h	154;"	d
GL_STENCIL_INDEX	opengl/include/GLES3/gl31.h	1067;"	d
GL_STENCIL_INDEX1_OES	opengl/include/GLES/glext.h	179;"	d
GL_STENCIL_INDEX1_OES	opengl/include/GLES2/gl2ext.h	336;"	d
GL_STENCIL_INDEX4_OES	opengl/include/GLES/glext.h	184;"	d
GL_STENCIL_INDEX4_OES	opengl/include/GLES2/gl2ext.h	341;"	d
GL_STENCIL_INDEX8	opengl/include/GLES2/gl2.h	350;"	d
GL_STENCIL_INDEX8	opengl/include/GLES3/gl3.h	350;"	d
GL_STENCIL_INDEX8	opengl/include/GLES3/gl31.h	350;"	d
GL_STENCIL_INDEX8_OES	opengl/include/GLES/glext.h	189;"	d
GL_STENCIL_INDEX8_OES	opengl/include/GLES2/gl2ext.h	421;"	d
GL_STENCIL_INDEX_OES	opengl/include/GLES2/gl2ext.h	420;"	d
GL_STENCIL_PASS_DEPTH_FAIL	opengl/include/GLES/gl.h	214;"	d
GL_STENCIL_PASS_DEPTH_FAIL	opengl/include/GLES2/gl2.h	156;"	d
GL_STENCIL_PASS_DEPTH_FAIL	opengl/include/GLES3/gl3.h	156;"	d
GL_STENCIL_PASS_DEPTH_FAIL	opengl/include/GLES3/gl31.h	156;"	d
GL_STENCIL_PASS_DEPTH_PASS	opengl/include/GLES/gl.h	215;"	d
GL_STENCIL_PASS_DEPTH_PASS	opengl/include/GLES2/gl2.h	157;"	d
GL_STENCIL_PASS_DEPTH_PASS	opengl/include/GLES3/gl3.h	157;"	d
GL_STENCIL_PASS_DEPTH_PASS	opengl/include/GLES3/gl31.h	157;"	d
GL_STENCIL_REF	opengl/include/GLES/gl.h	216;"	d
GL_STENCIL_REF	opengl/include/GLES2/gl2.h	158;"	d
GL_STENCIL_REF	opengl/include/GLES3/gl3.h	158;"	d
GL_STENCIL_REF	opengl/include/GLES3/gl31.h	158;"	d
GL_STENCIL_TEST	opengl/include/GLES/gl.h	138;"	d
GL_STENCIL_TEST	opengl/include/GLES2/gl2.h	131;"	d
GL_STENCIL_TEST	opengl/include/GLES3/gl3.h	131;"	d
GL_STENCIL_TEST	opengl/include/GLES3/gl31.h	131;"	d
GL_STENCIL_TEST	opengl/tests/angeles/include/GLES/gl.h	165;"	d
GL_STENCIL_VALUE_MASK	opengl/include/GLES/gl.h	212;"	d
GL_STENCIL_VALUE_MASK	opengl/include/GLES2/gl2.h	159;"	d
GL_STENCIL_VALUE_MASK	opengl/include/GLES3/gl3.h	159;"	d
GL_STENCIL_VALUE_MASK	opengl/include/GLES3/gl31.h	159;"	d
GL_STENCIL_WRITEMASK	opengl/include/GLES/gl.h	217;"	d
GL_STENCIL_WRITEMASK	opengl/include/GLES2/gl2.h	160;"	d
GL_STENCIL_WRITEMASK	opengl/include/GLES3/gl3.h	160;"	d
GL_STENCIL_WRITEMASK	opengl/include/GLES3/gl31.h	160;"	d
GL_STREAM_COPY	opengl/include/GLES3/gl3.h	563;"	d
GL_STREAM_COPY	opengl/include/GLES3/gl31.h	563;"	d
GL_STREAM_DRAW	opengl/include/GLES2/gl2.h	118;"	d
GL_STREAM_DRAW	opengl/include/GLES3/gl3.h	118;"	d
GL_STREAM_DRAW	opengl/include/GLES3/gl31.h	118;"	d
GL_STREAM_READ	opengl/include/GLES3/gl3.h	562;"	d
GL_STREAM_READ	opengl/include/GLES3/gl31.h	562;"	d
GL_SUBPIXEL_BITS	opengl/include/GLES/gl.h	245;"	d
GL_SUBPIXEL_BITS	opengl/include/GLES2/gl2.h	176;"	d
GL_SUBPIXEL_BITS	opengl/include/GLES3/gl3.h	176;"	d
GL_SUBPIXEL_BITS	opengl/include/GLES3/gl31.h	176;"	d
GL_SUBPIXEL_BITS	opengl/tests/angeles/include/GLES/gl.h	234;"	d
GL_SUBTRACT	opengl/include/GLES/gl.h	522;"	d
GL_SYNC_CONDITION	opengl/include/GLES3/gl3.h	782;"	d
GL_SYNC_CONDITION	opengl/include/GLES3/gl31.h	782;"	d
GL_SYNC_CONDITION_APPLE	opengl/include/GLES/glext.h	277;"	d
GL_SYNC_CONDITION_APPLE	opengl/include/GLES2/gl2ext.h	628;"	d
GL_SYNC_FENCE	opengl/include/GLES3/gl3.h	785;"	d
GL_SYNC_FENCE	opengl/include/GLES3/gl31.h	785;"	d
GL_SYNC_FENCE_APPLE	opengl/include/GLES/glext.h	280;"	d
GL_SYNC_FENCE_APPLE	opengl/include/GLES2/gl2ext.h	631;"	d
GL_SYNC_FLAGS	opengl/include/GLES3/gl3.h	784;"	d
GL_SYNC_FLAGS	opengl/include/GLES3/gl31.h	784;"	d
GL_SYNC_FLAGS_APPLE	opengl/include/GLES/glext.h	279;"	d
GL_SYNC_FLAGS_APPLE	opengl/include/GLES2/gl2ext.h	630;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	opengl/include/GLES3/gl3.h	793;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	opengl/include/GLES3/gl31.h	793;"	d
GL_SYNC_FLUSH_COMMANDS_BIT_APPLE	opengl/include/GLES/glext.h	288;"	d
GL_SYNC_FLUSH_COMMANDS_BIT_APPLE	opengl/include/GLES2/gl2ext.h	639;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	opengl/include/GLES3/gl3.h	786;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	opengl/include/GLES3/gl31.h	786;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE	opengl/include/GLES/glext.h	281;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE	opengl/include/GLES2/gl2ext.h	632;"	d
GL_SYNC_OBJECT_APPLE	opengl/include/GLES/glext.h	274;"	d
GL_SYNC_OBJECT_APPLE	opengl/include/GLES2/gl2ext.h	625;"	d
GL_SYNC_STATUS	opengl/include/GLES3/gl3.h	783;"	d
GL_SYNC_STATUS	opengl/include/GLES3/gl31.h	783;"	d
GL_SYNC_STATUS_APPLE	opengl/include/GLES/glext.h	278;"	d
GL_SYNC_STATUS_APPLE	opengl/include/GLES2/gl2ext.h	629;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES_EXT	opengl/include/GLES2/gl2ext.h	1190;"	d
GL_TESS_CONTROL_SHADER_BIT_EXT	opengl/include/GLES2/gl2ext.h	1229;"	d
GL_TESS_CONTROL_SHADER_EXT	opengl/include/GLES2/gl2ext.h	1227;"	d
GL_TESS_EVALUATION_SHADER_BIT_EXT	opengl/include/GLES2/gl2ext.h	1230;"	d
GL_TESS_EVALUATION_SHADER_EXT	opengl/include/GLES2/gl2ext.h	1228;"	d
GL_TESS_GEN_MODE_EXT	opengl/include/GLES2/gl2ext.h	1191;"	d
GL_TESS_GEN_POINT_MODE_EXT	opengl/include/GLES2/gl2ext.h	1194;"	d
GL_TESS_GEN_SPACING_EXT	opengl/include/GLES2/gl2ext.h	1192;"	d
GL_TESS_GEN_VERTEX_ORDER_EXT	opengl/include/GLES2/gl2ext.h	1193;"	d
GL_TEXTURE	opengl/include/GLES/gl.h	353;"	d
GL_TEXTURE	opengl/include/GLES2/gl2.h	262;"	d
GL_TEXTURE	opengl/include/GLES3/gl3.h	262;"	d
GL_TEXTURE	opengl/include/GLES3/gl31.h	262;"	d
GL_TEXTURE	opengl/tests/angeles/include/GLES/gl.h	310;"	d
GL_TEXTURE0	opengl/include/GLES/gl.h	449;"	d
GL_TEXTURE0	opengl/include/GLES2/gl2.h	272;"	d
GL_TEXTURE0	opengl/include/GLES3/gl3.h	272;"	d
GL_TEXTURE0	opengl/include/GLES3/gl31.h	272;"	d
GL_TEXTURE0	opengl/tests/angeles/include/GLES/gl.h	405;"	d
GL_TEXTURE1	opengl/include/GLES/gl.h	450;"	d
GL_TEXTURE1	opengl/include/GLES2/gl2.h	273;"	d
GL_TEXTURE1	opengl/include/GLES3/gl3.h	273;"	d
GL_TEXTURE1	opengl/include/GLES3/gl31.h	273;"	d
GL_TEXTURE1	opengl/tests/angeles/include/GLES/gl.h	406;"	d
GL_TEXTURE10	opengl/include/GLES/gl.h	459;"	d
GL_TEXTURE10	opengl/include/GLES2/gl2.h	282;"	d
GL_TEXTURE10	opengl/include/GLES3/gl3.h	282;"	d
GL_TEXTURE10	opengl/include/GLES3/gl31.h	282;"	d
GL_TEXTURE10	opengl/tests/angeles/include/GLES/gl.h	415;"	d
GL_TEXTURE11	opengl/include/GLES/gl.h	460;"	d
GL_TEXTURE11	opengl/include/GLES2/gl2.h	283;"	d
GL_TEXTURE11	opengl/include/GLES3/gl3.h	283;"	d
GL_TEXTURE11	opengl/include/GLES3/gl31.h	283;"	d
GL_TEXTURE11	opengl/tests/angeles/include/GLES/gl.h	416;"	d
GL_TEXTURE12	opengl/include/GLES/gl.h	461;"	d
GL_TEXTURE12	opengl/include/GLES2/gl2.h	284;"	d
GL_TEXTURE12	opengl/include/GLES3/gl3.h	284;"	d
GL_TEXTURE12	opengl/include/GLES3/gl31.h	284;"	d
GL_TEXTURE12	opengl/tests/angeles/include/GLES/gl.h	417;"	d
GL_TEXTURE13	opengl/include/GLES/gl.h	462;"	d
GL_TEXTURE13	opengl/include/GLES2/gl2.h	285;"	d
GL_TEXTURE13	opengl/include/GLES3/gl3.h	285;"	d
GL_TEXTURE13	opengl/include/GLES3/gl31.h	285;"	d
GL_TEXTURE13	opengl/tests/angeles/include/GLES/gl.h	418;"	d
GL_TEXTURE14	opengl/include/GLES/gl.h	463;"	d
GL_TEXTURE14	opengl/include/GLES2/gl2.h	286;"	d
GL_TEXTURE14	opengl/include/GLES3/gl3.h	286;"	d
GL_TEXTURE14	opengl/include/GLES3/gl31.h	286;"	d
GL_TEXTURE14	opengl/tests/angeles/include/GLES/gl.h	419;"	d
GL_TEXTURE15	opengl/include/GLES/gl.h	464;"	d
GL_TEXTURE15	opengl/include/GLES2/gl2.h	287;"	d
GL_TEXTURE15	opengl/include/GLES3/gl3.h	287;"	d
GL_TEXTURE15	opengl/include/GLES3/gl31.h	287;"	d
GL_TEXTURE15	opengl/tests/angeles/include/GLES/gl.h	420;"	d
GL_TEXTURE16	opengl/include/GLES/gl.h	465;"	d
GL_TEXTURE16	opengl/include/GLES2/gl2.h	288;"	d
GL_TEXTURE16	opengl/include/GLES3/gl3.h	288;"	d
GL_TEXTURE16	opengl/include/GLES3/gl31.h	288;"	d
GL_TEXTURE16	opengl/tests/angeles/include/GLES/gl.h	421;"	d
GL_TEXTURE17	opengl/include/GLES/gl.h	466;"	d
GL_TEXTURE17	opengl/include/GLES2/gl2.h	289;"	d
GL_TEXTURE17	opengl/include/GLES3/gl3.h	289;"	d
GL_TEXTURE17	opengl/include/GLES3/gl31.h	289;"	d
GL_TEXTURE17	opengl/tests/angeles/include/GLES/gl.h	422;"	d
GL_TEXTURE18	opengl/include/GLES/gl.h	467;"	d
GL_TEXTURE18	opengl/include/GLES2/gl2.h	290;"	d
GL_TEXTURE18	opengl/include/GLES3/gl3.h	290;"	d
GL_TEXTURE18	opengl/include/GLES3/gl31.h	290;"	d
GL_TEXTURE18	opengl/tests/angeles/include/GLES/gl.h	423;"	d
GL_TEXTURE19	opengl/include/GLES/gl.h	468;"	d
GL_TEXTURE19	opengl/include/GLES2/gl2.h	291;"	d
GL_TEXTURE19	opengl/include/GLES3/gl3.h	291;"	d
GL_TEXTURE19	opengl/include/GLES3/gl31.h	291;"	d
GL_TEXTURE19	opengl/tests/angeles/include/GLES/gl.h	424;"	d
GL_TEXTURE2	opengl/include/GLES/gl.h	451;"	d
GL_TEXTURE2	opengl/include/GLES2/gl2.h	274;"	d
GL_TEXTURE2	opengl/include/GLES3/gl3.h	274;"	d
GL_TEXTURE2	opengl/include/GLES3/gl31.h	274;"	d
GL_TEXTURE2	opengl/tests/angeles/include/GLES/gl.h	407;"	d
GL_TEXTURE20	opengl/include/GLES/gl.h	469;"	d
GL_TEXTURE20	opengl/include/GLES2/gl2.h	292;"	d
GL_TEXTURE20	opengl/include/GLES3/gl3.h	292;"	d
GL_TEXTURE20	opengl/include/GLES3/gl31.h	292;"	d
GL_TEXTURE20	opengl/tests/angeles/include/GLES/gl.h	425;"	d
GL_TEXTURE21	opengl/include/GLES/gl.h	470;"	d
GL_TEXTURE21	opengl/include/GLES2/gl2.h	293;"	d
GL_TEXTURE21	opengl/include/GLES3/gl3.h	293;"	d
GL_TEXTURE21	opengl/include/GLES3/gl31.h	293;"	d
GL_TEXTURE21	opengl/tests/angeles/include/GLES/gl.h	426;"	d
GL_TEXTURE22	opengl/include/GLES/gl.h	471;"	d
GL_TEXTURE22	opengl/include/GLES2/gl2.h	294;"	d
GL_TEXTURE22	opengl/include/GLES3/gl3.h	294;"	d
GL_TEXTURE22	opengl/include/GLES3/gl31.h	294;"	d
GL_TEXTURE22	opengl/tests/angeles/include/GLES/gl.h	427;"	d
GL_TEXTURE23	opengl/include/GLES/gl.h	472;"	d
GL_TEXTURE23	opengl/include/GLES2/gl2.h	295;"	d
GL_TEXTURE23	opengl/include/GLES3/gl3.h	295;"	d
GL_TEXTURE23	opengl/include/GLES3/gl31.h	295;"	d
GL_TEXTURE23	opengl/tests/angeles/include/GLES/gl.h	428;"	d
GL_TEXTURE24	opengl/include/GLES/gl.h	473;"	d
GL_TEXTURE24	opengl/include/GLES2/gl2.h	296;"	d
GL_TEXTURE24	opengl/include/GLES3/gl3.h	296;"	d
GL_TEXTURE24	opengl/include/GLES3/gl31.h	296;"	d
GL_TEXTURE24	opengl/tests/angeles/include/GLES/gl.h	429;"	d
GL_TEXTURE25	opengl/include/GLES/gl.h	474;"	d
GL_TEXTURE25	opengl/include/GLES2/gl2.h	297;"	d
GL_TEXTURE25	opengl/include/GLES3/gl3.h	297;"	d
GL_TEXTURE25	opengl/include/GLES3/gl31.h	297;"	d
GL_TEXTURE25	opengl/tests/angeles/include/GLES/gl.h	430;"	d
GL_TEXTURE26	opengl/include/GLES/gl.h	475;"	d
GL_TEXTURE26	opengl/include/GLES2/gl2.h	298;"	d
GL_TEXTURE26	opengl/include/GLES3/gl3.h	298;"	d
GL_TEXTURE26	opengl/include/GLES3/gl31.h	298;"	d
GL_TEXTURE26	opengl/tests/angeles/include/GLES/gl.h	431;"	d
GL_TEXTURE27	opengl/include/GLES/gl.h	476;"	d
GL_TEXTURE27	opengl/include/GLES2/gl2.h	299;"	d
GL_TEXTURE27	opengl/include/GLES3/gl3.h	299;"	d
GL_TEXTURE27	opengl/include/GLES3/gl31.h	299;"	d
GL_TEXTURE27	opengl/tests/angeles/include/GLES/gl.h	432;"	d
GL_TEXTURE28	opengl/include/GLES/gl.h	477;"	d
GL_TEXTURE28	opengl/include/GLES2/gl2.h	300;"	d
GL_TEXTURE28	opengl/include/GLES3/gl3.h	300;"	d
GL_TEXTURE28	opengl/include/GLES3/gl31.h	300;"	d
GL_TEXTURE28	opengl/tests/angeles/include/GLES/gl.h	433;"	d
GL_TEXTURE29	opengl/include/GLES/gl.h	478;"	d
GL_TEXTURE29	opengl/include/GLES2/gl2.h	301;"	d
GL_TEXTURE29	opengl/include/GLES3/gl3.h	301;"	d
GL_TEXTURE29	opengl/include/GLES3/gl31.h	301;"	d
GL_TEXTURE29	opengl/tests/angeles/include/GLES/gl.h	434;"	d
GL_TEXTURE3	opengl/include/GLES/gl.h	452;"	d
GL_TEXTURE3	opengl/include/GLES2/gl2.h	275;"	d
GL_TEXTURE3	opengl/include/GLES3/gl3.h	275;"	d
GL_TEXTURE3	opengl/include/GLES3/gl31.h	275;"	d
GL_TEXTURE3	opengl/tests/angeles/include/GLES/gl.h	408;"	d
GL_TEXTURE30	opengl/include/GLES/gl.h	479;"	d
GL_TEXTURE30	opengl/include/GLES2/gl2.h	302;"	d
GL_TEXTURE30	opengl/include/GLES3/gl3.h	302;"	d
GL_TEXTURE30	opengl/include/GLES3/gl31.h	302;"	d
GL_TEXTURE30	opengl/tests/angeles/include/GLES/gl.h	435;"	d
GL_TEXTURE31	opengl/include/GLES/gl.h	480;"	d
GL_TEXTURE31	opengl/include/GLES2/gl2.h	303;"	d
GL_TEXTURE31	opengl/include/GLES3/gl3.h	303;"	d
GL_TEXTURE31	opengl/include/GLES3/gl31.h	303;"	d
GL_TEXTURE31	opengl/tests/angeles/include/GLES/gl.h	436;"	d
GL_TEXTURE4	opengl/include/GLES/gl.h	453;"	d
GL_TEXTURE4	opengl/include/GLES2/gl2.h	276;"	d
GL_TEXTURE4	opengl/include/GLES3/gl3.h	276;"	d
GL_TEXTURE4	opengl/include/GLES3/gl31.h	276;"	d
GL_TEXTURE4	opengl/tests/angeles/include/GLES/gl.h	409;"	d
GL_TEXTURE5	opengl/include/GLES/gl.h	454;"	d
GL_TEXTURE5	opengl/include/GLES2/gl2.h	277;"	d
GL_TEXTURE5	opengl/include/GLES3/gl3.h	277;"	d
GL_TEXTURE5	opengl/include/GLES3/gl31.h	277;"	d
GL_TEXTURE5	opengl/tests/angeles/include/GLES/gl.h	410;"	d
GL_TEXTURE6	opengl/include/GLES/gl.h	455;"	d
GL_TEXTURE6	opengl/include/GLES2/gl2.h	278;"	d
GL_TEXTURE6	opengl/include/GLES3/gl3.h	278;"	d
GL_TEXTURE6	opengl/include/GLES3/gl31.h	278;"	d
GL_TEXTURE6	opengl/tests/angeles/include/GLES/gl.h	411;"	d
GL_TEXTURE7	opengl/include/GLES/gl.h	456;"	d
GL_TEXTURE7	opengl/include/GLES2/gl2.h	279;"	d
GL_TEXTURE7	opengl/include/GLES3/gl3.h	279;"	d
GL_TEXTURE7	opengl/include/GLES3/gl31.h	279;"	d
GL_TEXTURE7	opengl/tests/angeles/include/GLES/gl.h	412;"	d
GL_TEXTURE8	opengl/include/GLES/gl.h	457;"	d
GL_TEXTURE8	opengl/include/GLES2/gl2.h	280;"	d
GL_TEXTURE8	opengl/include/GLES3/gl3.h	280;"	d
GL_TEXTURE8	opengl/include/GLES3/gl31.h	280;"	d
GL_TEXTURE8	opengl/tests/angeles/include/GLES/gl.h	413;"	d
GL_TEXTURE9	opengl/include/GLES/gl.h	458;"	d
GL_TEXTURE9	opengl/include/GLES2/gl2.h	281;"	d
GL_TEXTURE9	opengl/include/GLES3/gl3.h	281;"	d
GL_TEXTURE9	opengl/include/GLES3/gl31.h	281;"	d
GL_TEXTURE9	opengl/tests/angeles/include/GLES/gl.h	414;"	d
GL_TEXTURE_2D	opengl/include/GLES/gl.h	132;"	d
GL_TEXTURE_2D	opengl/include/GLES2/gl2.h	127;"	d
GL_TEXTURE_2D	opengl/include/GLES3/gl3.h	127;"	d
GL_TEXTURE_2D	opengl/include/GLES3/gl31.h	127;"	d
GL_TEXTURE_2D	opengl/tests/angeles/include/GLES/gl.h	159;"	d
GL_TEXTURE_2D_ARRAY	opengl/include/GLES3/gl3.h	616;"	d
GL_TEXTURE_2D_ARRAY	opengl/include/GLES3/gl31.h	616;"	d
GL_TEXTURE_2D_MULTISAMPLE	opengl/include/GLES3/gl31.h	1073;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES	opengl/include/GLES2/gl2ext.h	426;"	d
GL_TEXTURE_3D	opengl/include/GLES3/gl3.h	541;"	d
GL_TEXTURE_3D	opengl/include/GLES3/gl31.h	541;"	d
GL_TEXTURE_3D_OES	opengl/include/GLES2/gl2ext.h	352;"	d
GL_TEXTURE_ALPHA_MODULATE_IMG	opengl/include/GLES/glext.h	445;"	d
GL_TEXTURE_ALPHA_SIZE	opengl/include/GLES3/gl31.h	1088;"	d
GL_TEXTURE_ALPHA_TYPE	opengl/include/GLES3/gl31.h	1095;"	d
GL_TEXTURE_BASE_LEVEL	opengl/include/GLES3/gl3.h	549;"	d
GL_TEXTURE_BASE_LEVEL	opengl/include/GLES3/gl31.h	549;"	d
GL_TEXTURE_BINDING_2D	opengl/include/GLES/gl.h	255;"	d
GL_TEXTURE_BINDING_2D	opengl/include/GLES2/gl2.h	185;"	d
GL_TEXTURE_BINDING_2D	opengl/include/GLES3/gl3.h	185;"	d
GL_TEXTURE_BINDING_2D	opengl/include/GLES3/gl31.h	185;"	d
GL_TEXTURE_BINDING_2D_ARRAY	opengl/include/GLES3/gl3.h	617;"	d
GL_TEXTURE_BINDING_2D_ARRAY	opengl/include/GLES3/gl31.h	617;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	opengl/include/GLES3/gl31.h	1078;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES	opengl/include/GLES2/gl2ext.h	427;"	d
GL_TEXTURE_BINDING_3D	opengl/include/GLES3/gl3.h	538;"	d
GL_TEXTURE_BINDING_3D	opengl/include/GLES3/gl31.h	538;"	d
GL_TEXTURE_BINDING_3D_OES	opengl/include/GLES2/gl2ext.h	353;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	opengl/include/GLES2/gl2ext.h	1266;"	d
GL_TEXTURE_BINDING_CUBE_MAP	opengl/include/GLES2/gl2.h	264;"	d
GL_TEXTURE_BINDING_CUBE_MAP	opengl/include/GLES3/gl3.h	264;"	d
GL_TEXTURE_BINDING_CUBE_MAP	opengl/include/GLES3/gl31.h	264;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT	opengl/include/GLES2/gl2ext.h	1300;"	d
GL_TEXTURE_BINDING_CUBE_MAP_OES	opengl/include/GLES/glext.h	203;"	d
GL_TEXTURE_BINDING_EXTERNAL_OES	opengl/include/GLES/glext.h	75;"	d
GL_TEXTURE_BINDING_EXTERNAL_OES	opengl/include/GLES2/gl2ext.h	198;"	d
GL_TEXTURE_BLUE_SIZE	opengl/include/GLES3/gl31.h	1087;"	d
GL_TEXTURE_BLUE_TYPE	opengl/include/GLES3/gl31.h	1094;"	d
GL_TEXTURE_BORDER_COLOR_EXT	opengl/include/GLES2/gl2ext.h	1239;"	d
GL_TEXTURE_BORDER_COLOR_NV	opengl/include/GLES2/gl2ext.h	1779;"	d
GL_TEXTURE_BUFFER_BINDING_EXT	opengl/include/GLES2/gl2ext.h	1264;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	opengl/include/GLES2/gl2ext.h	1267;"	d
GL_TEXTURE_BUFFER_EXT	opengl/include/GLES2/gl2ext.h	1263;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT	opengl/include/GLES2/gl2ext.h	1268;"	d
GL_TEXTURE_BUFFER_OFFSET_EXT	opengl/include/GLES2/gl2ext.h	1275;"	d
GL_TEXTURE_BUFFER_SIZE_EXT	opengl/include/GLES2/gl2ext.h	1276;"	d
GL_TEXTURE_COMPARE_FUNC	opengl/include/GLES3/gl3.h	556;"	d
GL_TEXTURE_COMPARE_FUNC	opengl/include/GLES3/gl31.h	556;"	d
GL_TEXTURE_COMPARE_FUNC_EXT	opengl/include/GLES2/gl2ext.h	1181;"	d
GL_TEXTURE_COMPARE_MODE	opengl/include/GLES3/gl3.h	555;"	d
GL_TEXTURE_COMPARE_MODE	opengl/include/GLES3/gl31.h	555;"	d
GL_TEXTURE_COMPARE_MODE_EXT	opengl/include/GLES2/gl2ext.h	1180;"	d
GL_TEXTURE_COMPRESSED	opengl/include/GLES3/gl31.h	1097;"	d
GL_TEXTURE_COORD_ARRAY	opengl/include/GLES/gl.h	158;"	d
GL_TEXTURE_COORD_ARRAY	opengl/tests/angeles/include/GLES/gl.h	185;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	opengl/include/GLES/gl.h	513;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	opengl/include/GLES/gl.h	270;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	opengl/include/GLES/gl.h	264;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	opengl/include/GLES/gl.h	266;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	opengl/include/GLES/gl.h	265;"	d
GL_TEXTURE_CROP_RECT_OES	opengl/include/GLES/glext.h	63;"	d
GL_TEXTURE_CUBE_MAP	opengl/include/GLES2/gl2.h	263;"	d
GL_TEXTURE_CUBE_MAP	opengl/include/GLES3/gl3.h	263;"	d
GL_TEXTURE_CUBE_MAP	opengl/include/GLES3/gl31.h	263;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_EXT	opengl/include/GLES2/gl2ext.h	1299;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	opengl/include/GLES2/gl2.h	266;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	opengl/include/GLES3/gl3.h	266;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	opengl/include/GLES3/gl31.h	266;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES	opengl/include/GLES/glext.h	205;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	opengl/include/GLES2/gl2.h	268;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	opengl/include/GLES3/gl3.h	268;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	opengl/include/GLES3/gl31.h	268;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES	opengl/include/GLES/glext.h	207;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	opengl/include/GLES2/gl2.h	270;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	opengl/include/GLES3/gl3.h	270;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	opengl/include/GLES3/gl31.h	270;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES	opengl/include/GLES/glext.h	209;"	d
GL_TEXTURE_CUBE_MAP_OES	opengl/include/GLES/glext.h	202;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	opengl/include/GLES2/gl2.h	265;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	opengl/include/GLES3/gl3.h	265;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	opengl/include/GLES3/gl31.h	265;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES	opengl/include/GLES/glext.h	204;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	opengl/include/GLES2/gl2.h	267;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	opengl/include/GLES3/gl3.h	267;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	opengl/include/GLES3/gl31.h	267;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES	opengl/include/GLES/glext.h	206;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	opengl/include/GLES2/gl2.h	269;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	opengl/include/GLES3/gl3.h	269;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	opengl/include/GLES3/gl31.h	269;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES	opengl/include/GLES/glext.h	208;"	d
GL_TEXTURE_DEPTH	opengl/include/GLES3/gl31.h	1083;"	d
GL_TEXTURE_DEPTH_QCOM	opengl/include/GLES/glext.h	493;"	d
GL_TEXTURE_DEPTH_QCOM	opengl/include/GLES2/gl2ext.h	1828;"	d
GL_TEXTURE_DEPTH_SIZE	opengl/include/GLES3/gl31.h	1089;"	d
GL_TEXTURE_DEPTH_TYPE	opengl/include/GLES3/gl31.h	1096;"	d
GL_TEXTURE_ENV	opengl/include/GLES/gl.h	424;"	d
GL_TEXTURE_ENV	opengl/tests/angeles/include/GLES/gl.h	381;"	d
GL_TEXTURE_ENV_COLOR	opengl/include/GLES/gl.h	421;"	d
GL_TEXTURE_ENV_COLOR	opengl/tests/angeles/include/GLES/gl.h	378;"	d
GL_TEXTURE_ENV_MODE	opengl/include/GLES/gl.h	420;"	d
GL_TEXTURE_ENV_MODE	opengl/tests/angeles/include/GLES/gl.h	377;"	d
GL_TEXTURE_EXTERNAL_OES	opengl/include/GLES/glext.h	74;"	d
GL_TEXTURE_EXTERNAL_OES	opengl/include/GLES2/gl2ext.h	197;"	d
GL_TEXTURE_EXTERNAL_OES	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private static int GL_TEXTURE_EXTERNAL_OES = 0x8D65;$/;"	f	class:CamRenderer	file:
GL_TEXTURE_FETCH_BARRIER_BIT	opengl/include/GLES3/gl31.h	1025;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	opengl/include/GLES/glext.h	398;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	opengl/include/GLES3/gl31.h	1080;"	d
GL_TEXTURE_FORMAT_QCOM	opengl/include/GLES/glext.h	495;"	d
GL_TEXTURE_FORMAT_QCOM	opengl/include/GLES2/gl2ext.h	1830;"	d
GL_TEXTURE_GEN_MODE_OES	opengl/include/GLES/glext.h	211;"	d
GL_TEXTURE_GEN_STR_OES	opengl/include/GLES/glext.h	212;"	d
GL_TEXTURE_GREEN_SIZE	opengl/include/GLES3/gl31.h	1086;"	d
GL_TEXTURE_GREEN_TYPE	opengl/include/GLES3/gl31.h	1093;"	d
GL_TEXTURE_HEIGHT	opengl/include/GLES3/gl31.h	1082;"	d
GL_TEXTURE_HEIGHT_QCOM	opengl/include/GLES/glext.h	492;"	d
GL_TEXTURE_HEIGHT_QCOM	opengl/include/GLES2/gl2ext.h	1827;"	d
GL_TEXTURE_IMAGE_VALID_QCOM	opengl/include/GLES/glext.h	497;"	d
GL_TEXTURE_IMAGE_VALID_QCOM	opengl/include/GLES2/gl2ext.h	1832;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	opengl/include/GLES3/gl3.h	825;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	opengl/include/GLES3/gl31.h	825;"	d
GL_TEXTURE_IMMUTABLE_FORMAT_EXT	opengl/include/GLES/glext.h	404;"	d
GL_TEXTURE_IMMUTABLE_FORMAT_EXT	opengl/include/GLES2/gl2ext.h	1337;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	opengl/include/GLES2/gl2ext.h	1378;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	opengl/include/GLES3/gl3.h	828;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	opengl/include/GLES3/gl31.h	828;"	d
GL_TEXTURE_INTERNAL_FORMAT	opengl/include/GLES3/gl31.h	1084;"	d
GL_TEXTURE_INTERNAL_FORMAT_QCOM	opengl/include/GLES/glext.h	494;"	d
GL_TEXTURE_INTERNAL_FORMAT_QCOM	opengl/include/GLES2/gl2ext.h	1829;"	d
GL_TEXTURE_LOD_BIAS_EXT	opengl/include/GLES/glext.h	399;"	d
GL_TEXTURE_MAG_FILTER	opengl/include/GLES/gl.h	439;"	d
GL_TEXTURE_MAG_FILTER	opengl/include/GLES2/gl2.h	258;"	d
GL_TEXTURE_MAG_FILTER	opengl/include/GLES3/gl3.h	258;"	d
GL_TEXTURE_MAG_FILTER	opengl/include/GLES3/gl31.h	258;"	d
GL_TEXTURE_MAG_FILTER	opengl/tests/angeles/include/GLES/gl.h	396;"	d
GL_TEXTURE_MATRIX	opengl/include/GLES/gl.h	225;"	d
GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES	opengl/include/GLES/glext.h	138;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	opengl/include/GLES/glext.h	386;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	opengl/include/GLES2/gl2ext.h	1312;"	d
GL_TEXTURE_MAX_LEVEL	opengl/include/GLES3/gl3.h	550;"	d
GL_TEXTURE_MAX_LEVEL	opengl/include/GLES3/gl31.h	550;"	d
GL_TEXTURE_MAX_LEVEL_APPLE	opengl/include/GLES/glext.h	302;"	d
GL_TEXTURE_MAX_LEVEL_APPLE	opengl/include/GLES2/gl2ext.h	667;"	d
GL_TEXTURE_MAX_LOD	opengl/include/GLES3/gl3.h	548;"	d
GL_TEXTURE_MAX_LOD	opengl/include/GLES3/gl31.h	548;"	d
GL_TEXTURE_MIN_FILTER	opengl/include/GLES/gl.h	440;"	d
GL_TEXTURE_MIN_FILTER	opengl/include/GLES2/gl2.h	259;"	d
GL_TEXTURE_MIN_FILTER	opengl/include/GLES3/gl3.h	259;"	d
GL_TEXTURE_MIN_FILTER	opengl/include/GLES3/gl31.h	259;"	d
GL_TEXTURE_MIN_FILTER	opengl/tests/angeles/include/GLES/gl.h	397;"	d
GL_TEXTURE_MIN_LOD	opengl/include/GLES3/gl3.h	547;"	d
GL_TEXTURE_MIN_LOD	opengl/include/GLES3/gl31.h	547;"	d
GL_TEXTURE_NUM_LEVELS_QCOM	opengl/include/GLES/glext.h	498;"	d
GL_TEXTURE_NUM_LEVELS_QCOM	opengl/include/GLES2/gl2ext.h	1833;"	d
GL_TEXTURE_OBJECT_VALID_QCOM	opengl/include/GLES/glext.h	500;"	d
GL_TEXTURE_OBJECT_VALID_QCOM	opengl/include/GLES2/gl2ext.h	1835;"	d
GL_TEXTURE_RED_SIZE	opengl/include/GLES3/gl31.h	1085;"	d
GL_TEXTURE_RED_TYPE	opengl/include/GLES3/gl31.h	1092;"	d
GL_TEXTURE_SAMPLES	opengl/include/GLES3/gl31.h	1079;"	d
GL_TEXTURE_SAMPLES_IMG	opengl/include/GLES/glext.h	468;"	d
GL_TEXTURE_SAMPLES_IMG	opengl/include/GLES2/gl2ext.h	1402;"	d
GL_TEXTURE_SHARED_SIZE	opengl/include/GLES3/gl31.h	1091;"	d
GL_TEXTURE_SRGB_DECODE_EXT	opengl/include/GLES2/gl2ext.h	1330;"	d
GL_TEXTURE_STACK_DEPTH	opengl/include/GLES/gl.h	222;"	d
GL_TEXTURE_STENCIL_SIZE	opengl/include/GLES3/gl31.h	1090;"	d
GL_TEXTURE_SWIZZLE_A	opengl/include/GLES3/gl3.h	803;"	d
GL_TEXTURE_SWIZZLE_A	opengl/include/GLES3/gl31.h	803;"	d
GL_TEXTURE_SWIZZLE_B	opengl/include/GLES3/gl3.h	802;"	d
GL_TEXTURE_SWIZZLE_B	opengl/include/GLES3/gl31.h	802;"	d
GL_TEXTURE_SWIZZLE_G	opengl/include/GLES3/gl3.h	801;"	d
GL_TEXTURE_SWIZZLE_G	opengl/include/GLES3/gl31.h	801;"	d
GL_TEXTURE_SWIZZLE_R	opengl/include/GLES3/gl3.h	800;"	d
GL_TEXTURE_SWIZZLE_R	opengl/include/GLES3/gl31.h	800;"	d
GL_TEXTURE_TARGET_QCOM	opengl/include/GLES/glext.h	499;"	d
GL_TEXTURE_TARGET_QCOM	opengl/include/GLES2/gl2ext.h	1834;"	d
GL_TEXTURE_TYPE_QCOM	opengl/include/GLES/glext.h	496;"	d
GL_TEXTURE_TYPE_QCOM	opengl/include/GLES2/gl2ext.h	1831;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	opengl/include/GLES3/gl31.h	1029;"	d
GL_TEXTURE_USAGE_ANGLE	opengl/include/GLES2/gl2ext.h	577;"	d
GL_TEXTURE_VIEW_MIN_LAYER_EXT	opengl/include/GLES2/gl2ext.h	1376;"	d
GL_TEXTURE_VIEW_MIN_LEVEL_EXT	opengl/include/GLES2/gl2ext.h	1374;"	d
GL_TEXTURE_VIEW_NUM_LAYERS_EXT	opengl/include/GLES2/gl2ext.h	1377;"	d
GL_TEXTURE_VIEW_NUM_LEVELS_EXT	opengl/include/GLES2/gl2ext.h	1375;"	d
GL_TEXTURE_WIDTH	opengl/include/GLES3/gl31.h	1081;"	d
GL_TEXTURE_WIDTH_QCOM	opengl/include/GLES/glext.h	491;"	d
GL_TEXTURE_WIDTH_QCOM	opengl/include/GLES2/gl2ext.h	1826;"	d
GL_TEXTURE_WRAP_R	opengl/include/GLES3/gl3.h	542;"	d
GL_TEXTURE_WRAP_R	opengl/include/GLES3/gl31.h	542;"	d
GL_TEXTURE_WRAP_R_OES	opengl/include/GLES2/gl2ext.h	351;"	d
GL_TEXTURE_WRAP_S	opengl/include/GLES/gl.h	441;"	d
GL_TEXTURE_WRAP_S	opengl/include/GLES2/gl2.h	260;"	d
GL_TEXTURE_WRAP_S	opengl/include/GLES3/gl3.h	260;"	d
GL_TEXTURE_WRAP_S	opengl/include/GLES3/gl31.h	260;"	d
GL_TEXTURE_WRAP_S	opengl/tests/angeles/include/GLES/gl.h	398;"	d
GL_TEXTURE_WRAP_T	opengl/include/GLES/gl.h	442;"	d
GL_TEXTURE_WRAP_T	opengl/include/GLES2/gl2.h	261;"	d
GL_TEXTURE_WRAP_T	opengl/include/GLES3/gl3.h	261;"	d
GL_TEXTURE_WRAP_T	opengl/include/GLES3/gl31.h	261;"	d
GL_TEXTURE_WRAP_T	opengl/tests/angeles/include/GLES/gl.h	399;"	d
GL_TIMEOUT_EXPIRED	opengl/include/GLES3/gl3.h	790;"	d
GL_TIMEOUT_EXPIRED	opengl/include/GLES3/gl31.h	790;"	d
GL_TIMEOUT_EXPIRED_APPLE	opengl/include/GLES/glext.h	285;"	d
GL_TIMEOUT_EXPIRED_APPLE	opengl/include/GLES2/gl2ext.h	636;"	d
GL_TIMEOUT_IGNORED	opengl/include/GLES3/gl3.h	794;"	d
GL_TIMEOUT_IGNORED	opengl/include/GLES3/gl31.h	794;"	d
GL_TIMEOUT_IGNORED_APPLE	opengl/include/GLES/glext.h	289;"	d
GL_TIMEOUT_IGNORED_APPLE	opengl/include/GLES2/gl2ext.h	640;"	d
GL_TIMESTAMP_EXT	opengl/include/GLES2/gl2ext.h	770;"	d
GL_TIME_ELAPSED_EXT	opengl/include/GLES2/gl2ext.h	769;"	d
GL_TOP_LEVEL_ARRAY_SIZE	opengl/include/GLES3/gl31.h	990;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	opengl/include/GLES3/gl31.h	991;"	d
GL_TRANSFORM_FEEDBACK	opengl/include/GLES2/gl2ext.h	731;"	d
GL_TRANSFORM_FEEDBACK	opengl/include/GLES3/gl3.h	807;"	d
GL_TRANSFORM_FEEDBACK	opengl/include/GLES3/gl31.h	807;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	opengl/include/GLES3/gl3.h	809;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	opengl/include/GLES3/gl31.h	809;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	opengl/include/GLES3/gl31.h	1032;"	d
GL_TRANSFORM_FEEDBACK_BINDING	opengl/include/GLES3/gl3.h	810;"	d
GL_TRANSFORM_FEEDBACK_BINDING	opengl/include/GLES3/gl31.h	810;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	opengl/include/GLES3/gl3.h	634;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	opengl/include/GLES3/gl31.h	634;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	opengl/include/GLES3/gl3.h	635;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	opengl/include/GLES3/gl31.h	635;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	opengl/include/GLES3/gl3.h	623;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	opengl/include/GLES3/gl31.h	623;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	opengl/include/GLES3/gl3.h	627;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	opengl/include/GLES3/gl31.h	627;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	opengl/include/GLES3/gl3.h	626;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	opengl/include/GLES3/gl31.h	626;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	opengl/include/GLES3/gl3.h	808;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	opengl/include/GLES3/gl31.h	808;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	opengl/include/GLES3/gl3.h	628;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	opengl/include/GLES3/gl31.h	628;"	d
GL_TRANSFORM_FEEDBACK_VARYING	opengl/include/GLES3/gl31.h	970;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	opengl/include/GLES3/gl3.h	625;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	opengl/include/GLES3/gl31.h	625;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	opengl/include/GLES3/gl3.h	622;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	opengl/include/GLES3/gl31.h	622;"	d
GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE	opengl/include/GLES2/gl2ext.h	583;"	d
GL_TRIANGLES	opengl/include/GLES/gl.h	60;"	d
GL_TRIANGLES	opengl/include/GLES2/gl2.h	85;"	d
GL_TRIANGLES	opengl/include/GLES3/gl3.h	85;"	d
GL_TRIANGLES	opengl/include/GLES3/gl31.h	85;"	d
GL_TRIANGLES	opengl/tests/angeles/include/GLES/gl.h	95;"	d
GL_TRIANGLES_ADJACENCY_EXT	opengl/include/GLES2/gl2ext.h	885;"	d
GL_TRIANGLE_FAN	opengl/include/GLES/gl.h	62;"	d
GL_TRIANGLE_FAN	opengl/include/GLES2/gl2.h	87;"	d
GL_TRIANGLE_FAN	opengl/include/GLES3/gl3.h	87;"	d
GL_TRIANGLE_FAN	opengl/include/GLES3/gl31.h	87;"	d
GL_TRIANGLE_FAN	opengl/tests/angeles/include/GLES/gl.h	97;"	d
GL_TRIANGLE_STRIP	opengl/include/GLES/gl.h	61;"	d
GL_TRIANGLE_STRIP	opengl/include/GLES2/gl2.h	86;"	d
GL_TRIANGLE_STRIP	opengl/include/GLES3/gl3.h	86;"	d
GL_TRIANGLE_STRIP	opengl/include/GLES3/gl31.h	86;"	d
GL_TRIANGLE_STRIP	opengl/tests/angeles/include/GLES/gl.h	96;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	opengl/include/GLES2/gl2ext.h	886;"	d
GL_TRUE	opengl/include/GLES/gl.h	53;"	d
GL_TRUE	opengl/include/GLES2/gl2.h	80;"	d
GL_TRUE	opengl/include/GLES3/gl3.h	80;"	d
GL_TRUE	opengl/include/GLES3/gl31.h	80;"	d
GL_TRUE	opengl/tests/angeles/include/GLES/gl.h	88;"	d
GL_TYPE	opengl/include/GLES3/gl31.h	975;"	d
GL_UNCORRELATED_NV	opengl/include/GLES2/gl2ext.h	1535;"	d
GL_UNDEFINED_VERTEX_EXT	opengl/include/GLES2/gl2ext.h	902;"	d
GL_UNIFORM	opengl/include/GLES3/gl31.h	963;"	d
GL_UNIFORM_ARRAY_STRIDE	opengl/include/GLES3/gl3.h	767;"	d
GL_UNIFORM_ARRAY_STRIDE	opengl/include/GLES3/gl31.h	767;"	d
GL_UNIFORM_BARRIER_BIT	opengl/include/GLES3/gl31.h	1024;"	d
GL_UNIFORM_BLOCK	opengl/include/GLES3/gl31.h	964;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	opengl/include/GLES3/gl3.h	773;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	opengl/include/GLES3/gl31.h	773;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	opengl/include/GLES3/gl3.h	774;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	opengl/include/GLES3/gl31.h	774;"	d
GL_UNIFORM_BLOCK_BINDING	opengl/include/GLES3/gl3.h	770;"	d
GL_UNIFORM_BLOCK_BINDING	opengl/include/GLES3/gl31.h	770;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	opengl/include/GLES3/gl3.h	771;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	opengl/include/GLES3/gl31.h	771;"	d
GL_UNIFORM_BLOCK_INDEX	opengl/include/GLES3/gl3.h	765;"	d
GL_UNIFORM_BLOCK_INDEX	opengl/include/GLES3/gl31.h	765;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	opengl/include/GLES3/gl3.h	772;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	opengl/include/GLES3/gl31.h	772;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	opengl/include/GLES3/gl3.h	776;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	opengl/include/GLES3/gl31.h	776;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	opengl/include/GLES3/gl3.h	775;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	opengl/include/GLES3/gl31.h	775;"	d
GL_UNIFORM_BUFFER	opengl/include/GLES3/gl3.h	748;"	d
GL_UNIFORM_BUFFER	opengl/include/GLES3/gl31.h	748;"	d
GL_UNIFORM_BUFFER_BINDING	opengl/include/GLES3/gl3.h	749;"	d
GL_UNIFORM_BUFFER_BINDING	opengl/include/GLES3/gl31.h	749;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	opengl/include/GLES3/gl3.h	759;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	opengl/include/GLES3/gl31.h	759;"	d
GL_UNIFORM_BUFFER_SIZE	opengl/include/GLES3/gl3.h	751;"	d
GL_UNIFORM_BUFFER_SIZE	opengl/include/GLES3/gl31.h	751;"	d
GL_UNIFORM_BUFFER_START	opengl/include/GLES3/gl3.h	750;"	d
GL_UNIFORM_BUFFER_START	opengl/include/GLES3/gl31.h	750;"	d
GL_UNIFORM_IS_ROW_MAJOR	opengl/include/GLES3/gl3.h	769;"	d
GL_UNIFORM_IS_ROW_MAJOR	opengl/include/GLES3/gl31.h	769;"	d
GL_UNIFORM_MATRIX_STRIDE	opengl/include/GLES3/gl3.h	768;"	d
GL_UNIFORM_MATRIX_STRIDE	opengl/include/GLES3/gl31.h	768;"	d
GL_UNIFORM_NAME_LENGTH	opengl/include/GLES3/gl3.h	764;"	d
GL_UNIFORM_NAME_LENGTH	opengl/include/GLES3/gl31.h	764;"	d
GL_UNIFORM_OFFSET	opengl/include/GLES3/gl3.h	766;"	d
GL_UNIFORM_OFFSET	opengl/include/GLES3/gl31.h	766;"	d
GL_UNIFORM_SIZE	opengl/include/GLES3/gl3.h	763;"	d
GL_UNIFORM_SIZE	opengl/include/GLES3/gl31.h	763;"	d
GL_UNIFORM_TYPE	opengl/include/GLES3/gl3.h	762;"	d
GL_UNIFORM_TYPE	opengl/include/GLES3/gl31.h	762;"	d
GL_UNKNOWN_CONTEXT_RESET_EXT	opengl/include/GLES/glext.h	363;"	d
GL_UNKNOWN_CONTEXT_RESET_EXT	opengl/include/GLES2/gl2ext.h	1020;"	d
GL_UNPACK_ALIGNMENT	opengl/include/GLES/gl.h	235;"	d
GL_UNPACK_ALIGNMENT	opengl/include/GLES/gl.h	369;"	d
GL_UNPACK_ALIGNMENT	opengl/include/GLES2/gl2.h	172;"	d
GL_UNPACK_ALIGNMENT	opengl/include/GLES3/gl3.h	172;"	d
GL_UNPACK_ALIGNMENT	opengl/include/GLES3/gl31.h	172;"	d
GL_UNPACK_ALIGNMENT	opengl/tests/angeles/include/GLES/gl.h	326;"	d
GL_UNPACK_IMAGE_HEIGHT	opengl/include/GLES3/gl3.h	540;"	d
GL_UNPACK_IMAGE_HEIGHT	opengl/include/GLES3/gl31.h	540;"	d
GL_UNPACK_ROW_LENGTH	opengl/include/GLES3/gl3.h	525;"	d
GL_UNPACK_ROW_LENGTH	opengl/include/GLES3/gl31.h	525;"	d
GL_UNPACK_ROW_LENGTH_EXT	opengl/include/GLES2/gl2ext.h	1387;"	d
GL_UNPACK_SKIP_IMAGES	opengl/include/GLES3/gl3.h	539;"	d
GL_UNPACK_SKIP_IMAGES	opengl/include/GLES3/gl31.h	539;"	d
GL_UNPACK_SKIP_PIXELS	opengl/include/GLES3/gl3.h	527;"	d
GL_UNPACK_SKIP_PIXELS	opengl/include/GLES3/gl31.h	527;"	d
GL_UNPACK_SKIP_PIXELS_EXT	opengl/include/GLES2/gl2ext.h	1389;"	d
GL_UNPACK_SKIP_ROWS	opengl/include/GLES3/gl3.h	526;"	d
GL_UNPACK_SKIP_ROWS	opengl/include/GLES3/gl31.h	526;"	d
GL_UNPACK_SKIP_ROWS_EXT	opengl/include/GLES2/gl2ext.h	1388;"	d
GL_UNSIGNALED	opengl/include/GLES3/gl3.h	787;"	d
GL_UNSIGNALED	opengl/include/GLES3/gl31.h	787;"	d
GL_UNSIGNALED_APPLE	opengl/include/GLES/glext.h	282;"	d
GL_UNSIGNALED_APPLE	opengl/include/GLES2/gl2ext.h	633;"	d
GL_UNSIGNED_BYTE	opengl/include/GLES/gl.h	315;"	d
GL_UNSIGNED_BYTE	opengl/include/GLES2/gl2.h	197;"	d
GL_UNSIGNED_BYTE	opengl/include/GLES3/gl3.h	197;"	d
GL_UNSIGNED_BYTE	opengl/include/GLES3/gl31.h	197;"	d
GL_UNSIGNED_BYTE	opengl/tests/angeles/include/GLES/gl.h	272;"	d
GL_UNSIGNED_INT	opengl/include/GLES/glext.h	81;"	d
GL_UNSIGNED_INT	opengl/include/GLES2/gl2.h	201;"	d
GL_UNSIGNED_INT	opengl/include/GLES3/gl3.h	201;"	d
GL_UNSIGNED_INT	opengl/include/GLES3/gl31.h	201;"	d
GL_UNSIGNED_INT64_AMD	opengl/include/GLES2/gl2ext.h	479;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	opengl/include/GLES3/gl3.h	619;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	opengl/include/GLES3/gl31.h	619;"	d
GL_UNSIGNED_INT_10_10_10_2_OES	opengl/include/GLES2/gl2ext.h	458;"	d
GL_UNSIGNED_INT_24_8	opengl/include/GLES3/gl3.h	683;"	d
GL_UNSIGNED_INT_24_8	opengl/include/GLES3/gl31.h	683;"	d
GL_UNSIGNED_INT_24_8_OES	opengl/include/GLES/glext.h	164;"	d
GL_UNSIGNED_INT_24_8_OES	opengl/include/GLES2/gl2ext.h	280;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	opengl/include/GLES3/gl3.h	544;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	opengl/include/GLES3/gl31.h	544;"	d
GL_UNSIGNED_INT_2_10_10_10_REV_EXT	opengl/include/GLES2/gl2ext.h	1369;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	opengl/include/GLES3/gl3.h	621;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	opengl/include/GLES3/gl31.h	621;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	opengl/include/GLES3/gl31.h	1011;"	d
GL_UNSIGNED_INT_IMAGE_2D	opengl/include/GLES3/gl31.h	1043;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	opengl/include/GLES3/gl31.h	1046;"	d
GL_UNSIGNED_INT_IMAGE_3D	opengl/include/GLES3/gl31.h	1044;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	opengl/include/GLES2/gl2ext.h	1274;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	opengl/include/GLES3/gl31.h	1045;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	opengl/include/GLES2/gl2ext.h	1307;"	d
GL_UNSIGNED_INT_SAMPLER_2D	opengl/include/GLES3/gl3.h	661;"	d
GL_UNSIGNED_INT_SAMPLER_2D	opengl/include/GLES3/gl31.h	661;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	opengl/include/GLES3/gl3.h	664;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	opengl/include/GLES3/gl31.h	664;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	opengl/include/GLES3/gl31.h	1100;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES	opengl/include/GLES2/gl2ext.h	430;"	d
GL_UNSIGNED_INT_SAMPLER_3D	opengl/include/GLES3/gl3.h	662;"	d
GL_UNSIGNED_INT_SAMPLER_3D	opengl/include/GLES3/gl31.h	662;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	opengl/include/GLES2/gl2ext.h	1271;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	opengl/include/GLES3/gl3.h	663;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	opengl/include/GLES3/gl31.h	663;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT	opengl/include/GLES2/gl2ext.h	1304;"	d
GL_UNSIGNED_INT_VEC2	opengl/include/GLES3/gl3.h	654;"	d
GL_UNSIGNED_INT_VEC2	opengl/include/GLES3/gl31.h	654;"	d
GL_UNSIGNED_INT_VEC3	opengl/include/GLES3/gl3.h	655;"	d
GL_UNSIGNED_INT_VEC3	opengl/include/GLES3/gl31.h	655;"	d
GL_UNSIGNED_INT_VEC4	opengl/include/GLES3/gl3.h	656;"	d
GL_UNSIGNED_INT_VEC4	opengl/include/GLES3/gl31.h	656;"	d
GL_UNSIGNED_NORMALIZED	opengl/include/GLES3/gl3.h	685;"	d
GL_UNSIGNED_NORMALIZED	opengl/include/GLES3/gl31.h	685;"	d
GL_UNSIGNED_NORMALIZED_EXT	opengl/include/GLES2/gl2ext.h	712;"	d
GL_UNSIGNED_SHORT	opengl/include/GLES/gl.h	317;"	d
GL_UNSIGNED_SHORT	opengl/include/GLES2/gl2.h	199;"	d
GL_UNSIGNED_SHORT	opengl/include/GLES3/gl3.h	199;"	d
GL_UNSIGNED_SHORT	opengl/include/GLES3/gl31.h	199;"	d
GL_UNSIGNED_SHORT	opengl/tests/angeles/include/GLES/gl.h	274;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT	opengl/include/GLES/glext.h	355;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT	opengl/include/GLES2/gl2ext.h	1013;"	d
GL_UNSIGNED_SHORT_4_4_4_4	opengl/include/GLES/gl.h	374;"	d
GL_UNSIGNED_SHORT_4_4_4_4	opengl/include/GLES2/gl2.h	210;"	d
GL_UNSIGNED_SHORT_4_4_4_4	opengl/include/GLES3/gl3.h	210;"	d
GL_UNSIGNED_SHORT_4_4_4_4	opengl/include/GLES3/gl31.h	210;"	d
GL_UNSIGNED_SHORT_4_4_4_4	opengl/tests/angeles/include/GLES/gl.h	331;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT	opengl/include/GLES/glext.h	354;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT	opengl/include/GLES2/gl2ext.h	1012;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG	opengl/include/GLES/glext.h	430;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG	opengl/include/GLES2/gl2ext.h	1419;"	d
GL_UNSIGNED_SHORT_5_5_5_1	opengl/include/GLES/gl.h	375;"	d
GL_UNSIGNED_SHORT_5_5_5_1	opengl/include/GLES2/gl2.h	211;"	d
GL_UNSIGNED_SHORT_5_5_5_1	opengl/include/GLES3/gl3.h	211;"	d
GL_UNSIGNED_SHORT_5_5_5_1	opengl/include/GLES3/gl31.h	211;"	d
GL_UNSIGNED_SHORT_5_5_5_1	opengl/tests/angeles/include/GLES/gl.h	332;"	d
GL_UNSIGNED_SHORT_5_6_5	opengl/include/GLES/gl.h	376;"	d
GL_UNSIGNED_SHORT_5_6_5	opengl/include/GLES2/gl2.h	212;"	d
GL_UNSIGNED_SHORT_5_6_5	opengl/include/GLES3/gl3.h	212;"	d
GL_UNSIGNED_SHORT_5_6_5	opengl/include/GLES3/gl31.h	212;"	d
GL_UNSIGNED_SHORT_5_6_5	opengl/tests/angeles/include/GLES/gl.h	333;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	opengl/include/GLES2/gl2ext.h	618;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	opengl/include/GLES2/gl2ext.h	619;"	d
GL_VALIDATE_STATUS	opengl/include/GLES2/gl2.h	225;"	d
GL_VALIDATE_STATUS	opengl/include/GLES3/gl3.h	225;"	d
GL_VALIDATE_STATUS	opengl/include/GLES3/gl31.h	225;"	d
GL_VENDOR	opengl/include/GLES/gl.h	401;"	d
GL_VENDOR	opengl/include/GLES2/gl2.h	248;"	d
GL_VENDOR	opengl/include/GLES3/gl3.h	248;"	d
GL_VENDOR	opengl/include/GLES3/gl31.h	248;"	d
GL_VENDOR	opengl/tests/angeles/include/GLES/gl.h	358;"	d
GL_VERSION	opengl/include/GLES/gl.h	403;"	d
GL_VERSION	opengl/include/GLES2/gl2.h	250;"	d
GL_VERSION	opengl/include/GLES3/gl3.h	250;"	d
GL_VERSION	opengl/include/GLES3/gl31.h	250;"	d
GL_VERSION	opengl/tests/angeles/include/GLES/gl.h	360;"	d
GL_VERSION_ES_CL_1_0	opengl/include/GLES/gl.h	42;"	d
GL_VERSION_ES_CL_1_1	opengl/include/GLES/gl.h	44;"	d
GL_VERSION_ES_CM_1_0	opengl/include/GLES/gl.h	41;"	d
GL_VERSION_ES_CM_1_1	opengl/include/GLES/gl.h	43;"	d
GL_VERTEX_ARRAY	opengl/include/GLES/gl.h	155;"	d
GL_VERTEX_ARRAY	opengl/tests/angeles/include/GLES/gl.h	182;"	d
GL_VERTEX_ARRAY_BINDING	opengl/include/GLES3/gl3.h	737;"	d
GL_VERTEX_ARRAY_BINDING	opengl/include/GLES3/gl31.h	737;"	d
GL_VERTEX_ARRAY_BINDING_OES	opengl/include/GLES/glext.h	222;"	d
GL_VERTEX_ARRAY_BINDING_OES	opengl/include/GLES2/gl2ext.h	439;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	opengl/include/GLES/gl.h	510;"	d
GL_VERTEX_ARRAY_KHR	opengl/include/GLES2/gl2ext.h	108;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	opengl/include/GLES2/gl2ext.h	730;"	d
GL_VERTEX_ARRAY_POINTER	opengl/include/GLES/gl.h	267;"	d
GL_VERTEX_ARRAY_SIZE	opengl/include/GLES/gl.h	256;"	d
GL_VERTEX_ARRAY_STRIDE	opengl/include/GLES/gl.h	258;"	d
GL_VERTEX_ARRAY_TYPE	opengl/include/GLES/gl.h	257;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	opengl/include/GLES3/gl31.h	1022;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	opengl/include/GLES2/gl2.h	329;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	opengl/include/GLES3/gl3.h	329;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	opengl/include/GLES3/gl31.h	329;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	opengl/include/GLES3/gl3.h	795;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	opengl/include/GLES3/gl31.h	795;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE	opengl/include/GLES2/gl2ext.h	544;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT	opengl/include/GLES2/gl2ext.h	921;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV	opengl/include/GLES2/gl2ext.h	1697;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	opengl/include/GLES2/gl2.h	323;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	opengl/include/GLES3/gl3.h	323;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	opengl/include/GLES3/gl31.h	323;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	opengl/include/GLES3/gl3.h	611;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	opengl/include/GLES3/gl31.h	611;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	opengl/include/GLES2/gl2.h	327;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	opengl/include/GLES3/gl3.h	327;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	opengl/include/GLES3/gl31.h	327;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	opengl/include/GLES2/gl2.h	328;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	opengl/include/GLES3/gl3.h	328;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	opengl/include/GLES3/gl31.h	328;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	opengl/include/GLES2/gl2.h	324;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	opengl/include/GLES3/gl3.h	324;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	opengl/include/GLES3/gl31.h	324;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	opengl/include/GLES2/gl2.h	325;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	opengl/include/GLES3/gl3.h	325;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	opengl/include/GLES3/gl31.h	325;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	opengl/include/GLES2/gl2.h	326;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	opengl/include/GLES3/gl3.h	326;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	opengl/include/GLES3/gl31.h	326;"	d
GL_VERTEX_ATTRIB_BINDING	opengl/include/GLES3/gl31.h	1101;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	opengl/include/GLES3/gl31.h	1102;"	d
GL_VERTEX_BINDING_BUFFER	opengl/include/GLES3/gl31.h	1106;"	d
GL_VERTEX_BINDING_DIVISOR	opengl/include/GLES3/gl31.h	1103;"	d
GL_VERTEX_BINDING_OFFSET	opengl/include/GLES3/gl31.h	1104;"	d
GL_VERTEX_BINDING_STRIDE	opengl/include/GLES3/gl31.h	1105;"	d
GL_VERTEX_SHADER	opengl/include/GLES2/gl2.h	214;"	d
GL_VERTEX_SHADER	opengl/include/GLES3/gl3.h	214;"	d
GL_VERTEX_SHADER	opengl/include/GLES3/gl31.h	214;"	d
GL_VERTEX_SHADER_BIT	opengl/include/GLES3/gl31.h	993;"	d
GL_VERTEX_SHADER_BIT_EXT	opengl/include/GLES2/gl2ext.h	1053;"	d
GL_VIEWPORT	opengl/include/GLES/gl.h	219;"	d
GL_VIEWPORT	opengl/include/GLES2/gl2.h	168;"	d
GL_VIEWPORT	opengl/include/GLES3/gl3.h	168;"	d
GL_VIEWPORT	opengl/include/GLES3/gl31.h	168;"	d
GL_VIVIDLIGHT_NV	opengl/include/GLES2/gl2ext.h	1536;"	d
GL_VIV_shader_binary	opengl/include/GLES2/gl2ext.h	1924;"	d
GL_WAIT_FAILED	opengl/include/GLES3/gl3.h	792;"	d
GL_WAIT_FAILED	opengl/include/GLES3/gl31.h	792;"	d
GL_WAIT_FAILED_APPLE	opengl/include/GLES/glext.h	287;"	d
GL_WAIT_FAILED_APPLE	opengl/include/GLES2/gl2ext.h	638;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_OES	opengl/include/GLES/glext.h	158;"	d
GL_WEIGHT_ARRAY_OES	opengl/include/GLES/glext.h	147;"	d
GL_WEIGHT_ARRAY_POINTER_OES	opengl/include/GLES/glext.h	157;"	d
GL_WEIGHT_ARRAY_SIZE_OES	opengl/include/GLES/glext.h	154;"	d
GL_WEIGHT_ARRAY_STRIDE_OES	opengl/include/GLES/glext.h	156;"	d
GL_WEIGHT_ARRAY_TYPE_OES	opengl/include/GLES/glext.h	155;"	d
GL_WRITEONLY_RENDERING_QCOM	opengl/include/GLES/glext.h	514;"	d
GL_WRITEONLY_RENDERING_QCOM	opengl/include/GLES2/gl2ext.h	1920;"	d
GL_WRITE_ONLY	opengl/include/GLES3/gl31.h	1051;"	d
GL_WRITE_ONLY_OES	opengl/include/GLES/glext.h	128;"	d
GL_WRITE_ONLY_OES	opengl/include/GLES2/gl2ext.h	263;"	d
GL_XOR	opengl/include/GLES/gl.h	328;"	d
GL_XOR	opengl/tests/angeles/include/GLES/gl.h	285;"	d
GL_XOR_NV	opengl/include/GLES2/gl2ext.h	1537;"	d
GL_Z400_BINARY_AMD	opengl/include/GLES2/gl2ext.h	512;"	d
GL_ZERO	opengl/include/GLES/gl.h	75;"	d
GL_ZERO	opengl/include/GLES2/gl2.h	88;"	d
GL_ZERO	opengl/include/GLES3/gl3.h	88;"	d
GL_ZERO	opengl/include/GLES3/gl31.h	88;"	d
GL_ZERO	opengl/tests/angeles/include/GLES/gl.h	110;"	d
GLbitfield	opengl/include/GLES/gl.h	/^typedef unsigned int     GLbitfield;$/;"	t
GLbitfield	opengl/include/GLES2/gl2.h	/^typedef unsigned int GLbitfield;$/;"	t
GLbitfield	opengl/include/GLES3/gl3.h	/^typedef unsigned int GLbitfield;$/;"	t
GLbitfield	opengl/include/GLES3/gl31.h	/^typedef unsigned int GLbitfield;$/;"	t
GLbitfield	opengl/tests/angeles/include/GLES/gl.h	/^typedef unsigned int GLbitfield;$/;"	t
GLboolean	opengl/include/GLES/gl.h	/^typedef unsigned char    GLboolean;$/;"	t
GLboolean	opengl/include/GLES2/gl2.h	/^typedef unsigned char GLboolean;$/;"	t
GLboolean	opengl/include/GLES3/gl3.h	/^typedef unsigned char GLboolean;$/;"	t
GLboolean	opengl/include/GLES3/gl31.h	/^typedef unsigned char GLboolean;$/;"	t
GLboolean	opengl/tests/angeles/include/GLES/gl.h	/^typedef unsigned char GLboolean;$/;"	t
GLbooleanToString	opengl/libs/EGL/trace.cpp	/^static const char* GLbooleanToString(GLboolean arg) {$/;"	f	namespace:android
GLbyte	opengl/include/GLES/gl.h	/^typedef khronos_int8_t   GLbyte;$/;"	t
GLbyte	opengl/include/GLES2/gl2.h	/^typedef khronos_int8_t GLbyte;$/;"	t
GLbyte	opengl/include/GLES3/gl3.h	/^typedef khronos_int8_t GLbyte;$/;"	t
GLbyte	opengl/include/GLES3/gl31.h	/^typedef khronos_int8_t GLbyte;$/;"	t
GLbyte	opengl/tests/angeles/include/GLES/gl.h	/^typedef signed char GLbyte;$/;"	t
GLchar	opengl/include/GLES/gl.h	/^typedef char             GLchar;$/;"	t
GLchar	opengl/include/GLES2/gl2.h	/^typedef char GLchar;$/;"	t
GLchar	opengl/include/GLES3/gl3.h	/^typedef char GLchar;$/;"	t
GLchar	opengl/include/GLES3/gl31.h	/^typedef char GLchar;$/;"	t
GLclampf	opengl/include/GLES/gl.h	/^typedef khronos_float_t  GLclampf;$/;"	t
GLclampf	opengl/include/GLES2/gl2.h	/^typedef khronos_float_t GLclampf;$/;"	t
GLclampf	opengl/include/GLES3/gl3.h	/^typedef khronos_float_t GLclampf;$/;"	t
GLclampf	opengl/include/GLES3/gl31.h	/^typedef khronos_float_t GLclampf;$/;"	t
GLclampf	opengl/tests/angeles/include/GLES/gl.h	/^typedef float GLclampf;$/;"	t
GLclampx	opengl/include/GLES/gl.h	/^typedef khronos_int32_t  GLclampx;$/;"	t
GLclampx	opengl/tests/angeles/include/GLES/gl.h	/^typedef int GLclampx;$/;"	t
GLeglImageOES	opengl/include/GLES/glext.h	/^typedef void* GLeglImageOES;$/;"	t
GLeglImageOES	opengl/include/GLES2/gl2ext.h	/^typedef void *GLeglImageOES;$/;"	t
GLenum	opengl/include/GLES/gl.h	/^typedef unsigned int     GLenum;$/;"	t
GLenum	opengl/include/GLES2/gl2.h	/^typedef unsigned int GLenum;$/;"	t
GLenum	opengl/include/GLES3/gl3.h	/^typedef unsigned int GLenum;$/;"	t
GLenum	opengl/include/GLES3/gl31.h	/^typedef unsigned int GLenum;$/;"	t
GLenum	opengl/tests/angeles/include/GLES/gl.h	/^typedef unsigned int GLenum;$/;"	t
GLenumString	opengl/libs/EGL/trace.cpp	/^struct GLenumString {$/;"	s	namespace:android	file:
GLfixed	opengl/include/GLES/gl.h	/^typedef khronos_int32_t  GLfixed;$/;"	t
GLfixed	opengl/include/GLES2/gl2.h	/^typedef khronos_int32_t GLfixed;$/;"	t
GLfixed	opengl/include/GLES3/gl3.h	/^typedef khronos_int32_t GLfixed;$/;"	t
GLfixed	opengl/include/GLES3/gl31.h	/^typedef khronos_int32_t GLfixed;$/;"	t
GLfixed	opengl/tests/angeles/include/GLES/gl.h	/^typedef int GLfixed;$/;"	t
GLfloat	opengl/include/GLES/gl.h	/^typedef khronos_float_t  GLfloat;$/;"	t
GLfloat	opengl/include/GLES2/gl2.h	/^typedef khronos_float_t GLfloat;$/;"	t
GLfloat	opengl/include/GLES3/gl3.h	/^typedef khronos_float_t GLfloat;$/;"	t
GLfloat	opengl/include/GLES3/gl31.h	/^typedef khronos_float_t GLfloat;$/;"	t
GLfloat	opengl/tests/angeles/include/GLES/gl.h	/^typedef float GLfloat;$/;"	t
GLhalf	opengl/include/GLES3/gl3.h	/^typedef unsigned short GLhalf;$/;"	t
GLhalf	opengl/include/GLES3/gl31.h	/^typedef unsigned short GLhalf;$/;"	t
GLint	opengl/include/GLES/gl.h	/^typedef int              GLint;$/;"	t
GLint	opengl/include/GLES2/gl2.h	/^typedef int GLint;$/;"	t
GLint	opengl/include/GLES3/gl3.h	/^typedef int GLint;$/;"	t
GLint	opengl/include/GLES3/gl31.h	/^typedef int GLint;$/;"	t
GLint	opengl/tests/angeles/include/GLES/gl.h	/^typedef int GLint;$/;"	t
GLint64	opengl/include/GLES/glext.h	/^typedef khronos_int64_t GLint64;$/;"	t
GLint64	opengl/include/GLES2/gl2.h	/^typedef khronos_int64_t GLint64;$/;"	t
GLint64	opengl/include/GLES3/gl3.h	/^typedef khronos_int64_t GLint64;$/;"	t
GLint64	opengl/include/GLES3/gl31.h	/^typedef khronos_int64_t GLint64;$/;"	t
GLintptr	opengl/include/GLES/gl.h	/^typedef khronos_intptr_t GLintptr;$/;"	t
GLintptr	opengl/include/GLES2/gl2.h	/^typedef khronos_intptr_t GLintptr;$/;"	t
GLintptr	opengl/include/GLES3/gl3.h	/^typedef khronos_intptr_t GLintptr;$/;"	t
GLintptr	opengl/include/GLES3/gl31.h	/^typedef khronos_intptr_t GLintptr;$/;"	t
GLintptrARB	opengl/tests/angeles/include/GLES/gl.h	/^typedef int GLintptrARB;$/;"	t
GLshort	opengl/include/GLES/gl.h	/^typedef short            GLshort;$/;"	t
GLshort	opengl/include/GLES2/gl2.h	/^typedef short GLshort;$/;"	t
GLshort	opengl/include/GLES3/gl3.h	/^typedef short GLshort;$/;"	t
GLshort	opengl/include/GLES3/gl31.h	/^typedef short GLshort;$/;"	t
GLshort	opengl/tests/angeles/include/GLES/gl.h	/^typedef short GLshort;$/;"	t
GLsizei	opengl/include/GLES/gl.h	/^typedef int              GLsizei;$/;"	t
GLsizei	opengl/include/GLES2/gl2.h	/^typedef int GLsizei;$/;"	t
GLsizei	opengl/include/GLES3/gl3.h	/^typedef int GLsizei;$/;"	t
GLsizei	opengl/include/GLES3/gl31.h	/^typedef int GLsizei;$/;"	t
GLsizei	opengl/tests/angeles/include/GLES/gl.h	/^typedef int GLsizei;$/;"	t
GLsizeiptr	opengl/include/GLES/gl.h	/^typedef khronos_ssize_t  GLsizeiptr;$/;"	t
GLsizeiptr	opengl/include/GLES2/gl2.h	/^typedef khronos_ssize_t GLsizeiptr;$/;"	t
GLsizeiptr	opengl/include/GLES3/gl3.h	/^typedef khronos_ssize_t GLsizeiptr;$/;"	t
GLsizeiptr	opengl/include/GLES3/gl31.h	/^typedef khronos_ssize_t GLsizeiptr;$/;"	t
GLsizeiptrARB	opengl/tests/angeles/include/GLES/gl.h	/^typedef int GLsizeiptrARB;$/;"	t
GLsync	opengl/include/GLES/glext.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLsync	opengl/include/GLES2/gl2.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLsync	opengl/include/GLES3/gl3.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLsync	opengl/include/GLES3/gl31.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLubyte	opengl/include/GLES/gl.h	/^typedef khronos_uint8_t  GLubyte;$/;"	t
GLubyte	opengl/include/GLES2/gl2.h	/^typedef khronos_uint8_t GLubyte;$/;"	t
GLubyte	opengl/include/GLES3/gl3.h	/^typedef khronos_uint8_t GLubyte;$/;"	t
GLubyte	opengl/include/GLES3/gl31.h	/^typedef khronos_uint8_t GLubyte;$/;"	t
GLubyte	opengl/tests/angeles/include/GLES/gl.h	/^typedef unsigned char GLubyte;$/;"	t
GLuint	opengl/include/GLES/gl.h	/^typedef unsigned int     GLuint;$/;"	t
GLuint	opengl/include/GLES2/gl2.h	/^typedef unsigned int GLuint;$/;"	t
GLuint	opengl/include/GLES3/gl3.h	/^typedef unsigned int GLuint;$/;"	t
GLuint	opengl/include/GLES3/gl31.h	/^typedef unsigned int GLuint;$/;"	t
GLuint	opengl/tests/angeles/include/GLES/gl.h	/^typedef unsigned int GLuint;$/;"	t
GLuint64	opengl/include/GLES/glext.h	/^typedef khronos_uint64_t GLuint64;$/;"	t
GLuint64	opengl/include/GLES2/gl2.h	/^typedef khronos_uint64_t GLuint64;$/;"	t
GLuint64	opengl/include/GLES3/gl3.h	/^typedef khronos_uint64_t GLuint64;$/;"	t
GLuint64	opengl/include/GLES3/gl31.h	/^typedef khronos_uint64_t GLuint64;$/;"	t
GLushort	opengl/include/GLES/gl.h	/^typedef unsigned short   GLushort;$/;"	t
GLushort	opengl/include/GLES2/gl2.h	/^typedef unsigned short GLushort;$/;"	t
GLushort	opengl/include/GLES3/gl3.h	/^typedef unsigned short GLushort;$/;"	t
GLushort	opengl/include/GLES3/gl31.h	/^typedef unsigned short GLushort;$/;"	t
GLushort	opengl/tests/angeles/include/GLES/gl.h	/^typedef unsigned short GLushort;$/;"	t
GLvoid	opengl/include/GLES/gl.h	/^typedef void             GLvoid;$/;"	t
GLvoid	opengl/include/GLES2/gl2.h	/^typedef void GLvoid;$/;"	t
GLvoid	opengl/include/GLES3/gl3.h	/^typedef void GLvoid;$/;"	t
GLvoid	opengl/include/GLES3/gl31.h	/^typedef void GLvoid;$/;"	t
GLvoid	opengl/tests/angeles/include/GLES/gl.h	/^typedef void GLvoid;$/;"	t
GPUTILERECT_DEBUG	services/surfaceflinger/DisplayHardware/HWComposer.cpp	50;"	d	file:
GQGt	services/sensorservice/Fusion.h	/^    mat<mat33_t, 2, 2> GQGt;$/;"	m	class:android::Fusion
GREEN	services/surfaceflinger/Colorizer.h	/^        GREEN   = 32,$/;"	e	enum:android::Colorizer::color
GYRO	services/sensorservice/Fusion.h	/^    enum { ACC=0x1, MAG=0x2, GYRO=0x4 };$/;"	e	enum:android::Fusion::__anon52
GenerateEGL	opengl/tools/glgen/src/GenerateEGL.java	/^public class GenerateEGL {$/;"	c
GenerateGL	opengl/tools/glgen/src/GenerateGL.java	/^public class GenerateGL {$/;"	c
GenerateGLES	opengl/tools/glgen/src/GenerateGLES.java	/^public class GenerateGLES {$/;"	c
GeneratorOptions	opengl/tools/glgen2/registry/reg.py	/^class GeneratorOptions:$/;"	c
Geometry	services/surfaceflinger/Layer.h	/^    struct Geometry {$/;"	s	class:android::Layer
GestureMode	services/inputflinger/InputReader.h	/^        enum GestureMode {$/;"	g	struct:android::TouchInputMapper::Parameters
GetAndroidNativeBufferUsageParams	include/media/hardware/HardwareAPI.h	/^struct GetAndroidNativeBufferUsageParams {$/;"	s	namespace:android
GetCachedSize	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:android::gltrace::GLMessage
GetCachedSize	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:android::gltrace::GLMessage_DataType
GetCachedSize	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  int GetCachedSize() const { return _cached_size_; }$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
GetComponentVersion	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetComponentVersion)($/;"	m	struct:OMX_COMPONENTTYPE
GetConfig	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetConfig)($/;"	m	struct:OMX_COMPONENTTYPE
GetExtensionIndex	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetExtensionIndex)($/;"	m	struct:OMX_COMPONENTTYPE
GetMinUndequeuedBufferCount	libs/gui/tests/BufferQueue_test.cpp	/^    void GetMinUndequeuedBufferCount(int* bufferCount) {$/;"	f	class:android::BufferQueueTest
GetParameter	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetParameter)($/;"	m	struct:OMX_COMPONENTTYPE
GetPosition	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*GetPosition)( CPhandle hContent, CPuint *pPosition);$/;"	m	struct:CP_PIPETYPE
GetState	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*GetState)($/;"	m	struct:OMX_COMPONENTTYPE
GetStateFunc	services/inputflinger/InputReader.h	/^    typedef int32_t (InputDevice::*GetStateFunc)(uint32_t sourceMask, int32_t code);$/;"	t	class:android::InputReader
GetStateFunc	services/inputflinger/InputReader.h	/^    typedef int32_t (InputMapper::*GetStateFunc)(uint32_t sourceMask, int32_t code);$/;"	t	class:android::InputDevice
GetTypeName	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^::std::string GLMessage::GetTypeName() const {$/;"	f	class:android::gltrace::GLMessage
GetTypeName	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^::std::string GLMessage_DataType::GetTypeName() const {$/;"	f	class:android::gltrace::GLMessage_DataType
GetTypeName	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^::std::string GLMessage_FrameBuffer::GetTypeName() const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
GetWriteBuffer	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*GetWriteBuffer)( CPhandle hContent, CPbyte **ppBuffer, CPuint nSize);$/;"	m	struct:CP_PIPETYPE
GlesVersion	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    enum GlesVersion {$/;"	g	class:android::RenderEngine
GradientRenderer	cmds/flatland/Renderers.cpp	/^class GradientRenderer {$/;"	c	namespace:android	file:
GraphicBuffer	include/ui/GraphicBuffer.h	/^class GraphicBuffer$/;"	c	namespace:android
GraphicBuffer	libs/ui/GraphicBuffer.cpp	/^GraphicBuffer::GraphicBuffer()$/;"	f	class:android::GraphicBuffer
GraphicBuffer	libs/ui/GraphicBuffer.cpp	/^GraphicBuffer::GraphicBuffer(ANativeWindowBuffer* buffer, bool keepOwnership)$/;"	f	class:android::GraphicBuffer
GraphicBuffer	libs/ui/GraphicBuffer.cpp	/^GraphicBuffer::GraphicBuffer(uint32_t w, uint32_t h,$/;"	f	class:android::GraphicBuffer
GraphicBufferAlloc	include/gui/GraphicBufferAlloc.h	/^class GraphicBufferAlloc : public BnGraphicBufferAlloc {$/;"	c	namespace:android
GraphicBufferAlloc	libs/gui/GraphicBufferAlloc.cpp	/^GraphicBufferAlloc::GraphicBufferAlloc() {$/;"	f	class:android::GraphicBufferAlloc
GraphicBufferAllocator	include/ui/GraphicBufferAllocator.h	/^class GraphicBufferAllocator : public Singleton<GraphicBufferAllocator>$/;"	c	namespace:android
GraphicBufferAllocator	libs/ui/GraphicBufferAllocator.cpp	/^GraphicBufferAllocator::GraphicBufferAllocator()$/;"	f	class:android::GraphicBufferAllocator
GraphicBufferMapper	include/ui/GraphicBufferMapper.h	/^class GraphicBufferMapper : public Singleton<GraphicBufferMapper>$/;"	c	namespace:android
GraphicBufferMapper	libs/ui/GraphicBufferMapper.cpp	/^GraphicBufferMapper::GraphicBufferMapper()$/;"	f	class:android::GraphicBufferMapper
GraphicProducerWrapper	services/surfaceflinger/SurfaceFlinger.cpp	/^    GraphicProducerWrapper(const sp<IGraphicBufferProducer>& impl)$/;"	f	class:android::GraphicProducerWrapper
GraphicProducerWrapper	services/surfaceflinger/SurfaceFlinger.cpp	/^class GraphicProducerWrapper : public BBinder, public MessageHandler {$/;"	c	namespace:android	file:
GravitySensor	services/sensorservice/GravitySensor.cpp	/^GravitySensor::GravitySensor(sensor_t const* list, size_t count)$/;"	f	class:android::GravitySensor
GravitySensor	services/sensorservice/GravitySensor.h	/^class GravitySensor : public SensorInterface {$/;"	c	namespace:android
Grid	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       public Grid(int w, int h) {$/;"	m	class:TestView.Grid
Grid	opengl/tests/testViewport/src/com/android/test/TestView.java	/^   private static class Grid {$/;"	c	class:TestView
Group	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        Group() : width(0), height(0) { }$/;"	f	struct:android::GLES20RenderEngine::Group
Group	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    struct Group {$/;"	s	class:android::GLES20RenderEngine
GroupInfo	opengl/tools/glgen2/registry/reg.py	/^class GroupInfo(BaseInfo):$/;"	c
GyroDriftSensor	services/sensorservice/RotationVectorSensor.cpp	/^GyroDriftSensor::GyroDriftSensor()$/;"	f	class:android::GyroDriftSensor
GyroDriftSensor	services/sensorservice/RotationVectorSensor.h	/^class GyroDriftSensor : public SensorInterface {$/;"	c	namespace:android
HARDWARE_API_H_	include/media/hardware/HardwareAPI.h	19;"	d
HARDWARE_IS_DEVICE_FORMAT	services/surfaceflinger/Layer.cpp	919;"	d	file:
HDCPModule	include/media/hardware/HDCPAPI.h	/^    HDCPModule(void *cookie, ObserverFunc observerNotify) {};$/;"	f	struct:android::HDCPModule
HDCPModule	include/media/hardware/HDCPAPI.h	/^struct HDCPModule {$/;"	s	namespace:android
HDCP_API_H_	include/media/hardware/HDCPAPI.h	19;"	d
HDCP_CAPS_ENCRYPT	include/media/hardware/HDCPAPI.h	/^        HDCP_CAPS_ENCRYPT = (1 << 0),$/;"	e	enum:android::HDCPModule::__anon126
HDCP_CAPS_ENCRYPT_NATIVE	include/media/hardware/HDCPAPI.h	/^        HDCP_CAPS_ENCRYPT_NATIVE = (1 << 1),$/;"	e	enum:android::HDCPModule::__anon126
HDCP_INITIALIZATION_COMPLETE	include/media/hardware/HDCPAPI.h	/^        HDCP_INITIALIZATION_COMPLETE,$/;"	e	enum:android::HDCPModule::__anon125
HDCP_INITIALIZATION_FAILED	include/media/hardware/HDCPAPI.h	/^        HDCP_INITIALIZATION_FAILED,$/;"	e	enum:android::HDCPModule::__anon125
HDCP_REVOKED_CONNECTION	include/media/hardware/HDCPAPI.h	/^        HDCP_REVOKED_CONNECTION,$/;"	e	enum:android::HDCPModule::__anon125
HDCP_SESSION_ESTABLISHED	include/media/hardware/HDCPAPI.h	/^        HDCP_SESSION_ESTABLISHED,$/;"	e	enum:android::HDCPModule::__anon125
HDCP_SHUTDOWN_COMPLETE	include/media/hardware/HDCPAPI.h	/^        HDCP_SHUTDOWN_COMPLETE,$/;"	e	enum:android::HDCPModule::__anon125
HDCP_SHUTDOWN_FAILED	include/media/hardware/HDCPAPI.h	/^        HDCP_SHUTDOWN_FAILED,$/;"	e	enum:android::HDCPModule::__anon125
HDCP_TOPOLOGY_EXECEEDED	include/media/hardware/HDCPAPI.h	/^        HDCP_TOPOLOGY_EXECEEDED,$/;"	e	enum:android::HDCPModule::__anon125
HDCP_UNAUTHENTICATED_CONNECTION	include/media/hardware/HDCPAPI.h	/^        HDCP_UNAUTHENTICATED_CONNECTION,$/;"	e	enum:android::HDCPModule::__anon125
HDCP_UNAUTHORIZED_CONNECTION	include/media/hardware/HDCPAPI.h	/^        HDCP_UNAUTHORIZED_CONNECTION,$/;"	e	enum:android::HDCPModule::__anon125
HDCP_UNKNOWN_ERROR	include/media/hardware/HDCPAPI.h	/^        HDCP_UNKNOWN_ERROR,$/;"	e	enum:android::HDCPModule::__anon125
HEAP_ID	libs/binder/IMemory.cpp	/^    HEAP_ID = IBinder::FIRST_CALL_TRANSACTION$/;"	e	enum:android::__anon266	file:
HEAP_MASK_FILTER	libs/binder/MemoryHeapIon.cpp	44;"	d	file:
HISTORY_SIZE	include/input/VelocityTracker.h	/^    static const uint32_t HISTORY_SIZE = 20;$/;"	m	class:android::LeastSquaresVelocityTrackerStrategy
HISTORY_SIZE	include/input/VelocityTracker.h	/^    static const uint32_t HISTORY_SIZE = 20;$/;"	m	class:android::LegacyVelocityTrackerStrategy
HISTORY_SIZE	libs/input/VelocityTracker.cpp	/^const uint32_t LeastSquaresVelocityTrackerStrategy::HISTORY_SIZE;$/;"	m	class:android::LeastSquaresVelocityTrackerStrategy	file:
HISTORY_SIZE	libs/input/VelocityTracker.cpp	/^const uint32_t LegacyVelocityTrackerStrategy::HISTORY_SIZE;$/;"	m	class:android::LegacyVelocityTrackerStrategy	file:
HORIZON	include/input/VelocityTracker.h	/^    static const nsecs_t HORIZON = 100 * 1000000; \/\/ 100 ms$/;"	m	class:android::LeastSquaresVelocityTrackerStrategy
HORIZON	include/input/VelocityTracker.h	/^    static const nsecs_t HORIZON = 200 * 1000000; \/\/ 100 ms$/;"	m	class:android::LegacyVelocityTrackerStrategy
HORIZON	libs/input/VelocityTracker.cpp	/^const nsecs_t LeastSquaresVelocityTrackerStrategy::HORIZON;$/;"	m	class:android::LeastSquaresVelocityTrackerStrategy	file:
HORIZON	libs/input/VelocityTracker.cpp	/^const nsecs_t LegacyVelocityTrackerStrategy::HORIZON;$/;"	m	class:android::LegacyVelocityTrackerStrategy	file:
HOVER	services/inputflinger/InputReader.h	/^            HOVER,$/;"	e	enum:android::TouchInputMapper::PointerGesture::Mode
HWCLayer	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    class HWCLayer : public HWCLayerInterface {$/;"	c	class:android::HWComposer
HWCLayerInterface	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    class HWCLayerInterface {$/;"	c	class:android::HWComposer
HWCLayerVersion1	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    HWCLayerVersion1(struct hwc_composer_device_1* hwc, hwc_layer_1_t* layer)$/;"	f	class:android::HWCLayerVersion1
HWCLayerVersion1	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^class HWCLayerVersion1 : public Iterable<HWCLayerVersion1, hwc_layer_1_t> {$/;"	c	namespace:android	file:
HWComposer	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^HWComposer::HWComposer($/;"	f	class:android::HWComposer
HWComposer	services/surfaceflinger/DisplayHardware/HWComposer.h	/^class HWComposer$/;"	c	namespace:android
Handler	services/surfaceflinger/MessageQueue.h	/^        Handler(MessageQueue& queue) : mQueue(queue), mEventMask(0) { }$/;"	f	class:android::MessageQueue::Handler
Handler	services/surfaceflinger/MessageQueue.h	/^    class Handler : public MessageHandler {$/;"	c	class:android::MessageQueue
HardwareSensor	services/sensorservice/SensorInterface.cpp	/^HardwareSensor::HardwareSensor(const sensor_t& sensor)$/;"	f	class:android::HardwareSensor
HardwareSensor	services/sensorservice/SensorInterface.h	/^class HardwareSensor : public SensorInterface$/;"	c	namespace:android
Head	services/sensorservice/traits.h	/^    typedef T Head;$/;"	t	struct:android::TypeList
Header	include/gui/DisplayEventReceiver.h	/^        struct Header {$/;"	s	struct:android::DisplayEventReceiver::Event
Header	include/input/InputTransport.h	/^    struct Header {$/;"	s	struct:android::InputMessage
HeapCache	libs/binder/IMemory.cpp	/^HeapCache::HeapCache()$/;"	f	class:android::HeapCache
HeapCache	libs/binder/IMemory.cpp	/^class HeapCache : public IBinder::DeathRecipient$/;"	c	namespace:android	file:
HexDump	include/binder/TextOutput.h	/^class HexDump$/;"	c	namespace:android
HexDump	libs/binder/TextOutput.cpp	/^HexDump::HexDump(const void *buf, size_t size, size_t bytesPerLine)$/;"	f	class:android::HexDump
HibernationMachine	opengl/libs/EGL/egl_display.h	/^        HibernationMachine(): mWakeCount(0), mHibernating(false),$/;"	f	class:android::egl_display_t::HibernationMachine
HibernationMachine	opengl/libs/EGL/egl_display.h	/^    class HibernationMachine {$/;"	c	class:android::egl_display_t
History	include/input/InputTransport.h	/^    struct History {$/;"	s	class:android::InputConsumer
Hotplug	include/gui/DisplayEventReceiver.h	/^        struct Hotplug {$/;"	s	struct:android::DisplayEventReceiver::Event
HwcTestDim	opengl/tests/hwc/hwcTestLib.h	/^    HwcTestDim(): _w(0), _h(0) {};$/;"	f	class:HwcTestDim
HwcTestDim	opengl/tests/hwc/hwcTestLib.h	/^    HwcTestDim(uint32_t w, uint32_t h) : _w(w), _h(h) {}$/;"	f	class:HwcTestDim
HwcTestDim	opengl/tests/hwc/hwcTestLib.h	/^class HwcTestDim {$/;"	c
I	opengl/libagl/matrix.cpp	32;"	d	file:
IAppOpsCallback	include/binder/IAppOpsCallback.h	/^class IAppOpsCallback : public IInterface$/;"	c	namespace:android
IAppOpsService	include/binder/IAppOpsService.h	/^class IAppOpsService : public IInterface$/;"	c	namespace:android
IBatteryPropertiesListener	include/batteryservice/IBatteryPropertiesListener.h	/^class IBatteryPropertiesListener : public IInterface {$/;"	c	namespace:android
IBatteryPropertiesRegistrar	include/batteryservice/IBatteryPropertiesRegistrar.h	/^class IBatteryPropertiesRegistrar : public IInterface {$/;"	c	namespace:android
IBatteryStats	include/binder/IBatteryStats.h	/^class IBatteryStats : public IInterface$/;"	c	namespace:android
IBinder	include/binder/IBinder.h	/^class IBinder : public virtual RefBase$/;"	c	namespace:android
IBinder	libs/binder/Binder.cpp	/^IBinder::IBinder()$/;"	f	class:android::IBinder
IConsumerListener	include/gui/IConsumerListener.h	/^class IConsumerListener : public ConsumerListener, public IInterface$/;"	c	namespace:android
ID	services/inputflinger/tests/InputReader_test.cpp	/^        ID = 1 << 6,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
IDENTITY	services/surfaceflinger/Transform.h	/^                IDENTITY            = 0,$/;"	e	enum:android::Transform::type_mask
IDMAP_PREFIX	cmds/installd/installd.h	80;"	d
IDMAP_SUFFIX	cmds/installd/installd.h	81;"	d
IDisplayEventConnection	include/gui/IDisplayEventConnection.h	/^class IDisplayEventConnection : public IInterface$/;"	c	namespace:android
IF_LOG_COMMANDS	libs/binder/IPCThreadState.cpp	51;"	d	file:
IF_LOG_COMMANDS	libs/binder/IPCThreadState.cpp	60;"	d	file:
IF_LOG_REMOTEREFS	libs/binder/IPCThreadState.cpp	53;"	d	file:
IF_LOG_REMOTEREFS	libs/binder/IPCThreadState.cpp	62;"	d	file:
IF_LOG_TRANSACTIONS	libs/binder/IPCThreadState.cpp	50;"	d	file:
IF_LOG_TRANSACTIONS	libs/binder/IPCThreadState.cpp	59;"	d	file:
IGraphicBufferAlloc	include/gui/IGraphicBufferAlloc.h	/^class IGraphicBufferAlloc : public IInterface$/;"	c	namespace:android
IGraphicBufferConsumer	include/gui/IGraphicBufferConsumer.h	/^class IGraphicBufferConsumer : public IInterface {$/;"	c	namespace:android
IGraphicBufferProducer	include/gui/IGraphicBufferProducer.h	/^class IGraphicBufferProducer : public IInterface$/;"	c	namespace:android
IGraphicBufferProducerTest	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    IGraphicBufferProducerTest() {}$/;"	f	class:android::IGraphicBufferProducerTest
IGraphicBufferProducerTest	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^class IGraphicBufferProducerTest : public ::testing::Test {$/;"	c	namespace:android	file:
II420ColorConverter	include/media/editor/II420ColorConverter.h	/^typedef struct II420ColorConverter {$/;"	s
II420ColorConverter	include/media/editor/II420ColorConverter.h	/^} II420ColorConverter;$/;"	t	typeref:struct:II420ColorConverter
II420_COLOR_CONVERTER_H	include/media/editor/II420ColorConverter.h	19;"	d
IInterface	include/binder/IInterface.h	/^class IInterface : public virtual RefBase$/;"	c	namespace:android
IInterface	libs/binder/IInterface.cpp	/^IInterface::IInterface() $/;"	f	class:android::IInterface
IMPLEMENT_META_INTERFACE	include/binder/IInterface.h	83;"	d
IMemory	include/binder/IMemory.h	/^class IMemory : public IInterface$/;"	c	namespace:android
IMemoryHeap	include/binder/IMemory.h	/^class IMemoryHeap : public IInterface$/;"	c	namespace:android
INDENT	services/inputflinger/EventHub.cpp	63;"	d	file:
INDENT	services/inputflinger/InputDispatcher.cpp	59;"	d	file:
INDENT	services/inputflinger/InputReader.cpp	55;"	d	file:
INDENT2	services/inputflinger/EventHub.cpp	64;"	d	file:
INDENT2	services/inputflinger/InputDispatcher.cpp	60;"	d	file:
INDENT2	services/inputflinger/InputReader.cpp	56;"	d	file:
INDENT3	services/inputflinger/EventHub.cpp	65;"	d	file:
INDENT3	services/inputflinger/InputDispatcher.cpp	61;"	d	file:
INDENT3	services/inputflinger/InputReader.cpp	57;"	d	file:
INDENT4	services/inputflinger/InputDispatcher.cpp	62;"	d	file:
INDENT4	services/inputflinger/InputReader.cpp	58;"	d	file:
INDENT5	services/inputflinger/InputReader.cpp	59;"	d	file:
INDEX_ALPHA	include/ui/PixelFormat.h	/^        INDEX_ALPHA   = 0,$/;"	e	enum:android::PixelFormatInfo::__anon78
INDEX_BITS	opengl/libagl/context.h	/^        INDEX_BITS      = 16,$/;"	e	enum:android::gl::vertex_cache_t::__anon222
INDEX_BLUE	include/ui/PixelFormat.h	/^        INDEX_BLUE    = 3$/;"	e	enum:android::PixelFormatInfo::__anon78
INDEX_GREEN	include/ui/PixelFormat.h	/^        INDEX_GREEN   = 2,$/;"	e	enum:android::PixelFormatInfo::__anon78
INDEX_MASK	opengl/libagl/context.h	/^        INDEX_MASK      = ((1LU<<INDEX_BITS)-1),$/;"	e	enum:android::gl::vertex_cache_t::__anon222
INDEX_RED	include/ui/PixelFormat.h	/^        INDEX_RED     = 1,$/;"	e	enum:android::PixelFormatInfo::__anon78
INDEX_SEQ	opengl/libagl/context.h	/^        INDEX_SEQ       = 1LU<<INDEX_BITS,$/;"	e	enum:android::gl::vertex_cache_t::__anon222
INITIALIZED	opengl/libs/EGL/egl_display.h	/^        INITIALIZED     = 1,$/;"	e	enum:android::egl_display_t::__anon240
INJECTOR_PID	services/inputflinger/tests/InputDispatcher_test.cpp	/^static const int32_t INJECTOR_PID = 999;$/;"	m	namespace:android	file:
INJECTOR_UID	services/inputflinger/tests/InputDispatcher_test.cpp	/^static const int32_t INJECTOR_UID = 1001;$/;"	m	namespace:android	file:
INPUT_DEVICE_CLASS_ALPHAKEY	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_ALPHAKEY      = 0x00000002,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_CURSOR	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_CURSOR        = 0x00000008,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_DPAD	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_DPAD          = 0x00000020,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_EXTERNAL	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_EXTERNAL      = 0x80000000,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_GAMEPAD	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_GAMEPAD       = 0x00000040,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_JOYSTICK	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_JOYSTICK      = 0x00000100,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_KEYBOARD	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_KEYBOARD      = 0x00000001,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_SWITCH	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_SWITCH        = 0x00000080,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_TOUCH	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_TOUCH         = 0x00000004,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_TOUCH_MT	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_TOUCH_MT      = 0x00000010,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_VIBRATOR	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_VIBRATOR      = 0x00000200,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CLASS_VIRTUAL	services/inputflinger/EventHub.h	/^    INPUT_DEVICE_CLASS_VIRTUAL       = 0x40000000,$/;"	e	enum:android::__anon47
INPUT_DEVICE_CONFIGURATION_FILE_TYPE_CONFIGURATION	include/input/InputDevice.h	/^    INPUT_DEVICE_CONFIGURATION_FILE_TYPE_CONFIGURATION = 0,     \/* .idc file *\/$/;"	e	enum:android::InputDeviceConfigurationFileType
INPUT_DEVICE_CONFIGURATION_FILE_TYPE_KEY_CHARACTER_MAP	include/input/InputDevice.h	/^    INPUT_DEVICE_CONFIGURATION_FILE_TYPE_KEY_CHARACTER_MAP = 2, \/* .kcm file *\/$/;"	e	enum:android::InputDeviceConfigurationFileType
INPUT_DEVICE_CONFIGURATION_FILE_TYPE_KEY_LAYOUT	include/input/InputDevice.h	/^    INPUT_DEVICE_CONFIGURATION_FILE_TYPE_KEY_LAYOUT = 1,        \/* .kl file *\/$/;"	e	enum:android::InputDeviceConfigurationFileType
INPUT_EVENT_INJECTION_FAILED	services/inputflinger/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_FAILED = 2,$/;"	e	enum:android::__anon42
INPUT_EVENT_INJECTION_PENDING	services/inputflinger/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_PENDING = -1,$/;"	e	enum:android::__anon42
INPUT_EVENT_INJECTION_PERMISSION_DENIED	services/inputflinger/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_PERMISSION_DENIED = 1,$/;"	e	enum:android::__anon42
INPUT_EVENT_INJECTION_SUCCEEDED	services/inputflinger/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_SUCCEEDED = 0,$/;"	e	enum:android::__anon42
INPUT_EVENT_INJECTION_SYNC_NONE	services/inputflinger/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_SYNC_NONE = 0,$/;"	e	enum:android::__anon43
INPUT_EVENT_INJECTION_SYNC_WAIT_FOR_FINISHED	services/inputflinger/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_SYNC_WAIT_FOR_FINISHED = 2,$/;"	e	enum:android::__anon43
INPUT_EVENT_INJECTION_SYNC_WAIT_FOR_RESULT	services/inputflinger/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_SYNC_WAIT_FOR_RESULT = 1,$/;"	e	enum:android::__anon43
INPUT_EVENT_INJECTION_TIMED_OUT	services/inputflinger/InputDispatcher.h	/^    INPUT_EVENT_INJECTION_TIMED_OUT = 3$/;"	e	enum:android::__anon42
INPUT_FEATURE_DISABLE_TOUCH_PAD_GESTURES	services/inputflinger/InputWindow.h	/^        INPUT_FEATURE_DISABLE_TOUCH_PAD_GESTURES = 0x00000001,$/;"	e	enum:android::InputWindowInfo::__anon41
INPUT_FEATURE_DISABLE_USER_ACTIVITY	services/inputflinger/InputWindow.h	/^        INPUT_FEATURE_DISABLE_USER_ACTIVITY = 0x00000004,$/;"	e	enum:android::InputWindowInfo::__anon41
INPUT_FEATURE_NO_INPUT_CHANNEL	services/inputflinger/InputWindow.h	/^        INPUT_FEATURE_NO_INPUT_CHANNEL = 0x00000002,$/;"	e	enum:android::InputWindowInfo::__anon41
INPUT_TARGET_WAIT_CAUSE_APPLICATION_NOT_READY	services/inputflinger/InputDispatcher.h	/^        INPUT_TARGET_WAIT_CAUSE_APPLICATION_NOT_READY,$/;"	e	enum:android::InputDispatcher::InputTargetWaitCause
INPUT_TARGET_WAIT_CAUSE_NONE	services/inputflinger/InputDispatcher.h	/^        INPUT_TARGET_WAIT_CAUSE_NONE,$/;"	e	enum:android::InputDispatcher::InputTargetWaitCause
INPUT_TARGET_WAIT_CAUSE_SYSTEM_NOT_READY	services/inputflinger/InputDispatcher.h	/^        INPUT_TARGET_WAIT_CAUSE_SYSTEM_NOT_READY,$/;"	e	enum:android::InputDispatcher::InputTargetWaitCause
INT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType_Type GLMessage_DataType::INT;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
INT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Type INT = GLMessage_DataType_Type_INT;$/;"	m	class:android::gltrace::GLMessage_DataType
INT32_MAX	libs/binder/Parcel.cpp	47;"	d	file:
INT64	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType_Type GLMessage_DataType::INT64;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
INT64	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Type INT64 = GLMessage_DataType_Type_INT64;$/;"	m	class:android::gltrace::GLMessage_DataType
INTERCEPT_KEY_RESULT_CONTINUE	services/inputflinger/InputDispatcher.h	/^            INTERCEPT_KEY_RESULT_CONTINUE,$/;"	e	enum:android::InputDispatcher::KeyEntry::InterceptKeyResult
INTERCEPT_KEY_RESULT_SKIP	services/inputflinger/InputDispatcher.h	/^            INTERCEPT_KEY_RESULT_SKIP,$/;"	e	enum:android::InputDispatcher::KeyEntry::InterceptKeyResult
INTERCEPT_KEY_RESULT_TRY_AGAIN_LATER	services/inputflinger/InputDispatcher.h	/^            INTERCEPT_KEY_RESULT_TRY_AGAIN_LATER,$/;"	e	enum:android::InputDispatcher::KeyEntry::InterceptKeyResult
INTERCEPT_KEY_RESULT_UNKNOWN	services/inputflinger/InputDispatcher.h	/^            INTERCEPT_KEY_RESULT_UNKNOWN,$/;"	e	enum:android::InputDispatcher::KeyEntry::InterceptKeyResult
INTERFACE_TRANSACTION	include/binder/IBinder.h	/^        INTERFACE_TRANSACTION   = B_PACK_CHARS('_', 'N', 'T', 'F'),$/;"	e	enum:android::IBinder::__anon209
INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION	opengl/libs/GLES_trace/src/gltrace.pb.cpp	3;"	d	file:
INVALIDATE	services/surfaceflinger/MessageQueue.h	/^        INVALIDATE  = 0,$/;"	e	enum:android::MessageQueue::__anon26
INVALIDATE_ON_VSYNC	services/surfaceflinger/MessageQueue.cpp	155;"	d	file:
INVALID_BUFFER_SLOT	include/gui/BufferItem.h	/^    enum { INVALID_BUFFER_SLOT = -1 };$/;"	e	enum:android::BufferItem::__anon146
INVALID_BUFFER_SLOT	include/gui/BufferItemConsumer.h	/^    enum { INVALID_BUFFER_SLOT = BufferQueue::INVALID_BUFFER_SLOT };$/;"	e	enum:android::BufferItemConsumer::__anon148
INVALID_BUFFER_SLOT	include/gui/BufferQueue.h	/^    enum { INVALID_BUFFER_SLOT = IGraphicBufferConsumer::BufferItem::INVALID_BUFFER_SLOT };$/;"	e	enum:android::BufferQueue::__anon143
INVALID_BUFFER_SLOT	include/gui/BufferQueueCore.h	/^    enum { INVALID_BUFFER_SLOT = -1 }; \/\/ TODO: Extract from IGBC::BufferItem$/;"	e	enum:android::BufferQueueCore::__anon139
INVALID_BUFFER_SLOT	include/gui/IGraphicBufferConsumer.h	/^        enum { INVALID_BUFFER_SLOT = -1 };$/;"	e	enum:android::IGraphicBufferConsumer::BufferItem::__anon130
IN_PLACE_BLOB_LIMIT	libs/binder/Parcel.cpp	/^static const size_t IN_PLACE_BLOB_LIMIT = 40 * 1024;$/;"	v	file:
IPCThreadState	include/binder/IPCThreadState.h	/^class IPCThreadState$/;"	c	namespace:android
IPCThreadState	libs/binder/IPCThreadState.cpp	/^IPCThreadState::IPCThreadState()$/;"	f	class:android::IPCThreadState
IPermissionController	include/binder/IPermissionController.h	/^class IPermissionController : public IInterface$/;"	c	namespace:android
IPowerManager	include/powermanager/IPowerManager.h	/^class IPowerManager : public IInterface$/;"	c	namespace:android
IProducerListener	include/gui/IProducerListener.h	/^class IProducerListener : public ProducerListener, public IInterface$/;"	c	namespace:android
IS_CURRENT	opengl/libagl/egl.cpp	/^        IS_CURRENT      =   0x00010000,$/;"	e	enum:android::egl_context_t::__anon231	file:
ISensorEventConnection	include/gui/ISensorEventConnection.h	/^class ISensorEventConnection : public IInterface$/;"	c	namespace:android
ISensorServer	include/gui/ISensorServer.h	/^class ISensorServer : public IInterface$/;"	c	namespace:android
IServiceManager	include/binder/IServiceManager.h	/^class IServiceManager : public IInterface$/;"	c	namespace:android
ISurfaceComposer	include/gui/ISurfaceComposer.h	/^class ISurfaceComposer: public IInterface {$/;"	c	namespace:android
ISurfaceComposerClient	include/gui/ISurfaceComposerClient.h	/^class ISurfaceComposerClient : public IInterface$/;"	c	namespace:android
ITERATIONS	opengl/tests/gl_basic/gl_basic.cpp	24;"	d	file:
ITERATIONS	opengl/tests/tritex/tritex.cpp	26;"	d	file:
ITER_MAX	libs/ui/tests/Region_test.cpp	134;"	d	file:
Impersonator	include/ui/TVecHelpers.h	/^struct Impersonator {$/;"	s	namespace:android
IndexOf	services/sensorservice/traits.h	/^struct IndexOf<NullType, T> {$/;"	s	namespace:android::TL
IndexOf	services/sensorservice/traits.h	/^struct IndexOf<TypeList<Head, Tail>, T> {$/;"	s	namespace:android::TL
IndexOf	services/sensorservice/traits.h	/^struct IndexOf<TypeList<T, Tail>, T> {$/;"	s	namespace:android::TL
Info	libs/ui/PixelFormat.cpp	/^struct Info {$/;"	s	namespace:android	file:
Info	services/sensorservice/BatteryService.h	/^        Info()  : uid(0), handle(0), count(0) { }$/;"	f	struct:android::BatteryService::Info
Info	services/sensorservice/BatteryService.h	/^        Info(uid_t uid, int handle) : uid(uid), handle(handle), count(0) { }$/;"	f	struct:android::BatteryService::Info
Info	services/sensorservice/BatteryService.h	/^    struct Info {$/;"	s	class:android::BatteryService
Info	services/sensorservice/SensorDevice.h	/^        Info() : bestBatchParams(-1, -1, -1) {}$/;"	f	struct:android::SensorDevice::Info
Info	services/sensorservice/SensorDevice.h	/^    struct Info {$/;"	s	class:android::SensorDevice
InitAsDefaultInstance	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage::InitAsDefaultInstance() {$/;"	f	class:android::gltrace::GLMessage
InitAsDefaultInstance	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_DataType::InitAsDefaultInstance() {$/;"	f	class:android::gltrace::GLMessage_DataType
InitAsDefaultInstance	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_FrameBuffer::InitAsDefaultInstance() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
InjectionState	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::InjectionState::InjectionState(int32_t injectorPid, int32_t injectorUid) :$/;"	f	class:android::InputDispatcher::InjectionState
InjectionState	services/inputflinger/InputDispatcher.h	/^    struct InjectionState {$/;"	s	class:android::InputDispatcher
InputApplicationHandle	services/inputflinger/InputApplication.cpp	/^InputApplicationHandle::InputApplicationHandle() :$/;"	f	class:android::InputApplicationHandle
InputApplicationHandle	services/inputflinger/InputApplication.h	/^class InputApplicationHandle : public RefBase {$/;"	c	namespace:android
InputApplicationInfo	services/inputflinger/InputApplication.h	/^struct InputApplicationInfo {$/;"	s	namespace:android
InputChannel	include/input/InputTransport.h	/^class InputChannel : public RefBase {$/;"	c	namespace:android
InputChannel	libs/input/InputTransport.cpp	/^InputChannel::InputChannel(const String8& name, int fd) :$/;"	f	class:android::InputChannel
InputChannelTest	libs/input/tests/InputChannel_test.cpp	/^class InputChannelTest : public testing::Test {$/;"	c	namespace:android	file:
InputConsumer	include/input/InputTransport.h	/^class InputConsumer {$/;"	c	namespace:android
InputConsumer	libs/input/InputTransport.cpp	/^InputConsumer::InputConsumer(const sp<InputChannel>& channel) :$/;"	f	class:android::InputConsumer
InputDevice	services/inputflinger/InputReader.cpp	/^InputDevice::InputDevice(InputReaderContext* context, int32_t id, int32_t generation,$/;"	f	class:android::InputDevice
InputDevice	services/inputflinger/InputReader.h	/^class InputDevice {$/;"	c	namespace:android
InputDeviceConfigurationFileType	include/input/InputDevice.h	/^enum InputDeviceConfigurationFileType {$/;"	g	namespace:android
InputDeviceIdentifier	include/input/InputDevice.h	/^    inline InputDeviceIdentifier() :$/;"	f	struct:android::InputDeviceIdentifier
InputDeviceIdentifier	include/input/InputDevice.h	/^struct InputDeviceIdentifier {$/;"	s	namespace:android
InputDeviceInfo	include/input/InputDevice.h	/^class InputDeviceInfo {$/;"	c	namespace:android
InputDeviceInfo	libs/input/InputDevice.cpp	/^InputDeviceInfo::InputDeviceInfo() {$/;"	f	class:android::InputDeviceInfo
InputDeviceInfo	libs/input/InputDevice.cpp	/^InputDeviceInfo::InputDeviceInfo(const InputDeviceInfo& other) :$/;"	f	class:android::InputDeviceInfo
InputDeviceTest	services/inputflinger/tests/InputReader_test.cpp	/^class InputDeviceTest : public testing::Test {$/;"	c	namespace:android	file:
InputDispatcher	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::InputDispatcher(const sp<InputDispatcherPolicyInterface>& policy) :$/;"	f	class:android::InputDispatcher
InputDispatcher	services/inputflinger/InputDispatcher.h	/^class InputDispatcher : public InputDispatcherInterface {$/;"	c	namespace:android
InputDispatcherConfiguration	services/inputflinger/InputDispatcher.h	/^    InputDispatcherConfiguration() :$/;"	f	struct:android::InputDispatcherConfiguration
InputDispatcherConfiguration	services/inputflinger/InputDispatcher.h	/^struct InputDispatcherConfiguration {$/;"	s	namespace:android
InputDispatcherInterface	services/inputflinger/InputDispatcher.h	/^    InputDispatcherInterface() { }$/;"	f	class:android::InputDispatcherInterface
InputDispatcherInterface	services/inputflinger/InputDispatcher.h	/^class InputDispatcherInterface : public virtual RefBase, public InputListenerInterface {$/;"	c	namespace:android
InputDispatcherPolicyInterface	services/inputflinger/InputDispatcher.h	/^    InputDispatcherPolicyInterface() { }$/;"	f	class:android::InputDispatcherPolicyInterface
InputDispatcherPolicyInterface	services/inputflinger/InputDispatcher.h	/^class InputDispatcherPolicyInterface : public virtual RefBase {$/;"	c	namespace:android
InputDispatcherTest	services/inputflinger/tests/InputDispatcher_test.cpp	/^class InputDispatcherTest : public testing::Test {$/;"	c	namespace:android	file:
InputDispatcherThread	services/inputflinger/InputDispatcher.cpp	/^InputDispatcherThread::InputDispatcherThread(const sp<InputDispatcherInterface>& dispatcher) :$/;"	f	class:android::InputDispatcherThread
InputDispatcherThread	services/inputflinger/InputDispatcher.h	/^class InputDispatcherThread : public Thread {$/;"	c	namespace:android
InputEvent	include/input/Input.h	/^class InputEvent : public AInputEvent {$/;"	c	namespace:android
InputEventFactoryInterface	include/input/Input.h	/^    InputEventFactoryInterface() { }$/;"	f	class:android::InputEventFactoryInterface
InputEventFactoryInterface	include/input/Input.h	/^class InputEventFactoryInterface {$/;"	c	namespace:android
InputEventLabel	include/input/InputEventLabels.h	/^struct InputEventLabel {$/;"	s	namespace:android
InputListenerInterface	services/inputflinger/InputListener.h	/^    InputListenerInterface() { }$/;"	f	class:android::InputListenerInterface
InputListenerInterface	services/inputflinger/InputListener.h	/^class InputListenerInterface : public virtual RefBase {$/;"	c	namespace:android
InputManager	services/inputflinger/InputManager.cpp	/^InputManager::InputManager($/;"	f	class:android::InputManager
InputManager	services/inputflinger/InputManager.h	/^class InputManager : public InputManagerInterface {$/;"	c	namespace:android
InputManagerInterface	services/inputflinger/InputManager.h	/^    InputManagerInterface() { }$/;"	f	class:android::InputManagerInterface
InputManagerInterface	services/inputflinger/InputManager.h	/^class InputManagerInterface : public virtual RefBase {$/;"	c	namespace:android
InputMapper	services/inputflinger/InputReader.cpp	/^InputMapper::InputMapper(InputDevice* device) :$/;"	f	class:android::InputMapper
InputMapper	services/inputflinger/InputReader.h	/^class InputMapper {$/;"	c	namespace:android
InputMapperTest	services/inputflinger/tests/InputReader_test.cpp	/^class InputMapperTest : public testing::Test {$/;"	c	namespace:android	file:
InputMessage	include/input/InputTransport.h	/^struct InputMessage {$/;"	s	namespace:android
InputPublisher	include/input/InputTransport.h	/^class InputPublisher {$/;"	c	namespace:android
InputPublisher	libs/input/InputTransport.cpp	/^InputPublisher::InputPublisher(const sp<InputChannel>& channel) :$/;"	f	class:android::InputPublisher
InputPublisherAndConsumerTest	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^class InputPublisherAndConsumerTest : public testing::Test {$/;"	c	namespace:android	file:
InputReader	services/inputflinger/InputReader.cpp	/^InputReader::InputReader(const sp<EventHubInterface>& eventHub,$/;"	f	class:android::InputReader
InputReader	services/inputflinger/InputReader.h	/^class InputReader : public InputReaderInterface {$/;"	c	namespace:android
InputReaderConfiguration	services/inputflinger/InputReader.h	/^    InputReaderConfiguration() :$/;"	f	struct:android::InputReaderConfiguration
InputReaderConfiguration	services/inputflinger/InputReader.h	/^struct InputReaderConfiguration {$/;"	s	namespace:android
InputReaderContext	services/inputflinger/InputReader.h	/^    InputReaderContext() { }$/;"	f	class:android::InputReaderContext
InputReaderContext	services/inputflinger/InputReader.h	/^class InputReaderContext {$/;"	c	namespace:android
InputReaderInterface	services/inputflinger/InputReader.h	/^    InputReaderInterface() { }$/;"	f	class:android::InputReaderInterface
InputReaderInterface	services/inputflinger/InputReader.h	/^class InputReaderInterface : public virtual RefBase {$/;"	c	namespace:android
InputReaderPolicyInterface	services/inputflinger/InputReader.h	/^    InputReaderPolicyInterface() { }$/;"	f	class:android::InputReaderPolicyInterface
InputReaderPolicyInterface	services/inputflinger/InputReader.h	/^class InputReaderPolicyInterface : public virtual RefBase {$/;"	c	namespace:android
InputReaderTest	services/inputflinger/tests/InputReader_test.cpp	/^class InputReaderTest : public testing::Test {$/;"	c	namespace:android	file:
InputReaderThread	services/inputflinger/InputReader.cpp	/^InputReaderThread::InputReaderThread(const sp<InputReaderInterface>& reader) :$/;"	f	class:android::InputReaderThread
InputReaderThread	services/inputflinger/InputReader.h	/^class InputReaderThread : public Thread {$/;"	c	namespace:android
InputState	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::InputState::InputState() {$/;"	f	class:android::InputDispatcher::InputState
InputState	services/inputflinger/InputDispatcher.h	/^    class InputState {$/;"	c	class:android::InputDispatcher
InputTarget	services/inputflinger/InputDispatcher.h	/^struct InputTarget {$/;"	s	namespace:android
InputTargetWaitCause	services/inputflinger/InputDispatcher.h	/^    enum InputTargetWaitCause {$/;"	g	class:android::InputDispatcher
InputWindowHandle	services/inputflinger/InputWindow.cpp	/^InputWindowHandle::InputWindowHandle(const sp<InputApplicationHandle>& inputApplicationHandle) :$/;"	f	class:android::InputWindowHandle
InputWindowHandle	services/inputflinger/InputWindow.h	/^class InputWindowHandle : public RefBase {$/;"	c	namespace:android
InputWindowInfo	services/inputflinger/InputWindow.h	/^struct InputWindowInfo {$/;"	s	namespace:android
InstrumentedInputReader	services/inputflinger/tests/InputReader_test.cpp	/^    InstrumentedInputReader(const sp<EventHubInterface>& eventHub,$/;"	f	class:android::InstrumentedInputReader
InstrumentedInputReader	services/inputflinger/tests/InputReader_test.cpp	/^class InstrumentedInputReader : public InputReader {$/;"	c	namespace:android	file:
IntegratingVelocityTrackerStrategy	include/input/VelocityTracker.h	/^class IntegratingVelocityTrackerStrategy : public VelocityTrackerStrategy {$/;"	c	namespace:android
IntegratingVelocityTrackerStrategy	libs/input/VelocityTracker.cpp	/^IntegratingVelocityTrackerStrategy::IntegratingVelocityTrackerStrategy(uint32_t degree) :$/;"	f	class:android::IntegratingVelocityTrackerStrategy
InterceptKeyResult	services/inputflinger/InputDispatcher.h	/^        enum InterceptKeyResult {$/;"	g	struct:android::InputDispatcher::KeyEntry
IntraRefreshVOP	include/media/openmax/OMX_Video.h	/^    OMX_BOOL IntraRefreshVOP;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
IsInitialized	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^bool GLMessage::IsInitialized() const {$/;"	f	class:android::gltrace::GLMessage
IsInitialized	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^bool GLMessage_DataType::IsInitialized() const {$/;"	f	class:android::gltrace::GLMessage_DataType
IsInitialized	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^bool GLMessage_FrameBuffer::IsInitialized() const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
Iterable	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    Iterable(HWCTYPE* layer) : mLayerList(layer), mCurrentLayer(layer) { }$/;"	f	class:android::Iterable
Iterable	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^class Iterable : public HWComposer::HWCLayer {$/;"	c	namespace:android	file:
JFunc	opengl/tools/glgen/src/JFunc.java	/^    public JFunc(CFunc cfunc) {$/;"	m	class:JFunc
JFunc	opengl/tools/glgen/src/JFunc.java	/^public class JFunc {$/;"	c
JType	opengl/tools/glgen/src/JType.java	/^    public JType() {$/;"	m	class:JType
JType	opengl/tools/glgen/src/JType.java	/^    public JType(String primitiveTypeName) {$/;"	m	class:JType
JType	opengl/tools/glgen/src/JType.java	/^    public JType(String primitiveTypeName, boolean isClass, boolean isArray) {$/;"	m	class:JType
JType	opengl/tools/glgen/src/JType.java	/^public class JType {$/;"	c
Java_com_android_gl2jni_GL2JNILib_init	opengl/tests/gl2_jni/jni/gl_code.cpp	/^JNIEXPORT void JNICALL Java_com_android_gl2jni_GL2JNILib_init(JNIEnv * env, jobject obj,  jint width, jint height)$/;"	f
Java_com_android_gl2jni_GL2JNILib_step	opengl/tests/gl2_jni/jni/gl_code.cpp	/^JNIEXPORT void JNICALL Java_com_android_gl2jni_GL2JNILib_step(JNIEnv * env, jobject obj)$/;"	f
Java_com_android_gldual_GLDualLib_init	opengl/tests/gldual/jni/gl_code.cpp	/^JNIEXPORT void JNICALL Java_com_android_gldual_GLDualLib_init(JNIEnv * env, jobject obj, jint width, jint height)$/;"	f
Java_com_android_gldual_GLDualLib_step	opengl/tests/gldual/jni/gl_code.cpp	/^JNIEXPORT void JNICALL Java_com_android_gldual_GLDualLib_step(JNIEnv * env, jobject obj)$/;"	f
Java_com_android_gljni_GLJNILib_changeBackground	opengl/tests/gl_jni/jni/gl_code.cpp	/^JNIEXPORT void JNICALL Java_com_android_gljni_GLJNILib_changeBackground(JNIEnv * env, jobject obj)$/;"	f
Java_com_android_gljni_GLJNILib_init	opengl/tests/gl_jni/jni/gl_code.cpp	/^JNIEXPORT void JNICALL Java_com_android_gljni_GLJNILib_init(JNIEnv * env, jobject obj,  jint width, jint height)$/;"	f
Java_com_android_gljni_GLJNILib_step	opengl/tests/gl_jni/jni/gl_code.cpp	/^JNIEXPORT void JNICALL Java_com_android_gljni_GLJNILib_step(JNIEnv * env, jobject obj)$/;"	f
Java_com_android_glperf_GLPerfLib_init	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^JNIEXPORT void JNICALL Java_com_android_glperf_GLPerfLib_init(JNIEnv * env, jobject obj,  jint width, jint height)$/;"	f
Java_com_android_glperf_GLPerfLib_step	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^JNIEXPORT void JNICALL Java_com_android_glperf_GLPerfLib_step(JNIEnv * env, jobject obj)$/;"	f
JniCodeEmitter	opengl/tools/glgen/src/JniCodeEmitter.java	/^    public JniCodeEmitter() {$/;"	m	class:JniCodeEmitter
JniCodeEmitter	opengl/tools/glgen/src/JniCodeEmitter.java	/^public class JniCodeEmitter {$/;"	c
JoystickInputMapper	services/inputflinger/InputReader.cpp	/^JoystickInputMapper::JoystickInputMapper(InputDevice* device) :$/;"	f	class:android::JoystickInputMapper
JoystickInputMapper	services/inputflinger/InputReader.h	/^class JoystickInputMapper : public InputMapper {$/;"	c	namespace:android
Jsr239CodeEmitter	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    public Jsr239CodeEmitter(String classPathName,$/;"	m	class:Jsr239CodeEmitter
Jsr239CodeEmitter	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^public class Jsr239CodeEmitter extends JniCodeEmitter implements CodeEmitter {$/;"	c
KD_EACCES	include/media/openmax/OMX_ContentPipe.h	53;"	d
KD_EADDRINUSE	include/media/openmax/OMX_ContentPipe.h	54;"	d
KD_EAGAIN	include/media/openmax/OMX_ContentPipe.h	55;"	d
KD_EBADF	include/media/openmax/OMX_ContentPipe.h	56;"	d
KD_EBUSY	include/media/openmax/OMX_ContentPipe.h	57;"	d
KD_ECONNREFUSED	include/media/openmax/OMX_ContentPipe.h	58;"	d
KD_ECONNRESET	include/media/openmax/OMX_ContentPipe.h	59;"	d
KD_EDEADLK	include/media/openmax/OMX_ContentPipe.h	60;"	d
KD_EDESTADDRREQ	include/media/openmax/OMX_ContentPipe.h	61;"	d
KD_EEXIST	include/media/openmax/OMX_ContentPipe.h	63;"	d
KD_EFBIG	include/media/openmax/OMX_ContentPipe.h	64;"	d
KD_EHOSTUNREACH	include/media/openmax/OMX_ContentPipe.h	65;"	d
KD_EILSEQ	include/media/openmax/OMX_ContentPipe.h	79;"	d
KD_EINVAL	include/media/openmax/OMX_ContentPipe.h	66;"	d
KD_EIO	include/media/openmax/OMX_ContentPipe.h	67;"	d
KD_EISCONN	include/media/openmax/OMX_ContentPipe.h	68;"	d
KD_EISDIR	include/media/openmax/OMX_ContentPipe.h	69;"	d
KD_EMFILE	include/media/openmax/OMX_ContentPipe.h	70;"	d
KD_ENAMETOOLONG	include/media/openmax/OMX_ContentPipe.h	71;"	d
KD_ENOENT	include/media/openmax/OMX_ContentPipe.h	72;"	d
KD_ENOMEM	include/media/openmax/OMX_ContentPipe.h	73;"	d
KD_ENOSPC	include/media/openmax/OMX_ContentPipe.h	74;"	d
KD_ENOSYS	include/media/openmax/OMX_ContentPipe.h	75;"	d
KD_ENOTCONN	include/media/openmax/OMX_ContentPipe.h	76;"	d
KD_EPERM	include/media/openmax/OMX_ContentPipe.h	77;"	d
KD_ERANGE	include/media/openmax/OMX_ContentPipe.h	62;"	d
KD_ETIMEDOUT	include/media/openmax/OMX_ContentPipe.h	78;"	d
KEYBOARD_TYPE_ALPHA	include/input/KeyCharacterMap.h	/^        KEYBOARD_TYPE_ALPHA = 3,$/;"	e	enum:android::KeyCharacterMap::KeyboardType
KEYBOARD_TYPE_FULL	include/input/KeyCharacterMap.h	/^        KEYBOARD_TYPE_FULL = 4,$/;"	e	enum:android::KeyCharacterMap::KeyboardType
KEYBOARD_TYPE_NUMERIC	include/input/KeyCharacterMap.h	/^        KEYBOARD_TYPE_NUMERIC = 1,$/;"	e	enum:android::KeyCharacterMap::KeyboardType
KEYBOARD_TYPE_OVERLAY	include/input/KeyCharacterMap.h	/^        KEYBOARD_TYPE_OVERLAY = 6,$/;"	e	enum:android::KeyCharacterMap::KeyboardType
KEYBOARD_TYPE_PREDICTIVE	include/input/KeyCharacterMap.h	/^        KEYBOARD_TYPE_PREDICTIVE = 2,$/;"	e	enum:android::KeyCharacterMap::KeyboardType
KEYBOARD_TYPE_SPECIAL_FUNCTION	include/input/KeyCharacterMap.h	/^        KEYBOARD_TYPE_SPECIAL_FUNCTION = 5,$/;"	e	enum:android::KeyCharacterMap::KeyboardType
KEYBOARD_TYPE_UNKNOWN	include/input/KeyCharacterMap.h	/^        KEYBOARD_TYPE_UNKNOWN = 0,$/;"	e	enum:android::KeyCharacterMap::KeyboardType
KEYCODES	include/input/InputEventLabels.h	/^static const InputEventLabel KEYCODES[] = {$/;"	m	namespace:android
KHRONOS_APIATTRIBUTES	opengl/include/KHR/khrplatform.h	129;"	d
KHRONOS_APIATTRIBUTES	opengl/include/KHR/khrplatform.h	131;"	d
KHRONOS_APICALL	opengl/include/KHR/khrplatform.h	101;"	d
KHRONOS_APICALL	opengl/include/KHR/khrplatform.h	103;"	d
KHRONOS_APICALL	opengl/include/KHR/khrplatform.h	105;"	d
KHRONOS_APICALL	opengl/include/KHR/khrplatform.h	107;"	d
KHRONOS_APIENTRY	opengl/include/KHR/khrplatform.h	118;"	d
KHRONOS_APIENTRY	opengl/include/KHR/khrplatform.h	120;"	d
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	opengl/include/KHR/khrplatform.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	e	enum:__anon233
KHRONOS_FALSE	opengl/include/KHR/khrplatform.h	/^    KHRONOS_FALSE = 0,$/;"	e	enum:__anon233
KHRONOS_MAX_ENUM	opengl/include/KHR/khrplatform.h	256;"	d
KHRONOS_SUPPORT_FLOAT	opengl/include/KHR/khrplatform.h	149;"	d
KHRONOS_SUPPORT_FLOAT	opengl/include/KHR/khrplatform.h	162;"	d
KHRONOS_SUPPORT_FLOAT	opengl/include/KHR/khrplatform.h	174;"	d
KHRONOS_SUPPORT_FLOAT	opengl/include/KHR/khrplatform.h	191;"	d
KHRONOS_SUPPORT_FLOAT	opengl/include/KHR/khrplatform.h	201;"	d
KHRONOS_SUPPORT_FLOAT	opengl/include/KHR/khrplatform.h	214;"	d
KHRONOS_SUPPORT_INT64	opengl/include/KHR/khrplatform.h	148;"	d
KHRONOS_SUPPORT_INT64	opengl/include/KHR/khrplatform.h	161;"	d
KHRONOS_SUPPORT_INT64	opengl/include/KHR/khrplatform.h	173;"	d
KHRONOS_SUPPORT_INT64	opengl/include/KHR/khrplatform.h	190;"	d
KHRONOS_SUPPORT_INT64	opengl/include/KHR/khrplatform.h	200;"	d
KHRONOS_SUPPORT_INT64	opengl/include/KHR/khrplatform.h	213;"	d
KHRONOS_TRUE	opengl/include/KHR/khrplatform.h	/^    KHRONOS_TRUE  = 1,$/;"	e	enum:__anon233
KIND	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.$/;"	v
Key	include/input/InputTransport.h	/^        struct Key {$/;"	s	union:android::InputMessage::Body
Key	include/input/KeyCharacterMap.h	/^    struct Key {$/;"	s	class:android::KeyCharacterMap
Key	include/input/KeyLayoutMap.h	/^    struct Key {$/;"	s	class:android::KeyLayoutMap
Key	libs/input/KeyCharacterMap.cpp	/^KeyCharacterMap::Key::Key() :$/;"	f	class:android::KeyCharacterMap::Key
Key	libs/input/KeyCharacterMap.cpp	/^KeyCharacterMap::Key::Key(const Key& other) :$/;"	f	class:android::KeyCharacterMap::Key
Key	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        inline Key() : mWidth(0), mHeight(0) { }$/;"	f	class:android::GLES20RenderEngine::Key
Key	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        inline Key(const Key& rhs) : mWidth(rhs.mWidth),$/;"	f	class:android::GLES20RenderEngine::Key
Key	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        inline Key(int width, int height) :$/;"	f	class:android::GLES20RenderEngine::Key
Key	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    class Key {$/;"	c	class:android::GLES20RenderEngine
Key	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline Key() : mKey(0) { }$/;"	f	class:android::ProgramCache::Key
Key	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline Key(const Key& rhs) : mKey(rhs.mKey) { }$/;"	f	class:android::ProgramCache::Key
Key	services/surfaceflinger/RenderEngine/ProgramCache.h	/^    class Key {$/;"	c	class:android::ProgramCache
KeyCharacterMap	include/input/KeyCharacterMap.h	/^class KeyCharacterMap : public RefBase {$/;"	c	namespace:android
KeyCharacterMap	libs/input/KeyCharacterMap.cpp	/^KeyCharacterMap::KeyCharacterMap() :$/;"	f	class:android::KeyCharacterMap
KeyCharacterMap	libs/input/KeyCharacterMap.cpp	/^KeyCharacterMap::KeyCharacterMap(const KeyCharacterMap& other) :$/;"	f	class:android::KeyCharacterMap
KeyDown	services/inputflinger/InputReader.h	/^    struct KeyDown {$/;"	s	class:android::KeyboardInputMapper
KeyEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::KeyEntry::KeyEntry(nsecs_t eventTime,$/;"	f	class:android::InputDispatcher::KeyEntry
KeyEntry	services/inputflinger/InputDispatcher.h	/^    struct KeyEntry : EventEntry {$/;"	s	class:android::InputDispatcher
KeyEvent	include/input/Input.h	/^class KeyEvent : public InputEvent {$/;"	c	namespace:android
KeyEventTest	libs/input/tests/InputEvent_test.cpp	/^class KeyEventTest : public BaseTest {$/;"	c	namespace:android	file:
KeyInfo	services/inputflinger/tests/InputReader_test.cpp	/^    struct KeyInfo {$/;"	s	class:android::FakeEventHub	file:
KeyLayoutMap	include/input/KeyLayoutMap.h	/^class KeyLayoutMap : public RefBase {$/;"	c	namespace:android
KeyLayoutMap	libs/input/KeyLayoutMap.cpp	/^KeyLayoutMap::KeyLayoutMap() {$/;"	f	class:android::KeyLayoutMap
KeyMap	include/input/Keyboard.h	/^class KeyMap {$/;"	c	namespace:android
KeyMap	libs/input/Keyboard.cpp	/^KeyMap::KeyMap() {$/;"	f	class:android::KeyMap
KeyMemento	services/inputflinger/InputDispatcher.h	/^        struct KeyMemento {$/;"	s	class:android::InputDispatcher::InputState
KeyRepeatState	services/inputflinger/InputDispatcher.h	/^    struct KeyRepeatState {$/;"	s	class:android::InputDispatcher
KeyReplacement	services/inputflinger/InputDispatcher.h	/^    struct KeyReplacement {$/;"	s	class:android::InputDispatcher
KeyType	include/media/drm/DrmAPI.h	/^        enum KeyType {$/;"	g	class:android::DrmPlugin
KeyboardInputMapper	services/inputflinger/InputReader.cpp	/^KeyboardInputMapper::KeyboardInputMapper(InputDevice* device,$/;"	f	class:android::KeyboardInputMapper
KeyboardInputMapper	services/inputflinger/InputReader.h	/^class KeyboardInputMapper : public InputMapper {$/;"	c	namespace:android
KeyboardInputMapperTest	services/inputflinger/tests/InputReader_test.cpp	/^class KeyboardInputMapperTest : public InputMapperTest {$/;"	c	namespace:android	file:
KeyboardType	include/input/KeyCharacterMap.h	/^    enum KeyboardType {$/;"	g	class:android::KeyCharacterMap
L	include/ui/PixelFormat.h	/^        L       = 4,$/;"	e	enum:android::PixelFormatInfo::__anon79
LA	include/ui/PixelFormat.h	/^        LA      = 5,$/;"	e	enum:android::PixelFormatInfo::__anon79
LAST_APPLICATION_WINDOW	services/inputflinger/InputWindow.h	/^        LAST_APPLICATION_WINDOW = 99,$/;"	e	enum:android::InputWindowInfo::__anon40
LAST_CALL_TRANSACTION	include/binder/IBinder.h	/^        LAST_CALL_TRANSACTION   = 0x00ffffff,$/;"	e	enum:android::IBinder::__anon209
LAST_SUB_WINDOW	services/inputflinger/InputWindow.h	/^        LAST_SUB_WINDOW         = 1999,$/;"	e	enum:android::InputWindowInfo::__anon40
LAST_SYSTEM_WINDOW	services/inputflinger/InputWindow.h	/^        LAST_SYSTEM_WINDOW      = 2999,$/;"	e	enum:android::InputWindowInfo::__anon40
LEDS	include/input/InputEventLabels.h	/^static const InputEventLabel LEDS[] = {$/;"	m	namespace:android
LHS	include/private/ui/RegionHelper.h	/^    static const uint32_t LHS = 0x5;  \/\/ 0b101$/;"	m	class:android::region_operator
LIST_SERVICES_TRANSACTION	include/binder/IServiceManager.h	/^        LIST_SERVICES_TRANSACTION,$/;"	e	enum:android::IServiceManager::__anon208
LIT	opengl/libagl/context.h	/^        LIT             = 0x4000,   \/\/ lighting has been applied$/;"	e	enum:android::gl::vertex_t::__anon220
LOCAL_32_BIT_ONLY	services/surfaceflinger/Android.mk	/^LOCAL_32_BIT_ONLY := true$/;"	m
LOCAL_ADDITIONAL_DEPENDENCIES	libs/binder/Android.mk	/^LOCAL_ADDITIONAL_DEPENDENCIES := \\$/;"	m
LOCAL_ADDITIONAL_DEPENDENCIES	services/surfaceflinger/Android.mk	/^LOCAL_ADDITIONAL_DEPENDENCIES := $(LOCAL_PATH)\/Android.mk$/;"	m
LOCAL_ARM_MODE	opengl/tests/gl_jni/Android.mk	/^LOCAL_ARM_MODE := arm$/;"	m
LOCAL_CERTIFICATE	opengl/tests/lighting1709/Android.mk	/^LOCAL_CERTIFICATE := platform$/;"	m
LOCAL_CFLAGS	cmds/dumpstate/Android.mk	/^LOCAL_CFLAGS := -DFWDUMP_$(BOARD_WLAN_DEVICE)$/;"	m
LOCAL_CFLAGS	cmds/installd/Android.mk	/^LOCAL_CFLAGS := $(common_cflags)$/;"	m
LOCAL_CFLAGS	libs/input/tests/Android.mk	/^LOCAL_CFLAGS := -std=c++11 -O0$/;"	m
LOCAL_CFLAGS	opengl/libs/GLES_trace/Android.mk	/^LOCAL_CFLAGS := -DGOOGLE_PROTOBUF_NO_RTTI$/;"	m
LOCAL_CFLAGS	opengl/tests/filter/Android.mk	/^LOCAL_CFLAGS := -DGL_GLEXT_PROTOTYPES$/;"	m
LOCAL_CFLAGS	opengl/tests/finish/Android.mk	/^LOCAL_CFLAGS := -DGL_GLEXT_PROTOTYPES$/;"	m
LOCAL_CFLAGS	opengl/tests/gl2_basic/Android.mk	/^LOCAL_CFLAGS := -DGL_GLEXT_PROTOTYPES$/;"	m
LOCAL_CFLAGS	opengl/tests/gl2_copyTexImage/Android.mk	/^LOCAL_CFLAGS := -DGL_GLEXT_PROTOTYPES$/;"	m
LOCAL_CFLAGS	opengl/tests/gl2_jni/Android.mk	/^LOCAL_CFLAGS := -Werror -Wno-error=unused-parameter$/;"	m
LOCAL_CFLAGS	opengl/tests/gl2_yuvtex/Android.mk	/^LOCAL_CFLAGS := -DGL_GLEXT_PROTOTYPES -DEGL_EGLEXT_PROTOTYPES$/;"	m
LOCAL_CFLAGS	opengl/tests/gl_jni/Android.mk	/^LOCAL_CFLAGS := -Werror -Wno-error=unused-parameter$/;"	m
LOCAL_CFLAGS	opengl/tests/gl_perf/Android.mk	/^LOCAL_CFLAGS := -DGL_GLEXT_PROTOTYPES$/;"	m
LOCAL_CFLAGS	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_CFLAGS := -Werror -Wno-error=unused-parameter$/;"	m
LOCAL_CFLAGS	opengl/tests/gl_yuvtex/Android.mk	/^LOCAL_CFLAGS := -DGL_GLEXT_PROTOTYPES -DEGL_EGLEXT_PROTOTYPES$/;"	m
LOCAL_CFLAGS	opengl/tests/gldual/Android.mk	/^LOCAL_CFLAGS := -Werror -Wno-error=unused-parameter$/;"	m
LOCAL_CFLAGS	opengl/tests/hwc/Android.mk	/^LOCAL_CFLAGS := -DGL_GLEXT_PROTOTYPES -DEGL_EGLEXT_PROTOTYPES$/;"	m
LOCAL_CFLAGS	opengl/tests/lib/Android.mk	/^LOCAL_CFLAGS := -DGL_GLEXT_PROTOTYPES -DEGL_EGLEXT_PROTOTYPES$/;"	m
LOCAL_CFLAGS	opengl/tests/textures/Android.mk	/^LOCAL_CFLAGS := -DGL_GLEXT_PROTOTYPES$/;"	m
LOCAL_CFLAGS	services/sensorservice/Android.mk	/^LOCAL_CFLAGS:= -DLOG_TAG=\\"SensorService\\"$/;"	m
LOCAL_CFLAGS	services/surfaceflinger/Android.mk	/^LOCAL_CFLAGS:= -DLOG_TAG=\\"SurfaceFlinger\\"$/;"	m
LOCAL_CLANG	services/surfaceflinger/Android.mk	/^LOCAL_CLANG := true$/;"	m
LOCAL_CPPFLAGS	services/surfaceflinger/Android.mk	/^LOCAL_CPPFLAGS:= -std=c++11$/;"	m
LOCAL_C_INCLUDES	libs/gui/tests/Android.mk	/^LOCAL_C_INCLUDES := \\$/;"	m
LOCAL_C_INCLUDES	opengl/libs/GLES_trace/Android.mk	/^LOCAL_C_INCLUDES := \\$/;"	m
LOCAL_C_INCLUDES	opengl/tests/EGLTest/Android.mk	/^LOCAL_C_INCLUDES := \\$/;"	m
LOCAL_C_INCLUDES	services/inputflinger/Android.mk	/^LOCAL_C_INCLUDES := \\$/;"	m
LOCAL_C_INCLUDES	services/surfaceflinger/tests/Android.mk	/^LOCAL_C_INCLUDES := \\$/;"	m
LOCAL_EXPORT_C_INCLUDE_DIRS	services/inputflinger/Android.mk	/^LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)$/;"	m
LOCAL_HAL_STATIC_LIBRARIES	cmds/dumpstate/Android.mk	/^LOCAL_HAL_STATIC_LIBRARIES := libdumpstate$/;"	m
LOCAL_JNI_SHARED_LIBRARIES	opengl/tests/gl2_jni/Android.mk	/^LOCAL_JNI_SHARED_LIBRARIES := libgl2jni$/;"	m
LOCAL_JNI_SHARED_LIBRARIES	opengl/tests/gl_jni/Android.mk	/^LOCAL_JNI_SHARED_LIBRARIES := libgljni$/;"	m
LOCAL_JNI_SHARED_LIBRARIES	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_JNI_SHARED_LIBRARIES := libglperf$/;"	m
LOCAL_JNI_SHARED_LIBRARIES	opengl/tests/gldual/Android.mk	/^LOCAL_JNI_SHARED_LIBRARIES := libgldualjni$/;"	m
LOCAL_LDFLAGS	services/surfaceflinger/Android.mk	/^LOCAL_LDFLAGS := -Wl,--version-script,art\/sigchainlib\/version-script.txt -Wl,--export-dynamic$/;"	m
LOCAL_MODULE	cmds/atrace/Android.mk	/^LOCAL_MODULE:= atrace$/;"	m
LOCAL_MODULE	cmds/bugreport/Android.mk	/^LOCAL_MODULE:= bugreport$/;"	m
LOCAL_MODULE	cmds/dumpstate/Android.mk	/^LOCAL_MODULE := dumpstate$/;"	m
LOCAL_MODULE	cmds/dumpstate/Android.mk	/^LOCAL_MODULE := libdumpstate.default$/;"	m
LOCAL_MODULE	cmds/dumpsys/Android.mk	/^LOCAL_MODULE:= dumpsys$/;"	m
LOCAL_MODULE	cmds/flatland/Android.mk	/^LOCAL_MODULE:= flatland$/;"	m
LOCAL_MODULE	cmds/installd/Android.mk	/^LOCAL_MODULE := installd$/;"	m
LOCAL_MODULE	cmds/installd/Android.mk	/^LOCAL_MODULE := libinstalld$/;"	m
LOCAL_MODULE	cmds/ip-up-vpn/Android.mk	/^LOCAL_MODULE := ip-up-vpn$/;"	m
LOCAL_MODULE	cmds/rawbu/Android.mk	/^LOCAL_MODULE:= rawbu$/;"	m
LOCAL_MODULE	cmds/service/Android.mk	/^LOCAL_MODULE:= service$/;"	m
LOCAL_MODULE	cmds/servicemanager/Android.mk	/^LOCAL_MODULE := bctest$/;"	m
LOCAL_MODULE	cmds/servicemanager/Android.mk	/^LOCAL_MODULE := servicemanager$/;"	m
LOCAL_MODULE	libs/binder/Android.mk	/^LOCAL_MODULE := libbinder$/;"	m
LOCAL_MODULE	libs/diskusage/Android.mk	/^LOCAL_MODULE := libdiskusage$/;"	m
LOCAL_MODULE	libs/gui/Android.mk	/^LOCAL_MODULE:= libgui$/;"	m
LOCAL_MODULE	libs/gui/tests/Android.mk	/^LOCAL_MODULE := libgui_test$/;"	m
LOCAL_MODULE	libs/input/Android.mk	/^LOCAL_MODULE:= libinput$/;"	m
LOCAL_MODULE	libs/input/tests/Android.mk	/^LOCAL_MODULE := StructLayout_test$/;"	m
LOCAL_MODULE	libs/ui/Android.mk	/^LOCAL_MODULE:= libui$/;"	m
LOCAL_MODULE	opengl/libagl/Android.mk	/^LOCAL_MODULE:= libGLES_android$/;"	m
LOCAL_MODULE	opengl/libs/Android.mk	/^LOCAL_MODULE := egl.cfg$/;"	m
LOCAL_MODULE	opengl/libs/Android.mk	/^LOCAL_MODULE:= libEGL$/;"	m
LOCAL_MODULE	opengl/libs/Android.mk	/^LOCAL_MODULE:= libETC1$/;"	m
LOCAL_MODULE	opengl/libs/Android.mk	/^LOCAL_MODULE:= libGLESv1_CM$/;"	m
LOCAL_MODULE	opengl/libs/Android.mk	/^LOCAL_MODULE:= libGLESv2$/;"	m
LOCAL_MODULE	opengl/libs/GLES_trace/Android.mk	/^LOCAL_MODULE:= libGLES_trace$/;"	m
LOCAL_MODULE	opengl/tests/EGLTest/Android.mk	/^LOCAL_MODULE := EGL_test$/;"	m
LOCAL_MODULE	opengl/tests/angeles/Android.mk	/^LOCAL_MODULE:= angeles$/;"	m
LOCAL_MODULE	opengl/tests/configdump/Android.mk	/^LOCAL_MODULE:= test-opengl-configdump$/;"	m
LOCAL_MODULE	opengl/tests/fillrate/Android.mk	/^LOCAL_MODULE:= test-opengl-fillrate$/;"	m
LOCAL_MODULE	opengl/tests/filter/Android.mk	/^LOCAL_MODULE:= test-opengl-filter$/;"	m
LOCAL_MODULE	opengl/tests/finish/Android.mk	/^LOCAL_MODULE:= test-opengl-finish$/;"	m
LOCAL_MODULE	opengl/tests/gl2_basic/Android.mk	/^LOCAL_MODULE:= test-opengl-gl2_basic$/;"	m
LOCAL_MODULE	opengl/tests/gl2_copyTexImage/Android.mk	/^LOCAL_MODULE:= test-opengl-gl2_copyTexImage$/;"	m
LOCAL_MODULE	opengl/tests/gl2_jni/Android.mk	/^LOCAL_MODULE := libgl2jni$/;"	m
LOCAL_MODULE	opengl/tests/gl2_yuvtex/Android.mk	/^LOCAL_MODULE:= test-opengl-gl2_yuvtex$/;"	m
LOCAL_MODULE	opengl/tests/gl_basic/Android.mk	/^LOCAL_MODULE:= test-opengl-gl_basic$/;"	m
LOCAL_MODULE	opengl/tests/gl_jni/Android.mk	/^LOCAL_MODULE := libgljni$/;"	m
LOCAL_MODULE	opengl/tests/gl_perf/Android.mk	/^LOCAL_MODULE:= test-opengl-gl2_perf$/;"	m
LOCAL_MODULE	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_MODULE := libglperf$/;"	m
LOCAL_MODULE	opengl/tests/gl_yuvtex/Android.mk	/^LOCAL_MODULE:= test-opengl-gl_yuvtex$/;"	m
LOCAL_MODULE	opengl/tests/gldual/Android.mk	/^LOCAL_MODULE := libgldualjni$/;"	m
LOCAL_MODULE	opengl/tests/gralloc/Android.mk	/^LOCAL_MODULE:= test-opengl-gralloc$/;"	m
LOCAL_MODULE	opengl/tests/hwc/Android.mk	/^LOCAL_MODULE:= hwcColorEquiv$/;"	m
LOCAL_MODULE	opengl/tests/hwc/Android.mk	/^LOCAL_MODULE:= hwcCommit$/;"	m
LOCAL_MODULE	opengl/tests/hwc/Android.mk	/^LOCAL_MODULE:= hwcRects$/;"	m
LOCAL_MODULE	opengl/tests/hwc/Android.mk	/^LOCAL_MODULE:= hwcStress$/;"	m
LOCAL_MODULE	opengl/tests/hwc/Android.mk	/^LOCAL_MODULE:= libhwcTest$/;"	m
LOCAL_MODULE	opengl/tests/lib/Android.mk	/^LOCAL_MODULE:= libglTest$/;"	m
LOCAL_MODULE	opengl/tests/linetex/Android.mk	/^LOCAL_MODULE:= test-opengl-linetex$/;"	m
LOCAL_MODULE	opengl/tests/swapinterval/Android.mk	/^LOCAL_MODULE:= test-opengl-swapinterval$/;"	m
LOCAL_MODULE	opengl/tests/textures/Android.mk	/^LOCAL_MODULE:= test-opengl-textures$/;"	m
LOCAL_MODULE	opengl/tests/tritex/Android.mk	/^LOCAL_MODULE:= test-opengl-tritex$/;"	m
LOCAL_MODULE	services/batteryservice/Android.mk	/^LOCAL_MODULE:= libbatteryservice$/;"	m
LOCAL_MODULE	services/inputflinger/Android.mk	/^LOCAL_MODULE := libinputflinger$/;"	m
LOCAL_MODULE	services/powermanager/Android.mk	/^LOCAL_MODULE:= libpowermanager$/;"	m
LOCAL_MODULE	services/sensorservice/Android.mk	/^LOCAL_MODULE:= libsensorservice$/;"	m
LOCAL_MODULE	services/sensorservice/Android.mk	/^LOCAL_MODULE:= sensorservice$/;"	m
LOCAL_MODULE	services/sensorservice/tests/Android.mk	/^LOCAL_MODULE:= test-sensorservice$/;"	m
LOCAL_MODULE	services/surfaceflinger/Android.mk	/^LOCAL_MODULE:= libsurfaceflinger$/;"	m
LOCAL_MODULE	services/surfaceflinger/Android.mk	/^LOCAL_MODULE:= libsurfaceflinger_ddmconnection$/;"	m
LOCAL_MODULE	services/surfaceflinger/Android.mk	/^LOCAL_MODULE:= surfaceflinger$/;"	m
LOCAL_MODULE	services/surfaceflinger/tests/Android.mk	/^LOCAL_MODULE := SurfaceFlinger_test$/;"	m
LOCAL_MODULE	services/surfaceflinger/tests/resize/Android.mk	/^LOCAL_MODULE:= test-resize$/;"	m
LOCAL_MODULE	services/surfaceflinger/tests/screencap/Android.mk	/^LOCAL_MODULE:= test-screencap$/;"	m
LOCAL_MODULE	services/surfaceflinger/tests/transform/Android.mk	/^LOCAL_MODULE:= test-transform$/;"	m
LOCAL_MODULE	services/surfaceflinger/tests/vsync/Android.mk	/^LOCAL_MODULE:= test-vsync-events$/;"	m
LOCAL_MODULE	services/surfaceflinger/tests/waitforvsync/Android.mk	/^LOCAL_MODULE:= test-waitforvsync$/;"	m
LOCAL_MODULE_CLASS	opengl/libs/Android.mk	/^LOCAL_MODULE_CLASS := ETC$/;"	m
LOCAL_MODULE_PATH	cmds/flatland/Android.mk	/^LOCAL_MODULE_PATH := $(local_target_dir)$/;"	m
LOCAL_MODULE_PATH	cmds/ip-up-vpn/Android.mk	/^LOCAL_MODULE_PATH := $(TARGET_OUT_ETC)\/ppp$/;"	m
LOCAL_MODULE_PATH	cmds/rawbu/Android.mk	/^LOCAL_MODULE_PATH := $(TARGET_OUT_OPTIONAL_EXECUTABLES)$/;"	m
LOCAL_MODULE_PATH	opengl/libs/Android.mk	/^LOCAL_MODULE_PATH := $(TARGET_OUT)\/lib\/egl$/;"	m
LOCAL_MODULE_RELATIVE_PATH	opengl/libagl/Android.mk	/^LOCAL_MODULE_RELATIVE_PATH := egl$/;"	m
LOCAL_MODULE_STEM_32	cmds/flatland/Android.mk	/^LOCAL_MODULE_STEM_32 := flatland$/;"	m
LOCAL_MODULE_STEM_64	cmds/flatland/Android.mk	/^LOCAL_MODULE_STEM_64 := flatland64$/;"	m
LOCAL_MODULE_TAGS	cmds/atrace/Android.mk	/^LOCAL_MODULE_TAGS:= optional$/;"	m
LOCAL_MODULE_TAGS	cmds/flatland/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	cmds/installd/Android.mk	/^LOCAL_MODULE_TAGS := eng tests$/;"	m
LOCAL_MODULE_TAGS	cmds/installd/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	cmds/ip-up-vpn/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	cmds/rawbu/Android.mk	/^LOCAL_MODULE_TAGS := debug$/;"	m
LOCAL_MODULE_TAGS	cmds/servicemanager/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	libs/diskusage/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	libs/gui/tests/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	libs/input/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/libs/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/libs/GLES_trace/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/EGLTest/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/angeles/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/configdump/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/fillrate/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/filter/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/finish/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl2_basic/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl2_cameraeye/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl2_copyTexImage/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl2_java/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl2_jni/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl2_yuvtex/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl_basic/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl_jni/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl_perf/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gl_yuvtex/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gldual/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/gralloc/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/hwc/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/lib/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/lighting1709/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/linetex/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/swapinterval/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/testFramerate/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/testLatency/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/testPauseResume/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/testViewport/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/textures/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	opengl/tests/tritex/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	services/batteryservice/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	services/powermanager/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	services/sensorservice/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	services/sensorservice/tests/Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_MODULE_TAGS	services/surfaceflinger/tests/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	services/surfaceflinger/tests/resize/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	services/surfaceflinger/tests/screencap/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	services/surfaceflinger/tests/transform/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	services/surfaceflinger/tests/vsync/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MODULE_TAGS	services/surfaceflinger/tests/waitforvsync/Android.mk	/^LOCAL_MODULE_TAGS := tests$/;"	m
LOCAL_MULTILIB	cmds/flatland/Android.mk	/^LOCAL_MULTILIB := both$/;"	m
LOCAL_MULTILIB	libs/input/tests/Android.mk	/^LOCAL_MULTILIB := both$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/gl2_cameraeye/Android.mk	/^LOCAL_PACKAGE_NAME := GL2CameraEye$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/gl2_java/Android.mk	/^LOCAL_PACKAGE_NAME := GL2Java$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/gl2_jni/Android.mk	/^LOCAL_PACKAGE_NAME := GL2JNI$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/gl_jni/Android.mk	/^LOCAL_PACKAGE_NAME := GLJNI$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_PACKAGE_NAME := GLPerf$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/gldual/Android.mk	/^LOCAL_PACKAGE_NAME := GLDual$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/lighting1709/Android.mk	/^LOCAL_PACKAGE_NAME := LightingTest$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/testFramerate/Android.mk	/^LOCAL_PACKAGE_NAME := TestFramerate$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/testLatency/Android.mk	/^LOCAL_PACKAGE_NAME := TestLatency$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/testPauseResume/Android.mk	/^LOCAL_PACKAGE_NAME := TestEGL$/;"	m
LOCAL_PACKAGE_NAME	opengl/tests/testViewport/Android.mk	/^LOCAL_PACKAGE_NAME := TestViewport$/;"	m
LOCAL_PATH	cmds/atrace/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	cmds/bugreport/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	cmds/dumpstate/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	cmds/dumpsys/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	cmds/flatland/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	cmds/installd/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	cmds/installd/tests/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	cmds/ip-up-vpn/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	cmds/rawbu/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	cmds/service/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	cmds/servicemanager/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	libs/binder/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	libs/diskusage/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	libs/gui/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	libs/gui/tests/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	libs/input/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	libs/input/tests/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	libs/ui/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	libs/ui/tests/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	opengl/libagl/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/libs/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/libs/GLES_trace/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/EGLTest/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/angeles/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/configdump/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/fillrate/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/filter/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/finish/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl2_basic/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl2_cameraeye/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl2_copyTexImage/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl2_java/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl2_jni/Android.mk	/^LOCAL_PATH:= $(LOCAL_PATH)\/jni$/;"	m
LOCAL_PATH	opengl/tests/gl2_jni/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl2_yuvtex/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl_basic/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl_jni/Android.mk	/^LOCAL_PATH:= $(LOCAL_PATH)\/jni$/;"	m
LOCAL_PATH	opengl/tests/gl_jni/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl_perf/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_PATH:= $(LOCAL_PATH)\/jni$/;"	m
LOCAL_PATH	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gl_yuvtex/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gldual/Android.mk	/^LOCAL_PATH:= $(LOCAL_PATH)\/jni$/;"	m
LOCAL_PATH	opengl/tests/gldual/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/gralloc/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/hwc/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/lib/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/lighting1709/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/linetex/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/swapinterval/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/testFramerate/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/testLatency/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/testPauseResume/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/testViewport/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/textures/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	opengl/tests/tritex/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/batteryservice/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/inputflinger/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/inputflinger/tests/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/powermanager/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/sensorservice/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/sensorservice/tests/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/surfaceflinger/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/surfaceflinger/tests/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/surfaceflinger/tests/resize/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/surfaceflinger/tests/screencap/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/surfaceflinger/tests/transform/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/surfaceflinger/tests/vsync/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	services/surfaceflinger/tests/waitforvsync/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_POST_INSTALL_CMD	opengl/libs/Android.mk	/^LOCAL_POST_INSTALL_CMD = \\$/;"	m
LOCAL_REQUIRED_MODULES	opengl/libs/Android.mk	/^LOCAL_REQUIRED_MODULES := $(egl.cfg_config_module)$/;"	m
LOCAL_SDK_VERSION	opengl/tests/gl2_cameraeye/Android.mk	/^LOCAL_SDK_VERSION := current$/;"	m
LOCAL_SDK_VERSION	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_SDK_VERSION := 7$/;"	m
LOCAL_SDK_VERSION	opengl/tests/testLatency/Android.mk	/^LOCAL_SDK_VERSION := 8$/;"	m
LOCAL_SDK_VERSION	opengl/tests/testViewport/Android.mk	/^LOCAL_SDK_VERSION := 8$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/atrace/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/bugreport/Android.mk	/^LOCAL_SHARED_LIBRARIES := libcutils$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/dumpstate/Android.mk	/^LOCAL_SHARED_LIBRARIES := libcutils liblog libselinux$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/dumpsys/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/flatland/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/installd/Android.mk	/^LOCAL_SHARED_LIBRARIES := libcutils liblog libselinux$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/ip-up-vpn/Android.mk	/^LOCAL_SHARED_LIBRARIES := libcutils liblog$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/rawbu/Android.mk	/^LOCAL_SHARED_LIBRARIES := libcutils libc$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/service/Android.mk	/^LOCAL_SHARED_LIBRARIES := libutils libbinder$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/servicemanager/Android.mk	/^LOCAL_SHARED_LIBRARIES := liblog libselinux$/;"	m
LOCAL_SHARED_LIBRARIES	cmds/servicemanager/Android.mk	/^LOCAL_SHARED_LIBRARIES := liblog$/;"	m
LOCAL_SHARED_LIBRARIES	libs/gui/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	libs/gui/tests/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	libs/input/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	libs/ui/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/libagl/Android.mk	/^LOCAL_SHARED_LIBRARIES := libcutils libhardware libutils liblog libpixelflinger libETC1 libui$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/libs/GLES_trace/Android.mk	/^LOCAL_SHARED_LIBRARIES := libcutils libutils liblog libstlport$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/EGLTest/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/angeles/Android.mk	/^LOCAL_SHARED_LIBRARIES := libEGL libGLESv1_CM libui libgui libutils$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/configdump/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/fillrate/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/filter/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/finish/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gl2_basic/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gl2_copyTexImage/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gl2_jni/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gl2_yuvtex/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gl_basic/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gl_jni/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gl_perf/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gl_yuvtex/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gldual/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/gralloc/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/hwc/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/linetex/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/swapinterval/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/textures/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	opengl/tests/tritex/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/inputflinger/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/powermanager/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/sensorservice/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/sensorservice/tests/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/surfaceflinger/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/surfaceflinger/tests/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/surfaceflinger/tests/resize/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/surfaceflinger/tests/screencap/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/surfaceflinger/tests/transform/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/surfaceflinger/tests/vsync/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	services/surfaceflinger/tests/waitforvsync/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SRC_FILES	cmds/atrace/Android.mk	/^LOCAL_SRC_FILES:= atrace.cpp$/;"	m
LOCAL_SRC_FILES	cmds/bugreport/Android.mk	/^LOCAL_SRC_FILES:= bugreport.c$/;"	m
LOCAL_SRC_FILES	cmds/dumpstate/Android.mk	/^LOCAL_SRC_FILES := dumpstate.c utils.c$/;"	m
LOCAL_SRC_FILES	cmds/dumpstate/Android.mk	/^LOCAL_SRC_FILES := libdumpstate_default.c$/;"	m
LOCAL_SRC_FILES	cmds/dumpsys/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	cmds/flatland/Android.mk	/^LOCAL_SRC_FILES:=   \\$/;"	m
LOCAL_SRC_FILES	cmds/installd/Android.mk	/^LOCAL_SRC_FILES := $(common_src_files)$/;"	m
LOCAL_SRC_FILES	cmds/installd/Android.mk	/^LOCAL_SRC_FILES := installd.c $(common_src_files)$/;"	m
LOCAL_SRC_FILES	cmds/ip-up-vpn/Android.mk	/^LOCAL_SRC_FILES := ip-up-vpn.c$/;"	m
LOCAL_SRC_FILES	cmds/rawbu/Android.mk	/^LOCAL_SRC_FILES:= backup.cpp$/;"	m
LOCAL_SRC_FILES	cmds/service/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	cmds/servicemanager/Android.mk	/^LOCAL_SRC_FILES := bctest.c binder.c$/;"	m
LOCAL_SRC_FILES	cmds/servicemanager/Android.mk	/^LOCAL_SRC_FILES := service_manager.c binder.c$/;"	m
LOCAL_SRC_FILES	libs/binder/Android.mk	/^LOCAL_SRC_FILES := $(sources)$/;"	m
LOCAL_SRC_FILES	libs/diskusage/Android.mk	/^LOCAL_SRC_FILES := dirsize.c$/;"	m
LOCAL_SRC_FILES	libs/gui/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	libs/gui/tests/Android.mk	/^LOCAL_SRC_FILES := \\$/;"	m
LOCAL_SRC_FILES	libs/input/Android.mk	/^LOCAL_SRC_FILES:= $(deviceSources)$/;"	m
LOCAL_SRC_FILES	libs/input/Android.mk	/^LOCAL_SRC_FILES:= $(hostSources)$/;"	m
LOCAL_SRC_FILES	libs/input/tests/Android.mk	/^LOCAL_SRC_FILES := StructLayout_test.cpp$/;"	m
LOCAL_SRC_FILES	libs/ui/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/libagl/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/libs/Android.mk	/^LOCAL_SRC_FILES := ..\/..\/..\/..\/$(BOARD_EGL_CFG)$/;"	m
LOCAL_SRC_FILES	opengl/libs/Android.mk	/^LOCAL_SRC_FILES:= 		\\$/;"	m
LOCAL_SRC_FILES	opengl/libs/Android.mk	/^LOCAL_SRC_FILES:= 	       \\$/;"	m
LOCAL_SRC_FILES	opengl/libs/GLES_trace/Android.mk	/^LOCAL_SRC_FILES := \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/EGLTest/Android.mk	/^LOCAL_SRC_FILES := \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/angeles/Android.mk	/^LOCAL_SRC_FILES:= app-linux.cpp demo.c.arm$/;"	m
LOCAL_SRC_FILES	opengl/tests/configdump/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/fillrate/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/filter/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/finish/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl2_basic/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl2_cameraeye/Android.mk	/^LOCAL_SRC_FILES := $(call all-java-files-under, src)$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl2_copyTexImage/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl2_java/Android.mk	/^LOCAL_SRC_FILES := $(call all-subdir-java-files)$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl2_jni/Android.mk	/^LOCAL_SRC_FILES := $(call all-subdir-java-files)$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl2_jni/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl2_yuvtex/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl_basic/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl_jni/Android.mk	/^LOCAL_SRC_FILES := $(call all-subdir-java-files)$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl_jni/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl_perf/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_SRC_FILES := $(call all-subdir-java-files)$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl_perfapp/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gl_yuvtex/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gldual/Android.mk	/^LOCAL_SRC_FILES := $(call all-subdir-java-files)$/;"	m
LOCAL_SRC_FILES	opengl/tests/gldual/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/gralloc/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/hwc/Android.mk	/^LOCAL_SRC_FILES:= hwcColorEquiv.cpp$/;"	m
LOCAL_SRC_FILES	opengl/tests/hwc/Android.mk	/^LOCAL_SRC_FILES:= hwcCommit.cpp$/;"	m
LOCAL_SRC_FILES	opengl/tests/hwc/Android.mk	/^LOCAL_SRC_FILES:= hwcRects.cpp$/;"	m
LOCAL_SRC_FILES	opengl/tests/hwc/Android.mk	/^LOCAL_SRC_FILES:= hwcStress.cpp$/;"	m
LOCAL_SRC_FILES	opengl/tests/hwc/Android.mk	/^LOCAL_SRC_FILES:= hwcTestLib.cpp$/;"	m
LOCAL_SRC_FILES	opengl/tests/lib/Android.mk	/^LOCAL_SRC_FILES:= glTestLib.cpp WindowSurface.cpp$/;"	m
LOCAL_SRC_FILES	opengl/tests/lighting1709/Android.mk	/^LOCAL_SRC_FILES := $(call all-subdir-java-files)$/;"	m
LOCAL_SRC_FILES	opengl/tests/linetex/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/swapinterval/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/testFramerate/Android.mk	/^LOCAL_SRC_FILES := $(call all-subdir-java-files)$/;"	m
LOCAL_SRC_FILES	opengl/tests/testLatency/Android.mk	/^LOCAL_SRC_FILES := $(call all-subdir-java-files)$/;"	m
LOCAL_SRC_FILES	opengl/tests/testPauseResume/Android.mk	/^LOCAL_SRC_FILES := $(call all-subdir-java-files)$/;"	m
LOCAL_SRC_FILES	opengl/tests/testViewport/Android.mk	/^LOCAL_SRC_FILES := $(call all-subdir-java-files)$/;"	m
LOCAL_SRC_FILES	opengl/tests/textures/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	opengl/tests/tritex/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/batteryservice/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/inputflinger/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/powermanager/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/sensorservice/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/sensorservice/tests/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/surfaceflinger/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/surfaceflinger/tests/Android.mk	/^LOCAL_SRC_FILES := \\$/;"	m
LOCAL_SRC_FILES	services/surfaceflinger/tests/resize/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/surfaceflinger/tests/screencap/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/surfaceflinger/tests/transform/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/surfaceflinger/tests/vsync/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	services/surfaceflinger/tests/waitforvsync/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_STATIC_LIBRARIES	cmds/installd/Android.mk	/^LOCAL_STATIC_LIBRARIES := libdiskusage$/;"	m
LOCAL_STATIC_LIBRARIES	opengl/libs/GLES_trace/Android.mk	/^LOCAL_STATIC_LIBRARIES := libprotobuf-cpp-2.3.0-lite liblzf$/;"	m
LOCAL_STATIC_LIBRARIES	opengl/tests/EGLTest/Android.mk	/^LOCAL_STATIC_LIBRARIES := \\$/;"	m
LOCAL_STATIC_LIBRARIES	opengl/tests/hwc/Android.mk	/^LOCAL_STATIC_LIBRARIES := \\$/;"	m
LOCAL_STATIC_LIBRARIES	services/batteryservice/Android.mk	/^LOCAL_STATIC_LIBRARIES := \\$/;"	m
LOCAL_WHOLE_STATIC_LIBRARIES	services/surfaceflinger/Android.mk	/^LOCAL_WHOLE_STATIC_LIBRARIES := libsigchain$/;"	m
LOGTAG_SF_FRAME_DUR	services/surfaceflinger/EventLog/EventLog.h	/^    enum { LOGTAG_SF_FRAME_DUR = 60100 };$/;"	e	enum:android::EventLog::__anon31
LOG_ALLOC	libs/binder/Parcel.cpp	52;"	d	file:
LOG_FRAME_STATS_PERIOD	services/surfaceflinger/SurfaceFlinger.h	/^    enum { LOG_FRAME_STATS_PERIOD =  30*60*60 };$/;"	e	enum:android::SurfaceFlinger::__anon21
LOG_NDEBUG	services/inputflinger/InputReader.cpp	19;"	d	file:
LOG_NDEBUG	services/inputflinger/InputWindow.cpp	18;"	d	file:
LOG_ONEWAY	libs/binder/IPCThreadState.cpp	55;"	d	file:
LOG_ONEWAY	libs/binder/IPCThreadState.cpp	64;"	d	file:
LOG_REFS	libs/binder/Parcel.cpp	50;"	d	file:
LOG_REMOTEREFS	libs/binder/IPCThreadState.cpp	52;"	d	file:
LOG_REMOTEREFS	libs/binder/IPCThreadState.cpp	61;"	d	file:
LOG_TAG	cmds/dumpstate/dumpstate.c	36;"	d	file:
LOG_TAG	cmds/dumpsys/dumpsys.cpp	6;"	d	file:
LOG_TAG	cmds/installd/installd.h	18;"	d
LOG_TAG	cmds/installd/tests/installd_utils_test.cpp	20;"	d	file:
LOG_TAG	cmds/ip-up-vpn/ip-up-vpn.c	31;"	d	file:
LOG_TAG	cmds/servicemanager/binder.c	18;"	d	file:
LOG_TAG	cmds/servicemanager/service_manager.c	20;"	d	file:
LOG_TAG	libs/binder/BpBinder.cpp	17;"	d	file:
LOG_TAG	libs/binder/IAppOpsCallback.cpp	17;"	d	file:
LOG_TAG	libs/binder/IAppOpsService.cpp	17;"	d	file:
LOG_TAG	libs/binder/IMemory.cpp	17;"	d	file:
LOG_TAG	libs/binder/IPCThreadState.cpp	17;"	d	file:
LOG_TAG	libs/binder/IPermissionController.cpp	17;"	d	file:
LOG_TAG	libs/binder/IServiceManager.cpp	17;"	d	file:
LOG_TAG	libs/binder/MemoryDealer.cpp	17;"	d	file:
LOG_TAG	libs/binder/MemoryHeapBase.cpp	17;"	d	file:
LOG_TAG	libs/binder/MemoryHeapPmem.cpp	17;"	d	file:
LOG_TAG	libs/binder/Parcel.cpp	17;"	d	file:
LOG_TAG	libs/binder/PermissionCache.cpp	17;"	d	file:
LOG_TAG	libs/binder/ProcessState.cpp	17;"	d	file:
LOG_TAG	libs/gui/BufferItemConsumer.cpp	18;"	d	file:
LOG_TAG	libs/gui/BufferQueue.cpp	17;"	d	file:
LOG_TAG	libs/gui/BufferQueueConsumer.cpp	19;"	d	file:
LOG_TAG	libs/gui/BufferQueueCore.cpp	17;"	d	file:
LOG_TAG	libs/gui/BufferQueueProducer.cpp	19;"	d	file:
LOG_TAG	libs/gui/ConsumerBase.cpp	19;"	d	file:
LOG_TAG	libs/gui/CpuConsumer.cpp	18;"	d	file:
LOG_TAG	libs/gui/GLConsumer.cpp	17;"	d	file:
LOG_TAG	libs/gui/IGraphicBufferAlloc.cpp	18;"	d	file:
LOG_TAG	libs/gui/ISurfaceComposer.cpp	18;"	d	file:
LOG_TAG	libs/gui/ISurfaceComposerClient.cpp	18;"	d	file:
LOG_TAG	libs/gui/SensorEventQueue.cpp	17;"	d	file:
LOG_TAG	libs/gui/SensorManager.cpp	17;"	d	file:
LOG_TAG	libs/gui/StreamSplitter.cpp	19;"	d	file:
LOG_TAG	libs/gui/Surface.cpp	17;"	d	file:
LOG_TAG	libs/gui/SurfaceComposerClient.cpp	17;"	d	file:
LOG_TAG	libs/gui/SurfaceControl.cpp	17;"	d	file:
LOG_TAG	libs/gui/SyncFeatures.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/BufferQueue_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/CpuConsumer_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/IGraphicBufferProducer_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/MultiTextureConsumer_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/SRGB_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/StreamSplitter_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/SurfaceTextureClient_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/SurfaceTextureFBO_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/SurfaceTextureGLThreadToGL_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/SurfaceTextureGL_test.cpp	17;"	d	file:
LOG_TAG	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	17;"	d	file:
LOG_TAG	libs/input/Input.cpp	17;"	d	file:
LOG_TAG	libs/input/InputDevice.cpp	17;"	d	file:
LOG_TAG	libs/input/InputTransport.cpp	6;"	d	file:
LOG_TAG	libs/input/KeyCharacterMap.cpp	17;"	d	file:
LOG_TAG	libs/input/KeyLayoutMap.cpp	17;"	d	file:
LOG_TAG	libs/input/Keyboard.cpp	17;"	d	file:
LOG_TAG	libs/input/VelocityControl.cpp	17;"	d	file:
LOG_TAG	libs/input/VelocityTracker.cpp	17;"	d	file:
LOG_TAG	libs/input/VirtualKeyMap.cpp	17;"	d	file:
LOG_TAG	libs/ui/Fence.cpp	17;"	d	file:
LOG_TAG	libs/ui/FramebufferNativeWindow.cpp	18;"	d	file:
LOG_TAG	libs/ui/GraphicBuffer.cpp	17;"	d	file:
LOG_TAG	libs/ui/GraphicBufferAllocator.cpp	18;"	d	file:
LOG_TAG	libs/ui/GraphicBufferMapper.cpp	17;"	d	file:
LOG_TAG	libs/ui/Region.cpp	20;"	d	file:
LOG_TAG	libs/ui/tests/Region_test.cpp	17;"	d	file:
LOG_TAG	libs/ui/tests/mat_test.cpp	17;"	d	file:
LOG_TAG	libs/ui/tests/vec_test.cpp	17;"	d	file:
LOG_TAG	opengl/tests/EGLTest/egl_cache_test.cpp	17;"	d	file:
LOG_TAG	opengl/tests/fillrate/fillrate.cpp	18;"	d	file:
LOG_TAG	opengl/tests/gl2_jni/jni/gl_code.cpp	4;"	d	file:
LOG_TAG	opengl/tests/gl_jni/jni/gl_code.cpp	4;"	d	file:
LOG_TAG	opengl/tests/gl_perfapp/jni/gl_code.cpp	4;"	d	file:
LOG_TAG	opengl/tests/gldual/jni/gl_code.cpp	4;"	d	file:
LOG_TAG	opengl/tests/gralloc/gralloc.cpp	18;"	d	file:
LOG_TAG	opengl/tests/hwc/hwcColorEquiv.cpp	90;"	d	file:
LOG_TAG	opengl/tests/hwc/hwcCommit.cpp	101;"	d	file:
LOG_TAG	opengl/tests/hwc/hwcRects.cpp	109;"	d	file:
LOG_TAG	opengl/tests/hwc/hwcStress.cpp	106;"	d	file:
LOG_TAG	services/batteryservice/IBatteryPropertiesRegistrar.cpp	17;"	d	file:
LOG_TAG	services/inputflinger/EventHub.cpp	34;"	d	file:
LOG_TAG	services/inputflinger/InputApplication.cpp	17;"	d	file:
LOG_TAG	services/inputflinger/InputDispatcher.cpp	17;"	d	file:
LOG_TAG	services/inputflinger/InputListener.cpp	17;"	d	file:
LOG_TAG	services/inputflinger/InputManager.cpp	17;"	d	file:
LOG_TAG	services/inputflinger/InputReader.cpp	17;"	d	file:
LOG_TAG	services/inputflinger/InputWindow.cpp	17;"	d	file:
LOG_TAG	services/powermanager/IPowerManager.cpp	17;"	d	file:
LOG_THREADPOOL	libs/binder/IPCThreadState.cpp	54;"	d	file:
LOG_THREADPOOL	libs/binder/IPCThreadState.cpp	63;"	d	file:
Layer	cmds/flatland/Main.cpp	/^    Layer() :$/;"	f	class:Layer
Layer	cmds/flatland/Main.cpp	/^class Layer {$/;"	c	file:
Layer	services/surfaceflinger/Layer.cpp	/^Layer::Layer(SurfaceFlinger* flinger, const sp<Client>& client,$/;"	f	class:android::Layer
Layer	services/surfaceflinger/Layer.h	/^class Layer : public SurfaceFlingerConsumer::ContentsChangedListener {$/;"	c	namespace:android
LayerBlur	services/surfaceflinger/LayerBlur.cpp	/^LayerBlur::LayerBlur(SurfaceFlinger* flinger, const sp<Client>& client,$/;"	f	class:android::LayerBlur
LayerBlur	services/surfaceflinger/LayerBlur.h	/^class LayerBlur : public Layer$/;"	c	namespace:android
LayerCleaner	services/surfaceflinger/Layer.cpp	/^Layer::LayerCleaner::LayerCleaner(const sp<SurfaceFlinger>& flinger,$/;"	f	class:android::Layer::LayerCleaner
LayerCleaner	services/surfaceflinger/Layer.h	/^    class LayerCleaner {$/;"	c	class:android::Layer
LayerDesc	cmds/flatland/Flatland.h	/^struct LayerDesc {$/;"	s	namespace:android
LayerDim	services/surfaceflinger/LayerDim.cpp	/^LayerDim::LayerDim(SurfaceFlinger* flinger, const sp<Client>& client,$/;"	f	class:android::LayerDim
LayerDim	services/surfaceflinger/LayerDim.h	/^class LayerDim : public Layer$/;"	c	namespace:android
LayerListIterator	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        LayerListIterator() : mLayerList(NULL), mIndex(0) { }$/;"	f	class:android::HWComposer::LayerListIterator
LayerListIterator	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        LayerListIterator(HWCLayer* layer, size_t index)$/;"	f	class:android::HWComposer::LayerListIterator
LayerListIterator	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        LayerListIterator(const LayerListIterator& rhs)$/;"	f	class:android::HWComposer::LayerListIterator
LayerListIterator	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    class LayerListIterator {$/;"	c	class:android::HWComposer
LayerUpdateTest	services/surfaceflinger/tests/Transaction_test.cpp	/^class LayerUpdateTest : public ::testing::Test {$/;"	c	namespace:android	file:
LayerVector	services/surfaceflinger/SurfaceFlinger.cpp	/^SurfaceFlinger::LayerVector::LayerVector() {$/;"	f	class:android::SurfaceFlinger::LayerVector
LayerVector	services/surfaceflinger/SurfaceFlinger.cpp	/^SurfaceFlinger::LayerVector::LayerVector(const LayerVector& rhs)$/;"	f	class:android::SurfaceFlinger::LayerVector
LayerVector	services/surfaceflinger/SurfaceFlinger.h	/^    class LayerVector : public SortedVector< sp<Layer> > {$/;"	c	class:android::SurfaceFlinger
LeastSquaresVelocityTrackerStrategy	include/input/VelocityTracker.h	/^class LeastSquaresVelocityTrackerStrategy : public VelocityTrackerStrategy {$/;"	c	namespace:android
LeastSquaresVelocityTrackerStrategy	libs/input/VelocityTracker.cpp	/^LeastSquaresVelocityTrackerStrategy::LeastSquaresVelocityTrackerStrategy($/;"	f	class:android::LeastSquaresVelocityTrackerStrategy
Led	include/input/KeyLayoutMap.h	/^    struct Led {$/;"	s	class:android::KeyLayoutMap
LedState	services/inputflinger/InputReader.h	/^    struct LedState {$/;"	s	class:android::KeyboardInputMapper
LegacyVelocityTrackerStrategy	include/input/VelocityTracker.h	/^class LegacyVelocityTrackerStrategy : public VelocityTrackerStrategy {$/;"	c	namespace:android
LegacyVelocityTrackerStrategy	libs/input/VelocityTracker.cpp	/^LegacyVelocityTrackerStrategy::LegacyVelocityTrackerStrategy() {$/;"	f	class:android::LegacyVelocityTrackerStrategy
LibBinderIPCtStatics	libs/binder/Static.cpp	/^    LibBinderIPCtStatics()$/;"	f	class:android::LibBinderIPCtStatics
LibBinderIPCtStatics	libs/binder/Static.cpp	/^class LibBinderIPCtStatics$/;"	c	namespace:android	file:
License	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^** Licensed under the Apache License, Version 2.0 (the "License");$/;"	v
LinearAccelerationSensor	services/sensorservice/LinearAccelerationSensor.cpp	/^LinearAccelerationSensor::LinearAccelerationSensor(sensor_t const* list, size_t count)$/;"	f	class:android::LinearAccelerationSensor
LinearAccelerationSensor	services/sensorservice/LinearAccelerationSensor.h	/^class LinearAccelerationSensor : public SensorInterface {$/;"	c	namespace:android
Link	services/inputflinger/InputDispatcher.h	/^        inline Link() : next(NULL), prev(NULL) { }$/;"	f	struct:android::InputDispatcher::Link
Link	services/inputflinger/InputDispatcher.h	/^    struct Link {$/;"	s	class:android::InputDispatcher
LinkedList	libs/binder/MemoryDealer.cpp	/^                LinkedList() : mFirst(0), mLast(0) { }$/;"	f	class:android::LinkedList
LinkedList	libs/binder/MemoryDealer.cpp	/^class LinkedList$/;"	c	namespace:android	file:
Loader	opengl/libs/EGL/Loader.cpp	/^Loader::Loader()$/;"	f	class:android::Loader
Loader	opengl/libs/EGL/Loader.h	/^class Loader : public Singleton<Loader>$/;"	c	namespace:android
LocalRef	opengl/libs/EGL/egl_object.h	/^        explicit LocalRef(egl_display_t const* display, T o) : ref(0) {$/;"	f	class:android::egl_object_t::LocalRef
LocalRef	opengl/libs/EGL/egl_object.h	/^    class LocalRef {$/;"	c	class:android::egl_object_t
LocalRef	opengl/libs/EGL/egl_object.h	/^egl_object_t::LocalRef<N, T>::LocalRef(egl_object_t* rhs) : ref(rhs) {$/;"	f	class:android::egl_object_t::LocalRef
LockedBuffer	include/gui/CpuConsumer.h	/^    struct LockedBuffer {$/;"	s	class:android::CpuConsumer
LogTextOutput	libs/binder/Static.cpp	/^    LogTextOutput() : BufferedTextOutput(MULTITHREADED) { }$/;"	f	class:android::LogTextOutput
LogTextOutput	libs/binder/Static.cpp	/^class LogTextOutput : public BufferedTextOutput$/;"	c	namespace:android	file:
M	opengl/tests/angeles/demo.c	669;"	d	file:
M	opengl/tests/angeles/demo.c	686;"	d	file:
MAG	services/sensorservice/Fusion.h	/^    enum { ACC=0x1, MAG=0x2, GYRO=0x4 };$/;"	e	enum:android::Fusion::__anon52
MAGENTA	services/surfaceflinger/Colorizer.h	/^        MAGENTA = 35,$/;"	e	enum:android::Colorizer::color
MAGIC	opengl/libagl/egl.cpp	/^        MAGIC     = 0x31415265$/;"	e	enum:android::egl_surface_t::__anon232	file:
MAXCMD	opengl/tests/hwc/hwcColorEquiv.cpp	110;"	d	file:
MAXCMD	opengl/tests/hwc/hwcCommit.cpp	155;"	d	file:
MAXCMD	opengl/tests/hwc/hwcRects.cpp	135;"	d	file:
MAXCMD	opengl/tests/hwc/hwcStress.cpp	157;"	d	file:
MAXSTR	opengl/tests/hwc/hwcColorEquiv.cpp	109;"	d	file:
MAXSTR	opengl/tests/hwc/hwcStress.cpp	156;"	d	file:
MAX_AXES	include/input/Input.h	/^    enum { MAX_AXES = 30 }; \/\/ 30 so that sizeof(PointerCoords) == 128$/;"	e	enum:android::PointerCoords::__anon119
MAX_BIO_SIZE	cmds/servicemanager/binder.c	14;"	d	file:
MAX_CONTROLLER_LEDS	include/input/Input.h	95;"	d
MAX_DEGREE	include/input/VelocityTracker.h	/^        static const size_t MAX_DEGREE = 4;$/;"	m	struct:android::VelocityTracker::Estimator
MAX_EGL_CACHE_ENTRY_SIZE	opengl/libs/EGL/egl_cache.cpp	30;"	d	file:
MAX_EGL_CACHE_KEY_SIZE	opengl/libs/EGL/egl_cache.cpp	34;"	d	file:
MAX_EGL_CACHE_SIZE	opengl/libs/EGL/egl_cache.cpp	38;"	d	file:
MAX_HWC_DISPLAYS	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        MAX_HWC_DISPLAYS = HWC_NUM_DISPLAY_TYPES,$/;"	e	enum:android::HWComposer::__anon17
MAX_LAYER_COUNT	services/surfaceflinger/DisplayHardware/HWComposer.h	35;"	d
MAX_MAX_ACQUIRED_BUFFERS	include/gui/BufferQueue.h	/^    enum { MAX_MAX_ACQUIRED_BUFFERS = NUM_BUFFER_SLOTS - 2 };$/;"	e	enum:android::BufferQueue::__anon145
MAX_MAX_ACQUIRED_BUFFERS	include/gui/BufferQueueCore.h	/^    enum { MAX_MAX_ACQUIRED_BUFFERS = BufferQueueDefs::NUM_BUFFER_SLOTS - 2 };$/;"	e	enum:android::BufferQueueCore::__anon140
MAX_NUMBER_OF_GL_EXTENSIONS	opengl/libs/hooks.h	45;"	d
MAX_NUM_FRAME_BUFFERS	include/ui/FramebufferNativeWindow.h	34;"	d
MAX_NUM_LAYERS	cmds/flatland/Flatland.h	/^enum { MAX_NUM_LAYERS = 16 };$/;"	e	enum:android::__anon4
MAX_NUM_PLANES	include/media/hardware/HardwareAPI.h	/^        MAX_NUM_PLANES$/;"	e	enum:android::MediaImage::PlaneIndex
MAX_OUTSTANDING_BUFFERS	include/gui/StreamSplitter.h	/^    static const int MAX_OUTSTANDING_BUFFERS = 2;$/;"	m	class:android::StreamSplitter
MAX_POINTERS	include/input/Input.h	111;"	d
MAX_POINTER_ID	include/input/Input.h	123;"	d
MAX_RECEIVE_BUFFER_EVENT_COUNT	include/gui/SensorEventQueue.h	/^    enum { MAX_RECEIVE_BUFFER_EVENT_COUNT = 256 };$/;"	e	enum:android::SensorEventQueue::__anon151
MAX_RESYNC_SAMPLES	services/surfaceflinger/DispSync.h	/^    enum { MAX_RESYNC_SAMPLES = 32 };$/;"	e	enum:android::DispSync::__anon34
MAX_RESYNC_SAMPLES_WITHOUT_PRESENT	services/surfaceflinger/DispSync.h	/^    enum { MAX_RESYNC_SAMPLES_WITHOUT_PRESENT = 4 };$/;"	e	enum:android::DispSync::__anon37
MAX_SAMPLES	include/input/Input.h	116;"	d
MAX_SHADER_LINES	cmds/flatland/GLHelper.h	/^enum { MAX_SHADER_LINES = 128 };$/;"	e	enum:android::__anon6
MAX_SLOTS	services/inputflinger/InputReader.cpp	/^static const size_t MAX_SLOTS = 32;$/;"	m	namespace:android	file:
MAX_SOCKET_BUFFER_SIZE_BATCHED	services/sensorservice/SensorService.h	44;"	d
MAX_SYS_FILES	cmds/atrace/atrace.cpp	/^enum { MAX_SYS_FILES = 10 };$/;"	e	enum:__anon1	file:
MAX_TEST_RUNS	cmds/flatland/Flatland.h	/^enum { MAX_TEST_RUNS = 16 };$/;"	e	enum:android::__anon5
MAX_VALID_MAGNETIC_FIELD	services/sensorservice/Fusion.cpp	/^static const int MAX_VALID_MAGNETIC_FIELD = 100; \/\/ uT$/;"	m	namespace:android	file:
MAX_VALID_MAGNETIC_FIELD_PROP	services/sensorservice/Fusion.cpp	68;"	d	file:
MAX_VIBRATE_PATTERN_DELAY_NSECS	services/inputflinger/InputReader.h	44;"	d
MAX_VIBRATE_PATTERN_SIZE	services/inputflinger/InputReader.h	40;"	d
MEDIA_IMAGE_TYPE_UNKNOWN	include/media/hardware/HardwareAPI.h	/^        MEDIA_IMAGE_TYPE_UNKNOWN = 0,$/;"	e	enum:android::MediaImage::Type
MEDIA_IMAGE_TYPE_YUV	include/media/hardware/HardwareAPI.h	/^        MEDIA_IMAGE_TYPE_YUV,$/;"	e	enum:android::MediaImage::Type
MEDIA_SUBDIR	cmds/installd/installd.h	69;"	d
MEMCLR	opengl/tests/hwc/hwcColorEquiv.cpp	119;"	d	file:
MEMCLR	opengl/tests/hwc/hwcStress.cpp	165;"	d	file:
METADATA_BUFFER_TYPE_H	include/media/hardware/MetadataBufferType.h	18;"	d
MHB_ION_EXYNOS_FIMD_VIDEO_MASK	include/binder/MemoryHeapIon.h	50;"	d
MHB_ION_EXYNOS_GSC_MASK	include/binder/MemoryHeapIon.h	49;"	d
MHB_ION_EXYNOS_MFC_INPUT_MASK	include/binder/MemoryHeapIon.h	47;"	d
MHB_ION_EXYNOS_MFC_OUTPUT_MASK	include/binder/MemoryHeapIon.h	48;"	d
MHB_ION_EXYNOS_VIDEO_MASK	include/binder/MemoryHeapIon.h	46;"	d
MHB_ION_FLAG_CACHED	include/binder/MemoryHeapIon.h	42;"	d
MHB_ION_FLAG_CACHED_NEEDS_SYNC	include/binder/MemoryHeapIon.h	43;"	d
MHB_ION_FLAG_PRESERVE_KMAP	include/binder/MemoryHeapIon.h	44;"	d
MHB_ION_HEAP_EXYNOS_CONTIG_MASK	include/binder/MemoryHeapIon.h	38;"	d
MHB_ION_HEAP_EXYNOS_MASK	include/binder/MemoryHeapIon.h	39;"	d
MHB_ION_HEAP_SYSTEM_CONTIG_MASK	include/binder/MemoryHeapIon.h	37;"	d
MHB_ION_HEAP_SYSTEM_MASK	include/binder/MemoryHeapIon.h	40;"	d
MINIMUM_EVENTS_PERIOD	services/sensorservice/SensorDevice.h	/^    static const nsecs_t MINIMUM_EVENTS_PERIOD =   1000000; \/\/ 1000 Hz$/;"	m	class:android::SensorDevice
MINOR	services/inputflinger/tests/InputReader_test.cpp	/^        MINOR = 1 << 5,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
MIN_DIRTYRECT_COUNT	services/surfaceflinger/SurfaceFlinger.cpp	95;"	d	file:
MIN_DURATION	include/input/VelocityTracker.h	/^    static const nsecs_t MIN_DURATION = 10 * 1000000; \/\/ 10 ms$/;"	m	class:android::LegacyVelocityTrackerStrategy
MIN_DURATION	libs/input/VelocityTracker.cpp	/^const nsecs_t LegacyVelocityTrackerStrategy::MIN_DURATION;$/;"	m	class:android::LegacyVelocityTrackerStrategy	file:
MIN_HWC_HEADER_VERSION	services/surfaceflinger/DisplayHardware/HWComposer.cpp	54;"	d	file:
MIN_NUM_FRAME_BUFFERS	include/ui/FramebufferNativeWindow.h	33;"	d
MIN_RESYNC_SAMPLES_FOR_UPDATE	services/surfaceflinger/DispSync.h	/^    enum { MIN_RESYNC_SAMPLES_FOR_UPDATE = 3 };$/;"	e	enum:android::DispSync::__anon35
MIN_VALID_CROSS_PRODUCT_MAG	services/sensorservice/Fusion.cpp	/^static const float MIN_VALID_CROSS_PRODUCT_MAG = 1.0e-3;$/;"	m	namespace:android	file:
MIN_VALID_CROSS_PRODUCT_MAG_SQ	services/sensorservice/Fusion.cpp	/^static const float MIN_VALID_CROSS_PRODUCT_MAG_SQ =$/;"	m	namespace:android	file:
MIN_VALID_MAGNETIC_FIELD	services/sensorservice/Fusion.cpp	/^static const float MIN_VALID_MAGNETIC_FIELD = 10; \/\/ uT$/;"	m	namespace:android	file:
MIN_VALID_MAGNETIC_FIELD_SQ	services/sensorservice/Fusion.cpp	/^static const float MIN_VALID_MAGNETIC_FIELD_SQ =$/;"	m	namespace:android	file:
MODELVIEW	opengl/libagl/context.h	/^        MODELVIEW           = 0x01,$/;"	e	enum:android::gl::transform_state_t::__anon228
MODE_ALLOWED	include/binder/AppOpsManager.h	/^        MODE_ALLOWED = IAppOpsService::MODE_ALLOWED,$/;"	e	enum:android::AppOpsManager::__anon205
MODE_ALLOWED	include/binder/IAppOpsService.h	/^        MODE_ALLOWED = 0,$/;"	e	enum:android::IAppOpsService::__anon200
MODE_ERRORED	include/binder/AppOpsManager.h	/^        MODE_ERRORED = IAppOpsService::MODE_ERRORED$/;"	e	enum:android::AppOpsManager::__anon205
MODE_ERRORED	include/binder/IAppOpsService.h	/^        MODE_ERRORED = 2$/;"	e	enum:android::IAppOpsService::__anon200
MODE_IGNORED	include/binder/AppOpsManager.h	/^        MODE_IGNORED = IAppOpsService::MODE_IGNORED,$/;"	e	enum:android::AppOpsManager::__anon205
MODE_IGNORED	include/binder/IAppOpsService.h	/^        MODE_IGNORED = 1,$/;"	e	enum:android::IAppOpsService::__anon200
MODE_INVERT	include/input/KeyLayoutMap.h	/^        MODE_INVERT = 1,$/;"	e	enum:android::AxisInfo::Mode
MODE_NAVIGATION	services/inputflinger/InputReader.h	/^            MODE_NAVIGATION,$/;"	e	enum:android::CursorInputMapper::Parameters::Mode
MODE_NORMAL	include/input/KeyLayoutMap.h	/^        MODE_NORMAL = 0,$/;"	e	enum:android::AxisInfo::Mode
MODE_POINTER	services/inputflinger/InputReader.h	/^            MODE_POINTER,$/;"	e	enum:android::CursorInputMapper::Parameters::Mode
MODE_SPLIT	include/input/KeyLayoutMap.h	/^        MODE_SPLIT = 2,$/;"	e	enum:android::AxisInfo::Mode
MSC_ANDROID_TIME_SEC	services/inputflinger/EventHub.h	57;"	d
MSC_ANDROID_TIME_USEC	services/inputflinger/EventHub.h	58;"	d
MSG_API_CALL	services/surfaceflinger/SurfaceFlinger.cpp	/^        MSG_API_CALL,$/;"	e	enum:android::GraphicProducerWrapper::__anon15	file:
MSG_EXIT	services/surfaceflinger/SurfaceFlinger.cpp	/^        MSG_EXIT$/;"	e	enum:android::GraphicProducerWrapper::__anon15	file:
MS_PER_FRAME	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private final float MS_PER_FRAME = 1000 \/ 60;$/;"	f	class:TestLatencyView.Renderer	file:
MULTITHREADED	include/binder/BufferedTextOutput.h	/^        MULTITHREADED = 0x0001$/;"	e	enum:android::BufferedTextOutput::__anon207
MVIT	opengl/libagl/context.h	/^        MVIT                = 0x20,$/;"	e	enum:android::gl::transform_state_t::__anon228
MVP	opengl/libagl/context.h	/^        MVP                 = 0x40,$/;"	e	enum:android::gl::transform_state_t::__anon228
MVUI	opengl/libagl/context.h	/^        MVUI                = 0x10,$/;"	e	enum:android::gl::transform_state_t::__anon228
MatTest	libs/ui/tests/mat_test.cpp	/^class MatTest : public testing::Test {$/;"	c	namespace:android	file:
MediaImage	include/media/hardware/HardwareAPI.h	/^struct MediaImage {$/;"	s	namespace:android
MemoryBase	include/binder/MemoryBase.h	/^class MemoryBase : public BnMemory $/;"	c	namespace:android
MemoryBase	libs/binder/MemoryBase.cpp	/^MemoryBase::MemoryBase(const sp<IMemoryHeap>& heap,$/;"	f	class:android::MemoryBase
MemoryDealer	include/binder/MemoryDealer.h	/^class MemoryDealer : public RefBase$/;"	c	namespace:android
MemoryDealer	libs/binder/MemoryDealer.cpp	/^MemoryDealer::MemoryDealer(size_t size, const char* name, uint32_t flags)$/;"	f	class:android::MemoryDealer
MemoryHeapBase	include/binder/MemoryHeapBase.h	/^class MemoryHeapBase : public virtual BnMemoryHeap$/;"	c	namespace:android
MemoryHeapBase	libs/binder/MemoryHeapBase.cpp	/^MemoryHeapBase::MemoryHeapBase()$/;"	f	class:android::MemoryHeapBase
MemoryHeapBase	libs/binder/MemoryHeapBase.cpp	/^MemoryHeapBase::MemoryHeapBase(const char* device, size_t size, uint32_t flags)$/;"	f	class:android::MemoryHeapBase
MemoryHeapBase	libs/binder/MemoryHeapBase.cpp	/^MemoryHeapBase::MemoryHeapBase(int fd, size_t size, uint32_t flags, uint32_t offset)$/;"	f	class:android::MemoryHeapBase
MemoryHeapBase	libs/binder/MemoryHeapBase.cpp	/^MemoryHeapBase::MemoryHeapBase(size_t size, uint32_t flags, char const * name)$/;"	f	class:android::MemoryHeapBase
MemoryHeapIon	include/binder/MemoryHeapIon.h	/^class MemoryHeapIon : public MemoryHeapBase$/;"	c	namespace:android
MemoryHeapIon	libs/binder/MemoryHeapIon.cpp	/^MemoryHeapIon::MemoryHeapIon(int fd, size_t size, uint32_t flags,$/;"	f	class:android::MemoryHeapIon
MemoryHeapIon	libs/binder/MemoryHeapIon.cpp	/^MemoryHeapIon::MemoryHeapIon(size_t size, uint32_t flags,$/;"	f	class:android::MemoryHeapIon
MemoryHeapPmem	include/binder/MemoryHeapPmem.h	/^class MemoryHeapPmem : public MemoryHeapBase$/;"	c	namespace:android
MemoryHeapPmem	libs/binder/MemoryHeapPmem.cpp	/^MemoryHeapPmem::MemoryHeapPmem(const sp<MemoryHeapBase>& pmemHeap,$/;"	f	class:android::MemoryHeapPmem
MemoryPmem	include/binder/MemoryHeapPmem.h	/^    class MemoryPmem : public BnMemory {$/;"	c	class:android::MemoryHeapPmem
MemoryPmem	libs/binder/MemoryHeapPmem.cpp	/^MemoryHeapPmem::MemoryPmem::MemoryPmem(const sp<MemoryHeapPmem>& heap)$/;"	f	class:android::MemoryHeapPmem::MemoryPmem
MergeFrom	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage::MergeFrom(const GLMessage& from) {$/;"	f	class:android::gltrace::GLMessage
MergeFrom	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_DataType::MergeFrom(const GLMessage_DataType& from) {$/;"	f	class:android::gltrace::GLMessage_DataType
MergeFrom	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_FrameBuffer::MergeFrom(const GLMessage_FrameBuffer& from) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
MergePartialFromCodedStream	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^bool GLMessage::MergePartialFromCodedStream($/;"	f	class:android::gltrace::GLMessage
MergePartialFromCodedStream	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^bool GLMessage_DataType::MergePartialFromCodedStream($/;"	f	class:android::gltrace::GLMessage_DataType
MergePartialFromCodedStream	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^bool GLMessage_FrameBuffer::MergePartialFromCodedStream($/;"	f	class:android::gltrace::GLMessage_FrameBuffer
Mesh	services/surfaceflinger/RenderEngine/Mesh.cpp	/^Mesh::Mesh(Primitive primitive, size_t vertexCount, size_t vertexSize, size_t texCoordSize)$/;"	f	class:android::Mesh
Mesh	services/surfaceflinger/RenderEngine/Mesh.h	/^class Mesh {$/;"	c	namespace:android
MessageBase	services/surfaceflinger/MessageQueue.cpp	/^MessageBase::MessageBase()$/;"	f	class:android::MessageBase
MessageBase	services/surfaceflinger/MessageQueue.h	/^class MessageBase : public MessageHandler$/;"	c	namespace:android
MessageQueue	services/surfaceflinger/MessageQueue.cpp	/^MessageQueue::MessageQueue()$/;"	f	class:android::MessageQueue
MessageQueue	services/surfaceflinger/MessageQueue.h	/^class MessageQueue {$/;"	c	namespace:android
MetadataBufferType	include/media/hardware/MetadataBufferType.h	/^} MetadataBufferType;$/;"	t	namespace:android	typeref:enum:android::__anon127
Mode	include/input/KeyLayoutMap.h	/^    enum Mode {$/;"	g	struct:android::AxisInfo
Mode	include/media/hardware/CryptoAPI.h	/^    enum Mode {$/;"	g	struct:android::CryptoPlugin
Mode	services/inputflinger/InputDispatcher.h	/^        enum Mode {$/;"	g	struct:android::InputDispatcher::CancelationOptions
Mode	services/inputflinger/InputReader.h	/^        enum Mode {$/;"	g	struct:android::CursorInputMapper::Parameters
Mode	services/inputflinger/InputReader.h	/^        enum Mode {$/;"	g	struct:android::TouchInputMapper::PointerGesture
Mode	services/surfaceflinger/Effects/Daltonizer.h	/^    enum Mode {$/;"	g	class:android::Daltonizer
Modifier	libs/input/KeyCharacterMap.cpp	/^struct Modifier {$/;"	s	namespace:android	file:
MonitoredProducer	services/surfaceflinger/MonitoredProducer.cpp	/^MonitoredProducer::MonitoredProducer(const sp<IGraphicBufferProducer>& producer,$/;"	f	class:android::MonitoredProducer
MonitoredProducer	services/surfaceflinger/MonitoredProducer.h	/^class MonitoredProducer : public IGraphicBufferProducer {$/;"	c	namespace:android
Motion	include/input/InputTransport.h	/^        struct Motion {$/;"	s	union:android::InputMessage::Body
MotionEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::MotionEntry::MotionEntry(nsecs_t eventTime,$/;"	f	class:android::InputDispatcher::MotionEntry
MotionEntry	services/inputflinger/InputDispatcher.h	/^    struct MotionEntry : EventEntry {$/;"	s	class:android::InputDispatcher
MotionEvent	include/input/Input.h	/^class MotionEvent : public InputEvent {$/;"	c	namespace:android
MotionEventTest	libs/input/tests/InputEvent_test.cpp	/^class MotionEventTest : public BaseTest {$/;"	c	namespace:android	file:
MotionMemento	services/inputflinger/InputDispatcher.h	/^        struct MotionMemento {$/;"	s	class:android::InputDispatcher::InputState
MotionRange	include/input/InputDevice.h	/^    struct MotionRange {$/;"	s	class:android::InputDeviceInfo
Movement	include/input/VelocityTracker.h	/^    struct Movement {$/;"	s	class:android::LeastSquaresVelocityTrackerStrategy
Movement	include/input/VelocityTracker.h	/^    struct Movement {$/;"	s	class:android::LegacyVelocityTrackerStrategy
MultiSurfaceTextureClientTest	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    MultiSurfaceTextureClientTest() :$/;"	f	class:android::MultiSurfaceTextureClientTest
MultiSurfaceTextureClientTest	libs/gui/tests/SurfaceTextureClient_test.cpp	/^class MultiSurfaceTextureClientTest : public ::testing::Test {$/;"	c	namespace:android	file:
MultiTextureConsumerTest	libs/gui/tests/MultiTextureConsumer_test.cpp	/^class MultiTextureConsumerTest : public GLTest {$/;"	c	namespace:android	file:
MultiTouchInputMapper	services/inputflinger/InputReader.cpp	/^MultiTouchInputMapper::MultiTouchInputMapper(InputDevice* device) :$/;"	f	class:android::MultiTouchInputMapper
MultiTouchInputMapper	services/inputflinger/InputReader.h	/^class MultiTouchInputMapper : public TouchInputMapper {$/;"	c	namespace:android
MultiTouchInputMapperTest	services/inputflinger/tests/InputReader_test.cpp	/^class MultiTouchInputMapperTest : public TouchInputMapperTest {$/;"	c	namespace:android	file:
MultiTouchMotionAccumulator	services/inputflinger/InputReader.cpp	/^MultiTouchMotionAccumulator::MultiTouchMotionAccumulator() :$/;"	f	class:android::MultiTouchMotionAccumulator
MultiTouchMotionAccumulator	services/inputflinger/InputReader.h	/^class MultiTouchMotionAccumulator {$/;"	c	namespace:android
NAME	cmds/servicemanager/binder.c	60;"	d	file:
NANOS_PER_MS	libs/input/InputTransport.cpp	/^static const nsecs_t NANOS_PER_MS = 1000000;$/;"	m	namespace:android	file:
NANOS_PER_MS	libs/input/VelocityTracker.cpp	/^static const nsecs_t NANOS_PER_MS = 1000000;$/;"	m	namespace:android	file:
NANOS_PER_SEC	cmds/dumpstate/utils.c	/^static const int64_t NANOS_PER_SEC = 1000000000;$/;"	v	file:
NELEM	cmds/atrace/atrace.cpp	41;"	d	file:
NELEM	opengl/libagl/egl.cpp	49;"	d	file:
NELEM	opengl/libagl/egl.cpp	50;"	d	file:
NELEM	opengl/libs/hooks.h	38;"	d
NELEM	opengl/libs/hooks.h	39;"	d
NELEMS	cmds/flatland/Flatland.h	26;"	d
NEUTRAL	services/inputflinger/InputReader.h	/^            NEUTRAL,$/;"	e	enum:android::TouchInputMapper::PointerGesture::Mode
NEVER_CURRENT	opengl/libagl/egl.cpp	/^        NEVER_CURRENT   =   0x00020000$/;"	e	enum:android::egl_context_t::__anon231	file:
NOTE_OPERATION_TRANSACTION	include/binder/IAppOpsService.h	/^        NOTE_OPERATION_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION+1,$/;"	e	enum:android::IAppOpsService::__anon199
NOTE_RESET_AUDIO_TRANSACTION	include/binder/IBatteryStats.h	/^        NOTE_RESET_AUDIO_TRANSACTION,$/;"	e	enum:android::IBatteryStats::__anon210
NOTE_RESET_VIDEO_TRANSACTION	include/binder/IBatteryStats.h	/^        NOTE_RESET_VIDEO_TRANSACTION,$/;"	e	enum:android::IBatteryStats::__anon210
NOTE_START_AUDIO_TRANSACTION	include/binder/IBatteryStats.h	/^        NOTE_START_AUDIO_TRANSACTION,$/;"	e	enum:android::IBatteryStats::__anon210
NOTE_START_SENSOR_TRANSACTION	include/binder/IBatteryStats.h	/^        NOTE_START_SENSOR_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::IBatteryStats::__anon210
NOTE_START_VIDEO_TRANSACTION	include/binder/IBatteryStats.h	/^        NOTE_START_VIDEO_TRANSACTION,$/;"	e	enum:android::IBatteryStats::__anon210
NOTE_STOP_AUDIO_TRANSACTION	include/binder/IBatteryStats.h	/^        NOTE_STOP_AUDIO_TRANSACTION,$/;"	e	enum:android::IBatteryStats::__anon210
NOTE_STOP_SENSOR_TRANSACTION	include/binder/IBatteryStats.h	/^        NOTE_STOP_SENSOR_TRANSACTION,$/;"	e	enum:android::IBatteryStats::__anon210
NOTE_STOP_VIDEO_TRANSACTION	include/binder/IBatteryStats.h	/^        NOTE_STOP_VIDEO_TRANSACTION,$/;"	e	enum:android::IBatteryStats::__anon210
NOT_INITIALIZED	opengl/libs/EGL/egl_display.h	/^        NOT_INITIALIZED = 0,$/;"	e	enum:android::egl_display_t::__anon240
NO_BUFFER_AVAILABLE	include/gui/BufferItemConsumer.h	/^    enum { NO_BUFFER_AVAILABLE = BufferQueue::NO_BUFFER_AVAILABLE };$/;"	e	enum:android::BufferItemConsumer::__anon149
NO_BUFFER_AVAILABLE	include/gui/BufferQueue.h	/^        NO_BUFFER_AVAILABLE = IGraphicBufferConsumer::NO_BUFFER_AVAILABLE,$/;"	e	enum:android::BufferQueue::__anon144
NO_BUFFER_AVAILABLE	include/gui/IGraphicBufferConsumer.h	/^        NO_BUFFER_AVAILABLE,$/;"	e	enum:android::IGraphicBufferConsumer::__anon131
NO_BUILT_IN_KEYBOARD	services/inputflinger/EventHub.h	/^        NO_BUILT_IN_KEYBOARD = -2,$/;"	e	enum:android::EventHub::__anon49
NO_CACHING	include/binder/MemoryHeapBase.h	/^        NO_CACHING = 0x00000200$/;"	e	enum:android::MemoryHeapBase::__anon202
NO_CONNECTED_API	include/gui/BufferQueueCore.h	/^    enum { NO_CONNECTED_API = 0 };$/;"	e	enum:android::BufferQueueCore::__anon141
NO_FENCE	include/ui/Fence.h	/^    static const sp<Fence> NO_FENCE;$/;"	m	class:android::Fence
NO_FENCE	libs/ui/Fence.cpp	/^const sp<Fence> Fence::NO_FENCE = sp<Fence>(new Fence);$/;"	m	class:android::Fence	file:
NO_INIT	include/ui/mat4.h	/^    enum no_init { NO_INIT };$/;"	e	enum:android::tmat44::no_init
NO_INIT	include/ui/vec2.h	/^    enum no_init { NO_INIT };$/;"	e	enum:android::tvec2::no_init
NO_INIT	include/ui/vec3.h	/^    enum no_init { NO_INIT };$/;"	e	enum:android::tvec3::no_init
NO_INIT	include/ui/vec4.h	/^    enum no_init { NO_INIT };$/;"	e	enum:android::tvec4::no_init
NO_LAYER_STACK	services/surfaceflinger/DisplayDevice.h	/^        NO_LAYER_STACK = 0xFFFFFFFF,$/;"	e	enum:android::DisplayDevice::__anon28
NSECS_DURATION	opengl/libs/EGL/egl.cpp	335;"	d	file:
NUMA	opengl/tests/hwc/hwcColorEquiv.cpp	118;"	d	file:
NUMA	opengl/tests/hwc/hwcCommit.cpp	160;"	d	file:
NUMA	opengl/tests/hwc/hwcRects.cpp	140;"	d	file:
NUMA	opengl/tests/hwc/hwcStress.cpp	164;"	d	file:
NUMA	opengl/tests/hwc/hwcTestLib.cpp	33;"	d	file:
NUM_BUFFER_SLOTS	include/gui/BufferQueue.h	/^    enum { NUM_BUFFER_SLOTS = BufferQueueDefs::NUM_BUFFER_SLOTS };$/;"	e	enum:android::BufferQueue::__anon142
NUM_BUFFER_SLOTS	include/gui/BufferQueueDefs.h	/^        enum { NUM_BUFFER_SLOTS = 64 };$/;"	e	enum:android::BufferQueueDefs::__anon152
NUM_BUFFER_SLOTS	include/gui/Surface.h	/^    enum { NUM_BUFFER_SLOTS = BufferQueue::NUM_BUFFER_SLOTS };$/;"	e	enum:android::Surface::__anon153
NUM_BUILTIN_DISPLAYS	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        NUM_BUILTIN_DISPLAYS = HWC_NUM_PHYSICAL_DISPLAY_TYPES,$/;"	e	enum:android::HWComposer::__anon17
NUM_BUILTIN_DISPLAY_TYPES	services/surfaceflinger/DisplayDevice.h	/^        NUM_BUILTIN_DISPLAY_TYPES = HWC_NUM_PHYSICAL_DISPLAY_TYPES,$/;"	e	enum:android::DisplayDevice::DisplayType
NUM_DISPLAYS	opengl/libagl/egl.cpp	/^const unsigned int NUM_DISPLAYS = 1;$/;"	m	namespace:android	file:
NUM_DISPLAYS	opengl/libs/EGL/egldefs.h	/^const unsigned int NUM_DISPLAYS = 1;$/;"	m	namespace:android
NUM_DISPLAY_ATTRIBUTES	services/surfaceflinger/DisplayHardware/HWComposer.cpp	367;"	d	file:
NUM_FRAMEBUFFER_SURFACE_BUFFERS	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	40;"	d	file:
NUM_FRAME_BUCKETS	services/surfaceflinger/FrameTracker.h	/^    enum { NUM_FRAME_BUCKETS = 7 };$/;"	e	enum:android::FrameTracker::__anon24
NUM_FRAME_RECORDS	services/surfaceflinger/FrameTracker.h	/^    enum { NUM_FRAME_RECORDS = 128 };$/;"	e	enum:android::FrameTracker::__anon23
NUM_PRESENT_SAMPLES	services/surfaceflinger/DispSync.h	/^    enum { NUM_PRESENT_SAMPLES = 8 };$/;"	e	enum:android::DispSync::__anon36
NUM_SURFACE_TEXTURES	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    enum { NUM_SURFACE_TEXTURES = 32 };$/;"	e	enum:android::MultiSurfaceTextureClientTest::__anon252	file:
NUM_TOMBSTONES	cmds/dumpstate/dumpstate.c	53;"	d	file:
NativeBuffer	libs/ui/FramebufferNativeWindow.cpp	/^    NativeBuffer(int w, int h, int f, int u) : BASE() {$/;"	f	class:android::NativeBuffer
NativeBuffer	libs/ui/FramebufferNativeWindow.cpp	/^class NativeBuffer $/;"	c	namespace:android	file:
NativeDisplayType	opengl/include/EGL/eglplatform.h	/^typedef EGLNativeDisplayType NativeDisplayType;$/;"	t
NativeDisplayType	opengl/tests/angeles/include/GLES/egltypes.h	/^typedef void *NativeDisplayType;$/;"	t
NativePixmapType	opengl/include/EGL/eglplatform.h	/^typedef EGLNativePixmapType  NativePixmapType;$/;"	t
NativePixmapType	opengl/tests/angeles/include/GLES/egltypes.h	/^typedef void *NativePixmapType;$/;"	t
NativeWindowType	opengl/include/EGL/eglplatform.h	/^typedef EGLNativeWindowType  NativeWindowType;$/;"	t
NativeWindowType	opengl/tests/angeles/include/GLES/egltypes.h	/^typedef void *NativeWindowType;$/;"	t
New	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage* GLMessage::New() const {$/;"	f	class:android::gltrace::GLMessage
New	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage_DataType* GLMessage_DataType::New() const {$/;"	f	class:android::gltrace::GLMessage_DataType
New	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage_FrameBuffer* GLMessage_FrameBuffer::New() const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
NotifyArgs	services/inputflinger/InputListener.h	/^struct NotifyArgs {$/;"	s	namespace:android
NotifyConfigurationChangedArgs	services/inputflinger/InputListener.cpp	/^NotifyConfigurationChangedArgs::NotifyConfigurationChangedArgs($/;"	f	class:android::NotifyConfigurationChangedArgs
NotifyConfigurationChangedArgs	services/inputflinger/InputListener.cpp	/^NotifyConfigurationChangedArgs::NotifyConfigurationChangedArgs(nsecs_t eventTime) :$/;"	f	class:android::NotifyConfigurationChangedArgs
NotifyConfigurationChangedArgs	services/inputflinger/InputListener.h	/^    inline NotifyConfigurationChangedArgs() { }$/;"	f	struct:android::NotifyConfigurationChangedArgs
NotifyConfigurationChangedArgs	services/inputflinger/InputListener.h	/^struct NotifyConfigurationChangedArgs : public NotifyArgs {$/;"	s	namespace:android
NotifyDeviceResetArgs	services/inputflinger/InputListener.cpp	/^NotifyDeviceResetArgs::NotifyDeviceResetArgs(const NotifyDeviceResetArgs& other) :$/;"	f	class:android::NotifyDeviceResetArgs
NotifyDeviceResetArgs	services/inputflinger/InputListener.cpp	/^NotifyDeviceResetArgs::NotifyDeviceResetArgs(nsecs_t eventTime, int32_t deviceId) :$/;"	f	class:android::NotifyDeviceResetArgs
NotifyDeviceResetArgs	services/inputflinger/InputListener.h	/^    inline NotifyDeviceResetArgs() { }$/;"	f	struct:android::NotifyDeviceResetArgs
NotifyDeviceResetArgs	services/inputflinger/InputListener.h	/^struct NotifyDeviceResetArgs : public NotifyArgs {$/;"	s	namespace:android
NotifyKeyArgs	services/inputflinger/InputListener.cpp	/^NotifyKeyArgs::NotifyKeyArgs(const NotifyKeyArgs& other) :$/;"	f	class:android::NotifyKeyArgs
NotifyKeyArgs	services/inputflinger/InputListener.cpp	/^NotifyKeyArgs::NotifyKeyArgs(nsecs_t eventTime, int32_t deviceId, uint32_t source,$/;"	f	class:android::NotifyKeyArgs
NotifyKeyArgs	services/inputflinger/InputListener.h	/^    inline NotifyKeyArgs() { }$/;"	f	struct:android::NotifyKeyArgs
NotifyKeyArgs	services/inputflinger/InputListener.h	/^struct NotifyKeyArgs : public NotifyArgs {$/;"	s	namespace:android
NotifyMotionArgs	services/inputflinger/InputListener.cpp	/^NotifyMotionArgs::NotifyMotionArgs(const NotifyMotionArgs& other) :$/;"	f	class:android::NotifyMotionArgs
NotifyMotionArgs	services/inputflinger/InputListener.cpp	/^NotifyMotionArgs::NotifyMotionArgs(nsecs_t eventTime, int32_t deviceId, uint32_t source,$/;"	f	class:android::NotifyMotionArgs
NotifyMotionArgs	services/inputflinger/InputListener.h	/^    inline NotifyMotionArgs() { }$/;"	f	struct:android::NotifyMotionArgs
NotifyMotionArgs	services/inputflinger/InputListener.h	/^struct NotifyMotionArgs : public NotifyArgs {$/;"	s	namespace:android
NotifySwitchArgs	services/inputflinger/InputListener.cpp	/^NotifySwitchArgs::NotifySwitchArgs(const NotifySwitchArgs& other) :$/;"	f	class:android::NotifySwitchArgs
NotifySwitchArgs	services/inputflinger/InputListener.cpp	/^NotifySwitchArgs::NotifySwitchArgs(nsecs_t eventTime, uint32_t policyFlags,$/;"	f	class:android::NotifySwitchArgs
NotifySwitchArgs	services/inputflinger/InputListener.h	/^    inline NotifySwitchArgs() { }$/;"	f	struct:android::NotifySwitchArgs
NotifySwitchArgs	services/inputflinger/InputListener.h	/^struct NotifySwitchArgs : public NotifyArgs {$/;"	s	namespace:android
NullType	services/sensorservice/traits.h	/^class NullType {};$/;"	c	namespace:android
OBJECT_SPACE_LIGHTING	opengl/libagl/light.h	29;"	d
OGLES_MAX_CLIP_PLANES	opengl/libagl/context.h	/^const unsigned int OGLES_MAX_CLIP_PLANES = 6;$/;"	m	namespace:android::gl
OGLES_MAX_LIGHTS	opengl/libagl/context.h	/^const unsigned int OGLES_MAX_LIGHTS = 8;$/;"	m	namespace:android::gl
OGLES_MODELVIEW_STACK_DEPTH	opengl/libagl/matrix.h	/^const int OGLES_MODELVIEW_STACK_DEPTH   = 16;$/;"	m	namespace:android
OGLES_NUM_COMPRESSED_TEXTURE_FORMATS	opengl/libagl/context.h	/^const unsigned int OGLES_NUM_COMPRESSED_TEXTURE_FORMATS = 10$/;"	m	namespace:android
OGLES_PROJECTION_STACK_DEPTH	opengl/libagl/matrix.h	/^const int OGLES_PROJECTION_STACK_DEPTH  =  2;$/;"	m	namespace:android
OGLES_TEXTURE_STACK_DEPTH	opengl/libagl/matrix.h	/^const int OGLES_TEXTURE_STACK_DEPTH     =  2;$/;"	m	namespace:android
OMXPluginBase	include/media/hardware/OMXPluginBase.h	/^    OMXPluginBase() {}$/;"	f	struct:android::OMXPluginBase
OMXPluginBase	include/media/hardware/OMXPluginBase.h	/^struct OMXPluginBase {$/;"	s	namespace:android
OMX_ALL	include/media/openmax/OMX_Types.h	119;"	d
OMX_API	include/media/openmax/OMX_Types.h	62;"	d
OMX_API	include/media/openmax/OMX_Types.h	65;"	d
OMX_API	include/media/openmax/OMX_Types.h	67;"	d
OMX_API	include/media/openmax/OMX_Types.h	73;"	d
OMX_API	include/media/openmax/OMX_Types.h	76;"	d
OMX_API	include/media/openmax/OMX_Types.h	80;"	d
OMX_API	include/media/openmax/OMX_Types.h	82;"	d
OMX_APIENTRY	include/media/openmax/OMX_Types.h	88;"	d
OMX_AUDIO_AACERAll	include/media/openmax/OMX_Audio.h	311;"	d
OMX_AUDIO_AACERHCR	include/media/openmax/OMX_Audio.h	310;"	d
OMX_AUDIO_AACERNone	include/media/openmax/OMX_Audio.h	307;"	d
OMX_AUDIO_AACERRVLC	include/media/openmax/OMX_Audio.h	309;"	d
OMX_AUDIO_AACERVCB11	include/media/openmax/OMX_Audio.h	308;"	d
OMX_AUDIO_AACObjectELD	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectELD = 39,      \/** AAC Enhanced Low Delay. NOTE: Pending Khronos standardization **\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectERLC	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectERLC = 17,     \/**< ER AAC Low Complexity object (Error Resilient AAC-LC) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectHE	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectHE,            \/**< AAC High Efficiency (object type SBR, HE-AAC profile) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectHE_PS	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectHE_PS = 29,    \/**< AAC High Efficiency with Parametric Stereo coding (HE-AAC v2, object type PS) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectKhronosExtensions	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectLC	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectLC,            \/**< AAC Low Complexity object (AAC profile) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectLD	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectLD = 23,       \/**< AAC Low Delay object (Error Resilient) *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectLTP	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectLTP,           \/**< AAC Long Term Prediction object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectMain	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectMain = 1,      \/**< AAC Main object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectMax	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectNull	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectNull = 0,      \/**< Null, not used *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectSSR	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectSSR,           \/**< AAC Scalable Sample Rate object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectScalable	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectScalable,      \/**< AAC Scalable object *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACObjectVendorStartUnused	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_AACObjectVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACPROFILETYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AACPROFILETYPE{$/;"	g
OMX_AUDIO_AACPROFILETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_AACPROFILETYPE;$/;"	t	typeref:enum:OMX_AUDIO_AACPROFILETYPE
OMX_AUDIO_AACSTREAMFORMATTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AACSTREAMFORMATTYPE {$/;"	g
OMX_AUDIO_AACSTREAMFORMATTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_AACSTREAMFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatADIF	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatADIF,        \/**< AAC Audio Data Interchange Format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP2ADTS	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP2ADTS = 0, \/**< AAC Audio Data Transport Stream 2 format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4ADTS	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4ADTS,     \/**< AAC Audio Data Transport Stream 4 format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4FF	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4FF,       \/**< AAC inside MPEG-4\/ISO File Format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4LATM	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4LATM,     \/**< AAC Low overhead Audio Transport Multiplex *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMP4LOAS	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMP4LOAS,     \/**< AAC Low Overhead Audio Stream format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatRAW	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatRAW,         \/**< AAC Raw Format *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACStreamFormatVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACStreamFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AACSTREAMFORMATTYPE
OMX_AUDIO_AACToolAll	include/media/openmax/OMX_Audio.h	303;"	d
OMX_AUDIO_AACToolAndroidDSBR	include/media/openmax/OMX_AudioExt.h	44;"	d
OMX_AUDIO_AACToolAndroidSSBR	include/media/openmax/OMX_AudioExt.h	43;"	d
OMX_AUDIO_AACToolIS	include/media/openmax/OMX_Audio.h	298;"	d
OMX_AUDIO_AACToolLTP	include/media/openmax/OMX_Audio.h	301;"	d
OMX_AUDIO_AACToolMS	include/media/openmax/OMX_Audio.h	297;"	d
OMX_AUDIO_AACToolNone	include/media/openmax/OMX_Audio.h	296;"	d
OMX_AUDIO_AACToolPNS	include/media/openmax/OMX_Audio.h	300;"	d
OMX_AUDIO_AACToolTNS	include/media/openmax/OMX_Audio.h	299;"	d
OMX_AUDIO_AACToolVendor	include/media/openmax/OMX_Audio.h	302;"	d
OMX_AUDIO_AMRBANDMODETYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AMRBANDMODETYPE {$/;"	g
OMX_AUDIO_AMRBANDMODETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_AMRBANDMODETYPE;$/;"	t	typeref:enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB0	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB0,                 \/**< AMRNB Mode 0 =  4750 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB1	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB1,                 \/**< AMRNB Mode 1 =  5150 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB2	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB2,                 \/**< AMRNB Mode 2 =  5900 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB3	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB3,                 \/**< AMRNB Mode 3 =  6700 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB4	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB4,                 \/**< AMRNB Mode 4 =  7400 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB5	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB5,                 \/**< AMRNB Mode 5 =  7950 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB6	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB6,                 \/**< AMRNB Mode 6 = 10200 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeNB7	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeNB7,                 \/**< AMRNB Mode 7 = 12200 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeUnused = 0,          \/**< AMRNB Mode unused \/ unknown *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB0	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB0,                 \/**< AMRWB Mode 0 =  6600 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB1	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB1,                 \/**< AMRWB Mode 1 =  8850 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB2	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB2,                 \/**< AMRWB Mode 2 = 12650 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB3	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB3,                 \/**< AMRWB Mode 3 = 14250 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB4	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB4,                 \/**< AMRWB Mode 4 = 15850 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB5	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB5,                 \/**< AMRWB Mode 5 = 18250 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB6	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB6,                 \/**< AMRWB Mode 6 = 19850 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB7	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB7,                 \/**< AMRWB Mode 7 = 23050 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRBandModeWB8	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBandModeWB8,                 \/**< AMRWB Mode 8 = 23850 bps *\/$/;"	e	enum:OMX_AUDIO_AMRBANDMODETYPE
OMX_AUDIO_AMRDTXMODETYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AMRDTXMODETYPE {$/;"	g
OMX_AUDIO_AMRDTXMODETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_AMRDTXMODETYPE;$/;"	t	typeref:enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOff	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOff = 0,        \/**< AMR Discontinuous Transmission Mode is disabled *\/$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOnAuto	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOnAuto,         \/**< The codec will automatically select between$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOnVAD1	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOnVAD1,         \/**< AMR Discontinuous Transmission Mode using$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeOnVAD2	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeOnVAD2,         \/**< AMR Discontinuous Transmission Mode using$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXModeVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRDTXasEFR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXasEFR,             \/**< DTX as EFR instead of AMR standard (3GPP 26.101, frame type =8,9,10) *\/$/;"	e	enum:OMX_AUDIO_AMRDTXMODETYPE
OMX_AUDIO_AMRFRAMEFORMATTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_AMRFRAMEFORMATTYPE {$/;"	g
OMX_AUDIO_AMRFRAMEFORMATTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_AMRFRAMEFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatConformance	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatConformance = 0,  \/**< Frame Format is AMR Conformance$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatFSF	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatFSF,              \/**< Frame Format is AMR File Storage$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatIF1	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatIF1,              \/**< Frame Format is AMR Interface$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatIF2	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatIF2,              \/**< Frame Format is AMR Interface$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatITU	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatITU,              \/**< Frame Format is ITU Format (added at Motorola request) *\/$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatRTPPayload	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatRTPPayload,       \/**< Frame Format is AMR Real-Time$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_AMRFrameFormatVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFrameFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_AMRFRAMEFORMATTYPE
OMX_AUDIO_CDMARATETYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CDMARATETYPE {$/;"	g
OMX_AUDIO_CDMARATETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CDMARATETYPE;$/;"	t	typeref:enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateBlank	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateBlank = 0,          \/**< CDMA encoded frame is blank *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateEighth	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateEighth,             \/**< CDMA encoded frame in eighth rate (DTX)*\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateErasure	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateErasure,            \/**< CDMA erasure frame *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateFull	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateFull,               \/**< CDMA encoded frame in full rate *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateHalf	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateHalf,               \/**< CDMA encoded frame in half rate *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateQuarter	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateQuarter,            \/**< CDMA encoded frame in quarter rate *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CDMARateVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CDMARATETYPE
OMX_AUDIO_CHANNELMODETYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CHANNELMODETYPE {$/;"	g
OMX_AUDIO_CHANNELMODETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CHANNELMODETYPE;$/;"	t	typeref:enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_CHANNELTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CHANNELTYPE {$/;"	g
OMX_AUDIO_CHANNELTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CHANNELTYPE;$/;"	t	typeref:enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_CODINGEXTTYPE	include/media/openmax/OMX_AudioExt.h	/^typedef enum OMX_AUDIO_CODINGEXTTYPE {$/;"	g
OMX_AUDIO_CODINGEXTTYPE	include/media/openmax/OMX_AudioExt.h	/^} OMX_AUDIO_CODINGEXTTYPE;$/;"	t	typeref:enum:OMX_AUDIO_CODINGEXTTYPE
OMX_AUDIO_CODINGTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_CODINGTYPE {$/;"	g
OMX_AUDIO_CODINGTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CODINGTYPE;$/;"	t	typeref:enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CONFIG_BALANCETYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_BALANCETYPE {$/;"	s
OMX_AUDIO_CONFIG_BALANCETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_BALANCETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_BALANCETYPE
OMX_AUDIO_CONFIG_BASSTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_BASSTYPE {$/;"	s
OMX_AUDIO_CONFIG_BASSTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_BASSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_BASSTYPE
OMX_AUDIO_CONFIG_CHANNELMUTETYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_CHANNELMUTETYPE {$/;"	s
OMX_AUDIO_CONFIG_CHANNELMUTETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_CHANNELMUTETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE {$/;"	s
OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
OMX_AUDIO_CONFIG_CHORUSTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_CHORUSTYPE {$/;"	s
OMX_AUDIO_CONFIG_CHORUSTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_CHORUSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_CHORUSTYPE
OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE {$/;"	s
OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
OMX_AUDIO_CONFIG_EQUALIZERTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_EQUALIZERTYPE {$/;"	s
OMX_AUDIO_CONFIG_EQUALIZERTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_EQUALIZERTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
OMX_AUDIO_CONFIG_LOUDNESSTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_LOUDNESSTYPE {$/;"	s
OMX_AUDIO_CONFIG_LOUDNESSTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_LOUDNESSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
OMX_AUDIO_CONFIG_MIDICONTROLTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDICONTROLTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDICONTROLTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDICONTROLTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE{$/;"	s
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE{$/;"	s
OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
OMX_AUDIO_CONFIG_MIDISTATUSTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MIDISTATUSTYPE {$/;"	s
OMX_AUDIO_CONFIG_MIDISTATUSTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MIDISTATUSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
OMX_AUDIO_CONFIG_MUTETYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_MUTETYPE {$/;"	s
OMX_AUDIO_CONFIG_MUTETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_MUTETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MUTETYPE
OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE {$/;"	s
OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
OMX_AUDIO_CONFIG_REVERBERATIONTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_REVERBERATIONTYPE {$/;"	s
OMX_AUDIO_CONFIG_REVERBERATIONTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_REVERBERATIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE {$/;"	s
OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
OMX_AUDIO_CONFIG_TREBLETYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_TREBLETYPE {$/;"	s
OMX_AUDIO_CONFIG_TREBLETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_TREBLETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_TREBLETYPE
OMX_AUDIO_CONFIG_VOLUMETYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_CONFIG_VOLUMETYPE {$/;"	s
OMX_AUDIO_CONFIG_VOLUMETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG_VOLUMETYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_VOLUMETYPE
OMX_AUDIO_CONFIG__MIDIMETAEVENTDATATYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_CONFIG__MIDIMETAEVENTDATATYPE;$/;"	t	typeref:struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
OMX_AUDIO_ChannelCF	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelCF   = 0x3,    \/**< Center front *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelCS	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelCS   = 0x7,    \/**< Back surround *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLF	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLF   = 0x1,    \/**< Left front *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLFE	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLFE  = 0x6,    \/**< Low frequency effects *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLR   = 0x8,    \/**< Left rear. *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelLS	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelLS   = 0x4,    \/**< Left surround *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelMax  = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelModeDual	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeDual,        \/**< 2 mono-channels, each channel is encoded with half$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeJointStereo	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeJointStereo, \/**< mode that takes advantage of what is common between$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeMono	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeMono,        \/**< Mono channel mode *\/$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeStereo	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeStereo = 0,  \/**< 2 channels, the bitrate allocation between those$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelModeVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CHANNELMODETYPE
OMX_AUDIO_ChannelNone	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelNone = 0x0,    \/**< Unused or empty *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelRF	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelRF   = 0x2,    \/**< Right front *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelRR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelRR   = 0x9,    \/**< Right rear. *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelRS	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelRS   = 0x5,    \/**< Right surround *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_ChannelVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ChannelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CHANNELTYPE
OMX_AUDIO_CodingAAC	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingAAC,         \/**< Any variant of AAC encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingADPCM	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingADPCM,       \/**< Any variant of ADPCM encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingAMR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingAMR,         \/**< Any variant of AMR encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingAndroidAC3	include/media/openmax/OMX_AudioExt.h	/^    OMX_AUDIO_CodingAndroidAC3,         \/**< AC3 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGEXTTYPE
OMX_AUDIO_CodingAndroidEAC3	include/media/openmax/OMX_AudioExt.h	/^    OMX_AUDIO_CodingAndroidEAC3,        \/**< EAC3 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGEXTTYPE
OMX_AUDIO_CodingAndroidOPUS	include/media/openmax/OMX_AudioExt.h	/^    OMX_AUDIO_CodingAndroidOPUS,        \/**< OPUS encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGEXTTYPE
OMX_AUDIO_CodingAndroidUnused	include/media/openmax/OMX_AudioExt.h	/^    OMX_AUDIO_CodingAndroidUnused = OMX_AUDIO_CodingKhronosExtensions + 0x00100000,$/;"	e	enum:OMX_AUDIO_CODINGEXTTYPE
OMX_AUDIO_CodingAutoDetect	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingAutoDetect,  \/**< auto detection of audio format *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingDDP	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingDDP,         \/**< Any variant of DDP encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingEVRC	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingEVRC,        \/**< Any variant of EVRC encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingFLAC	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingFLAC,        \/**< Any variant of FLAC encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG711	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG711,        \/**< Any variant of G.711 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG723	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG723,        \/**< Any variant of G.723 dot 1 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG726	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG726,        \/**< Any variant of G.726 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingG729	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingG729,        \/**< Any variant of G.729 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingGSMEFR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingGSMEFR,      \/**< Any variant of GSM Enhanced Fullrate encoded data*\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingGSMFR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingGSMFR,       \/**< Any variant of GSM fullrate (i.e. GSM610) *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingGSMHR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingGSMHR,       \/**< Any variant of GSM Halfrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/ $/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingMIDI	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingMIDI,        \/**< Any variant of MIDI encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingMP3	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingMP3,         \/**< Any variant of MP3 encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPCM	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPCM,         \/**< Any variant of PCM coding *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPDCEFR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPDCEFR,      \/**< Any variant of PDC Enhanced Fullrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPDCFR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPDCFR,       \/**< Any variant of PDC Fullrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingPDCHR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingPDCHR,       \/**< Any variant of PDC Halfrate encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingQCELP13	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingQCELP13,     \/**< Any variant of QCELP 13kbps encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingQCELP8	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingQCELP8,      \/**< Any variant of QCELP 8kbps encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingRA	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingRA,          \/**< Any variant of RA encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingSBC	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingSBC,         \/**< Any variant of SBC encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingSMV	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingSMV,         \/**< Any variant of SMV encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingTDMAEFR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingTDMAEFR,     \/**< Any variant of TDMA Enhanced Fullrate encoded data (TIA\/EIA-136-410) *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingTDMAFR	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingTDMAFR,      \/**< Any variant of TDMA Fullrate encoded data (TIA\/EIA-136-420) *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingUnused = 0,  \/**< Placeholder value when coding is N\/A  *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingVORBIS	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingVORBIS,      \/**< Any variant of VORBIS encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_CodingWMA	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CodingWMA,         \/**< Any variant of WMA encoded data *\/$/;"	e	enum:OMX_AUDIO_CODINGTYPE
OMX_AUDIO_ECHOCANTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_ECHOCANTYPE {$/;"	g
OMX_AUDIO_ECHOCANTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_ECHOCANTYPE;$/;"	t	typeref:enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanCarKit	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanCarKit,    \/**< Echo Cancellation optimized for$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanHFree	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanHFree,      \/**< Echo Cancellation optimized for$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanKhronosExtensions	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanMax	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanNormal	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanNormal,     \/**< Echo Cancellation normal operation -$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanOff	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanOff = 0,    \/**< Echo Cancellation is disabled *\/$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_EchoCanVendorStartUnused	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_EchoCanVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_ECHOCANTYPE
OMX_AUDIO_G723ModeHigh	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeHigh,        \/**< 6300 bps *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeLow	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeLow,         \/**< 5300 bps *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeUnused = 0,  \/**< AMRNB Mode unused \/ unknown *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723ModeVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723ModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G723RATE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_G723RATE {$/;"	g
OMX_AUDIO_G723RATE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_G723RATE;$/;"	t	typeref:enum:OMX_AUDIO_G723RATE
OMX_AUDIO_G726MODE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_G726MODE {$/;"	g
OMX_AUDIO_G726MODE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_G726MODE;$/;"	t	typeref:enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode16	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode16,          \/**< 16 kbps *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode24	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode24,          \/**< 24 kbps *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode32	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode32,          \/**< 32 kbps, most common rate, also G721 *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726Mode40	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726Mode40,          \/**< 40 kbps *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeUnused = 0,  \/**< G726 Mode unused \/ unknown *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G726ModeVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G726ModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_G726MODE
OMX_AUDIO_G729	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729 = 0,           \/**< ITU G.729  encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729A	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729A,              \/**< ITU G.729 annex A  encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729AB	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729AB,             \/**< ITU G.729 annexes A and B encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729B	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729B,              \/**< ITU G.729 with annex B encoded data *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729KhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729KhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729Max	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729Max = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729TYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_G729TYPE {$/;"	g
OMX_AUDIO_G729TYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_G729TYPE;$/;"	t	typeref:enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_G729VendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729VendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_G729TYPE
OMX_AUDIO_MAXCHANNELS	include/media/openmax/OMX_Audio.h	194;"	d
OMX_AUDIO_MIDIFORMATTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDIFORMATTYPE$/;"	g
OMX_AUDIO_MIDIFORMATTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDIFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatMobileXMF	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatMobileXMF,   \/**< Mobile XMF (eXtensible Music Format type 2) *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSMF0	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSMF0,        \/**< Standard MIDI File Type 0 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSMF1	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSMF1,        \/**< Standard MIDI File Type 1 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSMF2	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSMF2,        \/**< Standard MIDI File Type 2 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatSPMIDI	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatSPMIDI,      \/**< SP-MIDI *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatUnknown	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatUnknown = 0, \/**< MIDI Format unknown or don't care *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatXMF0	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatXMF0,        \/**< eXtensible Music Format type 0 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIFormatXMF1	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFormatXMF1,        \/**< eXtensible Music Format type 1 *\/$/;"	e	enum:OMX_AUDIO_MIDIFORMATTYPE
OMX_AUDIO_MIDIPLAYBACKSTATETYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDIPLAYBACKSTATETYPE {$/;"	g
OMX_AUDIO_MIDIPLAYBACKSTATETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDIPLAYBACKSTATETYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateClosedEngaged	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateClosedEngaged,    \/**< No MIDI resource is currently open.$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateKhronosExtensions	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateMax	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateOpenEngaged	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateOpenEngaged,      \/**< A MIDI resource is open and primed but$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateParsing	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateParsing,          \/**< A MIDI resource is open and is being$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStatePlaying	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStatePlaying,          \/**< A MIDI resource is open and currently$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStatePlayingPartially	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStatePlayingPartially, \/**< Best-effort playback due to SP-MIDI\/DLS$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStatePlayingSilently	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStatePlayingSilently,  \/**< Due to system resource constraints and$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateUnknown	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateUnknown = 0,      \/**< Unknown state or state does not map to$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDIPlayBackStateVendorStartUnused	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_MIDIPlayBackStateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDIPLAYBACKSTATETYPE
OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE {$/;"	g
OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISOUNDBANKTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MIDISOUNDBANKTYPE {$/;"	g
OMX_AUDIO_MIDISOUNDBANKTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_MIDISOUNDBANKTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankDLS1	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankDLS1,                 \/**< DLS version 1 *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankDLS2	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankDLS2,                 \/**< DLS version 2 *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankLayoutGM	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutGM,           \/**< GS layout (based on bank MSB 0x00) *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutGM2	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutGM2,          \/**< General MIDI 2 layout (using MSB 0x78\/0x79, LSB 0x00) *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutKhronosExtensions	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutMax	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutUnused	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutUnused = 0,   \/**< unused\/unknown soundbank type *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutUser	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutUser,         \/**< Does not conform to any bank numbering standards *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankLayoutVendorStartUnused	include/media/openmax/OMX_Audio.h	/^   OMX_AUDIO_MIDISoundBankLayoutVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE
OMX_AUDIO_MIDISoundBankMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankMobileDLSBase	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankMobileDLSBase,        \/**< Mobile DLS, using the base functionality *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankMobileDLSPlusOptions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankMobileDLSPlusOptions, \/**< Mobile DLS, using the specification-defined optional feature set *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankUnused = 0,           \/**< unused\/unknown soundbank type *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MIDISoundBankVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISoundBankVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MIDISOUNDBANKTYPE
OMX_AUDIO_MP3STREAMFORMATTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_MP3STREAMFORMATTYPE {$/;"	g
OMX_AUDIO_MP3STREAMFORMATTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_MP3STREAMFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMP1Layer3	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMP1Layer3 = 0, \/**< MP3 Audio MPEG 1 Layer 3 Stream format *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMP2Layer3	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMP2Layer3,     \/**< MP3 Audio MPEG 2 Layer 3 Stream format *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMP2_5Layer3	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMP2_5Layer3,   \/**< MP3 Audio MPEG2.5 Layer 3 Stream format *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_MP3StreamFormatVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3StreamFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_MP3STREAMFORMATTYPE
OMX_AUDIO_PARAM_AACPROFILETYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_AACPROFILETYPE {$/;"	s
OMX_AUDIO_PARAM_AACPROFILETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_AACPROFILETYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_AACPROFILETYPE
OMX_AUDIO_PARAM_ADPCMTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_ADPCMTYPE {$/;"	s
OMX_AUDIO_PARAM_ADPCMTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_ADPCMTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_ADPCMTYPE
OMX_AUDIO_PARAM_AMRTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_AMRTYPE {$/;"	s
OMX_AUDIO_PARAM_AMRTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_AMRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_AMRTYPE
OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE	include/media/openmax/OMX_AudioExt.h	/^typedef struct OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE {$/;"	s
OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE	include/media/openmax/OMX_AudioExt.h	/^} OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE
OMX_AUDIO_PARAM_ANDROID_AC3TYPE	include/media/openmax/OMX_AudioExt.h	/^typedef struct OMX_AUDIO_PARAM_ANDROID_AC3TYPE {$/;"	s
OMX_AUDIO_PARAM_ANDROID_AC3TYPE	include/media/openmax/OMX_AudioExt.h	/^} OMX_AUDIO_PARAM_ANDROID_AC3TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_ANDROID_AC3TYPE
OMX_AUDIO_PARAM_ANDROID_EAC3TYPE	include/media/openmax/OMX_AudioExt.h	/^typedef struct OMX_AUDIO_PARAM_ANDROID_EAC3TYPE {$/;"	s
OMX_AUDIO_PARAM_ANDROID_EAC3TYPE	include/media/openmax/OMX_AudioExt.h	/^} OMX_AUDIO_PARAM_ANDROID_EAC3TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_ANDROID_EAC3TYPE
OMX_AUDIO_PARAM_ANDROID_OPUSTYPE	include/media/openmax/OMX_AudioExt.h	/^typedef struct OMX_AUDIO_PARAM_ANDROID_OPUSTYPE {$/;"	s
OMX_AUDIO_PARAM_ANDROID_OPUSTYPE	include/media/openmax/OMX_AudioExt.h	/^} OMX_AUDIO_PARAM_ANDROID_OPUSTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_ANDROID_OPUSTYPE
OMX_AUDIO_PARAM_EVRCTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_EVRCTYPE {$/;"	s
OMX_AUDIO_PARAM_EVRCTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_EVRCTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_EVRCTYPE
OMX_AUDIO_PARAM_FLACTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_FLACTYPE {$/;"	s
OMX_AUDIO_PARAM_FLACTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_FLACTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_FLACTYPE
OMX_AUDIO_PARAM_G723TYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_G723TYPE {$/;"	s
OMX_AUDIO_PARAM_G723TYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_G723TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_G723TYPE
OMX_AUDIO_PARAM_G726TYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_G726TYPE {$/;"	s
OMX_AUDIO_PARAM_G726TYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_G726TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_G726TYPE
OMX_AUDIO_PARAM_G729TYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_G729TYPE {$/;"	s
OMX_AUDIO_PARAM_G729TYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_G729TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_G729TYPE
OMX_AUDIO_PARAM_GSMEFRTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_GSMEFRTYPE {$/;"	s
OMX_AUDIO_PARAM_GSMEFRTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_GSMEFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_GSMEFRTYPE
OMX_AUDIO_PARAM_GSMFRTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_GSMFRTYPE {$/;"	s
OMX_AUDIO_PARAM_GSMFRTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_GSMFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_GSMFRTYPE
OMX_AUDIO_PARAM_GSMHRTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_GSMHRTYPE {$/;"	s
OMX_AUDIO_PARAM_GSMHRTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_GSMHRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_GSMHRTYPE
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE {$/;"	s
OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
OMX_AUDIO_PARAM_MIDITYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_MIDITYPE {$/;"	s
OMX_AUDIO_PARAM_MIDITYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_MIDITYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_MIDITYPE
OMX_AUDIO_PARAM_MP3TYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_MP3TYPE {$/;"	s
OMX_AUDIO_PARAM_MP3TYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_MP3TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_MP3TYPE
OMX_AUDIO_PARAM_PCMMODETYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PCMMODETYPE {$/;"	s
OMX_AUDIO_PARAM_PCMMODETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PCMMODETYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PCMMODETYPE
OMX_AUDIO_PARAM_PDCEFRTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PDCEFRTYPE {$/;"	s
OMX_AUDIO_PARAM_PDCEFRTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PDCEFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PDCEFRTYPE
OMX_AUDIO_PARAM_PDCFRTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PDCFRTYPE {$/;"	s
OMX_AUDIO_PARAM_PDCFRTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PDCFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PDCFRTYPE
OMX_AUDIO_PARAM_PDCHRTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PDCHRTYPE {$/;"	s
OMX_AUDIO_PARAM_PDCHRTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PDCHRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PDCHRTYPE
OMX_AUDIO_PARAM_PORTFORMATTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_PORTFORMATTYPE {$/;"	s
OMX_AUDIO_PARAM_PORTFORMATTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_PORTFORMATTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
OMX_AUDIO_PARAM_QCELP13TYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_QCELP13TYPE {$/;"	s
OMX_AUDIO_PARAM_QCELP13TYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_QCELP13TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_QCELP13TYPE
OMX_AUDIO_PARAM_QCELP8TYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_QCELP8TYPE {$/;"	s
OMX_AUDIO_PARAM_QCELP8TYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_QCELP8TYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_QCELP8TYPE
OMX_AUDIO_PARAM_RATYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_RATYPE {$/;"	s
OMX_AUDIO_PARAM_RATYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_RATYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_RATYPE
OMX_AUDIO_PARAM_SBCTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_SBCTYPE {$/;"	s
OMX_AUDIO_PARAM_SBCTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_SBCTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_SBCTYPE
OMX_AUDIO_PARAM_SMVTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_SMVTYPE {$/;"	s
OMX_AUDIO_PARAM_SMVTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_SMVTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_SMVTYPE
OMX_AUDIO_PARAM_TDMAEFRTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_TDMAEFRTYPE {$/;"	s
OMX_AUDIO_PARAM_TDMAEFRTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_TDMAEFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
OMX_AUDIO_PARAM_TDMAFRTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_TDMAFRTYPE {$/;"	s
OMX_AUDIO_PARAM_TDMAFRTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_TDMAFRTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_TDMAFRTYPE
OMX_AUDIO_PARAM_VORBISTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_VORBISTYPE {$/;"	s
OMX_AUDIO_PARAM_VORBISTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_VORBISTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_VORBISTYPE
OMX_AUDIO_PARAM_WMATYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PARAM_WMATYPE {$/;"	s
OMX_AUDIO_PARAM_WMATYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PARAM_WMATYPE;$/;"	t	typeref:struct:OMX_AUDIO_PARAM_WMATYPE
OMX_AUDIO_PCMMODETYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_PCMMODETYPE {$/;"	g
OMX_AUDIO_PCMMODETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PCMMODETYPE;$/;"	t	typeref:enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeALaw	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeALaw,        \/**< A law PCM encoded data (G.711) *\/$/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeLinear	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeLinear = 0,  \/**< Linear PCM encoded data *\/$/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeMULaw	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeMULaw,       \/**< Mu law PCM encoded data (G.711)  *\/$/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PCMModeVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_PCMMODETYPE
OMX_AUDIO_PORTDEFINITIONTYPE	include/media/openmax/OMX_Audio.h	/^typedef struct OMX_AUDIO_PORTDEFINITIONTYPE {$/;"	s
OMX_AUDIO_PORTDEFINITIONTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_AUDIO_PORTDEFINITIONTYPE
OMX_AUDIO_RA10_AAC	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_AAC,           \/**< MPEG-4 AAC codec for bitrates of more than 128kbps *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_CODEC	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_CODEC,         \/**< RealAudio codec for bitrates less than 128 kbps *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_LOSSLESS	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_LOSSLESS,      \/**< RealAudio Lossless *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_MULTICHANNEL	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_MULTICHANNEL,  \/**< RealAudio Multichannel *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA10_VOICE	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA10_VOICE,         \/**< RealAudio Voice for bitrates below 15 kbps *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA8	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA8,                \/**< RealAudio 8 codec *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RA9	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RA9,                \/**< RealAudio 9 codec *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFORMATTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_RAFORMATTYPE {$/;"	g
OMX_AUDIO_RAFORMATTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_RAFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFormatKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFormatUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFormatUnused = 0, \/**< Format unused or unknown *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_RAFormatVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_AUDIO_SBCALLOCMETHODTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_SBCALLOCMETHODTYPE {$/;"	g
OMX_AUDIO_SBCALLOCMETHODTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_SBCALLOCMETHODTYPE;$/;"	t	typeref:enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodKhronosExtensions	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodLoudness	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodLoudness, \/**< Loudness allocation method *\/$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodMax	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodSNR	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodSNR,      \/**< SNR allocation method *\/$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_SBCAllocMethodVendorStartUnused	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_SBCAllocMethodVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_SBCALLOCMETHODTYPE
OMX_AUDIO_STEREOWIDENINGTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_STEREOWIDENINGTYPE {$/;"	g
OMX_AUDIO_STEREOWIDENINGTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_STEREOWIDENINGTYPE;$/;"	t	typeref:enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningHeadphones	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningHeadphones,    \/**< Stereo widening for loudspeakers *\/$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningKhronosExtensions	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningLoudspeakers	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningLoudspeakers,  \/**< Stereo widening for closely spaced loudspeakers *\/$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningMax	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_StereoWideningVendorStartUnused	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_StereoWideningVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_STEREOWIDENINGTYPE
OMX_AUDIO_WMAFORMATTYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_WMAFORMATTYPE {$/;"	g
OMX_AUDIO_WMAFORMATTYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_WMAFORMATTYPE;$/;"	t	typeref:enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormat7	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormat7,          \/**< Windows Media Audio format 7 *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormat8	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormat8,          \/**< Windows Media Audio format 8 *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormat9	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormat9,          \/**< Windows Media Audio format 9 *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatKhronosExtensions	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatMax	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatUnused	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatUnused = 0, \/**< format unused or unknown *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAFormatVendorStartUnused	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_WMAFORMATTYPE
OMX_AUDIO_WMAPROFILETYPE	include/media/openmax/OMX_Audio.h	/^typedef enum OMX_AUDIO_WMAPROFILETYPE {$/;"	g
OMX_AUDIO_WMAPROFILETYPE	include/media/openmax/OMX_Audio.h	/^} OMX_AUDIO_WMAPROFILETYPE;$/;"	t	typeref:enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileKhronosExtensions	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileL1	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileL1,          \/**< Windows Media audio version 9 profile L1 *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileL2	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileL2,          \/**< Windows Media audio version 9 profile L2 *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileL3	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileL3,          \/**< Windows Media audio version 9 profile L3 *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileMax	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileUnused	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileUnused = 0,  \/**< profile unused or unknown *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AUDIO_WMAProfileVendorStartUnused	include/media/openmax/OMX_Audio.h	/^  OMX_AUDIO_WMAProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_AUDIO_WMAPROFILETYPE
OMX_AllocateBuffer	include/media/openmax/OMX_Core.h	1045;"	d
OMX_AudioExt_h	include/media/openmax/OMX_AudioExt.h	31;"	d
OMX_Audio_h	include/media/openmax/OMX_Audio.h	66;"	d
OMX_BOOL	include/media/openmax/OMX_Types.h	/^typedef enum OMX_BOOL {$/;"	g
OMX_BOOL	include/media/openmax/OMX_Types.h	/^} OMX_BOOL;$/;"	t	typeref:enum:OMX_BOOL
OMX_BOOL_MAX	include/media/openmax/OMX_Types.h	/^    OMX_BOOL_MAX = 0x7FFFFFFF$/;"	e	enum:OMX_BOOL
OMX_BS32	include/media/openmax/OMX_Types.h	/^typedef struct OMX_BS32 {$/;"	s
OMX_BS32	include/media/openmax/OMX_Types.h	/^} OMX_BS32;$/;"	t	typeref:struct:OMX_BS32
OMX_BU32	include/media/openmax/OMX_Types.h	/^typedef struct OMX_BU32 {$/;"	s
OMX_BU32	include/media/openmax/OMX_Types.h	/^} OMX_BU32;$/;"	t	typeref:struct:OMX_BU32
OMX_BUFFERFLAG_CODECCONFIG	include/media/openmax/OMX_Core.h	410;"	d
OMX_BUFFERFLAG_DATACORRUPT	include/media/openmax/OMX_Core.h	373;"	d
OMX_BUFFERFLAG_DECODEONLY	include/media/openmax/OMX_Core.h	366;"	d
OMX_BUFFERFLAG_ENDOFFRAME	include/media/openmax/OMX_Core.h	380;"	d
OMX_BUFFERFLAG_EOS	include/media/openmax/OMX_Core.h	316;"	d
OMX_BUFFERFLAG_EXTRADATA	include/media/openmax/OMX_Core.h	392;"	d
OMX_BUFFERFLAG_STARTTIME	include/media/openmax/OMX_Core.h	343;"	d
OMX_BUFFERFLAG_SYNCFRAME	include/media/openmax/OMX_Core.h	386;"	d
OMX_BUFFERHEADERTYPE	include/media/openmax/OMX_Core.h	/^typedef struct OMX_BUFFERHEADERTYPE$/;"	s
OMX_BUFFERHEADERTYPE	include/media/openmax/OMX_Core.h	/^} OMX_BUFFERHEADERTYPE;$/;"	t	typeref:struct:OMX_BUFFERHEADERTYPE
OMX_BUFFERSUPPLIERTYPE	include/media/openmax/OMX_Core.h	/^typedef enum OMX_BUFFERSUPPLIERTYPE$/;"	g
OMX_BUFFERSUPPLIERTYPE	include/media/openmax/OMX_Core.h	/^} OMX_BUFFERSUPPLIERTYPE;$/;"	t	typeref:enum:OMX_BUFFERSUPPLIERTYPE
OMX_BYTE	include/media/openmax/OMX_Types.h	/^typedef OMX_PTR OMX_BYTE;$/;"	t
OMX_BYTE	include/media/openmax/OMX_Types.h	/^typedef unsigned char* OMX_BYTE;$/;"	t
OMX_BufferSupplyInput	include/media/openmax/OMX_Core.h	/^    OMX_BufferSupplyInput,             \/**< input port supplies the buffers *\/$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyKhronosExtensions	include/media/openmax/OMX_Core.h	/^    OMX_BufferSupplyKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyMax	include/media/openmax/OMX_Core.h	/^    OMX_BufferSupplyMax = 0x7FFFFFFF$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyOutput	include/media/openmax/OMX_Core.h	/^    OMX_BufferSupplyOutput,            \/**< output port supplies the buffers *\/$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyUnspecified	include/media/openmax/OMX_Core.h	/^    OMX_BufferSupplyUnspecified = 0x0, \/**< port supplying the buffers is unspecified,$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_BufferSupplyVendorStartUnused	include/media/openmax/OMX_Core.h	/^    OMX_BufferSupplyVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_BUFFERSUPPLIERTYPE
OMX_CALLBACKTYPE	include/media/openmax/OMX_Core.h	/^typedef struct OMX_CALLBACKTYPE$/;"	s
OMX_CALLBACKTYPE	include/media/openmax/OMX_Core.h	/^} OMX_CALLBACKTYPE;$/;"	t	typeref:struct:OMX_CALLBACKTYPE
OMX_CLOCKPORT0	include/media/openmax/OMX_Other.h	268;"	d
OMX_CLOCKPORT1	include/media/openmax/OMX_Other.h	269;"	d
OMX_CLOCKPORT2	include/media/openmax/OMX_Other.h	270;"	d
OMX_CLOCKPORT3	include/media/openmax/OMX_Other.h	271;"	d
OMX_CLOCKPORT4	include/media/openmax/OMX_Other.h	272;"	d
OMX_CLOCKPORT5	include/media/openmax/OMX_Other.h	273;"	d
OMX_CLOCKPORT6	include/media/openmax/OMX_Other.h	274;"	d
OMX_CLOCKPORT7	include/media/openmax/OMX_Other.h	275;"	d
OMX_COLORBLENDTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_COLORBLENDTYPE {$/;"	g
OMX_COLORBLENDTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_COLORBLENDTYPE;$/;"	t	typeref:enum:OMX_COLORBLENDTYPE
OMX_COLOR_FORMATTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_COLOR_FORMATTYPE {$/;"	g
OMX_COLOR_FORMATTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_COLOR_FORMATTYPE;$/;"	t	typeref:enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format12bitRGB444	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format12bitRGB444,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitARGB1555	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitARGB1555,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitARGB4444	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitARGB4444,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitBGR565	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitBGR565,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format16bitRGB565	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format16bitRGB565,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format18BitBGR666	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format18BitBGR666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format18bitARGB1665	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format18bitARGB1665,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format18bitRGB666	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format18bitRGB666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format19bitARGB1666	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format19bitARGB1666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24BitABGR6666	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24BitABGR6666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24BitARGB6666	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24BitARGB6666,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24bitARGB1887	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24bitARGB1887,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24bitBGR888	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24bitBGR888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format24bitRGB888	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format24bitRGB888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format25bitARGB1888	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format25bitARGB1888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format32bitARGB8888	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format32bitARGB8888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format32bitBGRA8888	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format32bitBGRA8888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_Format8bitRGB332	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_Format8bitRGB332,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatAndroidOpaque	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatAndroidOpaque = 0x7F000789,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatCbYCrY	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatCbYCrY,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatCrYCbY	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatCrYCbY,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL16	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL16,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL2	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL2,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL24	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL24,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL32	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL32,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL4	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL4,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatL8	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatL8,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatMonochrome	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatMonochrome,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatRawBayer10bit	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatRawBayer10bit,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatRawBayer8bit	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatRawBayer8bit,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatRawBayer8bitcompressed	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatRawBayer8bitcompressed,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatUnused,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYCbYCr	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYCbYCr,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYCrYCb	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYCrYCb,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV411PackedPlanar	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV411PackedPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV411Planar	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV411Planar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420Flexible	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420Flexible = 0x7F420888,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420PackedPlanar	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420PackedPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420PackedSemiPlanar	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420PackedSemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420Planar	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420Planar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV420SemiPlanar	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV420SemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422PackedPlanar	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422PackedPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422PackedSemiPlanar	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422PackedSemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422Planar	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422Planar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV422SemiPlanar	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV422SemiPlanar,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COLOR_FormatYUV444Interleaved	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLOR_FormatYUV444Interleaved,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_COMMANDTYPE	include/media/openmax/OMX_Core.h	/^typedef enum OMX_COMMANDTYPE$/;"	g
OMX_COMMANDTYPE	include/media/openmax/OMX_Core.h	/^} OMX_COMMANDTYPE;$/;"	t	typeref:enum:OMX_COMMANDTYPE
OMX_COMPONENTINITTYPE	include/media/openmax/OMX_Core.h	/^typedef OMX_ERRORTYPE (* OMX_COMPONENTINITTYPE)(OMX_IN  OMX_HANDLETYPE hComponent);$/;"	t
OMX_COMPONENTREGISTERTYPE	include/media/openmax/OMX_Core.h	/^typedef struct OMX_COMPONENTREGISTERTYPE$/;"	s
OMX_COMPONENTREGISTERTYPE	include/media/openmax/OMX_Core.h	/^} OMX_COMPONENTREGISTERTYPE;$/;"	t	typeref:struct:OMX_COMPONENTREGISTERTYPE
OMX_COMPONENTTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_COMPONENTTYPE$/;"	s
OMX_COMPONENTTYPE	include/media/openmax/OMX_Component.h	/^} OMX_COMPONENTTYPE;$/;"	t	typeref:struct:OMX_COMPONENTTYPE
OMX_CONFIG_BACKLIGHTTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_BACKLIGHTTYPE {$/;"	s
OMX_CONFIG_BACKLIGHTTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_BACKLIGHTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_BACKLIGHTTYPE
OMX_CONFIG_BOOLEANTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_BOOLEANTYPE {$/;"	s
OMX_CONFIG_BOOLEANTYPE	include/media/openmax/OMX_Component.h	/^} OMX_CONFIG_BOOLEANTYPE;$/;"	t	typeref:struct:OMX_CONFIG_BOOLEANTYPE
OMX_CONFIG_BRIGHTNESSTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_BRIGHTNESSTYPE {$/;"	s
OMX_CONFIG_BRIGHTNESSTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_BRIGHTNESSTYPE;$/;"	t	typeref:struct:OMX_CONFIG_BRIGHTNESSTYPE
OMX_CONFIG_CAPTUREMODETYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_CAPTUREMODETYPE {$/;"	s
OMX_CONFIG_CAPTUREMODETYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_CAPTUREMODETYPE;$/;"	t	typeref:struct:OMX_CONFIG_CAPTUREMODETYPE
OMX_CONFIG_COLORBLENDTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORBLENDTYPE {$/;"	s
OMX_CONFIG_COLORBLENDTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_COLORBLENDTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORBLENDTYPE
OMX_CONFIG_COLORCONVERSIONTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORCONVERSIONTYPE {$/;"	s
OMX_CONFIG_COLORCONVERSIONTYPE	include/media/openmax/OMX_IVCommon.h	/^}OMX_CONFIG_COLORCONVERSIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORCONVERSIONTYPE
OMX_CONFIG_COLORENHANCEMENTTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORENHANCEMENTTYPE {$/;"	s
OMX_CONFIG_COLORENHANCEMENTTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_COLORENHANCEMENTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORENHANCEMENTTYPE
OMX_CONFIG_COLORKEYTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_COLORKEYTYPE {$/;"	s
OMX_CONFIG_COLORKEYTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_COLORKEYTYPE;$/;"	t	typeref:struct:OMX_CONFIG_COLORKEYTYPE
OMX_CONFIG_CONTAINERNODECOUNTTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_CONTAINERNODECOUNTTYPE$/;"	s
OMX_CONFIG_CONTAINERNODECOUNTTYPE	include/media/openmax/OMX_Component.h	/^} OMX_CONFIG_CONTAINERNODECOUNTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
OMX_CONFIG_CONTAINERNODEIDTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_CONTAINERNODEIDTYPE$/;"	s
OMX_CONFIG_CONTAINERNODEIDTYPE	include/media/openmax/OMX_Component.h	/^} OMX_CONFIG_CONTAINERNODEIDTYPE;$/;"	t	typeref:struct:OMX_CONFIG_CONTAINERNODEIDTYPE
OMX_CONFIG_CONTRASTTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_CONTRASTTYPE {$/;"	s
OMX_CONFIG_CONTRASTTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_CONTRASTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_CONTRASTTYPE
OMX_CONFIG_DITHERTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_DITHERTYPE {$/;"	s
OMX_CONFIG_DITHERTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_DITHERTYPE;$/;"	t	typeref:struct:OMX_CONFIG_DITHERTYPE
OMX_CONFIG_EXPOSURECONTROLTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_EXPOSURECONTROLTYPE {$/;"	s
OMX_CONFIG_EXPOSURECONTROLTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_EXPOSURECONTROLTYPE;$/;"	t	typeref:struct:OMX_CONFIG_EXPOSURECONTROLTYPE
OMX_CONFIG_EXPOSUREVALUETYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_EXPOSUREVALUETYPE {$/;"	s
OMX_CONFIG_EXPOSUREVALUETYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_EXPOSUREVALUETYPE;$/;"	t	typeref:struct:OMX_CONFIG_EXPOSUREVALUETYPE
OMX_CONFIG_FOCUSREGIONTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_FOCUSREGIONTYPE {$/;"	s
OMX_CONFIG_FOCUSREGIONTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_FOCUSREGIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_FOCUSREGIONTYPE
OMX_CONFIG_FRAMERATETYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_FRAMERATETYPE {$/;"	s
OMX_CONFIG_FRAMERATETYPE	include/media/openmax/OMX_Video.h	/^} OMX_CONFIG_FRAMERATETYPE;$/;"	t	typeref:struct:OMX_CONFIG_FRAMERATETYPE
OMX_CONFIG_FRAMESTABTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_FRAMESTABTYPE {$/;"	s
OMX_CONFIG_FRAMESTABTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_FRAMESTABTYPE;$/;"	t	typeref:struct:OMX_CONFIG_FRAMESTABTYPE
OMX_CONFIG_GAMMATYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_GAMMATYPE {$/;"	s
OMX_CONFIG_GAMMATYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_GAMMATYPE;$/;"	t	typeref:struct:OMX_CONFIG_GAMMATYPE
OMX_CONFIG_IMAGEFILTERTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_IMAGEFILTERTYPE {$/;"	s
OMX_CONFIG_IMAGEFILTERTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_IMAGEFILTERTYPE;$/;"	t	typeref:struct:OMX_CONFIG_IMAGEFILTERTYPE
OMX_CONFIG_INTRAREFRESHVOPTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_INTRAREFRESHVOPTYPE {$/;"	s
OMX_CONFIG_INTRAREFRESHVOPTYPE	include/media/openmax/OMX_Video.h	/^} OMX_CONFIG_INTRAREFRESHVOPTYPE;$/;"	t	typeref:struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
OMX_CONFIG_LIGHTNESSTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_LIGHTNESSTYPE {$/;"	s
OMX_CONFIG_LIGHTNESSTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_LIGHTNESSTYPE;$/;"	t	typeref:struct:OMX_CONFIG_LIGHTNESSTYPE
OMX_CONFIG_MACROBLOCKERRORMAPTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_MACROBLOCKERRORMAPTYPE {$/;"	s
OMX_CONFIG_MACROBLOCKERRORMAPTYPE	include/media/openmax/OMX_Video.h	/^} OMX_CONFIG_MACROBLOCKERRORMAPTYPE;$/;"	t	typeref:struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
OMX_CONFIG_MBERRORREPORTINGTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_CONFIG_MBERRORREPORTINGTYPE {$/;"	s
OMX_CONFIG_MBERRORREPORTINGTYPE	include/media/openmax/OMX_Video.h	/^} OMX_CONFIG_MBERRORREPORTINGTYPE;$/;"	t	typeref:struct:OMX_CONFIG_MBERRORREPORTINGTYPE
OMX_CONFIG_METADATAITEMCOUNTTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_METADATAITEMCOUNTTYPE$/;"	s
OMX_CONFIG_METADATAITEMCOUNTTYPE	include/media/openmax/OMX_Component.h	/^} OMX_CONFIG_METADATAITEMCOUNTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
OMX_CONFIG_METADATAITEMTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_CONFIG_METADATAITEMTYPE$/;"	s
OMX_CONFIG_METADATAITEMTYPE	include/media/openmax/OMX_Component.h	/^} OMX_CONFIG_METADATAITEMTYPE;$/;"	t	typeref:struct:OMX_CONFIG_METADATAITEMTYPE
OMX_CONFIG_MIRRORTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_MIRRORTYPE {$/;"	s
OMX_CONFIG_MIRRORTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_MIRRORTYPE;$/;"	t	typeref:struct:OMX_CONFIG_MIRRORTYPE
OMX_CONFIG_PLANEBLENDTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_PLANEBLENDTYPE {$/;"	s
OMX_CONFIG_PLANEBLENDTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_PLANEBLENDTYPE;$/;"	t	typeref:struct:OMX_CONFIG_PLANEBLENDTYPE
OMX_CONFIG_POINTTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_POINTTYPE {$/;"	s
OMX_CONFIG_POINTTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_POINTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_POINTTYPE
OMX_CONFIG_RECTTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_RECTTYPE {$/;"	s
OMX_CONFIG_RECTTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_RECTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_RECTTYPE
OMX_CONFIG_ROTATIONTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_ROTATIONTYPE {$/;"	s
OMX_CONFIG_ROTATIONTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_ROTATIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_ROTATIONTYPE
OMX_CONFIG_SATURATIONTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_SATURATIONTYPE {$/;"	s
OMX_CONFIG_SATURATIONTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_SATURATIONTYPE;$/;"	t	typeref:struct:OMX_CONFIG_SATURATIONTYPE
OMX_CONFIG_SCALEFACTORTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_SCALEFACTORTYPE {$/;"	s
OMX_CONFIG_SCALEFACTORTYPE	include/media/openmax/OMX_IVCommon.h	/^}OMX_CONFIG_SCALEFACTORTYPE;$/;"	t	typeref:struct:OMX_CONFIG_SCALEFACTORTYPE
OMX_CONFIG_TRANSITIONEFFECTTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_TRANSITIONEFFECTTYPE {$/;"	s
OMX_CONFIG_TRANSITIONEFFECTTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_TRANSITIONEFFECTTYPE;$/;"	t	typeref:struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
OMX_CONFIG_WHITEBALCONTROLTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_CONFIG_WHITEBALCONTROLTYPE {$/;"	s
OMX_CONFIG_WHITEBALCONTROLTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_CONFIG_WHITEBALCONTROLTYPE;$/;"	t	typeref:struct:OMX_CONFIG_WHITEBALCONTROLTYPE
OMX_CONTENTPIPE_H	include/media/openmax/OMX_ContentPipe.h	48;"	d
OMX_ColorBlendAlphaConstant	include/media/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAlphaConstant,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendAlphaPerPixel	include/media/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAlphaPerPixel,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendAlternate	include/media/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAlternate,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendAnd	include/media/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendAnd,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendInvert	include/media/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendInvert,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendMax = 0x7FFFFFFF$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendNone	include/media/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendNone,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendOr	include/media/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendOr,$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_ColorBlendVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_ColorBlendVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_COLORBLENDTYPE
OMX_CommandFlush	include/media/openmax/OMX_Core.h	/^    OMX_CommandFlush,       \/**< Flush the data queue(s) of a component *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandKhronosExtensions	include/media/openmax/OMX_Core.h	/^    OMX_CommandKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandMarkBuffer	include/media/openmax/OMX_Core.h	/^    OMX_CommandMarkBuffer,  \/**< Mark a component\/buffer for observation *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandMax	include/media/openmax/OMX_Core.h	/^    OMX_CommandMax = 0X7FFFFFFF$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandPortDisable	include/media/openmax/OMX_Core.h	/^    OMX_CommandPortDisable, \/**< Disable a port on a component. *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandPortEnable	include/media/openmax/OMX_Core.h	/^    OMX_CommandPortEnable,  \/**< Enable a port on a component. *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandStateSet	include/media/openmax/OMX_Core.h	/^    OMX_CommandStateSet,    \/**< Change the component state *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_CommandVendorStartUnused	include/media/openmax/OMX_Core.h	/^    OMX_CommandVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_COMMANDTYPE
OMX_Component_h	include/media/openmax/OMX_Component.h	48;"	d
OMX_Core_h	include/media/openmax/OMX_Core.h	47;"	d
OMX_DATAUNITENCAPSULATIONTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_DATAUNITENCAPSULATIONTYPE {$/;"	g
OMX_DATAUNITENCAPSULATIONTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_DATAUNITENCAPSULATIONTYPE;$/;"	t	typeref:enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DATAUNITTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_DATAUNITTYPE {$/;"	g
OMX_DATAUNITTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_DATAUNITTYPE;$/;"	t	typeref:enum:OMX_DATAUNITTYPE
OMX_DIRTYPE	include/media/openmax/OMX_Types.h	/^typedef enum OMX_DIRTYPE$/;"	g
OMX_DIRTYPE	include/media/openmax/OMX_Types.h	/^} OMX_DIRTYPE;$/;"	t	typeref:enum:OMX_DIRTYPE
OMX_DITHERTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_DITHERTYPE {$/;"	g
OMX_DITHERTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_DITHERTYPE;$/;"	t	typeref:enum:OMX_DITHERTYPE
OMX_DataEncapsulationElementaryStream	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationElementaryStream,$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationGenericPayload	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationGenericPayload,$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationMax = 0x7FFFFFFF$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationRtpPayload	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationRtpPayload,$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataEncapsulationVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataEncapsulationVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_DATAUNITENCAPSULATIONTYPE
OMX_DataUnitArbitraryStreamSection	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataUnitArbitraryStreamSection,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitCodedPicture	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataUnitCodedPicture,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataUnitKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataUnitMax = 0x7FFFFFFF$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitSeveralSegments	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataUnitSeveralSegments,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataUnitVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DataUnitVideoSegment	include/media/openmax/OMX_IVCommon.h	/^    OMX_DataUnitVideoSegment,$/;"	e	enum:OMX_DATAUNITTYPE
OMX_DirInput	include/media/openmax/OMX_Types.h	/^    OMX_DirInput,              \/**< Port is an input port *\/$/;"	e	enum:OMX_DIRTYPE
OMX_DirMax	include/media/openmax/OMX_Types.h	/^    OMX_DirMax = 0x7FFFFFFF$/;"	e	enum:OMX_DIRTYPE
OMX_DirOutput	include/media/openmax/OMX_Types.h	/^    OMX_DirOutput,             \/**< Port is an output port *\/$/;"	e	enum:OMX_DIRTYPE
OMX_DitherErrorDiffusion	include/media/openmax/OMX_IVCommon.h	/^    OMX_DitherErrorDiffusion,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_DitherKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_DitherMax = 0x7FFFFFFF$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherNone	include/media/openmax/OMX_IVCommon.h	/^    OMX_DitherNone,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherOrdered	include/media/openmax/OMX_IVCommon.h	/^    OMX_DitherOrdered,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherOther	include/media/openmax/OMX_IVCommon.h	/^    OMX_DitherOther,$/;"	e	enum:OMX_DITHERTYPE
OMX_DitherVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_DitherVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_DITHERTYPE
OMX_ENDIANTYPE	include/media/openmax/OMX_Types.h	/^typedef enum OMX_ENDIANTYPE$/;"	g
OMX_ENDIANTYPE	include/media/openmax/OMX_Types.h	/^} OMX_ENDIANTYPE;$/;"	t	typeref:enum:OMX_ENDIANTYPE
OMX_ERRORTYPE	include/media/openmax/OMX_Core.h	/^typedef enum OMX_ERRORTYPE$/;"	g
OMX_ERRORTYPE	include/media/openmax/OMX_Core.h	/^} OMX_ERRORTYPE;$/;"	t	typeref:enum:OMX_ERRORTYPE
OMX_EVENTTYPE	include/media/openmax/OMX_Core.h	/^typedef enum OMX_EVENTTYPE$/;"	g
OMX_EVENTTYPE	include/media/openmax/OMX_Core.h	/^} OMX_EVENTTYPE;$/;"	t	typeref:enum:OMX_EVENTTYPE
OMX_EVModeMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_EVModeMax = 0x7fffffff$/;"	e	enum:OMX_METERINGTYPE
OMX_EXPOSURECONTROLTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_EXPOSURECONTROLTYPE {$/;"	g
OMX_EXPOSURECONTROLTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_EXPOSURECONTROLTYPE;$/;"	t	typeref:enum:OMX_EXPOSURECONTROLTYPE
OMX_EXTRADATATYPE	include/media/openmax/OMX_Core.h	/^typedef enum OMX_EXTRADATATYPE$/;"	g
OMX_EXTRADATATYPE	include/media/openmax/OMX_Core.h	/^} OMX_EXTRADATATYPE;$/;"	t	typeref:enum:OMX_EXTRADATATYPE
OMX_EffectDissolve	include/media/openmax/OMX_IVCommon.h	/^    OMX_EffectDissolve,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectFadeFromBlack	include/media/openmax/OMX_IVCommon.h	/^    OMX_EffectFadeFromBlack,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectFadeToBlack	include/media/openmax/OMX_IVCommon.h	/^    OMX_EffectFadeToBlack,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_EffectKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_EffectMax = 0x7FFFFFFF$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectNone	include/media/openmax/OMX_IVCommon.h	/^    OMX_EffectNone,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectUnspecifiedMixOfTwoScenes	include/media/openmax/OMX_IVCommon.h	/^    OMX_EffectUnspecifiedMixOfTwoScenes,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectUnspecifiedThroughConstantColor	include/media/openmax/OMX_IVCommon.h	/^    OMX_EffectUnspecifiedThroughConstantColor,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_EffectVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EffectWipe	include/media/openmax/OMX_IVCommon.h	/^    OMX_EffectWipe,$/;"	e	enum:OMX_TRANSITIONEFFECTTYPE
OMX_EmptyThisBuffer	include/media/openmax/OMX_Core.h	1113;"	d
OMX_EndianBig	include/media/openmax/OMX_Types.h	/^    OMX_EndianBig, \/**< big endian *\/$/;"	e	enum:OMX_ENDIANTYPE
OMX_EndianLittle	include/media/openmax/OMX_Types.h	/^    OMX_EndianLittle, \/**< little endian *\/$/;"	e	enum:OMX_ENDIANTYPE
OMX_EndianMax	include/media/openmax/OMX_Types.h	/^    OMX_EndianMax = 0x7FFFFFFF$/;"	e	enum:OMX_ENDIANTYPE
OMX_ErrorBadParameter	include/media/openmax/OMX_Core.h	/^  OMX_ErrorBadParameter = (OMX_S32) 0x80001005,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorBadPortIndex	include/media/openmax/OMX_Core.h	/^  OMX_ErrorBadPortIndex = (OMX_S32) 0x8000101B,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorComponentNotFound	include/media/openmax/OMX_Core.h	/^  OMX_ErrorComponentNotFound = (OMX_S32) 0x80001003,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorComponentSuspended	include/media/openmax/OMX_Core.h	/^  OMX_ErrorComponentSuspended = (OMX_S32) 0x8000101D,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorContentPipeCreationFailed	include/media/openmax/OMX_Core.h	/^  OMX_ErrorContentPipeCreationFailed = (OMX_S32) 0x80001022,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorContentPipeOpenFailed	include/media/openmax/OMX_Core.h	/^  OMX_ErrorContentPipeOpenFailed = (OMX_S32) 0x80001021,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorDynamicResourcesUnavailable	include/media/openmax/OMX_Core.h	/^  OMX_ErrorDynamicResourcesUnavailable = (OMX_S32) 0x8000101E,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorFormatNotDetected	include/media/openmax/OMX_Core.h	/^  OMX_ErrorFormatNotDetected = (OMX_S32) 0x80001020,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorHardware	include/media/openmax/OMX_Core.h	/^  OMX_ErrorHardware = (OMX_S32) 0x80001009,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorIncorrectStateOperation	include/media/openmax/OMX_Core.h	/^  OMX_ErrorIncorrectStateOperation = (OMX_S32) 0x80001018,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorIncorrectStateTransition	include/media/openmax/OMX_Core.h	/^  OMX_ErrorIncorrectStateTransition = (OMX_S32) 0x80001017,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInsufficientResources	include/media/openmax/OMX_Core.h	/^  OMX_ErrorInsufficientResources = (OMX_S32) 0x80001000,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInvalidComponent	include/media/openmax/OMX_Core.h	/^  OMX_ErrorInvalidComponent = (OMX_S32) 0x80001004,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInvalidComponentName	include/media/openmax/OMX_Core.h	/^  OMX_ErrorInvalidComponentName = (OMX_S32) 0x80001002,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorInvalidState	include/media/openmax/OMX_Core.h	/^  OMX_ErrorInvalidState = (OMX_S32) 0x8000100A,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorKhronosExtensions	include/media/openmax/OMX_Core.h	/^  OMX_ErrorKhronosExtensions = (OMX_S32)0x8F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorMax	include/media/openmax/OMX_Core.h	/^  OMX_ErrorMax = 0x7FFFFFFF$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorMbErrorsInFrame	include/media/openmax/OMX_Core.h	/^  OMX_ErrorMbErrorsInFrame = (OMX_S32) 0x8000101F,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNoMore	include/media/openmax/OMX_Core.h	/^  OMX_ErrorNoMore = (OMX_S32) 0x8000100E,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNone	include/media/openmax/OMX_Core.h	/^  OMX_ErrorNone = 0,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNotImplemented	include/media/openmax/OMX_Core.h	/^  OMX_ErrorNotImplemented = (OMX_S32) 0x80001006,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorNotReady	include/media/openmax/OMX_Core.h	/^  OMX_ErrorNotReady = (OMX_S32) 0x80001010,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorOverflow	include/media/openmax/OMX_Core.h	/^  OMX_ErrorOverflow = (OMX_S32) 0x80001008,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnpopulated	include/media/openmax/OMX_Core.h	/^  OMX_ErrorPortUnpopulated = (OMX_S32) 0x8000101C,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnresponsiveDuringAllocation	include/media/openmax/OMX_Core.h	/^  OMX_ErrorPortUnresponsiveDuringAllocation = (OMX_S32) 0x80001014,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnresponsiveDuringDeallocation	include/media/openmax/OMX_Core.h	/^  OMX_ErrorPortUnresponsiveDuringDeallocation = (OMX_S32) 0x80001015,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortUnresponsiveDuringStop	include/media/openmax/OMX_Core.h	/^  OMX_ErrorPortUnresponsiveDuringStop = (OMX_S32) 0x80001016,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorPortsNotCompatible	include/media/openmax/OMX_Core.h	/^  OMX_ErrorPortsNotCompatible = (OMX_S32) 0x8000100C,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorResourcesLost	include/media/openmax/OMX_Core.h	/^  OMX_ErrorResourcesLost = (OMX_S32) 0x8000100D,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorResourcesPreempted	include/media/openmax/OMX_Core.h	/^  OMX_ErrorResourcesPreempted = (OMX_S32) 0x80001013,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorSameState	include/media/openmax/OMX_Core.h	/^  OMX_ErrorSameState = (OMX_S32) 0x80001012,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorSeperateTablesUsed	include/media/openmax/OMX_Core.h	/^  OMX_ErrorSeperateTablesUsed = (OMX_S32) 0x80001023,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorStreamCorrupt	include/media/openmax/OMX_Core.h	/^  OMX_ErrorStreamCorrupt = (OMX_S32) 0x8000100B,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorTimeout	include/media/openmax/OMX_Core.h	/^  OMX_ErrorTimeout = (OMX_S32) 0x80001011,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorTunnelingUnsupported	include/media/openmax/OMX_Core.h	/^  OMX_ErrorTunnelingUnsupported = (OMX_S32) 0x80001024,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUndefined	include/media/openmax/OMX_Core.h	/^  OMX_ErrorUndefined = (OMX_S32) 0x80001001,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUnderflow	include/media/openmax/OMX_Core.h	/^  OMX_ErrorUnderflow = (OMX_S32) 0x80001007,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUnsupportedIndex	include/media/openmax/OMX_Core.h	/^  OMX_ErrorUnsupportedIndex = (OMX_S32) 0x8000101A,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorUnsupportedSetting	include/media/openmax/OMX_Core.h	/^  OMX_ErrorUnsupportedSetting = (OMX_S32) 0x80001019,$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorVendorStartUnused	include/media/openmax/OMX_Core.h	/^  OMX_ErrorVendorStartUnused = (OMX_S32)0x90000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_ERRORTYPE
OMX_ErrorVersionMismatch	include/media/openmax/OMX_Core.h	/^  OMX_ErrorVersionMismatch = (OMX_S32) 0x8000100F,$/;"	e	enum:OMX_ERRORTYPE
OMX_EventBufferFlag	include/media/openmax/OMX_Core.h	/^    OMX_EventBufferFlag,          \/**< component has detected an EOS *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventCmdComplete	include/media/openmax/OMX_Core.h	/^    OMX_EventCmdComplete,         \/**< component has sucessfully completed a command *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventComponentResumed	include/media/openmax/OMX_Core.h	/^   OMX_EventComponentResumed,     \/**< Component resumed due to reacquisition of resources *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventDynamicResourcesAvailable	include/media/openmax/OMX_Core.h	/^   OMX_EventDynamicResourcesAvailable, \/**< Component has acquired previously unavailable dynamic resources *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventError	include/media/openmax/OMX_Core.h	/^    OMX_EventError,               \/**< component has detected an error condition *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventKhronosExtensions	include/media/openmax/OMX_Core.h	/^   OMX_EventKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventMark	include/media/openmax/OMX_Core.h	/^    OMX_EventMark,                \/**< component has detected a buffer mark *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventMax	include/media/openmax/OMX_Core.h	/^   OMX_EventMax = 0x7FFFFFFF$/;"	e	enum:OMX_EVENTTYPE
OMX_EventPortFormatDetected	include/media/openmax/OMX_Core.h	/^   OMX_EventPortFormatDetected,      \/**< Component has detected a supported format. *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventPortSettingsChanged	include/media/openmax/OMX_Core.h	/^    OMX_EventPortSettingsChanged, \/**< component is reported a port settings change *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_EventResourcesAcquired	include/media/openmax/OMX_Core.h	/^    OMX_EventResourcesAcquired,   \/**< component has been granted resources and is$/;"	e	enum:OMX_EVENTTYPE
OMX_EventVendorStartUnused	include/media/openmax/OMX_Core.h	/^   OMX_EventVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_EVENTTYPE
OMX_ExposureControlAuto	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlAuto,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlBackLight	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlBackLight,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlBeach	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlBeach,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlLargeAperture	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlLargeAperture,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlNight	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlNight,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlOff	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlOff = 0,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSmallApperture	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSmallApperture,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSnow	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSnow,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSports	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSports,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlSpotLight	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlSpotLight,$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExposureControlVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_ExposureControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_EXPOSURECONTROLTYPE
OMX_ExtraDataKhronosExtensions	include/media/openmax/OMX_Core.h	/^   OMX_ExtraDataKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataMax	include/media/openmax/OMX_Core.h	/^   OMX_ExtraDataMax = 0x7FFFFFFF$/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataNone	include/media/openmax/OMX_Core.h	/^   OMX_ExtraDataNone = 0,                       \/**< Indicates that no more extra data sections follow *\/$/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataQuantization	include/media/openmax/OMX_Core.h	/^   OMX_ExtraDataQuantization,                   \/**< The data payload contains quantization data *\/$/;"	e	enum:OMX_EXTRADATATYPE
OMX_ExtraDataVendorStartUnused	include/media/openmax/OMX_Core.h	/^   OMX_ExtraDataVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_EXTRADATATYPE
OMX_FALSE	include/media/openmax/OMX_Types.h	/^    OMX_FALSE = 0,$/;"	e	enum:OMX_BOOL
OMX_FOCUSSTATUSTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_FOCUSSTATUSTYPE {$/;"	g
OMX_FOCUSSTATUSTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_FOCUSSTATUSTYPE;$/;"	t	typeref:enum:OMX_FOCUSSTATUSTYPE
OMX_FRAMESIZETYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_FRAMESIZETYPE {$/;"	s
OMX_FRAMESIZETYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_FRAMESIZETYPE;$/;"	t	typeref:struct:OMX_FRAMESIZETYPE
OMX_FillThisBuffer	include/media/openmax/OMX_Core.h	1143;"	d
OMX_FocusStatusKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusLost	include/media/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusLost,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusMax = 0x7FFFFFFF$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusOff	include/media/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusOff = 0,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusReached	include/media/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusReached,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusRequest	include/media/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusRequest,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusUnableToReach	include/media/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusUnableToReach,$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FocusStatusVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_FocusStatusVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_FOCUSSTATUSTYPE
OMX_FreeBuffer	include/media/openmax/OMX_Core.h	1081;"	d
OMX_GetComponentVersion	include/media/openmax/OMX_Core.h	701;"	d
OMX_GetConfig	include/media/openmax/OMX_Core.h	878;"	d
OMX_GetExtensionIndex	include/media/openmax/OMX_Core.h	948;"	d
OMX_GetParameter	include/media/openmax/OMX_Core.h	803;"	d
OMX_GetState	include/media/openmax/OMX_Core.h	975;"	d
OMX_HANDLETYPE	include/media/openmax/OMX_Types.h	/^typedef OMX_PTR OMX_HANDLETYPE;$/;"	t
OMX_IMAGEFILTERTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_IMAGEFILTERTYPE {$/;"	g
OMX_IMAGEFILTERTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_IMAGEFILTERTYPE;$/;"	t	typeref:enum:OMX_IMAGEFILTERTYPE
OMX_IMAGE_CODINGTYPE	include/media/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_CODINGTYPE {$/;"	g
OMX_IMAGE_CODINGTYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_CODINGTYPE;$/;"	t	typeref:enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	include/media/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE {$/;"	s
OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE;$/;"	t	typeref:struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
OMX_IMAGE_CodingAutoDetect	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingAutoDetect,  \/**< Auto detection of image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingBMP	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingBMP,         \/**< Windows Bitmap format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingEXIF	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingEXIF,        \/**< EXIF image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingGIF	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingGIF,         \/**< Graphics image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingJPEG	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingJPEG,        \/**< JPEG\/JFIF image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingJPEG2K	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingJPEG2K,      \/**< JPEG 2000 image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingKhronosExtensions	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingLZW	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingLZW,         \/**< LZW image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingMax	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingPNG	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingPNG,         \/**< PNG image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingTIFF	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingTIFF,        \/**< TIFF image format *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingUnused	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingUnused,      \/**< Value when format is N\/A *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_CodingVendorStartUnused	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CodingVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_CODINGTYPE
OMX_IMAGE_FLASHCONTROLTYPE	include/media/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_FLASHCONTROLTYPE {$/;"	g
OMX_IMAGE_FLASHCONTROLTYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_FLASHCONTROLTYPE;$/;"	t	typeref:enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FOCUSCONTROLTYPE	include/media/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_FOCUSCONTROLTYPE {$/;"	g
OMX_IMAGE_FOCUSCONTROLTYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_FOCUSCONTROLTYPE;$/;"	t	typeref:enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FlashControlAuto	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlAuto,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlFillin	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlFillin,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlKhronosExtensions	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlMax	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlOff	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlOff,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlOn	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlOn = 0,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlRedEyeReduction	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlRedEyeReduction,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlTorch	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlTorch,$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FlashControlVendorStartUnused	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FlashControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_FLASHCONTROLTYPE
OMX_IMAGE_FocusControlAuto	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlAuto,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlAutoLock	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlAutoLock,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlKhronosExtensions	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlMax	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlOff	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlOff,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlOn	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlOn = 0,$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_FocusControlVendorStartUnused	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FocusControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_FOCUSCONTROLTYPE
OMX_IMAGE_HUFFMANTABLETYPE	include/media/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_HUFFMANTABLETYPE {$/;"	g
OMX_IMAGE_HUFFMANTABLETYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_HUFFMANTABLETYPE;$/;"	t	typeref:enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableAC	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableAC = 0,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableACChroma	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableACChroma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableACLuma	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableACLuma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableDC	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableDC,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableDCChroma	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableDCChroma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableDCLuma	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableDCLuma,$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableKhronosExtensions	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableMax	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_HuffmanTableVendorStartUnused	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_HuffmanTableVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_HUFFMANTABLETYPE
OMX_IMAGE_PARAM_FLASHCONTROLTYPE	include/media/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_FLASHCONTROLTYPE {$/;"	s
OMX_IMAGE_PARAM_FLASHCONTROLTYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_FLASHCONTROLTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	include/media/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_HUFFMANTTABLETYPE {$/;"	s
OMX_IMAGE_PARAM_HUFFMANTTABLETYPE	include/media/openmax/OMX_Image.h	/^}OMX_IMAGE_PARAM_HUFFMANTTABLETYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
OMX_IMAGE_PARAM_PORTFORMATTYPE	include/media/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_PORTFORMATTYPE {$/;"	s
OMX_IMAGE_PARAM_PORTFORMATTYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_PORTFORMATTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
OMX_IMAGE_PARAM_QFACTORTYPE	include/media/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_QFACTORTYPE {$/;"	s
OMX_IMAGE_PARAM_QFACTORTYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_QFACTORTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_QFACTORTYPE
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	include/media/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE {$/;"	s
OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE;$/;"	t	typeref:struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
OMX_IMAGE_PORTDEFINITIONTYPE	include/media/openmax/OMX_Image.h	/^typedef struct OMX_IMAGE_PORTDEFINITIONTYPE {$/;"	s
OMX_IMAGE_PORTDEFINITIONTYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_IMAGE_PORTDEFINITIONTYPE
OMX_IMAGE_QUANTIZATIONTABLETYPE	include/media/openmax/OMX_Image.h	/^typedef enum OMX_IMAGE_QUANTIZATIONTABLETYPE {$/;"	g
OMX_IMAGE_QUANTIZATIONTABLETYPE	include/media/openmax/OMX_Image.h	/^} OMX_IMAGE_QUANTIZATIONTABLETYPE;$/;"	t	typeref:enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableChroma	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableChroma,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableChromaCb	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableChromaCb,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableChromaCr	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableChromaCr,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableKhronosExtensions	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableLuma	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableLuma = 0,$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableMax	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IMAGE_QuantizationTableVendorStartUnused	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_QuantizationTableVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGE_QUANTIZATIONTABLETYPE
OMX_IN	include/media/openmax/OMX_Types.h	95;"	d
OMX_INDEXEXTTYPE	include/media/openmax/OMX_IndexExt.h	/^typedef enum OMX_INDEXEXTTYPE {$/;"	g
OMX_INDEXEXTTYPE	include/media/openmax/OMX_IndexExt.h	/^} OMX_INDEXEXTTYPE;$/;"	t	typeref:enum:OMX_INDEXEXTTYPE
OMX_INDEXTYPE	include/media/openmax/OMX_Index.h	/^typedef enum OMX_INDEXTYPE {$/;"	g
OMX_INDEXTYPE	include/media/openmax/OMX_Index.h	/^} OMX_INDEXTYPE;$/;"	t	typeref:enum:OMX_INDEXTYPE
OMX_INOUT	include/media/openmax/OMX_Types.h	111;"	d
OMX_IVCommon_h	include/media/openmax/OMX_IVCommon.h	47;"	d
OMX_ImageFilterAntialias	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterAntialias,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterDeRing	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterDeRing,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterEmboss	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterEmboss,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterGpen	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterGpen,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterHatch	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterHatch,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterMax = 0x7FFFFFFF$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterNegative	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterNegative,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterNoise	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterNoise,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterNone	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterNone,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterOilPaint	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterOilPaint,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterSketch	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterSketch,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterSolarize	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterSolarize,$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_ImageFilterVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_ImageFilterVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_IMAGEFILTERTYPE
OMX_Image_h	include/media/openmax/OMX_Image.h	46;"	d
OMX_IndexAudioStartUnused	include/media/openmax/OMX_Index.h	/^    OMX_IndexAudioStartUnused = 0x04000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexAutoPauseAfterCapture	include/media/openmax/OMX_Index.h	/^    OMX_IndexAutoPauseAfterCapture,         \/**< reference: OMX_CONFIG_BOOLEANTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexCommonStartUnused	include/media/openmax/OMX_Index.h	/^    OMX_IndexCommonStartUnused = 0x07000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexComponentStartUnused	include/media/openmax/OMX_Index.h	/^    OMX_IndexComponentStartUnused = 0x01000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioBalance	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioBalance,            \/**< reference: OMX_AUDIO_CONFIG_BALANCETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioBass	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioBass,               \/**< reference: OMX_AUDIO_CONFIG_BASSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioChannelMute	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioChannelMute,        \/**< reference: OMX_AUDIO_CONFIG_CHANNELMUTETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioChannelVolume	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioChannelVolume,      \/**< reference: OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioChorus	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioChorus,             \/**< reference: OMX_AUDIO_CONFIG_CHORUSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioEchoCancelation	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioEchoCancelation,    \/**< reference: OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioEqualizer	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioEqualizer,          \/**< reference: OMX_AUDIO_CONFIG_EQUALIZERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioLoudness	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioLoudness,           \/**< reference: OMX_AUDIO_CONFIG_LOUDNESSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiControl	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiControl,        \/**< reference: OMX_AUDIO_CONFIG_MIDICONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiImmediateEvent	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiImmediateEvent, \/**< reference: OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiMetaEvent	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiMetaEvent,      \/**< reference: OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiMetaEventData	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiMetaEventData,  \/**< reference: OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiSoundBankProgram	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiSoundBankProgram, \/**< reference: OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMidiStatus	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMidiStatus,         \/**< reference: OMX_AUDIO_CONFIG_MIDISTATUSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioMute	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioMute,               \/**< reference: OMX_AUDIO_CONFIG_MUTETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioNoiseReduction	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioNoiseReduction,     \/**< reference: OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioReverberation	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioReverberation,      \/**< reference: OMX_AUDIO_CONFIG_REVERBERATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioStereoWidening	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioStereoWidening,     \/**< reference: OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioTreble	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioTreble,             \/**< reference: OMX_AUDIO_CONFIG_TREBLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAudioVolume	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigAudioVolume,             \/**< reference: OMX_AUDIO_CONFIG_VOLUMETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigAutoFramerateConversion	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexConfigAutoFramerateConversion,         \/**< reference: OMX_CONFIG_BOOLEANTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexConfigCallbackRequest	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexConfigCallbackRequest,                 \/**< reference: OMX_CONFIG_CALLBACKREQUESTTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexConfigCaptureMode	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCaptureMode,             \/**< reference: OMX_CONFIG_CAPTUREMODETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCapturing	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCapturing,               \/**< reference: OMX_CONFIG_BOOLEANTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommit	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexConfigCommit,                          \/**< reference: OMX_CONFIG_COMMITTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexConfigCommitMode	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexConfigCommitMode,                      \/**< reference: OMX_CONFIG_COMMITMODETYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexConfigCommonBacklight	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonBacklight,         \/**< reference: OMX_CONFIG_BACKLIGHTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonBrightness	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonBrightness,        \/**< reference: OMX_CONFIG_BRIGHTNESSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorBlend	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorBlend,        \/**< reference: OMX_CONFIG_COLORBLENDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorEnhancement	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorEnhancement,  \/**< reference: OMX_CONFIG_COLORENHANCEMENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorFormatConversion	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorFormatConversion, \/**< reference: OMX_CONFIG_COLORCONVERSIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonColorKey	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonColorKey,          \/**< reference: OMX_CONFIG_COLORKEYTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonContrast	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonContrast,          \/**< reference: OMX_CONFIG_CONTRASTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonDigitalZoom	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonDigitalZoom,       \/**< reference: OMX_CONFIG_SCALEFACTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonDithering	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonDithering,         \/**< reference: OMX_CONFIG_DITHERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonExclusionRect	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonExclusionRect,     \/**< reference: OMX_CONFIG_RECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonExposure	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonExposure,          \/**< reference: OMX_CONFIG_EXPOSURECONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonExposureValue	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonExposureValue,     \/**< reference: OMX_CONFIG_EXPOSUREVALUETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonFocusRegion	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonFocusRegion,       \/**< reference: OMX_CONFIG_FOCUSREGIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonFocusStatus	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonFocusStatus,       \/**< reference: OMX_PARAM_FOCUSSTATUSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonFrameStabilisation	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonFrameStabilisation,\/**< reference: OMX_CONFIG_FRAMESTABTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonGamma	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonGamma,             \/**< reference: OMX_CONFIG_GAMMATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonImageFilter	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonImageFilter,       \/**< reference: OMX_CONFIG_IMAGEFILTERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonInputCrop	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonInputCrop,         \/**< reference: OMX_CONFIG_RECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonLightness	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonLightness,         \/**< reference: OMX_CONFIG_LIGHTNESSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonMirror	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonMirror,            \/**< reference: OMX_CONFIG_MIRRORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOpticalZoom	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOpticalZoom,       \/**< reference: OMX_CONFIG_SCALEFACTORTYPE*\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOutputCrop	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOutputCrop,        \/**< reference: OMX_CONFIG_RECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOutputPosition	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOutputPosition,    \/**< reference: OMX_CONFIG_POINTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonOutputSize	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonOutputSize,        \/**< reference: OMX_FRAMESIZETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonPlaneBlend	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonPlaneBlend,        \/**< reference: OMX_CONFIG_PLANEBLENDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonRotate	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonRotate,            \/**< reference: OMX_CONFIG_ROTATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonSaturation	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonSaturation,        \/**< reference: OMX_CONFIG_SATURATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonScale	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonScale,             \/**< reference: OMX_CONFIG_SCALEFACTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonTransitionEffect	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonTransitionEffect,  \/**< reference: OMX_CONFIG_TRANSITIONEFFECTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCommonWhiteBalance	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCommonWhiteBalance,      \/**< reference: OMX_CONFIG_WHITEBALCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigContainerNodeCount	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigContainerNodeCount,      \/**< reference: OMX_CONFIG_CONTAINERNODECOUNTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigCounterNodeID	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigCounterNodeID,           \/**< reference: OMX_CONFIG_CONTAINERNODEIDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigFlashControl	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigFlashControl,            \/**< reference: OMX_IMAGE_PARAM_FLASHCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigFocusControl	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigFocusControl,            \/**< reference: OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigMetadataItem	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigMetadataItem,            \/**< reference: OMX_CONFIG_METADATAITEMTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigMetadataItemCount	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigMetadataItemCount,       \/**< reference: OMX_CONFIG_METADATAITEMCOUNTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigOtherPower	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigOtherPower,              \/**< reference: OMX_OTHER_CONFIG_POWERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigOtherStats	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigOtherStats,              \/**< reference: OMX_OTHER_CONFIG_STATSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigPriorityMgmt	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigPriorityMgmt,            \/**< reference: OMX_PRIORITYMGMTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeActiveRefClock	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeActiveRefClock,      \/**< reference: OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeClientStartTime	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeClientStartTime,     \/**<reference:  OMX_TIME_CONFIG_TIMESTAMPTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeClockState	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeClockState,          \/**< reference: OMX_TIME_CONFIG_CLOCKSTATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentAudioReference	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentAudioReference, \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentMediaTime	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentMediaTime,    \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (read only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentVideoReference	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentVideoReference, \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeCurrentWallTime	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeCurrentWallTime,     \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE (read only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeMediaTimeRequest	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeMediaTimeRequest,    \/**< reference: OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE (write only) *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimePosition	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimePosition,            \/**< reference: OMX_TIME_CONFIG_TIMESTAMPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeScale	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeScale,               \/**< reference: OMX_TIME_CONFIG_SCALETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigTimeSeekMode	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigTimeSeekMode,            \/**< reference: OMX_TIME_CONFIG_SEEKMODETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoAVCIntraPeriod	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoAVCIntraPeriod,     \/**< reference: OMX_VIDEO_CONFIG_AVCINTRAPERIOD *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoBitrate	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoBitrate,            \/**< reference: OMX_VIDEO_CONFIG_BITRATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoFramerate	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoFramerate,          \/**< reference: OMX_CONFIG_FRAMERATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoIntraMBRefresh	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoIntraMBRefresh,     \/**< reference: OMX_CONFIG_MACROBLOCKERRORMAPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoIntraVOPRefresh	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoIntraVOPRefresh,    \/**< reference: OMX_CONFIG_INTRAREFRESHVOPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoMBErrorReporting	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoMBErrorReporting,   \/**< reference: OMX_CONFIG_MBERRORREPORTINGTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoMacroBlockErrorMap	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoMacroBlockErrorMap, \/**< reference: OMX_CONFIG_MACROBLOCKERRORMAPTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoNalSize	include/media/openmax/OMX_Index.h	/^    OMX_IndexConfigVideoNalSize,            \/**< reference: OMX_VIDEO_CONFIG_NALSIZE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexConfigVideoVp8ReferenceFrame	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexConfigVideoVp8ReferenceFrame,          \/**< reference: OMX_VIDEO_VP8REFERENCEFRAMETYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexConfigVideoVp8ReferenceFrameType	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexConfigVideoVp8ReferenceFrameType,      \/**< reference: OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtAudioStartUnused	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexExtAudioStartUnused = OMX_IndexKhronosExtensions + 0x00400000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtCommonStartUnused	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexExtCommonStartUnused = OMX_IndexKhronosExtensions + 0x00700000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtComponentStartUnused	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexExtComponentStartUnused = OMX_IndexKhronosExtensions + 0x00100000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtImageStartUnused	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexExtImageStartUnused = OMX_IndexKhronosExtensions + 0x00500000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtMax	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexExtMax = 0x7FFFFFFF$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtOtherStartUnused	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexExtOtherStartUnused = OMX_IndexKhronosExtensions + 0x00800000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtPortStartUnused	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexExtPortStartUnused = OMX_IndexKhronosExtensions + 0x00200000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtTimeStartUnused	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexExtTimeStartUnused = OMX_IndexKhronosExtensions + 0x00900000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExtVideoStartUnused	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexExtVideoStartUnused = OMX_IndexKhronosExtensions + 0x00600000,$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexExt_h	include/media/openmax/OMX_IndexExt.h	30;"	d
OMX_IndexImageStartUnused	include/media/openmax/OMX_Index.h	/^    OMX_IndexImageStartUnused = 0x05000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexKhronosExtensions	include/media/openmax/OMX_Index.h	/^    OMX_IndexKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexMax	include/media/openmax/OMX_Index.h	/^    OMX_IndexMax = 0x7FFFFFFF$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexOtherStartUnused	include/media/openmax/OMX_Index.h	/^    OMX_IndexOtherStartUnused = 0x08000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamActiveStream	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamActiveStream,             \/**< reference: OMX_PARAM_U32TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioAac	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioAac,                 \/**< reference: OMX_AUDIO_PARAM_AACPROFILETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioAdpcm	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioAdpcm,               \/**< reference: OMX_AUDIO_PARAM_ADPCMTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioAmr	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioAmr,                 \/**< reference: OMX_AUDIO_PARAM_AMRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioAndroidAacPresentation	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamAudioAndroidAacPresentation,      \/**< reference: OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamAudioAndroidAc3	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamAudioAndroidAc3,                  \/**< reference: OMX_AUDIO_PARAM_ANDROID_AC3TYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamAudioAndroidEac3	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamAudioAndroidEac3,                 \/**< reference: OMX_AUDIO_PARAM_ANDROID_EAC3TYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamAudioAndroidOpus	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamAudioAndroidOpus,                 \/**< reference: OMX_AUDIO_PARAM_ANDROID_OPUSTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamAudioEvrc	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioEvrc,                \/**< reference: OMX_AUDIO_PARAM_EVRCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioFlac	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioFlac,                \/**< reference: OMX_AUDIO_PARAM_FLACTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioG723	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioG723,                \/**< reference: OMX_AUDIO_PARAM_G723TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioG726	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioG726,                \/**< reference: OMX_AUDIO_PARAM_G726TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioG729	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioG729,                \/**< reference: OMX_AUDIO_PARAM_G729TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioGsm_EFR	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioGsm_EFR,             \/**< reference: OMX_AUDIO_PARAM_GSMEFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioGsm_FR	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioGsm_FR,              \/**< reference: OMX_AUDIO_PARAM_GSMFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioGsm_HR	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioGsm_HR,              \/**< reference: OMX_AUDIO_PARAM_GSMHRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioInit	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioMidi	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioMidi,                \/**< reference: OMX_AUDIO_PARAM_MIDITYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioMidiLoadUserSound	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioMidiLoadUserSound,   \/**< reference: OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioMp3	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioMp3,                 \/**< reference: OMX_AUDIO_PARAM_MP3TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPcm	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPcm,                 \/**< reference: OMX_AUDIO_PARAM_PCMMODETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPdc_EFR	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPdc_EFR,             \/**< reference: OMX_AUDIO_PARAM_PDCEFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPdc_FR	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPdc_FR,              \/**< reference: OMX_AUDIO_PARAM_PDCFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPdc_HR	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPdc_HR,              \/**< reference: OMX_AUDIO_PARAM_PDCHRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioPortFormat	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioPortFormat,          \/**< reference: OMX_AUDIO_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioQcelp13	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioQcelp13,             \/**< reference: OMX_AUDIO_PARAM_QCELP13TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioQcelp8	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioQcelp8,              \/**< reference: OMX_AUDIO_PARAM_QCELP8TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioRa	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioRa,                  \/**< reference: OMX_AUDIO_PARAM_RATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioSbc	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioSbc,                 \/**< reference: OMX_AUDIO_PARAM_SBCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioSmv	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioSmv,                 \/**< reference: OMX_AUDIO_PARAM_SMVTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioTdma_EFR	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioTdma_EFR,            \/**< reference: OMX_AUDIO_PARAM_TDMAEFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioTdma_FR	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioTdma_FR,             \/**< reference: OMX_AUDIO_PARAM_TDMAFRTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioVorbis	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioVorbis,              \/**< reference: OMX_AUDIO_PARAM_VORBISTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamAudioWma	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamAudioWma,                 \/**< reference: OMX_AUDIO_PARAM_WMATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonDeblocking	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamCommonDeblocking,         \/**< reference: OMX_PARAM_DEBLOCKINGTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonExtraQuantData	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamCommonExtraQuantData,     \/**< reference: OMX_OTHER_EXTRADATATYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonInterleave	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamCommonInterleave,         \/**< reference: OMX_PARAM_INTERLEAVETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCommonSensorMode	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamCommonSensorMode,         \/**< reference: OMX_PARAM_SENSORMODETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCompBufferSupplier	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamCompBufferSupplier,       \/**< reference: OMX_PARAM_BUFFERSUPPLIERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamComponentSuspended	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamComponentSuspended,       \/**< reference: OMX_PARAM_SUSPENSIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamContentURI	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamContentURI,               \/**< reference: OMX_PARAM_CONTENTURITYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamCustomContentPipe	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamCustomContentPipe,        \/**< reference: OMX_PARAM_CONTENTPIPETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamDisableResourceConcealment	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamDisableResourceConcealment, \/**< reference: OMX_RESOURCECONCEALMENTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamFlashControl	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamFlashControl,             \/**< reference: OMX_IMAGE_PARAM_FLASHCONTROLTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamHuffmanTable	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamHuffmanTable,             \/**< reference: OMX_IMAGE_PARAM_HUFFMANTTABLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamImageInit	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamImageInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamImagePortFormat	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamImagePortFormat,          \/**< reference: OMX_IMAGE_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamMetadataFilterType	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamMetadataFilterType,       \/**< reference: OMX_PARAM_METADATAFILTERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamMetadataKeyFilter	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamMetadataKeyFilter,        \/**< reference: OMX_PARAM_METADATAFILTERTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamNalStreamFormat	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamNalStreamFormat,                  \/**< reference: OMX_NALSTREAMFORMATTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamNalStreamFormatSelect	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamNalStreamFormatSelect,            \/**< reference: OMX_NALSTREAMFORMATTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamNalStreamFormatSupported	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamNalStreamFormatSupported,         \/**< reference: OMX_NALSTREAMFORMATTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamNumAvailableStreams	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamNumAvailableStreams,      \/**< reference: OMX_PARAM_U32TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamOtherInit	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamOtherInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamOtherPortFormat	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamOtherPortFormat,          \/**< reference: OMX_OTHER_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamPortDefinition	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamPortDefinition,           \/**< reference: OMX_PARAM_PORTDEFINITIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamPriorityMgmt	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamPriorityMgmt,             \/**< reference: OMX_PRIORITYMGMTTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamQFactor	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamQFactor,                  \/**< reference: OMX_IMAGE_PARAM_QFACTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamQuantizationTable	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamQuantizationTable,        \/**< reference: OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamSliceSegments	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamSliceSegments,                    \/**< reference: OMX_VIDEO_SLICESEGMENTSTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamStandardComponentRole	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamStandardComponentRole,    \/**< reference: OMX_PARAM_COMPONENTROLETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamSuspensionPolicy	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamSuspensionPolicy,         \/**< reference: OMX_PARAM_SUSPENSIONPOLICYTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoAndroidVp8Encoder	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamVideoAndroidVp8Encoder,           \/**< reference: OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamVideoAvc	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoAvc,                 \/**< reference: OMX_VIDEO_PARAM_AVCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoBitrate	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoBitrate,             \/**< reference: OMX_VIDEO_PARAM_BITRATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoErrorCorrection	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoErrorCorrection,     \/**< reference: OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoFastUpdate	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoFastUpdate,          \/**< reference: OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoH263	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoH263,                \/**< reference: OMX_VIDEO_PARAM_H263TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoHevc	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamVideoHevc,                        \/**< reference: OMX_VIDEO_PARAM_HEVCTYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamVideoInit	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoInit,                \/**< reference: OMX_PORT_PARAM_TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoIntraRefresh	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoIntraRefresh,        \/**< reference: OMX_VIDEO_PARAM_INTRAREFRESHTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMacroblocksPerFrame	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMacroblocksPerFrame, \/**< reference: OMX_PARAM_MACROBLOCKSTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMotionVector	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMotionVector,        \/**< reference: OMX_VIDEO_PARAM_MOTIONVECTORTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMpeg2	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMpeg2,               \/**< reference: OMX_VIDEO_PARAM_MPEG2TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoMpeg4	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoMpeg4,               \/**< reference: OMX_VIDEO_PARAM_MPEG4TYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoPortFormat	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoPortFormat,          \/**< reference: OMX_VIDEO_PARAM_PORTFORMATTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoProfileLevelCurrent	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoProfileLevelCurrent, \/**< reference: OMX_VIDEO_PARAM_PROFILELEVELTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoProfileLevelQuerySupported	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoProfileLevelQuerySupported, \/**< reference: OMX_VIDEO_PARAM_PROFILELEVELTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoQuantization	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoQuantization,        \/**< reference: OMX_VIDEO_PARAM_QUANTIZATIONTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoRv	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoRv,                  \/**< reference: OMX_VIDEO_PARAM_RVTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoSliceFMO	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoSliceFMO,            \/**< reference: OMX_VIDEO_PARAM_AVCSLICEFMO *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoVBSMC	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoVBSMC,               \/**< reference: OMX_VIDEO_PARAM_VBSMCTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexParamVideoVp8	include/media/openmax/OMX_IndexExt.h	/^    OMX_IndexParamVideoVp8,                         \/**< reference: OMX_VIDEO_PARAM_VP8TYPE *\/$/;"	e	enum:OMX_INDEXEXTTYPE
OMX_IndexParamVideoWmv	include/media/openmax/OMX_Index.h	/^    OMX_IndexParamVideoWmv,                 \/**< reference: OMX_VIDEO_PARAM_WMVTYPE *\/$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexPortStartUnused	include/media/openmax/OMX_Index.h	/^    OMX_IndexPortStartUnused = 0x02000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexReservedStartUnused	include/media/openmax/OMX_Index.h	/^    OMX_IndexReservedStartUnused = 0x03000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexTimeStartUnused	include/media/openmax/OMX_Index.h	/^    OMX_IndexTimeStartUnused = 0x09000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexVendorStartUnused	include/media/openmax/OMX_Index.h	/^    OMX_IndexVendorStartUnused = 0x7F000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_IndexVideoStartUnused	include/media/openmax/OMX_Index.h	/^    OMX_IndexVideoStartUnused = 0x06000000,$/;"	e	enum:OMX_INDEXTYPE
OMX_Index_h	include/media/openmax/OMX_Index.h	48;"	d
OMX_MARKTYPE	include/media/openmax/OMX_Types.h	/^typedef struct OMX_MARKTYPE$/;"	s
OMX_MARKTYPE	include/media/openmax/OMX_Types.h	/^} OMX_MARKTYPE;$/;"	t	typeref:struct:OMX_MARKTYPE
OMX_MAX_STRINGNAME_SIZE	include/media/openmax/OMX_Core.h	298;"	d
OMX_METADATACHARSETTYPE	include/media/openmax/OMX_Component.h	/^typedef enum OMX_METADATACHARSETTYPE {$/;"	g
OMX_METADATACHARSETTYPE	include/media/openmax/OMX_Component.h	/^} OMX_METADATACHARSETTYPE;$/;"	t	typeref:enum:OMX_METADATACHARSETTYPE
OMX_METADATASCOPETYPE	include/media/openmax/OMX_Component.h	/^typedef enum OMX_METADATASCOPETYPE$/;"	g
OMX_METADATASCOPETYPE	include/media/openmax/OMX_Component.h	/^} OMX_METADATASCOPETYPE;$/;"	t	typeref:enum:OMX_METADATASCOPETYPE
OMX_METADATASEARCHMODETYPE	include/media/openmax/OMX_Component.h	/^typedef enum OMX_METADATASEARCHMODETYPE$/;"	g
OMX_METADATASEARCHMODETYPE	include/media/openmax/OMX_Component.h	/^} OMX_METADATASEARCHMODETYPE;$/;"	t	typeref:enum:OMX_METADATASEARCHMODETYPE
OMX_METERINGTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_METERINGTYPE {$/;"	g
OMX_METERINGTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_METERINGTYPE;$/;"	t	typeref:enum:OMX_METERINGTYPE
OMX_MIN_PCMPAYLOAD_MSEC	include/media/openmax/OMX_Audio.h	195;"	d
OMX_MIRRORTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_MIRRORTYPE {$/;"	g
OMX_MIRRORTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_MIRRORTYPE;$/;"	t	typeref:enum:OMX_MIRRORTYPE
OMX_MetadataCharsetASCII	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetASCII,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetBig5	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetBig5,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetBinary	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetBinary,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetCodePage1252	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetCodePage1252,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGB12345	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGB12345,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGB18030	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGB18030,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGB2312	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGB2312,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetGBK	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetGBK,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetHZGB2312	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetHZGB2312,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO2022JP	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO2022JP,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO2022JP1	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO2022JP1,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88591	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88591,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885910	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885910,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885913	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885913,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885914	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885914,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO885915	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO885915,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88592	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88592,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88593	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88593,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88594	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88594,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88595	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88595,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88596	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88596,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88597	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88597,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88598	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88598,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISO88599	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISO88599,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetISOEUCJP	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetISOEUCJP,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetImapUTF7	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetImapUTF7,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetJavaConformantUTF8	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetJavaConformantUTF8,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetKhronosExtensions	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetSMS7Bit	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetSMS7Bit,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetShiftJIS	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetShiftJIS,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetTypeMax	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetTypeMax= 0x7FFFFFFF$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF16BE	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF16BE,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF16LE	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF16LE,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF7	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF7,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUTF8	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUTF8,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetUnknown	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetUnknown = 0,$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataCharsetVendorStartUnused	include/media/openmax/OMX_Component.h	/^    OMX_MetadataCharsetVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METADATACHARSETTYPE
OMX_MetadataScopeAllLevels	include/media/openmax/OMX_Component.h	/^    OMX_MetadataScopeAllLevels,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeKhronosExtensions	include/media/openmax/OMX_Component.h	/^    OMX_MetadataScopeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeNodeLevel	include/media/openmax/OMX_Component.h	/^    OMX_MetadataScopeNodeLevel,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopePortLevel	include/media/openmax/OMX_Component.h	/^    OMX_MetadataScopePortLevel,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeTopLevel	include/media/openmax/OMX_Component.h	/^    OMX_MetadataScopeTopLevel,$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeTypeMax	include/media/openmax/OMX_Component.h	/^    OMX_MetadataScopeTypeMax = 0x7fffffff$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataScopeVendorStartUnused	include/media/openmax/OMX_Component.h	/^    OMX_MetadataScopeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METADATASCOPETYPE
OMX_MetadataSearchItemByIndex	include/media/openmax/OMX_Component.h	/^    OMX_MetadataSearchItemByIndex,$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchKhronosExtensions	include/media/openmax/OMX_Component.h	/^    OMX_MetadataSearchKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchNextItemByKey	include/media/openmax/OMX_Component.h	/^    OMX_MetadataSearchNextItemByKey,$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchTypeMax	include/media/openmax/OMX_Component.h	/^    OMX_MetadataSearchTypeMax = 0x7fffffff$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchValueSizeByIndex	include/media/openmax/OMX_Component.h	/^    OMX_MetadataSearchValueSizeByIndex,$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MetadataSearchVendorStartUnused	include/media/openmax/OMX_Component.h	/^    OMX_MetadataSearchVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METADATASEARCHMODETYPE
OMX_MeteringKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_MeteringKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringModeAverage	include/media/openmax/OMX_IVCommon.h	/^    OMX_MeteringModeAverage,     \/**< Center-weighted average metering. *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringModeMatrix	include/media/openmax/OMX_IVCommon.h	/^    OMX_MeteringModeMatrix,      \/**< Matrix or evaluative metering. *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringModeSpot	include/media/openmax/OMX_IVCommon.h	/^    OMX_MeteringModeSpot,        \/**< Spot (partial) metering. *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MeteringVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_MeteringVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_METERINGTYPE
OMX_MirrorBoth	include/media/openmax/OMX_IVCommon.h	/^    OMX_MirrorBoth,$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorHorizontal	include/media/openmax/OMX_IVCommon.h	/^    OMX_MirrorHorizontal,$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_MirrorKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_MirrorMax = 0x7FFFFFFF$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorNone	include/media/openmax/OMX_IVCommon.h	/^    OMX_MirrorNone = 0,$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_MirrorVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_MIRRORTYPE
OMX_MirrorVertical	include/media/openmax/OMX_IVCommon.h	/^    OMX_MirrorVertical,$/;"	e	enum:OMX_MIRRORTYPE
OMX_NALSTREAMFORMATTYPE	include/media/openmax/OMX_VideoExt.h	/^typedef struct OMX_NALSTREAMFORMATTYPE{$/;"	s
OMX_NALSTREAMFORMATTYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_NALSTREAMFORMATTYPE;$/;"	t	typeref:struct:OMX_NALSTREAMFORMATTYPE
OMX_NALUFORMATSTYPE	include/media/openmax/OMX_VideoExt.h	/^typedef enum OMX_NALUFORMATSTYPE {$/;"	g
OMX_NALUFORMATSTYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_NALUFORMATSTYPE;$/;"	t	typeref:enum:OMX_NALUFORMATSTYPE
OMX_NATIVE_DEVICETYPE	include/media/openmax/OMX_Types.h	/^typedef OMX_PTR OMX_NATIVE_DEVICETYPE;$/;"	t
OMX_NATIVE_WINDOWTYPE	include/media/openmax/OMX_Types.h	/^typedef OMX_PTR OMX_NATIVE_WINDOWTYPE;$/;"	t
OMX_NUMERICALDATATYPE	include/media/openmax/OMX_Types.h	/^typedef enum OMX_NUMERICALDATATYPE$/;"	g
OMX_NUMERICALDATATYPE	include/media/openmax/OMX_Types.h	/^} OMX_NUMERICALDATATYPE;$/;"	t	typeref:enum:OMX_NUMERICALDATATYPE
OMX_NaluFormatCodingMax	include/media/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatCodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NaluFormatFourByteInterleaveLength	include/media/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatFourByteInterleaveLength = 16,$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NaluFormatOneByteInterleaveLength	include/media/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatOneByteInterleaveLength = 4,$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NaluFormatOneNaluPerBuffer	include/media/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatOneNaluPerBuffer = 2,$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NaluFormatStartCodes	include/media/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatStartCodes = 1,$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NaluFormatTwoByteInterleaveLength	include/media/openmax/OMX_VideoExt.h	/^    OMX_NaluFormatTwoByteInterleaveLength = 8,$/;"	e	enum:OMX_NALUFORMATSTYPE
OMX_NotSuspended	include/media/openmax/OMX_Component.h	/^    OMX_NotSuspended, \/**< component is not suspended *\/$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_NumercialDataMax	include/media/openmax/OMX_Types.h	/^    OMX_NumercialDataMax = 0x7FFFFFFF$/;"	e	enum:OMX_NUMERICALDATATYPE
OMX_NumericalDataSigned	include/media/openmax/OMX_Types.h	/^    OMX_NumericalDataSigned, \/**< signed data *\/$/;"	e	enum:OMX_NUMERICALDATATYPE
OMX_NumericalDataUnsigned	include/media/openmax/OMX_Types.h	/^    OMX_NumericalDataUnsigned, \/**< unsigned data *\/$/;"	e	enum:OMX_NUMERICALDATATYPE
OMX_OTHER_CONFIG_POWERTYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_CONFIG_POWERTYPE {$/;"	s
OMX_OTHER_CONFIG_POWERTYPE	include/media/openmax/OMX_Other.h	/^} OMX_OTHER_CONFIG_POWERTYPE;$/;"	t	typeref:struct:OMX_OTHER_CONFIG_POWERTYPE
OMX_OTHER_CONFIG_STATSTYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_CONFIG_STATSTYPE {$/;"	s
OMX_OTHER_CONFIG_STATSTYPE	include/media/openmax/OMX_Other.h	/^} OMX_OTHER_CONFIG_STATSTYPE;$/;"	t	typeref:struct:OMX_OTHER_CONFIG_STATSTYPE
OMX_OTHER_EXTRADATATYPE	include/media/openmax/OMX_Core.h	/^typedef struct OMX_OTHER_EXTRADATATYPE  {$/;"	s
OMX_OTHER_EXTRADATATYPE	include/media/openmax/OMX_Core.h	/^} OMX_OTHER_EXTRADATATYPE;$/;"	t	typeref:struct:OMX_OTHER_EXTRADATATYPE
OMX_OTHER_FORMATTYPE	include/media/openmax/OMX_Other.h	/^typedef enum OMX_OTHER_FORMATTYPE {$/;"	g
OMX_OTHER_FORMATTYPE	include/media/openmax/OMX_Other.h	/^} OMX_OTHER_FORMATTYPE;$/;"	t	typeref:enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatBinary	include/media/openmax/OMX_Other.h	/^    OMX_OTHER_FormatBinary,   \/**< Arbitrary binary data *\/$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatKhronosExtensions	include/media/openmax/OMX_Other.h	/^    OMX_OTHER_FormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatMax	include/media/openmax/OMX_Other.h	/^    OMX_OTHER_FormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatPower	include/media/openmax/OMX_Other.h	/^    OMX_OTHER_FormatPower,    \/**< Perhaps used for enabling\/disabling power$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatStats	include/media/openmax/OMX_Other.h	/^    OMX_OTHER_FormatStats,    \/**< Could be things such as frame rate, frames$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatTime	include/media/openmax/OMX_Other.h	/^    OMX_OTHER_FormatTime = 0, \/**< Transmission of various timestamps, elapsed time,$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatVendorReserved	include/media/openmax/OMX_Other.h	/^    OMX_OTHER_FormatVendorReserved = 1000, \/**< Starting value for vendor specific$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_FormatVendorStartUnused	include/media/openmax/OMX_Other.h	/^    OMX_OTHER_FormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_OTHER_FORMATTYPE
OMX_OTHER_PARAM_PORTFORMATTYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_PARAM_PORTFORMATTYPE {$/;"	s
OMX_OTHER_PARAM_PORTFORMATTYPE	include/media/openmax/OMX_Other.h	/^} OMX_OTHER_PARAM_PORTFORMATTYPE;$/;"	t	typeref:struct:OMX_OTHER_PARAM_PORTFORMATTYPE
OMX_OTHER_PORTDEFINITIONTYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_OTHER_PORTDEFINITIONTYPE {$/;"	s
OMX_OTHER_PORTDEFINITIONTYPE	include/media/openmax/OMX_Other.h	/^} OMX_OTHER_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_OTHER_PORTDEFINITIONTYPE
OMX_OUT	include/media/openmax/OMX_Types.h	102;"	d
OMX_Other_h	include/media/openmax/OMX_Other.h	47;"	d
OMX_PARAM_BUFFERSUPPLIERTYPE	include/media/openmax/OMX_Core.h	/^typedef struct OMX_PARAM_BUFFERSUPPLIERTYPE {$/;"	s
OMX_PARAM_BUFFERSUPPLIERTYPE	include/media/openmax/OMX_Core.h	/^} OMX_PARAM_BUFFERSUPPLIERTYPE;$/;"	t	typeref:struct:OMX_PARAM_BUFFERSUPPLIERTYPE
OMX_PARAM_COMPONENTROLETYPE	include/media/openmax/OMX_Core.h	/^typedef struct OMX_PARAM_COMPONENTROLETYPE {$/;"	s
OMX_PARAM_COMPONENTROLETYPE	include/media/openmax/OMX_Core.h	/^} OMX_PARAM_COMPONENTROLETYPE;$/;"	t	typeref:struct:OMX_PARAM_COMPONENTROLETYPE
OMX_PARAM_CONTENTPIPETYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_CONTENTPIPETYPE$/;"	s
OMX_PARAM_CONTENTPIPETYPE	include/media/openmax/OMX_Component.h	/^} OMX_PARAM_CONTENTPIPETYPE;$/;"	t	typeref:struct:OMX_PARAM_CONTENTPIPETYPE
OMX_PARAM_CONTENTURITYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_CONTENTURITYPE$/;"	s
OMX_PARAM_CONTENTURITYPE	include/media/openmax/OMX_Component.h	/^} OMX_PARAM_CONTENTURITYPE;$/;"	t	typeref:struct:OMX_PARAM_CONTENTURITYPE
OMX_PARAM_DATAUNITTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_DATAUNITTYPE {$/;"	s
OMX_PARAM_DATAUNITTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_PARAM_DATAUNITTYPE;$/;"	t	typeref:struct:OMX_PARAM_DATAUNITTYPE
OMX_PARAM_DEBLOCKINGTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_DEBLOCKINGTYPE {$/;"	s
OMX_PARAM_DEBLOCKINGTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_PARAM_DEBLOCKINGTYPE;$/;"	t	typeref:struct:OMX_PARAM_DEBLOCKINGTYPE
OMX_PARAM_FOCUSSTATUSTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_FOCUSSTATUSTYPE {$/;"	s
OMX_PARAM_FOCUSSTATUSTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_PARAM_FOCUSSTATUSTYPE;$/;"	t	typeref:struct:OMX_PARAM_FOCUSSTATUSTYPE
OMX_PARAM_INTERLEAVETYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_INTERLEAVETYPE {$/;"	s
OMX_PARAM_INTERLEAVETYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_PARAM_INTERLEAVETYPE;$/;"	t	typeref:struct:OMX_PARAM_INTERLEAVETYPE
OMX_PARAM_MACROBLOCKSTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_PARAM_MACROBLOCKSTYPE {$/;"	s
OMX_PARAM_MACROBLOCKSTYPE	include/media/openmax/OMX_Video.h	/^} OMX_PARAM_MACROBLOCKSTYPE;$/;"	t	typeref:struct:OMX_PARAM_MACROBLOCKSTYPE
OMX_PARAM_METADATAFILTERTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_METADATAFILTERTYPE$/;"	s
OMX_PARAM_METADATAFILTERTYPE	include/media/openmax/OMX_Component.h	/^} OMX_PARAM_METADATAFILTERTYPE;$/;"	t	typeref:struct:OMX_PARAM_METADATAFILTERTYPE
OMX_PARAM_PORTDEFINITIONTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_PORTDEFINITIONTYPE {$/;"	s
OMX_PARAM_PORTDEFINITIONTYPE	include/media/openmax/OMX_Component.h	/^} OMX_PARAM_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_PARAM_PORTDEFINITIONTYPE
OMX_PARAM_SENSORMODETYPE	include/media/openmax/OMX_IVCommon.h	/^typedef struct OMX_PARAM_SENSORMODETYPE {$/;"	s
OMX_PARAM_SENSORMODETYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_PARAM_SENSORMODETYPE;$/;"	t	typeref:struct:OMX_PARAM_SENSORMODETYPE
OMX_PARAM_SUSPENSIONPOLICYTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_SUSPENSIONPOLICYTYPE {$/;"	s
OMX_PARAM_SUSPENSIONPOLICYTYPE	include/media/openmax/OMX_Component.h	/^} OMX_PARAM_SUSPENSIONPOLICYTYPE;$/;"	t	typeref:struct:OMX_PARAM_SUSPENSIONPOLICYTYPE
OMX_PARAM_SUSPENSIONTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_SUSPENSIONTYPE {$/;"	s
OMX_PARAM_SUSPENSIONTYPE	include/media/openmax/OMX_Component.h	/^} OMX_PARAM_SUSPENSIONTYPE ;$/;"	t	typeref:struct:OMX_PARAM_SUSPENSIONTYPE
OMX_PARAM_U32TYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_PARAM_U32TYPE {$/;"	s
OMX_PARAM_U32TYPE	include/media/openmax/OMX_Component.h	/^} OMX_PARAM_U32TYPE;$/;"	t	typeref:struct:OMX_PARAM_U32TYPE
OMX_PLUGIN_BASE_H_	include/media/hardware/OMXPluginBase.h	19;"	d
OMX_PORTDOMAINTYPE	include/media/openmax/OMX_Component.h	/^typedef enum OMX_PORTDOMAINTYPE {$/;"	g
OMX_PORTDOMAINTYPE	include/media/openmax/OMX_Component.h	/^} OMX_PORTDOMAINTYPE;$/;"	t	typeref:enum:OMX_PORTDOMAINTYPE
OMX_PORTTUNNELFLAG_READONLY	include/media/openmax/OMX_Core.h	644;"	d
OMX_PORT_PARAM_TYPE	include/media/openmax/OMX_Core.h	/^typedef struct OMX_PORT_PARAM_TYPE {$/;"	s
OMX_PORT_PARAM_TYPE	include/media/openmax/OMX_Core.h	/^} OMX_PORT_PARAM_TYPE;$/;"	t	typeref:struct:OMX_PORT_PARAM_TYPE
OMX_PRIORITYMGMTTYPE	include/media/openmax/OMX_Core.h	/^typedef struct OMX_PRIORITYMGMTTYPE {$/;"	s
OMX_PRIORITYMGMTTYPE	include/media/openmax/OMX_Core.h	/^} OMX_PRIORITYMGMTTYPE;$/;"	t	typeref:struct:OMX_PRIORITYMGMTTYPE
OMX_PTR	include/media/openmax/OMX_Types.h	/^typedef uint32_t OMX_PTR;$/;"	t
OMX_PTR	include/media/openmax/OMX_Types.h	/^typedef void* OMX_PTR;$/;"	t
OMX_PortDomainAudio	include/media/openmax/OMX_Component.h	/^    OMX_PortDomainAudio,$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainImage	include/media/openmax/OMX_Component.h	/^    OMX_PortDomainImage,$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainKhronosExtensions	include/media/openmax/OMX_Component.h	/^    OMX_PortDomainKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainMax	include/media/openmax/OMX_Component.h	/^    OMX_PortDomainMax = 0x7ffffff$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainOther	include/media/openmax/OMX_Component.h	/^    OMX_PortDomainOther,$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainVendorStartUnused	include/media/openmax/OMX_Component.h	/^    OMX_PortDomainVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_PortDomainVideo	include/media/openmax/OMX_Component.h	/^    OMX_PortDomainVideo,$/;"	e	enum:OMX_PORTDOMAINTYPE
OMX_QCOM_COLOR_FormatYUV420PackedSemiPlanar32m	include/media/openmax/OMX_IVCommon.h	/^    OMX_QCOM_COLOR_FormatYUV420PackedSemiPlanar32m = 0x7FA30C04,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_QCOM_COLOR_FormatYUV420PackedSemiPlanar64x32Tile2m8ka	include/media/openmax/OMX_IVCommon.h	/^    OMX_QCOM_COLOR_FormatYUV420PackedSemiPlanar64x32Tile2m8ka = 0x7FA30C03,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_QCOM_COLOR_FormatYVU420SemiPlanar	include/media/openmax/OMX_IVCommon.h	/^    OMX_QCOM_COLOR_FormatYVU420SemiPlanar = 0x7FA30C00,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_RESOURCECONCEALMENTTYPE	include/media/openmax/OMX_Component.h	/^typedef struct OMX_RESOURCECONCEALMENTTYPE {$/;"	s
OMX_RESOURCECONCEALMENTTYPE	include/media/openmax/OMX_Component.h	/^} OMX_RESOURCECONCEALMENTTYPE;$/;"	t	typeref:struct:OMX_RESOURCECONCEALMENTTYPE
OMX_S16	include/media/openmax/OMX_Types.h	/^typedef signed short OMX_S16;$/;"	t
OMX_S32	include/media/openmax/OMX_Types.h	/^typedef int32_t OMX_S32;$/;"	t
OMX_S64	include/media/openmax/OMX_Types.h	/^typedef signed   __int64  OMX_S64;$/;"	t
OMX_S64	include/media/openmax/OMX_Types.h	/^typedef signed long long OMX_S64;$/;"	t
OMX_S8	include/media/openmax/OMX_Types.h	/^typedef signed char OMX_S8;$/;"	t
OMX_SEC_COLOR_FormatNV12Tiled	include/media/openmax/OMX_IVCommon.h	/^    OMX_SEC_COLOR_FormatNV12Tiled = 0x7FC00002,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_STATETYPE	include/media/openmax/OMX_Core.h	/^typedef enum OMX_STATETYPE$/;"	g
OMX_STATETYPE	include/media/openmax/OMX_Core.h	/^} OMX_STATETYPE;$/;"	t	typeref:enum:OMX_STATETYPE
OMX_STRING	include/media/openmax/OMX_Types.h	/^typedef OMX_PTR OMX_STRING;$/;"	t
OMX_STRING	include/media/openmax/OMX_Types.h	/^typedef char* OMX_STRING;$/;"	t
OMX_SUSPENSIONPOLICYTYPE	include/media/openmax/OMX_Component.h	/^typedef enum OMX_SUSPENSIONPOLICYTYPE {$/;"	g
OMX_SUSPENSIONPOLICYTYPE	include/media/openmax/OMX_Component.h	/^} OMX_SUSPENSIONPOLICYTYPE;$/;"	t	typeref:enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SUSPENSIONTYPE	include/media/openmax/OMX_Component.h	/^typedef enum OMX_SUSPENSIONTYPE {$/;"	g
OMX_SUSPENSIONTYPE	include/media/openmax/OMX_Component.h	/^} OMX_SUSPENSIONTYPE;$/;"	t	typeref:enum:OMX_SUSPENSIONTYPE
OMX_SendCommand	include/media/openmax/OMX_Core.h	762;"	d
OMX_SetConfig	include/media/openmax/OMX_Core.h	914;"	d
OMX_SetParameter	include/media/openmax/OMX_Core.h	842;"	d
OMX_StateExecuting	include/media/openmax/OMX_Core.h	/^    OMX_StateExecuting,   \/**< component has accepted the start command and$/;"	e	enum:OMX_STATETYPE
OMX_StateIdle	include/media/openmax/OMX_Core.h	/^    OMX_StateIdle,        \/**< component initialization has been completed$/;"	e	enum:OMX_STATETYPE
OMX_StateInvalid	include/media/openmax/OMX_Core.h	/^    OMX_StateInvalid,      \/**< component has detected that it's internal data$/;"	e	enum:OMX_STATETYPE
OMX_StateKhronosExtensions	include/media/openmax/OMX_Core.h	/^    OMX_StateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_STATETYPE
OMX_StateLoaded	include/media/openmax/OMX_Core.h	/^    OMX_StateLoaded,      \/**< component has been loaded but has not completed$/;"	e	enum:OMX_STATETYPE
OMX_StateMax	include/media/openmax/OMX_Core.h	/^    OMX_StateMax = 0X7FFFFFFF$/;"	e	enum:OMX_STATETYPE
OMX_StatePause	include/media/openmax/OMX_Core.h	/^    OMX_StatePause,       \/**< component has received pause command *\/$/;"	e	enum:OMX_STATETYPE
OMX_StateVendorStartUnused	include/media/openmax/OMX_Core.h	/^    OMX_StateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_STATETYPE
OMX_StateWaitForResources	include/media/openmax/OMX_Core.h	/^    OMX_StateWaitForResources, \/**< component is waiting for resources, either after$/;"	e	enum:OMX_STATETYPE
OMX_SuspendMax	include/media/openmax/OMX_Component.h	/^    OMX_SuspendMax = 0x7FFFFFFF$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_Suspended	include/media/openmax/OMX_Component.h	/^    OMX_Suspended,    \/**< component is suspended *\/$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_SuspensionDisabled	include/media/openmax/OMX_Component.h	/^    OMX_SuspensionDisabled, \/**< No suspension; v1.0 behavior *\/$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionEnabled	include/media/openmax/OMX_Component.h	/^    OMX_SuspensionEnabled,  \/**< Suspension allowed *\/$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionKhronosExtensions	include/media/openmax/OMX_Component.h	/^    OMX_SuspensionKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_SuspensionPolicyKhronosExtensions	include/media/openmax/OMX_Component.h	/^    OMX_SuspensionPolicyKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionPolicyMax	include/media/openmax/OMX_Component.h	/^    OMX_SuspensionPolicyMax = 0x7fffffff$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionPolicyStartUnused	include/media/openmax/OMX_Component.h	/^    OMX_SuspensionPolicyStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_SUSPENSIONPOLICYTYPE
OMX_SuspensionVendorStartUnused	include/media/openmax/OMX_Component.h	/^    OMX_SuspensionVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_SUSPENSIONTYPE
OMX_TICKS	include/media/openmax/OMX_Types.h	/^typedef OMX_S64 OMX_TICKS;$/;"	t
OMX_TICKS	include/media/openmax/OMX_Types.h	/^typedef struct OMX_TICKS$/;"	s
OMX_TICKS	include/media/openmax/OMX_Types.h	/^} OMX_TICKS;$/;"	t	typeref:struct:OMX_TICKS
OMX_TICKS_PER_SECOND	include/media/openmax/OMX_Types.h	330;"	d
OMX_TIME_CLOCKSTATE	include/media/openmax/OMX_Other.h	/^typedef enum OMX_TIME_CLOCKSTATE {$/;"	g
OMX_TIME_CLOCKSTATE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_CLOCKSTATE;$/;"	t	typeref:enum:OMX_TIME_CLOCKSTATE
OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE {$/;"	s
OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE
OMX_TIME_CONFIG_CLOCKSTATETYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_CLOCKSTATETYPE {$/;"	s
OMX_TIME_CONFIG_CLOCKSTATETYPE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_CLOCKSTATETYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE {$/;"	s
OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
OMX_TIME_CONFIG_SCALETYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_SCALETYPE {$/;"	s
OMX_TIME_CONFIG_SCALETYPE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_SCALETYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_SCALETYPE
OMX_TIME_CONFIG_SEEKMODETYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_SEEKMODETYPE {$/;"	s
OMX_TIME_CONFIG_SEEKMODETYPE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_SEEKMODETYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_SEEKMODETYPE
OMX_TIME_CONFIG_TIMESTAMPTYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_TIME_CONFIG_TIMESTAMPTYPE {$/;"	s
OMX_TIME_CONFIG_TIMESTAMPTYPE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_CONFIG_TIMESTAMPTYPE;$/;"	t	typeref:struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
OMX_TIME_ClockStateKhronosExtensions	include/media/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateMax	include/media/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateRunning	include/media/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateRunning,             \/**< Clock running. *\/$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateStopped	include/media/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateStopped,             \/**< Clock stopped. *\/$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateVendorStartUnused	include/media/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_ClockStateWaitingForStartTime	include/media/openmax/OMX_Other.h	/^      OMX_TIME_ClockStateWaitingForStartTime, \/**< Clock waiting until the$/;"	e	enum:OMX_TIME_CLOCKSTATE
OMX_TIME_MEDIATIMETYPE	include/media/openmax/OMX_Other.h	/^typedef struct OMX_TIME_MEDIATIMETYPE {$/;"	s
OMX_TIME_MEDIATIMETYPE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_MEDIATIMETYPE;$/;"	t	typeref:struct:OMX_TIME_MEDIATIMETYPE
OMX_TIME_REFCLOCKTYPE	include/media/openmax/OMX_Other.h	/^typedef enum OMX_TIME_REFCLOCKTYPE {$/;"	g
OMX_TIME_REFCLOCKTYPE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_REFCLOCKTYPE;$/;"	t	typeref:enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockAudio	include/media/openmax/OMX_Other.h	/^      OMX_TIME_RefClockAudio,   \/**< Use references sent through OMX_IndexConfigTimeCurrentAudioReference *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockKhronosExtensions	include/media/openmax/OMX_Other.h	/^      OMX_TIME_RefClockKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockMax	include/media/openmax/OMX_Other.h	/^      OMX_TIME_RefClockMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockNone	include/media/openmax/OMX_Other.h	/^      OMX_TIME_RefClockNone,    \/**< Use no references. *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockVendorStartUnused	include/media/openmax/OMX_Other.h	/^      OMX_TIME_RefClockVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_RefClockVideo	include/media/openmax/OMX_Other.h	/^      OMX_TIME_RefClockVideo,   \/**< Use references sent through OMX_IndexConfigTimeCurrentVideoReference *\/$/;"	e	enum:OMX_TIME_REFCLOCKTYPE
OMX_TIME_SEEKMODETYPE	include/media/openmax/OMX_Other.h	/^typedef enum OMX_TIME_SEEKMODETYPE {$/;"	g
OMX_TIME_SEEKMODETYPE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_SEEKMODETYPE;$/;"	t	typeref:enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeAccurate	include/media/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeAccurate, \/**< Prefer seeking to the actual seek$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeFast	include/media/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeFast = 0, \/**< Prefer seeking to an approximation$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeKhronosExtensions	include/media/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeMax	include/media/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_SeekModeVendorStartUnused	include/media/openmax/OMX_Other.h	/^    OMX_TIME_SeekModeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_SEEKMODETYPE
OMX_TIME_UPDATETYPE	include/media/openmax/OMX_Other.h	/^typedef enum OMX_TIME_UPDATETYPE {$/;"	g
OMX_TIME_UPDATETYPE	include/media/openmax/OMX_Other.h	/^} OMX_TIME_UPDATETYPE;$/;"	t	typeref:enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateClockStateChanged	include/media/openmax/OMX_Other.h	/^      OMX_TIME_UpdateClockStateChanged,     \/**< Update was generated because the clock state changed. *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateKhronosExtensions	include/media/openmax/OMX_Other.h	/^      OMX_TIME_UpdateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateMax	include/media/openmax/OMX_Other.h	/^      OMX_TIME_UpdateMax = 0x7FFFFFFF$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateRequestFulfillment	include/media/openmax/OMX_Other.h	/^      OMX_TIME_UpdateRequestFulfillment,    \/**< Update is the fulfillment of a media time request. *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateScaleChanged	include/media/openmax/OMX_Other.h	/^      OMX_TIME_UpdateScaleChanged,          \/**< Update was generated because the scale chagned. *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TIME_UpdateVendorStartUnused	include/media/openmax/OMX_Other.h	/^      OMX_TIME_UpdateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_TIME_UPDATETYPE
OMX_TI_COLOR_FormatYUV420PackedSemiPlanar	include/media/openmax/OMX_IVCommon.h	/^    OMX_TI_COLOR_FormatYUV420PackedSemiPlanar = 0x7F000100,$/;"	e	enum:OMX_COLOR_FORMATTYPE
OMX_TRANSITIONEFFECTTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_TRANSITIONEFFECTTYPE {$/;"	g
OMX_TRANSITIONEFFECTTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_TRANSITIONEFFECTTYPE;$/;"	t	typeref:enum:OMX_TRANSITIONEFFECTTYPE
OMX_TRUE	include/media/openmax/OMX_Types.h	/^    OMX_TRUE = !OMX_FALSE,$/;"	e	enum:OMX_BOOL
OMX_TUNNELSETUPTYPE	include/media/openmax/OMX_Core.h	/^typedef struct OMX_TUNNELSETUPTYPE$/;"	s
OMX_TUNNELSETUPTYPE	include/media/openmax/OMX_Core.h	/^} OMX_TUNNELSETUPTYPE;$/;"	t	typeref:struct:OMX_TUNNELSETUPTYPE
OMX_Types_h	include/media/openmax/OMX_Types.h	49;"	d
OMX_U16	include/media/openmax/OMX_Types.h	/^typedef unsigned short OMX_U16;$/;"	t
OMX_U32	include/media/openmax/OMX_Types.h	/^typedef uint32_t OMX_U32;$/;"	t
OMX_U64	include/media/openmax/OMX_Types.h	/^typedef unsigned __int64  OMX_U64;$/;"	t
OMX_U64	include/media/openmax/OMX_Types.h	/^typedef unsigned long long OMX_U64;$/;"	t
OMX_U8	include/media/openmax/OMX_Types.h	/^typedef unsigned char OMX_U8;$/;"	t
OMX_UUIDTYPE	include/media/openmax/OMX_Types.h	/^typedef unsigned char OMX_UUIDTYPE[128];$/;"	t
OMX_UseBuffer	include/media/openmax/OMX_Core.h	1002;"	d
OMX_UseEGLImage	include/media/openmax/OMX_Core.h	1182;"	d
OMX_VERSIONTYPE	include/media/openmax/OMX_Types.h	/^typedef union OMX_VERSIONTYPE$/;"	u
OMX_VERSIONTYPE	include/media/openmax/OMX_Types.h	/^} OMX_VERSIONTYPE;$/;"	t	typeref:union:OMX_VERSIONTYPE
OMX_VIDEO_ANDROID_MAXVP8TEMPORALLAYERS	include/media/openmax/OMX_VideoExt.h	112;"	d
OMX_VIDEO_ANDROID_VPXTEMPORALLAYERPATTERNTYPE	include/media/openmax/OMX_VideoExt.h	/^typedef enum OMX_VIDEO_ANDROID_VPXTEMPORALLAYERPATTERNTYPE {$/;"	g
OMX_VIDEO_ANDROID_VPXTEMPORALLAYERPATTERNTYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_ANDROID_VPXTEMPORALLAYERPATTERNTYPE;$/;"	t	typeref:enum:OMX_VIDEO_ANDROID_VPXTEMPORALLAYERPATTERNTYPE
OMX_VIDEO_AVCLEVELTYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCLEVELTYPE {$/;"	g
OMX_VIDEO_AVCLEVELTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCLEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLOOPFILTERTYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCLOOPFILTERTYPE {$/;"	g
OMX_VIDEO_AVCLOOPFILTERTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCLOOPFILTERTYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLevel1	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel1   = 0x01,     \/**< Level 1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel11	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel11  = 0x04,     \/**< Level 1.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel12	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel12  = 0x08,     \/**< Level 1.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel13	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel13  = 0x10,     \/**< Level 1.3 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel1b	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel1b  = 0x02,     \/**< Level 1b *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel2	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel2   = 0x20,     \/**< Level 2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel21	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel21  = 0x40,     \/**< Level 2.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel22	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel22  = 0x80,     \/**< Level 2.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel3	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel3   = 0x100,    \/**< Level 3 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel31	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel31  = 0x200,    \/**< Level 3.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel32	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel32  = 0x400,    \/**< Level 3.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel4	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel4   = 0x800,    \/**< Level 4 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel41	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel41  = 0x1000,   \/**< Level 4.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel42	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel42  = 0x2000,   \/**< Level 4.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel5	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel5   = 0x4000,   \/**< Level 5 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel51	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel51  = 0x8000,   \/**< Level 5.1 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevel52	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevel52  = 0x10000,  \/**< Level 5.2 *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevelKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevelMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevelMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLevelVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCLEVELTYPE
OMX_VIDEO_AVCLoopFilterDisable	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterDisable,$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterDisableSliceBoundary	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterDisableSliceBoundary,$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterEnable	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterEnable = 0,$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCLoopFilterVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLoopFilterVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCLOOPFILTERTYPE
OMX_VIDEO_AVCPROFILETYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCPROFILETYPE {$/;"	g
OMX_VIDEO_AVCPROFILETYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCPROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileBaseline	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileBaseline = 0x01,   \/**< Baseline profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileExtended	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileExtended = 0x04,   \/**< Extended profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh     = 0x08,   \/**< High profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh10	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh10   = 0x10,   \/**< High 10 profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh422	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh422  = 0x20,   \/**< High 4:2:2 profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileHigh444	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileHigh444  = 0x40,   \/**< High 4:4:4 profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileMain	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileMain     = 0x02,   \/**< Main profile *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileMax      = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCProfileVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCPROFILETYPE
OMX_VIDEO_AVCSLICEMODETYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_AVCSLICEMODETYPE {$/;"	g
OMX_VIDEO_AVCSLICEMODETYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_AVCSLICEMODETYPE;$/;"	t	typeref:enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_CODINGTYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_CODINGTYPE {$/;"	g
OMX_VIDEO_CODINGTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_CODINGTYPE;$/;"	t	typeref:enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CONFIG_AVCINTRAPERIOD	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_CONFIG_AVCINTRAPERIOD {$/;"	s
OMX_VIDEO_CONFIG_AVCINTRAPERIOD	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_CONFIG_AVCINTRAPERIOD;$/;"	t	typeref:struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
OMX_VIDEO_CONFIG_BITRATETYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_CONFIG_BITRATETYPE {$/;"	s
OMX_VIDEO_CONFIG_BITRATETYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_CONFIG_BITRATETYPE;$/;"	t	typeref:struct:OMX_VIDEO_CONFIG_BITRATETYPE
OMX_VIDEO_CONFIG_NALSIZE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_CONFIG_NALSIZE {$/;"	s
OMX_VIDEO_CONFIG_NALSIZE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_CONFIG_NALSIZE;$/;"	t	typeref:struct:OMX_VIDEO_CONFIG_NALSIZE
OMX_VIDEO_CONTROLRATETYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_CONTROLRATETYPE {$/;"	g
OMX_VIDEO_CONTROLRATETYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_CONTROLRATETYPE;$/;"	t	typeref:enum:OMX_VIDEO_CONTROLRATETYPE
OMX_VIDEO_CodingAVC	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingAVC,        \/**< H.264\/AVC *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingAutoDetect	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingAutoDetect, \/**< Autodetection of coding type *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingH263	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingH263,       \/**< H.263 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingHEVC	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingHEVC,       \/**< ITU H.265\/HEVC *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMJPEG	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMJPEG,      \/**< Motion JPEG *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMPEG2	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMPEG2,      \/**< AKA: H.262 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMPEG4	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMPEG4,      \/**< MPEG-4 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingRV	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingRV,         \/**< all versions of Real Video *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingUnused,     \/**< Value when coding is N\/A *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingVP8	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingVP8,        \/**< Google VP8, formerly known as On2 VP8 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingVP9	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingVP9,        \/**< Google VP9 *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_CodingWMV	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CodingWMV,        \/**< all versions of Windows Media Video *\/$/;"	e	enum:OMX_VIDEO_CODINGTYPE
OMX_VIDEO_H263LEVELTYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_H263LEVELTYPE {$/;"	g
OMX_VIDEO_H263LEVELTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_H263LEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level10	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level10  = 0x01,$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level20	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level20  = 0x02,$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level30	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level30  = 0x04,$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level40	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level40  = 0x08,$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level45	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level45  = 0x10,$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level50	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level50  = 0x20,$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level60	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level60  = 0x40,$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263Level70	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263Level70  = 0x80,$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263LevelKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263LevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263LevelMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263LevelMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263LevelVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263LevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_H263LEVELTYPE
OMX_VIDEO_H263PROFILETYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_H263PROFILETYPE {$/;"	g
OMX_VIDEO_H263PROFILETYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_H263PROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileBackwardCompatible	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileBackwardCompatible  = 0x04,$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileBaseline	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileBaseline            = 0x01,$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileH320Coding	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileH320Coding          = 0x02,$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileHighCompression	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileHighCompression     = 0x20,$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileHighLatency	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileHighLatency         = 0x100,$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileISWV2	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileISWV2               = 0x08,$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileISWV3	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileISWV3               = 0x10,$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileInterlace	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileInterlace           = 0x80,$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileInternet	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileInternet            = 0x40,$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileMax                 = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_H263ProfileVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263ProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_H263PROFILETYPE
OMX_VIDEO_HEVCHighTierLevel1	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel1  = 0x2,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel2	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel2  = 0x8,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel21	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel21 = 0x20,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel3	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel3  = 0x80,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel31	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel31 = 0x200,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel4	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel4  = 0x800,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel41	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel41 = 0x2000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel5	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel5  = 0x8000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel51	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel51 = 0x20000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel52	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel52 = 0x80000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel6	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel6  = 0x200000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel61	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel61 = 0x800000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTierLevel62	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTierLevel62 = 0x2000000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCHighTiermax	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCHighTiermax     = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCLEVELTYPE	include/media/openmax/OMX_VideoExt.h	/^typedef enum OMX_VIDEO_HEVCLEVELTYPE {$/;"	g
OMX_VIDEO_HEVCLEVELTYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_HEVCLEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCLevelUnknown	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCLevelUnknown    = 0x0,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel1	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel1  = 0x1,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel2	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel2  = 0x4,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel21	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel21 = 0x10,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel3	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel3  = 0x40,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel31	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel31 = 0x100,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel4	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel4  = 0x400,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel41	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel41 = 0x1000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel5	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel5  = 0x4000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel51	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel51 = 0x10000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel52	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel52 = 0x40000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel6	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel6  = 0x100000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel61	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel61 = 0x400000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCMainTierLevel62	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCMainTierLevel62 = 0x1000000,$/;"	e	enum:OMX_VIDEO_HEVCLEVELTYPE
OMX_VIDEO_HEVCPROFILETYPE	include/media/openmax/OMX_VideoExt.h	/^typedef enum OMX_VIDEO_HEVCPROFILETYPE {$/;"	g
OMX_VIDEO_HEVCPROFILETYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_HEVCPROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_HEVCPROFILETYPE
OMX_VIDEO_HEVCProfileMain	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCProfileMain    = 0x1,$/;"	e	enum:OMX_VIDEO_HEVCPROFILETYPE
OMX_VIDEO_HEVCProfileMain10	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCProfileMain10  = 0x2,$/;"	e	enum:OMX_VIDEO_HEVCPROFILETYPE
OMX_VIDEO_HEVCProfileMax	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCProfileMax     = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_HEVCPROFILETYPE
OMX_VIDEO_HEVCProfileUnknown	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCProfileUnknown = 0x0,$/;"	e	enum:OMX_VIDEO_HEVCPROFILETYPE
OMX_VIDEO_INTRAREFRESHTYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_INTRAREFRESHTYPE {$/;"	g
OMX_VIDEO_INTRAREFRESHTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_INTRAREFRESHTYPE;$/;"	t	typeref:enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshAdaptive	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshAdaptive,$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshBoth	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshBoth,$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshCyclic	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshCyclic,$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_IntraRefreshVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_IntraRefreshVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_INTRAREFRESHTYPE
OMX_VIDEO_MOTIONVECTORTYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MOTIONVECTORTYPE {$/;"	g
OMX_VIDEO_MOTIONVECTORTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_MOTIONVECTORTYPE;$/;"	t	typeref:enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_VIDEO_MPEG2LEVELTYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG2LEVELTYPE {$/;"	g
OMX_VIDEO_MPEG2LEVELTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG2LEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelH14	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelH14,     \/**< High 1440 *\/$/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelHL	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelHL,      \/**< High Level *\/$/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelLL	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelLL = 0,  \/**< Low Level *\/$/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelML	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelML,      \/**< Main Level *\/$/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2LevelVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG2LEVELTYPE
OMX_VIDEO_MPEG2PROFILETYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG2PROFILETYPE {$/;"	g
OMX_VIDEO_MPEG2PROFILETYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG2PROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2Profile422	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2Profile422,         \/**< 4:2:2 Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileHigh	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileHigh,        \/**< High Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileMain	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileMain,        \/**< Main Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileSNR	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileSNR,         \/**< SNR Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileSimple	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileSimple = 0,  \/**< Simple Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileSpatial	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileSpatial,     \/**< Spatial Profile *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG2ProfileVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2ProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG2PROFILETYPE
OMX_VIDEO_MPEG4LEVELTYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG4LEVELTYPE {$/;"	g
OMX_VIDEO_MPEG4LEVELTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG4LEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level0	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level0  = 0x01,   \/**< Level 0 *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level0b	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level0b = 0x02,   \/**< Level 0b *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level1	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level1  = 0x04,   \/**< Level 1 *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level2	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level2  = 0x08,   \/**< Level 2 *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level3	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level3  = 0x10,   \/**< Level 3 *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level4	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level4  = 0x20,   \/**< Level 4 *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level4a	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level4a = 0x40,   \/**< Level 4a *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4Level5	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4Level5  = 0x80,   \/**< Level 5 *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4LevelKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LevelKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4LevelMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LevelMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4LevelVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LevelVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG4LEVELTYPE
OMX_VIDEO_MPEG4PROFILETYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_MPEG4PROFILETYPE {$/;"	g
OMX_VIDEO_MPEG4PROFILETYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_MPEG4PROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedCoding	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedCoding   = 0x1000,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedCore	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedCore     = 0x2000,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedRealTime	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedRealTime = 0x400,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedScalable	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedScalable = 0x4000,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileAdvancedSimple	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileAdvancedSimple   = 0x8000,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileBasicAnimated	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileBasicAnimated    = 0x100,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileCore	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileCore             = 0x04,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileCoreScalable	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileCoreScalable     = 0x800,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileHybrid	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileHybrid           = 0x200,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileMain	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileMain             = 0x08,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileMax              = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileNbit	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileNbit             = 0x10,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileScalableTexture	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileScalableTexture  = 0x20,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimple	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimple           = 0x01,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimpleFBA	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimpleFBA        = 0x80,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimpleFace	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimpleFace       = 0x40,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileSimpleScalable	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileSimpleScalable   = 0x02,$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_MPEG4ProfileVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4ProfileVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MPEG4PROFILETYPE
OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE	include/media/openmax/OMX_VideoExt.h	/^typedef struct OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE {$/;"	s
OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE
OMX_VIDEO_PARAM_AVCSLICEFMO	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_AVCSLICEFMO {$/;"	s
OMX_VIDEO_PARAM_AVCSLICEFMO	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_AVCSLICEFMO;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_AVCSLICEFMO
OMX_VIDEO_PARAM_AVCTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_AVCTYPE {$/;"	s
OMX_VIDEO_PARAM_AVCTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_AVCTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_AVCTYPE
OMX_VIDEO_PARAM_BITRATETYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_BITRATETYPE {$/;"	s
OMX_VIDEO_PARAM_BITRATETYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_BITRATETYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_BITRATETYPE
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE {$/;"	s
OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
OMX_VIDEO_PARAM_H263TYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_H263TYPE {$/;"	s
OMX_VIDEO_PARAM_H263TYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_H263TYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_H263TYPE
OMX_VIDEO_PARAM_HEVCTYPE	include/media/openmax/OMX_VideoExt.h	/^typedef struct OMX_VIDEO_PARAM_HEVCTYPE {$/;"	s
OMX_VIDEO_PARAM_HEVCTYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_PARAM_HEVCTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_HEVCTYPE
OMX_VIDEO_PARAM_INTRAREFRESHTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_INTRAREFRESHTYPE {$/;"	s
OMX_VIDEO_PARAM_INTRAREFRESHTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_INTRAREFRESHTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
OMX_VIDEO_PARAM_MOTIONVECTORTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_MOTIONVECTORTYPE {$/;"	s
OMX_VIDEO_PARAM_MOTIONVECTORTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_MOTIONVECTORTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
OMX_VIDEO_PARAM_MPEG2TYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_MPEG2TYPE {$/;"	s
OMX_VIDEO_PARAM_MPEG2TYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_MPEG2TYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_MPEG2TYPE
OMX_VIDEO_PARAM_MPEG4TYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_MPEG4TYPE {$/;"	s
OMX_VIDEO_PARAM_MPEG4TYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_MPEG4TYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_MPEG4TYPE
OMX_VIDEO_PARAM_PORTFORMATTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_PORTFORMATTYPE {$/;"	s
OMX_VIDEO_PARAM_PORTFORMATTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_PORTFORMATTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
OMX_VIDEO_PARAM_PROFILELEVELTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_PROFILELEVELTYPE {$/;"	s
OMX_VIDEO_PARAM_PROFILELEVELTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_PROFILELEVELTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
OMX_VIDEO_PARAM_QUANTIZATIONTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_QUANTIZATIONTYPE {$/;"	s
OMX_VIDEO_PARAM_QUANTIZATIONTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_QUANTIZATIONTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
OMX_VIDEO_PARAM_RVTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_RVTYPE {$/;"	s
OMX_VIDEO_PARAM_RVTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_RVTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_RVTYPE
OMX_VIDEO_PARAM_VBSMCTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_VBSMCTYPE {$/;"	s
OMX_VIDEO_PARAM_VBSMCTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_VBSMCTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_VBSMCTYPE
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE {$/;"	s
OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
OMX_VIDEO_PARAM_VP8TYPE	include/media/openmax/OMX_VideoExt.h	/^typedef struct OMX_VIDEO_PARAM_VP8TYPE {$/;"	s
OMX_VIDEO_PARAM_VP8TYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_PARAM_VP8TYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_VP8TYPE
OMX_VIDEO_PARAM_WMVTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PARAM_WMVTYPE {$/;"	s
OMX_VIDEO_PARAM_WMVTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PARAM_WMVTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PARAM_WMVTYPE
OMX_VIDEO_PICTURETYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_PICTURETYPE {$/;"	g
OMX_VIDEO_PICTURETYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PICTURETYPE;$/;"	t	typeref:enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PORTDEFINITIONTYPE	include/media/openmax/OMX_Video.h	/^typedef struct OMX_VIDEO_PORTDEFINITIONTYPE {$/;"	s
OMX_VIDEO_PORTDEFINITIONTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_PORTDEFINITIONTYPE;$/;"	t	typeref:struct:OMX_VIDEO_PORTDEFINITIONTYPE
OMX_VIDEO_PictureTypeB	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeB   = 0x04,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeEI	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeEI  = 0x11,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeEP	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeEP  = 0x12,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeI	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeI   = 0x01,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeP	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeP   = 0x02,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeS	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeS   = 0x14,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeSI	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeSI  = 0x08,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeSP	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeSP  = 0x10,$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_PictureTypeVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_PictureTypeVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_PICTURETYPE
OMX_VIDEO_RAFormatMax	include/media/openmax/OMX_Audio.h	/^    OMX_VIDEO_RAFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_AUDIO_RAFORMATTYPE
OMX_VIDEO_RVFORMATTYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_RVFORMATTYPE {$/;"	g
OMX_VIDEO_RVFORMATTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_RVFORMATTYPE;$/;"	t	typeref:enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormat8	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormat8,          \/**< Real Video format 8 *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormat9	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormat9,          \/**< Real Video format 9 *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatG2	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatG2,         \/**< Real Video Format G2 *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatUnused = 0, \/**< Format unused or unknown *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_RVFormatVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_RVFORMATTYPE
OMX_VIDEO_SLICEMODE_AVCByteSlice	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCByteSlice,$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCDefault	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCDefault = 0,$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCLevelMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCLevelMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCMBSlice	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCMBSlice,$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICEMODE_AVCVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_SLICEMODE_AVCVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_AVCSLICEMODETYPE
OMX_VIDEO_SLICESEGMENTSTYPE	include/media/openmax/OMX_VideoExt.h	/^typedef struct OMX_VIDEO_SLICESEGMENTSTYPE {$/;"	s
OMX_VIDEO_SLICESEGMENTSTYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_SLICESEGMENTSTYPE;$/;"	t	typeref:struct:OMX_VIDEO_SLICESEGMENTSTYPE
OMX_VIDEO_VP8LEVELTYPE	include/media/openmax/OMX_VideoExt.h	/^typedef enum OMX_VIDEO_VP8LEVELTYPE {$/;"	g
OMX_VIDEO_VP8LEVELTYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_VP8LEVELTYPE;$/;"	t	typeref:enum:OMX_VIDEO_VP8LEVELTYPE
OMX_VIDEO_VP8LevelMax	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8LevelMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_VP8LEVELTYPE
OMX_VIDEO_VP8LevelUnknown	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8LevelUnknown = 0x6EFFFFFF,$/;"	e	enum:OMX_VIDEO_VP8LEVELTYPE
OMX_VIDEO_VP8Level_Version0	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8Level_Version0 = 0x01,$/;"	e	enum:OMX_VIDEO_VP8LEVELTYPE
OMX_VIDEO_VP8Level_Version1	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8Level_Version1 = 0x02,$/;"	e	enum:OMX_VIDEO_VP8LEVELTYPE
OMX_VIDEO_VP8Level_Version2	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8Level_Version2 = 0x04,$/;"	e	enum:OMX_VIDEO_VP8LEVELTYPE
OMX_VIDEO_VP8Level_Version3	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8Level_Version3 = 0x08,$/;"	e	enum:OMX_VIDEO_VP8LEVELTYPE
OMX_VIDEO_VP8PROFILETYPE	include/media/openmax/OMX_VideoExt.h	/^typedef enum OMX_VIDEO_VP8PROFILETYPE {$/;"	g
OMX_VIDEO_VP8PROFILETYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_VP8PROFILETYPE;$/;"	t	typeref:enum:OMX_VIDEO_VP8PROFILETYPE
OMX_VIDEO_VP8ProfileMain	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8ProfileMain = 0x01,$/;"	e	enum:OMX_VIDEO_VP8PROFILETYPE
OMX_VIDEO_VP8ProfileMax	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8ProfileMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_VP8PROFILETYPE
OMX_VIDEO_VP8ProfileUnknown	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8ProfileUnknown = 0x6EFFFFFF,$/;"	e	enum:OMX_VIDEO_VP8PROFILETYPE
OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE	include/media/openmax/OMX_VideoExt.h	/^typedef struct OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE {$/;"	s
OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE;$/;"	t	typeref:struct:OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE
OMX_VIDEO_VP8REFERENCEFRAMETYPE	include/media/openmax/OMX_VideoExt.h	/^typedef struct OMX_VIDEO_VP8REFERENCEFRAMETYPE {$/;"	s
OMX_VIDEO_VP8REFERENCEFRAMETYPE	include/media/openmax/OMX_VideoExt.h	/^} OMX_VIDEO_VP8REFERENCEFRAMETYPE;$/;"	t	typeref:struct:OMX_VIDEO_VP8REFERENCEFRAMETYPE
OMX_VIDEO_VPXTemporalLayerPatternMax	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VPXTemporalLayerPatternMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_ANDROID_VPXTEMPORALLAYERPATTERNTYPE
OMX_VIDEO_VPXTemporalLayerPatternNone	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VPXTemporalLayerPatternNone = 0,$/;"	e	enum:OMX_VIDEO_ANDROID_VPXTEMPORALLAYERPATTERNTYPE
OMX_VIDEO_VPXTemporalLayerPatternWebRTC	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VPXTemporalLayerPatternWebRTC = 1,$/;"	e	enum:OMX_VIDEO_ANDROID_VPXTEMPORALLAYERPATTERNTYPE
OMX_VIDEO_WMFFormatKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_WMFFormatKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMFFormatVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_WMFFormatVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFORMATTYPE	include/media/openmax/OMX_Video.h	/^typedef enum OMX_VIDEO_WMVFORMATTYPE {$/;"	g
OMX_VIDEO_WMVFORMATTYPE	include/media/openmax/OMX_Video.h	/^} OMX_VIDEO_WMVFORMATTYPE;$/;"	t	typeref:enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormat7	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormat7      = 0x02,   \/**< Windows Media Video format 7 *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormat8	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormat8      = 0x04,   \/**< Windows Media Video format 8 *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormat9	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormat9      = 0x08,   \/**< Windows Media Video format 9 *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormatMax	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormatMax    = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VIDEO_WMVFormatUnused	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFormatUnused = 0x01,   \/**< Format unused or unknown *\/$/;"	e	enum:OMX_VIDEO_WMVFORMATTYPE
OMX_VideoExt_h	include/media/openmax/OMX_VideoExt.h	31;"	d
OMX_Video_ControlRateConstant	include/media/openmax/OMX_Video.h	/^    OMX_Video_ControlRateConstant,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateConstantSkipFrames	include/media/openmax/OMX_Video.h	/^    OMX_Video_ControlRateConstantSkipFrames,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateDisable	include/media/openmax/OMX_Video.h	/^    OMX_Video_ControlRateDisable,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_Video_ControlRateKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateMax	include/media/openmax/OMX_Video.h	/^    OMX_Video_ControlRateMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateVariable	include/media/openmax/OMX_Video.h	/^    OMX_Video_ControlRateVariable,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateVariableSkipFrames	include/media/openmax/OMX_Video.h	/^    OMX_Video_ControlRateVariableSkipFrames,$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_ControlRateVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_Video_ControlRateVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_CONTROLRATETYPE
OMX_Video_MotionVectorEighthPel	include/media/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorEighthPel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorHalfPel	include/media/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorHalfPel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorKhronosExtensions	include/media/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorMax	include/media/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorMax = 0x7FFFFFFF$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorPixel	include/media/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorPixel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorQuarterPel	include/media/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorQuarterPel,$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_MotionVectorVendorStartUnused	include/media/openmax/OMX_Video.h	/^    OMX_Video_MotionVectorVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_VIDEO_MOTIONVECTORTYPE
OMX_Video_h	include/media/openmax/OMX_Video.h	47;"	d
OMX_WHITEBALCONTROLTYPE	include/media/openmax/OMX_IVCommon.h	/^typedef enum OMX_WHITEBALCONTROLTYPE {$/;"	g
OMX_WHITEBALCONTROLTYPE	include/media/openmax/OMX_IVCommon.h	/^} OMX_WHITEBALCONTROLTYPE;$/;"	t	typeref:enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlAuto	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlAuto,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlCloudy	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlCloudy,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlFlash	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlFlash,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlFluorescent	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlFluorescent,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlHorizon	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlHorizon,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlIncandescent	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlIncandescent,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlKhronosExtensions	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlKhronosExtensions = 0x6F000000, \/**< Reserved region for introducing Khronos Standard Extensions *\/$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlMax	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlMax = 0x7FFFFFFF$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlOff	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlOff = 0,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlShade	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlShade,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlSunLight	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlSunLight,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlTungsten	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlTungsten,$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
OMX_WhiteBalControlVendorStartUnused	include/media/openmax/OMX_IVCommon.h	/^    OMX_WhiteBalControlVendorStartUnused = 0x7F000000, \/**< Reserved region for introducing Vendor Extensions *\/$/;"	e	enum:OMX_WHITEBALCONTROLTYPE
ON_BUFFER_RELEASED	libs/gui/IConsumerListener.cpp	/^    ON_BUFFER_RELEASED,$/;"	e	enum:android::__anon247	file:
ON_BUFFER_RELEASED	libs/gui/IProducerListener.cpp	/^    ON_BUFFER_RELEASED = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon250	file:
ON_FRAME_AVAILABLE	libs/gui/IConsumerListener.cpp	/^    ON_FRAME_AVAILABLE = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon247	file:
ON_SIDEBAND_STREAM_CHANGED	libs/gui/IConsumerListener.cpp	/^    ON_SIDEBAND_STREAM_CHANGED,$/;"	e	enum:android::__anon247	file:
OPACITY_MASK	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            OPACITY_MASK            =       0x00000002,$/;"	e	enum:android::ProgramCache::Key::__anon33
OPACITY_OPAQUE	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            OPACITY_OPAQUE          =       0x00000002,$/;"	e	enum:android::ProgramCache::Key::__anon33
OPACITY_TRANSLUCENT	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            OPACITY_TRANSLUCENT     =       0x00000000,$/;"	e	enum:android::ProgramCache::Key::__anon33
OPENED	services/surfaceflinger/Barrier.h	/^    enum { OPENED, CLOSED };$/;"	e	enum:android::Barrier::__anon14
OPENGL_TESTS_WINDOWSURFACE_H	opengl/tests/include/WindowSurface.h	18;"	d
OPT	cmds/atrace/atrace.cpp	/^typedef enum { OPT, REQ } requiredness  ;$/;"	e	enum:__anon2	file:
OP_ACCESS_NOTIFICATIONS	include/binder/AppOpsManager.h	/^        OP_ACCESS_NOTIFICATIONS = 25,$/;"	e	enum:android::AppOpsManager::__anon206
OP_ALL	opengl/libagl/context.h	/^    OP_ALL              = 0x1F$/;"	e	enum:android::gl::__anon223
OP_CALL_PHONE	include/binder/AppOpsManager.h	/^        OP_CALL_PHONE = 13,$/;"	e	enum:android::AppOpsManager::__anon206
OP_CAMERA	include/binder/AppOpsManager.h	/^        OP_CAMERA = 26,$/;"	e	enum:android::AppOpsManager::__anon206
OP_CHANGED_TRANSACTION	include/binder/IAppOpsCallback.h	/^        OP_CHANGED_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION$/;"	e	enum:android::IAppOpsCallback::__anon201
OP_COARSE_LOCATION	include/binder/AppOpsManager.h	/^        OP_COARSE_LOCATION = 0,$/;"	e	enum:android::AppOpsManager::__anon206
OP_FINE_LOCATION	include/binder/AppOpsManager.h	/^        OP_FINE_LOCATION = 1,$/;"	e	enum:android::AppOpsManager::__anon206
OP_GPS	include/binder/AppOpsManager.h	/^        OP_GPS = 2,$/;"	e	enum:android::AppOpsManager::__anon206
OP_IDENTITY	opengl/libagl/context.h	/^    OP_IDENTITY         = 0x00,$/;"	e	enum:android::gl::__anon223
OP_NEIGHBORING_CELLS	include/binder/AppOpsManager.h	/^        OP_NEIGHBORING_CELLS = 12,$/;"	e	enum:android::AppOpsManager::__anon206
OP_NONE	include/binder/AppOpsManager.h	/^        OP_NONE = -1,$/;"	e	enum:android::AppOpsManager::__anon206
OP_PLAY_AUDIO	include/binder/AppOpsManager.h	/^        OP_PLAY_AUDIO = 28$/;"	e	enum:android::AppOpsManager::__anon206
OP_POST_NOTIFICATION	include/binder/AppOpsManager.h	/^        OP_POST_NOTIFICATION = 11,$/;"	e	enum:android::AppOpsManager::__anon206
OP_READ_CALENDAR	include/binder/AppOpsManager.h	/^        OP_READ_CALENDAR = 8,$/;"	e	enum:android::AppOpsManager::__anon206
OP_READ_CALL_LOG	include/binder/AppOpsManager.h	/^        OP_READ_CALL_LOG = 6,$/;"	e	enum:android::AppOpsManager::__anon206
OP_READ_CONTACTS	include/binder/AppOpsManager.h	/^        OP_READ_CONTACTS = 4,$/;"	e	enum:android::AppOpsManager::__anon206
OP_READ_ICC_SMS	include/binder/AppOpsManager.h	/^        OP_READ_ICC_SMS = 21,$/;"	e	enum:android::AppOpsManager::__anon206
OP_READ_SMS	include/binder/AppOpsManager.h	/^        OP_READ_SMS = 14,$/;"	e	enum:android::AppOpsManager::__anon206
OP_RECEIVE_EMERGECY_SMS	include/binder/AppOpsManager.h	/^        OP_RECEIVE_EMERGECY_SMS = 17,$/;"	e	enum:android::AppOpsManager::__anon206
OP_RECEIVE_MMS	include/binder/AppOpsManager.h	/^        OP_RECEIVE_MMS = 18,$/;"	e	enum:android::AppOpsManager::__anon206
OP_RECEIVE_SMS	include/binder/AppOpsManager.h	/^        OP_RECEIVE_SMS = 16,$/;"	e	enum:android::AppOpsManager::__anon206
OP_RECEIVE_WAP_PUSH	include/binder/AppOpsManager.h	/^        OP_RECEIVE_WAP_PUSH = 19,$/;"	e	enum:android::AppOpsManager::__anon206
OP_RECORD_AUDIO	include/binder/AppOpsManager.h	/^        OP_RECORD_AUDIO = 27,$/;"	e	enum:android::AppOpsManager::__anon206
OP_ROTATE	opengl/libagl/context.h	/^    OP_ROTATE           = 0x08,$/;"	e	enum:android::gl::__anon223
OP_SCALE	opengl/libagl/context.h	/^    OP_SCALE            = 0x05,$/;"	e	enum:android::gl::__anon223
OP_SEND_SMS	include/binder/AppOpsManager.h	/^        OP_SEND_SMS = 20,$/;"	e	enum:android::AppOpsManager::__anon206
OP_SKEW	opengl/libagl/context.h	/^    OP_SKEW             = 0x10,$/;"	e	enum:android::gl::__anon223
OP_SYSTEM_ALERT_WINDOW	include/binder/AppOpsManager.h	/^        OP_SYSTEM_ALERT_WINDOW = 24,$/;"	e	enum:android::AppOpsManager::__anon206
OP_TRANSLATE	opengl/libagl/context.h	/^    OP_TRANSLATE        = 0x01,$/;"	e	enum:android::gl::__anon223
OP_UNIFORM_SCALE	opengl/libagl/context.h	/^    OP_UNIFORM_SCALE    = 0x02,$/;"	e	enum:android::gl::__anon223
OP_VIBRATE	include/binder/AppOpsManager.h	/^        OP_VIBRATE = 3,$/;"	e	enum:android::AppOpsManager::__anon206
OP_WIFI_SCAN	include/binder/AppOpsManager.h	/^        OP_WIFI_SCAN = 10,$/;"	e	enum:android::AppOpsManager::__anon206
OP_WRITE_CALENDAR	include/binder/AppOpsManager.h	/^        OP_WRITE_CALENDAR = 9,$/;"	e	enum:android::AppOpsManager::__anon206
OP_WRITE_CALL_LOG	include/binder/AppOpsManager.h	/^        OP_WRITE_CALL_LOG = 7,$/;"	e	enum:android::AppOpsManager::__anon206
OP_WRITE_CONTACTS	include/binder/AppOpsManager.h	/^        OP_WRITE_CONTACTS = 5,$/;"	e	enum:android::AppOpsManager::__anon206
OP_WRITE_ICC_SMS	include/binder/AppOpsManager.h	/^        OP_WRITE_ICC_SMS = 22,$/;"	e	enum:android::AppOpsManager::__anon206
OP_WRITE_SETTINGS	include/binder/AppOpsManager.h	/^        OP_WRITE_SETTINGS = 23,$/;"	e	enum:android::AppOpsManager::__anon206
OP_WRITE_SMS	include/binder/AppOpsManager.h	/^        OP_WRITE_SMS = 15,$/;"	e	enum:android::AppOpsManager::__anon206
ORIENTATION	services/inputflinger/tests/InputReader_test.cpp	/^        ORIENTATION = 1 << 4,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
ORIENTATION_CALIBRATION_DEFAULT	services/inputflinger/InputReader.h	/^            ORIENTATION_CALIBRATION_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::OrientationCalibration
ORIENTATION_CALIBRATION_INTERPOLATED	services/inputflinger/InputReader.h	/^            ORIENTATION_CALIBRATION_INTERPOLATED,$/;"	e	enum:android::TouchInputMapper::Calibration::OrientationCalibration
ORIENTATION_CALIBRATION_NONE	services/inputflinger/InputReader.h	/^            ORIENTATION_CALIBRATION_NONE,$/;"	e	enum:android::TouchInputMapper::Calibration::OrientationCalibration
ORIENTATION_CALIBRATION_VECTOR	services/inputflinger/InputReader.h	/^            ORIENTATION_CALIBRATION_VECTOR,$/;"	e	enum:android::TouchInputMapper::Calibration::OrientationCalibration
OTHER	include/ui/PixelFormat.h	/^        OTHER   = 0xFF$/;"	e	enum:android::PixelFormatInfo::__anon79
Obituary	include/binder/BpBinder.h	/^    struct Obituary {$/;"	s	class:android::BpBinder
ObjectManager	include/binder/BpBinder.h	/^    class ObjectManager$/;"	c	class:android::BpBinder
ObjectManager	libs/binder/BpBinder.cpp	/^BpBinder::ObjectManager::ObjectManager()$/;"	f	class:android::BpBinder::ObjectManager
ObserverFunc	include/media/hardware/HDCPAPI.h	/^    typedef void (*ObserverFunc)(void *cookie, int msg, int ext1, int ext2);$/;"	t	struct:android::HDCPModule
Open	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*Open)( CPhandle* hContent, CPstring szURI, CP_ACCESSTYPE eAccess );$/;"	m	struct:CP_PIPETYPE
OrientationCalibration	services/inputflinger/InputReader.h	/^        enum OrientationCalibration {$/;"	g	struct:android::TouchInputMapper::Calibration
OrientationSensor	services/sensorservice/OrientationSensor.cpp	/^OrientationSensor::OrientationSensor()$/;"	f	class:android::OrientationSensor
OrientationSensor	services/sensorservice/OrientationSensor.h	/^class OrientationSensor : public SensorInterface {$/;"	c	namespace:android
OrientedRanges	services/inputflinger/InputReader.h	/^        OrientedRanges() {$/;"	f	struct:android::TouchInputMapper::OrientedRanges
OrientedRanges	services/inputflinger/InputReader.h	/^    struct OrientedRanges {$/;"	s	class:android::TouchInputMapper
OtherInts	services/sensorservice/traits.h	/^            bool) OtherInts;$/;"	t	class:android::TypeTraits
OutputGenerator	opengl/tools/glgen2/registry/reg.py	/^class OutputGenerator:$/;"	c
OutputListener	include/gui/StreamSplitter.h	/^    class OutputListener : public BnProducerListener,$/;"	c	class:android::StreamSplitter
OutputListener	libs/gui/StreamSplitter.cpp	/^StreamSplitter::OutputListener::OutputListener($/;"	f	class:android::StreamSplitter::OutputListener
P	services/sensorservice/Fusion.h	/^    mat<mat33_t, 2, 2> P;$/;"	m	class:android::Fusion
PAD_SIZE	libs/binder/Parcel.cpp	57;"	d	file:
PAGE_ALIGNED	libs/binder/MemoryDealer.cpp	/^        PAGE_ALIGNED = 0x00000001$/;"	e	enum:android::SimpleBestFitAllocator::__anon264	file:
PAGE_FLIP	opengl/libagl/egl.cpp	/^        PAGE_FLIP = 0x00000001,$/;"	e	enum:android::egl_surface_t::__anon232	file:
PARTIAL_UPDATES	services/surfaceflinger/DisplayDevice.h	/^        PARTIAL_UPDATES = 0x00020000, \/\/ video driver feature$/;"	e	enum:android::DisplayDevice::__anon27
PATH_MAX	cmds/rawbu/backup.cpp	24;"	d	file:
PAUSE_DELAY	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^    final static int PAUSE_DELAY = 100;$/;"	f	class:TestActivity
PFNEGLCLIENTWAITSYNCKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLCLIENTWAITSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags, EGLTimeKHR timeout);$/;"	t
PFNEGLCLIENTWAITSYNCNVPROC	opengl/include/EGL/eglext.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLCLIENTWAITSYNCNVPROC) (EGLSyncNV sync, EGLint flags, EGLTimeNV timeout);$/;"	t
PFNEGLCREATEDRMIMAGEMESAPROC	opengl/include/EGL/eglext.h	/^typedef EGLImageKHR (EGLAPIENTRYP PFNEGLCREATEDRMIMAGEMESAPROC) (EGLDisplay dpy, const EGLint *attrib_list);$/;"	t
PFNEGLCREATEFENCESYNCNVPROC	opengl/include/EGL/eglext.h	/^typedef EGLSyncNV (EGLAPIENTRYP PFNEGLCREATEFENCESYNCNVPROC) (EGLDisplay dpy, EGLenum condition, const EGLint *attrib_list);$/;"	t
PFNEGLCREATEIMAGEKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLImageKHR (EGLAPIENTRYP PFNEGLCREATEIMAGEKHRPROC) (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint *attrib_list);$/;"	t
PFNEGLCREATEPIXMAPSURFACEHIPROC	opengl/include/EGL/eglext.h	/^typedef EGLSurface (EGLAPIENTRYP PFNEGLCREATEPIXMAPSURFACEHIPROC) (EGLDisplay dpy, EGLConfig config, struct EGLClientPixmapHI* pixmap);$/;"	t
PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLStreamKHR (EGLAPIENTRYP PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC)(EGLDisplay dpy, EGLNativeFileDescriptorKHR file_descriptor);$/;"	t
PFNEGLCREATESTREAMKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLStreamKHR (EGLAPIENTRYP PFNEGLCREATESTREAMKHRPROC)(EGLDisplay dpy, const EGLint *attrib_list);$/;"	t
PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLSurface (EGLAPIENTRYP PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC)(EGLDisplay dpy, EGLConfig config, EGLStreamKHR stream, const EGLint *attrib_list);$/;"	t
PFNEGLCREATESYNCKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLSyncKHR (EGLAPIENTRYP PFNEGLCREATESYNCKHRPROC) (EGLDisplay dpy, EGLenum type, const EGLint *attrib_list);$/;"	t
PFNEGLDESTROYIMAGEKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYIMAGEKHRPROC) (EGLDisplay dpy, EGLImageKHR image);$/;"	t
PFNEGLDESTROYSTREAMKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYSTREAMKHRPROC)(EGLDisplay dpy, EGLStreamKHR stream);$/;"	t
PFNEGLDESTROYSYNCKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync);$/;"	t
PFNEGLDESTROYSYNCNVPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYSYNCNVPROC) (EGLSyncNV sync);$/;"	t
PFNEGLDUPNATIVEFENCEFDANDROIDPROC	opengl/include/EGL/eglext.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLDUPNATIVEFENCEFDANDROIDPROC)(EGLDisplay dpy, EGLSyncKHR);$/;"	t
PFNEGLEXPORTDRMIMAGEMESAPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLEXPORTDRMIMAGEMESAPROC) (EGLDisplay dpy, EGLImageKHR image, EGLint *name, EGLint *handle, EGLint *stride);$/;"	t
PFNEGLFENCENVPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLFENCENVPROC) (EGLSyncNV sync);$/;"	t
PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLNativeFileDescriptorKHR (EGLAPIENTRYP PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC)(EGLDisplay dpy, EGLStreamKHR stream);$/;"	t
PFNEGLGETSYNCATTRIBKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLGETSYNCATTRIBKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLint attribute, EGLint *value);$/;"	t
PFNEGLGETSYNCATTRIBNVPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLGETSYNCATTRIBNVPROC) (EGLSyncNV sync, EGLint attribute, EGLint *value);$/;"	t
PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC	opengl/include/EGL/eglext.h	/^typedef EGLuint64NV (EGLAPIENTRYP PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC) (void);$/;"	t
PFNEGLGETSYSTEMTIMENVPROC	opengl/include/EGL/eglext.h	/^typedef EGLuint64NV (EGLAPIENTRYP PFNEGLGETSYSTEMTIMENVPROC) (void);$/;"	t
PFNEGLLOCKSURFACEKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLLOCKSURFACEKHRPROC) (EGLDisplay display, EGLSurface surface, const EGLint *attrib_list);$/;"	t
PFNEGLPOSTSUBBUFFERNVPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLPOSTSUBBUFFERNVPROC) (EGLDisplay dpy, EGLSurface surface, EGLint x, EGLint y, EGLint width, EGLint height);$/;"	t
PFNEGLPRESENTATIONTIMEANDROID	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLPRESENTATIONTIMEANDROID) (EGLDisplay dpy, EGLSurface sur, EGLnsecsANDROID time);$/;"	t
PFNEGLQUERYNATIVEDISPLAYNVPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYNATIVEDISPLAYNVPROC)(EGLDisplay dpy, EGLNativeDisplayType *display_id);$/;"	t
PFNEGLQUERYNATIVEPIXMAPNVPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYNATIVEPIXMAPNVPROC)(EGLDisplay dpy, EGLSurface surf, EGLNativePixmapType *pixmap);$/;"	t
PFNEGLQUERYNATIVEWINDOWNVPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYNATIVEWINDOWNVPROC)(EGLDisplay dpy, EGLSurface surf, EGLNativeWindowType *window);$/;"	t
PFNEGLQUERYSTREAMKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSTREAMKHRPROC)(EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLint *value);$/;"	t
PFNEGLQUERYSTREAMTIMEKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSTREAMTIMEKHRPROC)(EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLTimeKHR *value);$/;"	t
PFNEGLQUERYSTREAMU64KHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSTREAMU64KHRPROC)(EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLuint64KHR *value);$/;"	t
PFNEGLQUERYSURFACEPOINTERANGLEPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSURFACEPOINTERANGLEPROC) (EGLDisplay dpy, EGLSurface surface, EGLint attribute, void **value);$/;"	t
PFNEGLSETBLOBCACHEFUNCSANDROIDPROC	opengl/include/EGL/eglext.h	/^typedef void (EGLAPIENTRYP PFNEGLSETBLOBCACHEFUNCSANDROIDPROC)(EGLDisplay dpy, EGLSetBlobFuncANDROID set, EGLGetBlobFuncANDROID get);$/;"	t
PFNEGLSIGNALSYNCKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSIGNALSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLenum mode);$/;"	t
PFNEGLSIGNALSYNCNVPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSIGNALSYNCNVPROC) (EGLSyncNV sync, EGLenum mode);$/;"	t
PFNEGLSTREAMATTRIBKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMATTRIBKHRPROC)(EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLint value);$/;"	t
PFNEGLSTREAMCONSUMERACQUIREKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMERACQUIREKHRPROC)(EGLDisplay dpy, EGLStreamKHR stream);$/;"	t
PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC)(EGLDisplay dpy, EGLStreamKHR stream);$/;"	t
PFNEGLSTREAMCONSUMERRELEASEKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMERRELEASEKHRPROC)(EGLDisplay dpy, EGLStreamKHR stream);$/;"	t
PFNEGLUNLOCKSURFACEKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLUNLOCKSURFACEKHRPROC) (EGLDisplay display, EGLSurface surface);$/;"	t
PFNEGLWAITSYNCKHRPROC	opengl/include/EGL/eglext.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLWAITSYNCKHRPROC)(EGLDisplay dpy, EGLSyncKHR sync, EGLint flags);$/;"	t
PFNGLACTIVESHADERPROGRAMEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLACTIVESHADERPROGRAMEXTPROC) (GLuint pipeline, GLuint program);$/;"	t
PFNGLALPHAFUNCQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLALPHAFUNCQCOMPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLALPHAFUNCXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLclampx ref);$/;"	t
PFNGLBEGINPERFMONITORAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLBEGINPERFQUERYINTELPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLBEGINQUERYEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBEGINQUERYEXTPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDFRAMEBUFFEROESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBINDFRAMEBUFFEROESPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDPROGRAMPIPELINEEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBINDPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	t
PFNGLBINDRENDERBUFFEROESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBINDRENDERBUFFEROESPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDVERTEXARRAYOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBINDVERTEXARRAYOESPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXARRAYOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBINDVERTEXARRAYOESPROC) (GLuint array);$/;"	t
PFNGLBLENDBARRIERKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);$/;"	t
PFNGLBLENDBARRIERNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	t
PFNGLBLENDEQUATIONIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDEQUATIONIEXTPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDEQUATIONOESPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDEQUATIONSEPARATEIEXTPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDEQUATIONSEPARATEOESPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDFUNCIEXTPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCSEPARATEIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDFUNCSEPARATEIEXTPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDFUNCSEPARATEOESPROC) (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDPARAMETERINVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t
PFNGLBLITFRAMEBUFFERANGLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLITFRAMEBUFFERANGLEPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITFRAMEBUFFERNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLITFRAMEBUFFERNVPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSOESPROC	opengl/include/GLES/glext.h	/^typedef GLenum (GL_APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSOESPROC) (GLenum target);$/;"	t
PFNGLCLEARCOLORXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLEARCOLORXOESPROC) (GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);$/;"	t
PFNGLCLEARDEPTHFOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);$/;"	t
PFNGLCLEARDEPTHXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLclampx depth);$/;"	t
PFNGLCLIENTWAITSYNCAPPLEPROC	opengl/include/GLES/glext.h	/^typedef GLenum (GL_APIENTRYP PFNGLCLIENTWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCLIENTWAITSYNCAPPLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLenum (GL_APIENTRYP PFNGLCLIENTWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCLIPPLANEFIMGPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLIPPLANEFIMGPROC) (GLenum p, const GLfloat *eqn);$/;"	t
PFNGLCLIPPLANEFOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);$/;"	t
PFNGLCLIPPLANEXIMGPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLIPPLANEXIMGPROC) (GLenum p, const GLfixed *eqn);$/;"	t
PFNGLCLIPPLANEXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);$/;"	t
PFNGLCOLOR4XOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	t
PFNGLCOLORMASKIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOLORMASKIEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOPYBUFFERSUBDATANVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOPYBUFFERSUBDATANVPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYIMAGESUBDATAEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOPYIMAGESUBDATAEXTPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOPYTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURELEVELSAPPLEPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCOPYTEXTURELEVELSAPPLEPROC) (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);$/;"	t
PFNGLCOPYTEXTURELEVELSAPPLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOPYTEXTURELEVELSAPPLEPROC) (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);$/;"	t
PFNGLCOVERAGEMASKNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOVERAGEMASKNVPROC) (GLboolean mask);$/;"	t
PFNGLCOVERAGEOPERATIONNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOVERAGEOPERATIONNVPROC) (GLenum operation);$/;"	t
PFNGLCREATEPERFQUERYINTELPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	t
PFNGLCREATESHADERPROGRAMVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLuint (GL_APIENTRYP PFNGLCREATESHADERPROGRAMVEXTPROC) (GLenum type, GLsizei count, const GLchar **strings);$/;"	t
PFNGLCURRENTPALETTEMATRIXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCURRENTPALETTEMATRIXOESPROC) (GLuint matrixpaletteindex);$/;"	t
PFNGLDEBUGMESSAGECALLBACKKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGECALLBACKKHRPROC) (GLDEBUGPROCKHR callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECONTROLKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGECONTROLKHRPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEINSERTKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGEINSERTKHRPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDELETEFENCESNVPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFRAMEBUFFERSOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEFRAMEBUFFERSOESPROC) (GLsizei n, const GLuint* framebuffers);$/;"	t
PFNGLDELETEPERFMONITORSAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLDELETEPERFQUERYINTELPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLDELETEPROGRAMPIPELINESEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEPROGRAMPIPELINESEXTPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
PFNGLDELETEQUERIESEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEQUERIESEXTPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETERENDERBUFFERSOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDELETERENDERBUFFERSOESPROC) (GLsizei n, const GLuint* renderbuffers);$/;"	t
PFNGLDELETESYNCAPPLEPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDELETESYNCAPPLEPROC) (GLsync sync);$/;"	t
PFNGLDELETESYNCAPPLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETESYNCAPPLEPROC) (GLsync sync);$/;"	t
PFNGLDELETEVERTEXARRAYSOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEVERTEXARRAYSOESPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXARRAYSOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEVERTEXARRAYSOESPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDEPTHRANGEFOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf zNear, GLclampf zFar);$/;"	t
PFNGLDEPTHRANGEXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLclampx zNear, GLclampx zFar);$/;"	t
PFNGLDISABLEDRIVERCONTROLQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDISABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	t
PFNGLDISABLEDRIVERCONTROLQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDISABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	t
PFNGLDISABLEIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDISABLEIEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISCARDFRAMEBUFFEREXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDISCARDFRAMEBUFFEREXTPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLDISCARDFRAMEBUFFEREXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDISCARDFRAMEBUFFEREXTPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLDRAWARRAYSINSTANCEDANGLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWARRAYSINSTANCEDANGLEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWARRAYSINSTANCEDNVPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWBUFFERSEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSEXTPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSINDEXEDEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSINDEXEDEXTPROC) (GLint n, const GLenum *location, const GLint *indices);$/;"	t
PFNGLDRAWBUFFERSNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSNVPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDANGLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWELEMENTSINSTANCEDANGLEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWELEMENTSINSTANCEDNVPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWTEXFOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXFOESPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);$/;"	t
PFNGLDRAWTEXFVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXFVOESPROC) (const GLfloat *coords);$/;"	t
PFNGLDRAWTEXIOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXIOESPROC) (GLint x, GLint y, GLint z, GLint width, GLint height);$/;"	t
PFNGLDRAWTEXIVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXIVOESPROC) (const GLint *coords);$/;"	t
PFNGLDRAWTEXSOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXSOESPROC) (GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);$/;"	t
PFNGLDRAWTEXSVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXSVOESPROC) (const GLshort *coords);$/;"	t
PFNGLDRAWTEXXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXXOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);$/;"	t
PFNGLDRAWTEXXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXXVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLeglImageOES image);$/;"	t
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLeglImageOES image);$/;"	t
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES image);$/;"	t
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES image);$/;"	t
PFNGLENABLEDRIVERCONTROLQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLENABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	t
PFNGLENABLEDRIVERCONTROLQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	t
PFNGLENABLEIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENABLEIEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENDPERFMONITORAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLENDPERFQUERYINTELPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLENDQUERYEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENDQUERYEXTPROC) (GLenum target);$/;"	t
PFNGLENDTILINGQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLENDTILINGQCOMPROC) (GLbitfield preserveMask);$/;"	t
PFNGLENDTILINGQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENDTILINGQCOMPROC) (GLbitfield preserveMask);$/;"	t
PFNGLEXTGETBUFFERPOINTERVQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETBUFFERPOINTERVQCOMPROC) (GLenum target, GLvoid **params);$/;"	t
PFNGLEXTGETBUFFERPOINTERVQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETBUFFERPOINTERVQCOMPROC) (GLenum target, void **params);$/;"	t
PFNGLEXTGETBUFFERSQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETBUFFERSQCOMPROC) (GLuint *buffers, GLint maxBuffers, GLint *numBuffers);$/;"	t
PFNGLEXTGETBUFFERSQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETBUFFERSQCOMPROC) (GLuint *buffers, GLint maxBuffers, GLint *numBuffers);$/;"	t
PFNGLEXTGETFRAMEBUFFERSQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETFRAMEBUFFERSQCOMPROC) (GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers);$/;"	t
PFNGLEXTGETFRAMEBUFFERSQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETFRAMEBUFFERSQCOMPROC) (GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers);$/;"	t
PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC) (GLuint program, GLenum shadertype, GLchar *source, GLint *length);$/;"	t
PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC) (GLuint program, GLenum shadertype, GLchar *source, GLint *length);$/;"	t
PFNGLEXTGETPROGRAMSQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETPROGRAMSQCOMPROC) (GLuint *programs, GLint maxPrograms, GLint *numPrograms);$/;"	t
PFNGLEXTGETPROGRAMSQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETPROGRAMSQCOMPROC) (GLuint *programs, GLint maxPrograms, GLint *numPrograms);$/;"	t
PFNGLEXTGETRENDERBUFFERSQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETRENDERBUFFERSQCOMPROC) (GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers);$/;"	t
PFNGLEXTGETRENDERBUFFERSQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETRENDERBUFFERSQCOMPROC) (GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers);$/;"	t
PFNGLEXTGETSHADERSQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETSHADERSQCOMPROC) (GLuint *shaders, GLint maxShaders, GLint *numShaders);$/;"	t
PFNGLEXTGETSHADERSQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETSHADERSQCOMPROC) (GLuint *shaders, GLint maxShaders, GLint *numShaders);$/;"	t
PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC) (GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC) (GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLEXTGETTEXSUBIMAGEQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXSUBIMAGEQCOMPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid *texels);$/;"	t
PFNGLEXTGETTEXSUBIMAGEQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXSUBIMAGEQCOMPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels);$/;"	t
PFNGLEXTGETTEXTURESQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXTURESQCOMPROC) (GLuint *textures, GLint maxTextures, GLint *numTextures);$/;"	t
PFNGLEXTGETTEXTURESQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXTURESQCOMPROC) (GLuint *textures, GLint maxTextures, GLint *numTextures);$/;"	t
PFNGLEXTISPROGRAMBINARYQCOMPROC	opengl/include/GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLEXTISPROGRAMBINARYQCOMPROC) (GLuint program);$/;"	t
PFNGLEXTISPROGRAMBINARYQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLEXTISPROGRAMBINARYQCOMPROC) (GLuint program);$/;"	t
PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLFENCESYNCAPPLEPROC	opengl/include/GLES/glext.h	/^typedef GLsync (GL_APIENTRYP PFNGLFENCESYNCAPPLEPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFENCESYNCAPPLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLsync (GL_APIENTRYP PFNGLFENCESYNCAPPLEPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFINISHFENCENVPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFOGXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);$/;"	t
PFNGLFOGXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFEROESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEROESPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DOESPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DOESPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTUREEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRUSTUMFOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);$/;"	t
PFNGLFRUSTUMXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);$/;"	t
PFNGLGENERATEMIPMAPOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGENERATEMIPMAPOESPROC) (GLenum target);$/;"	t
PFNGLGENFENCESNVPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFRAMEBUFFERSOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGENFRAMEBUFFERSOESPROC) (GLsizei n, GLuint* framebuffers);$/;"	t
PFNGLGENPERFMONITORSAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLGENPROGRAMPIPELINESEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENPROGRAMPIPELINESEXTPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLGENQUERIESEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENQUERIESEXTPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENRENDERBUFFERSOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGENRENDERBUFFERSOESPROC) (GLsizei n, GLuint* renderbuffers);$/;"	t
PFNGLGENVERTEXARRAYSOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGENVERTEXARRAYSOESPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXARRAYSOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENVERTEXARRAYSOESPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGETBUFFERPOINTERVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETBUFFERPOINTERVOESPROC) (GLenum target, GLenum pname, GLvoid ** params);$/;"	t
PFNGLGETBUFFERPOINTERVOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETBUFFERPOINTERVOESPROC) (GLenum target, GLenum pname, void **params);$/;"	t
PFNGLGETCLIPPLANEFOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum pname, GLfloat eqn[4]);$/;"	t
PFNGLGETCLIPPLANEXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum pname, GLfixed eqn[4]);$/;"	t
PFNGLGETDEBUGMESSAGELOGKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLuint (GL_APIENTRYP PFNGLGETDEBUGMESSAGELOGKHRPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDRIVERCONTROLSQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETDRIVERCONTROLSQCOMPROC) (GLint *num, GLsizei size, GLuint *driverControls);$/;"	t
PFNGLGETDRIVERCONTROLSQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETDRIVERCONTROLSQCOMPROC) (GLint *num, GLsizei size, GLuint *driverControls);$/;"	t
PFNGLGETDRIVERCONTROLSTRINGQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETDRIVERCONTROLSTRINGQCOMPROC) (GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString);$/;"	t
PFNGLGETDRIVERCONTROLSTRINGQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETDRIVERCONTROLSTRINGQCOMPROC) (GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString);$/;"	t
PFNGLGETFENCEIVNVPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFENCEIVNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFIRSTPERFQUERYIDINTELPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	t
PFNGLGETFIXEDVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC) (GLenum target, GLenum attachment, GLenum pname, GLint* params);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSEXTPROC	opengl/include/GLES/glext.h	/^typedef GLenum (GL_APIENTRYP PFNGLGETGRAPHICSRESETSTATUSEXTPROC) (void);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLenum (GL_APIENTRYP PFNGLGETGRAPHICSRESETSTATUSEXTPROC) (void);$/;"	t
PFNGLGETINTEGER64VAPPLEPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETINTEGER64VAPPLEPROC) (GLenum pname, GLint64 *params);$/;"	t
PFNGLGETINTEGER64VAPPLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETINTEGER64VAPPLEPROC) (GLenum pname, GLint64 *params);$/;"	t
PFNGLGETINTEGERI_VEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETINTEGERI_VEXTPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETLIGHTXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETLIGHTXVOESPROC) (GLenum light, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETMATERIALXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETMATERIALXVOESPROC) (GLenum face, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETNEXTPERFQUERYIDINTELPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	t
PFNGLGETNUNIFORMFVEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETNUNIFORMFVEXTPROC) (GLuint program, GLint location, GLsizei bufSize, float *params);$/;"	t
PFNGLGETNUNIFORMFVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETNUNIFORMFVEXTPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMIVEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETNUNIFORMIVEXTPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETNUNIFORMIVEXTPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETOBJECTLABELEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTLABELKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTLABELKHRPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPTRLABELKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTPTRLABELKHRPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETPERFCOUNTERINFOINTELPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);$/;"	t
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	t
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void *data);$/;"	t
PFNGLGETPERFMONITORCOUNTERSAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	t
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	t
PFNGLGETPERFMONITORGROUPSAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	t
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	t
PFNGLGETPERFQUERYDATAINTELPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);$/;"	t
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId);$/;"	t
PFNGLGETPERFQUERYINFOINTELPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);$/;"	t
PFNGLGETPOINTERVKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPOINTERVKHRPROC) (GLenum pname, void **params);$/;"	t
PFNGLGETPROGRAMBINARYOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMBINARYOESPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);$/;"	t
PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMPIPELINEIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMPIPELINEIVEXTPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTI64VEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETQUERYOBJECTIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTIVEXTPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETQUERYOBJECTUIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTUIVEXTPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVOESPROC) (GLenum target, GLenum pname, GLint* params);$/;"	t
PFNGLGETSAMPLERPARAMETERIIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETSAMPLERPARAMETERIIVEXTPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIUIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVEXTPROC) (GLuint sampler, GLenum pname, GLuint *params);$/;"	t
PFNGLGETSYNCIVAPPLEPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETSYNCIVAPPLEPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETSYNCIVAPPLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETSYNCIVAPPLEPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETTEXENVXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum env, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETTEXGENFVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXGENFVOESPROC) (GLenum coord, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXGENIVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXGENIVOESPROC) (GLenum coord, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXGENXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETTEXPARAMETERIIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC) (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source);$/;"	t
PFNGLINSERTEVENTMARKEREXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLISENABLEDIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISENABLEDIEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISFENCENVPROC	opengl/include/GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFRAMEBUFFEROESPROC	opengl/include/GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISFRAMEBUFFEROESPROC) (GLuint framebuffer);$/;"	t
PFNGLISPROGRAMPIPELINEEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	t
PFNGLISQUERYEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISQUERYEXTPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFEROESPROC	opengl/include/GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISRENDERBUFFEROESPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSYNCAPPLEPROC	opengl/include/GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISSYNCAPPLEPROC) (GLsync sync);$/;"	t
PFNGLISSYNCAPPLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISSYNCAPPLEPROC) (GLsync sync);$/;"	t
PFNGLISVERTEXARRAYOESPROC	opengl/include/GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISVERTEXARRAYOESPROC) (GLuint array);$/;"	t
PFNGLISVERTEXARRAYOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISVERTEXARRAYOESPROC) (GLuint array);$/;"	t
PFNGLLABELOBJECTEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, const GLchar *label);$/;"	t
PFNGLLIGHTMODELXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);$/;"	t
PFNGLLIGHTMODELXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t
PFNGLLIGHTXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	t
PFNGLLIGHTXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params);$/;"	t
PFNGLLINEWIDTHXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);$/;"	t
PFNGLLOADMATRIXXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);$/;"	t
PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC) (void);$/;"	t
PFNGLMAPBUFFEROESPROC	opengl/include/GLES/glext.h	/^typedef void* (GL_APIENTRYP PFNGLMAPBUFFEROESPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFEROESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void *(GL_APIENTRYP PFNGLMAPBUFFEROESPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERRANGEEXTPROC	opengl/include/GLES/glext.h	/^typedef void* (GL_APIENTRYP PFNGLMAPBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPBUFFERRANGEEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void *(GL_APIENTRYP PFNGLMAPBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMATERIALXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t
PFNGLMATERIALXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *params);$/;"	t
PFNGLMATRIXINDEXPOINTEROESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMATRIXINDEXPOINTEROESPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMINSAMPLESHADINGOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLMINSAMPLESHADINGOESPROC) (GLfloat value);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const*indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);$/;"	t
PFNGLMULTITEXCOORD4XOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	t
PFNGLMULTMATRIXXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);$/;"	t
PFNGLNORMAL3XOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	t
PFNGLOBJECTLABELKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLOBJECTLABELKHRPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLOBJECTPTRLABELKHRPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLORTHOFOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLORTHOFOESPROC) (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);$/;"	t
PFNGLORTHOXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLORTHOXOESPROC) (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);$/;"	t
PFNGLPATCHPARAMETERIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPATCHPARAMETERIEXTPROC) (GLenum pname, GLint value);$/;"	t
PFNGLPOINTPARAMETERXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLPOINTPARAMETERXOESPROC) (GLenum pname, GLfixed param);$/;"	t
PFNGLPOINTPARAMETERXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t
PFNGLPOINTSIZEXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);$/;"	t
PFNGLPOLYGONOFFSETXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);$/;"	t
PFNGLPOPDEBUGGROUPKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPOPDEBUGGROUPKHRPROC) (void);$/;"	t
PFNGLPOPGROUPMARKEREXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t
PFNGLPRIMITIVEBOUNDINGBOXEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXEXTPROC) (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);$/;"	t
PFNGLPROGRAMBINARYOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMBINARYOESPROC) (GLuint program, GLenum binaryFormat, const void *binary, GLint length);$/;"	t
PFNGLPROGRAMPARAMETERIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMUNIFORM1FEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1IEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2FEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2IEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3FEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3IEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4FEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4IEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPUSHDEBUGGROUPKHRPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPUSHDEBUGGROUPKHRPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLPUSHGROUPMARKEREXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLQUERYCOUNTEREXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLQUERYCOUNTEREXTPROC) (GLuint id, GLenum target);$/;"	t
PFNGLQUERYMATRIXXOESPROC	opengl/include/GLES/glext.h	/^typedef GLbitfield (GL_APIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed mantissa[16], GLint exponent[16]);$/;"	t
PFNGLREADBUFFERINDEXEDEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLREADBUFFERINDEXEDEXTPROC) (GLenum src, GLint index);$/;"	t
PFNGLREADBUFFERNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLREADBUFFERNVPROC) (GLenum mode);$/;"	t
PFNGLREADNPIXELSEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLREADNPIXELSEXTPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLREADNPIXELSEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLREADNPIXELSEXTPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC) (void);$/;"	t
PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC) (void);$/;"	t
PFNGLROTATEXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLSAMPLECOVERAGEXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLSAMPLECOVERAGEXOESPROC) (GLclampx value, GLboolean invert);$/;"	t
PFNGLSAMPLERPARAMETERIIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSAMPLERPARAMETERIIVEXTPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSAMPLERPARAMETERIUIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSAMPLERPARAMETERIUIVEXTPROC) (GLuint sampler, GLenum pname, const GLuint *param);$/;"	t
PFNGLSCALEXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	t
PFNGLSETFENCENVPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFENCENVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSTARTTILINGQCOMPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLSTARTTILINGQCOMPROC) (GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);$/;"	t
PFNGLSTARTTILINGQCOMPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSTARTTILINGQCOMPROC) (GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);$/;"	t
PFNGLTESTFENCENVPROC	opengl/include/GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTEXBUFFEREXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERRANGEEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXBUFFERRANGEEXTPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXENVXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t
PFNGLTEXENVXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);$/;"	t
PFNGLTEXGENFOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENFOESPROC) (GLenum coord, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXGENFVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENFVOESPROC) (GLenum coord, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXGENIOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENIOESPROC) (GLenum coord, GLenum pname, GLint param);$/;"	t
PFNGLTEXGENIVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENIVOESPROC) (GLenum coord, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXGENXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);$/;"	t
PFNGLTEXGENXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params);$/;"	t
PFNGLTEXIMAGE3DOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXPARAMETERIIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIUIVEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t
PFNGLTEXPARAMETERXVOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);$/;"	t
PFNGLTEXSTORAGE1DEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE1DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXSTORAGE1DEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE1DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXSTORAGE2DEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE2DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXSTORAGE2DEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE2DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXSTORAGE3DEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE3DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXSTORAGE3DEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE3DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSUBIMAGE3DOESPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESTORAGE1DEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE1DEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE2DEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE2DEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE3DEXTPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESTORAGE3DEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTUREVIEWEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTUREVIEWEXTPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	t
PFNGLTRANSLATEXOESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLUNIFORMMATRIX2X3FVNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLUNIFORMMATRIX2X3FVNVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLUNIFORMMATRIX2X4FVNVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLUNIFORMMATRIX3X2FVNVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLUNIFORMMATRIX3X4FVNVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLUNIFORMMATRIX4X2FVNVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLUNIFORMMATRIX4X3FVNVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNMAPBUFFEROESPROC	opengl/include/GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLUNMAPBUFFEROESPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFEROESPROC	opengl/include/GLES2/gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLUNMAPBUFFEROESPROC) (GLenum target);$/;"	t
PFNGLUSEPROGRAMSTAGESEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLUSEPROGRAMSTAGESEXTPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMPIPELINEEXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	t
PFNGLVERTEXATTRIBDIVISORANGLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLVERTEXATTRIBDIVISORANGLEPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBDIVISOREXTPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLVERTEXATTRIBDIVISOREXTPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBDIVISORNVPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLVERTEXATTRIBDIVISORNVPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLWAITSYNCAPPLEPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWAITSYNCAPPLEPROC	opengl/include/GLES2/gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWEIGHTPOINTEROESPROC	opengl/include/GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLWEIGHTPOINTEROESPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PI	opengl/tests/angeles/demo.c	39;"	d	file:
PI	opengl/tests/angeles/demo.c	40;"	d	file:
PING_TRANSACTION	cmds/servicemanager/binder.h	/^    PING_TRANSACTION  = B_PACK_CHARS('_','P','N','G'),$/;"	e	enum:__anon13
PING_TRANSACTION	include/binder/IBinder.h	/^        PING_TRANSACTION        = B_PACK_CHARS('_','P','N','G'),$/;"	e	enum:android::IBinder::__anon209
PIXEL_FORMAT_BGRA_8888	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_BGRA_8888   = HAL_PIXEL_FORMAT_BGRA_8888,   \/\/ 4x8-bit BGRA$/;"	e	enum:android::__anon77
PIXEL_FORMAT_CUSTOM	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_CUSTOM         = -4,$/;"	e	enum:android::__anon77
PIXEL_FORMAT_NONE	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_NONE       =   0,$/;"	e	enum:android::__anon77
PIXEL_FORMAT_OPAQUE	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_OPAQUE         = -1,$/;"	e	enum:android::__anon77
PIXEL_FORMAT_RGBA_4444	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGBA_4444   = 7,                            \/\/ 16-bit ARGB$/;"	e	enum:android::__anon77
PIXEL_FORMAT_RGBA_5551	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGBA_5551   = 6,                            \/\/ 16-bit ARGB$/;"	e	enum:android::__anon77
PIXEL_FORMAT_RGBA_8888	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGBA_8888   = HAL_PIXEL_FORMAT_RGBA_8888,   \/\/ 4x8-bit RGBA$/;"	e	enum:android::__anon77
PIXEL_FORMAT_RGBX_8888	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGBX_8888   = HAL_PIXEL_FORMAT_RGBX_8888,   \/\/ 4x8-bit RGB0$/;"	e	enum:android::__anon77
PIXEL_FORMAT_RGB_565	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGB_565     = HAL_PIXEL_FORMAT_RGB_565,     \/\/ 16-bit RGB$/;"	e	enum:android::__anon77
PIXEL_FORMAT_RGB_888	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_RGB_888     = HAL_PIXEL_FORMAT_RGB_888,     \/\/ 3x8-bit RGB$/;"	e	enum:android::__anon77
PIXEL_FORMAT_TRANSLUCENT	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_TRANSLUCENT    = -3,$/;"	e	enum:android::__anon77
PIXEL_FORMAT_TRANSPARENT	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_TRANSPARENT    = -2,$/;"	e	enum:android::__anon77
PIXEL_FORMAT_UNKNOWN	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_UNKNOWN    =   0,$/;"	e	enum:android::__anon77
PIXEL_FORMAT_sRGB_A_8888	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_sRGB_A_8888 = HAL_PIXEL_FORMAT_sRGB_A_8888, \/\/ 4x8-bit sRGB + A$/;"	e	enum:android::__anon77
PIXEL_FORMAT_sRGB_X_8888	include/ui/PixelFormat.h	/^    PIXEL_FORMAT_sRGB_X_8888 = HAL_PIXEL_FORMAT_sRGB_X_8888, \/\/ 4x8-bit sRGB, no A$/;"	e	enum:android::__anon77
PIXEL_SIZE	libs/gui/tests/SRGB_test.cpp	/^        PIXEL_SIZE = 4, \/\/ bytes or components$/;"	e	enum:android::SRGBTest::__anon253	file:
PKG_DIR_POSTFIX	cmds/installd/installd.h	57;"	d
PKG_LIB_POSTFIX	cmds/installd/installd.h	59;"	d
PKG_NAME_MAX	cmds/installd/installd.h	83;"	d
PKG_PATH_MAX	cmds/installd/installd.h	84;"	d
PLANE_ALPHA_EQ_ONE	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            PLANE_ALPHA_EQ_ONE      =       0x00000000,$/;"	e	enum:android::ProgramCache::Key::__anon33
PLANE_ALPHA_LT_ONE	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            PLANE_ALPHA_LT_ONE      =       0x00000004,$/;"	e	enum:android::ProgramCache::Key::__anon33
PLANE_ALPHA_MASK	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            PLANE_ALPHA_MASK        =       0x00000004,$/;"	e	enum:android::ProgramCache::Key::__anon33
PLATFORM_DIR	libs/binder/Android.mk	/^PLATFORM_DIR := $(TARGET_BOARD_PLATFORM)$/;"	m
PLATFORM_DIR	libs/binder/Android.mk	/^PLATFORM_DIR := $(TARGET_BOARD_PLATFORM)-$(TARGET_SLSI_VARIANT)$/;"	m
POINTER_USAGE_GESTURES	services/inputflinger/InputReader.h	/^        POINTER_USAGE_GESTURES,$/;"	e	enum:android::TouchInputMapper::PointerUsage
POINTER_USAGE_MOUSE	services/inputflinger/InputReader.h	/^        POINTER_USAGE_MOUSE,$/;"	e	enum:android::TouchInputMapper::PointerUsage
POINTER_USAGE_NONE	services/inputflinger/InputReader.h	/^        POINTER_USAGE_NONE,$/;"	e	enum:android::TouchInputMapper::PointerUsage
POINTER_USAGE_STYLUS	services/inputflinger/InputReader.h	/^        POINTER_USAGE_STYLUS,$/;"	e	enum:android::TouchInputMapper::PointerUsage
POLICY_FLAG_DISABLE_KEY_REPEAT	include/input/Input.h	/^    POLICY_FLAG_DISABLE_KEY_REPEAT = 0x08000000,$/;"	e	enum:android::__anon118
POLICY_FLAG_FILTERED	include/input/Input.h	/^    POLICY_FLAG_FILTERED = 0x04000000,$/;"	e	enum:android::__anon118
POLICY_FLAG_FUNCTION	include/input/Input.h	/^    POLICY_FLAG_FUNCTION = 0x00000004,$/;"	e	enum:android::__anon118
POLICY_FLAG_INJECTED	include/input/Input.h	/^    POLICY_FLAG_INJECTED = 0x01000000,$/;"	e	enum:android::__anon118
POLICY_FLAG_INTERACTIVE	include/input/Input.h	/^    POLICY_FLAG_INTERACTIVE = 0x20000000,$/;"	e	enum:android::__anon118
POLICY_FLAG_PASS_TO_USER	include/input/Input.h	/^    POLICY_FLAG_PASS_TO_USER = 0x40000000,$/;"	e	enum:android::__anon118
POLICY_FLAG_RAW_MASK	include/input/Input.h	/^    POLICY_FLAG_RAW_MASK = 0x0000ffff,$/;"	e	enum:android::__anon118
POLICY_FLAG_TRUSTED	include/input/Input.h	/^    POLICY_FLAG_TRUSTED = 0x02000000,$/;"	e	enum:android::__anon118
POLICY_FLAG_VIRTUAL	include/input/Input.h	/^    POLICY_FLAG_VIRTUAL = 0x00000002,$/;"	e	enum:android::__anon118
POLICY_FLAG_WAKE	include/input/Input.h	/^    POLICY_FLAG_WAKE = 0x00000001,$/;"	e	enum:android::__anon118
POSITION	services/inputflinger/tests/InputReader_test.cpp	/^        POSITION = 1 << 0,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
POWERMANAGER_PARTIAL_WAKE_LOCK	include/powermanager/PowerManager.h	/^    POWERMANAGER_PARTIAL_WAKE_LOCK = 1, \/\/ equals PowerManager.PARTIAL_WAKE_LOCK constant$/;"	e	enum:android::__anon156
POWER_HINT	services/powermanager/IPowerManager.cpp	/^    POWER_HINT = IBinder::FIRST_CALL_TRANSACTION + 4,$/;"	e	enum:android::__anon74	file:
PRESENTATION_POINTER	services/inputflinger/PointerControllerInterface.h	/^        PRESENTATION_POINTER,$/;"	e	enum:android::PointerControllerInterface::Presentation
PRESENTATION_SPOT	services/inputflinger/PointerControllerInterface.h	/^        PRESENTATION_SPOT,$/;"	e	enum:android::PointerControllerInterface::Presentation
PRESENTATION_STYLUS_HOVER	services/inputflinger/PointerControllerInterface.h	/^        PRESENTATION_STYLUS_HOVER,$/;"	e	enum:android::PointerControllerInterface::Presentation
PRESENT_LATER	include/gui/BufferQueue.h	/^        PRESENT_LATER = IGraphicBufferConsumer::PRESENT_LATER,$/;"	e	enum:android::BufferQueue::__anon144
PRESENT_LATER	include/gui/IGraphicBufferConsumer.h	/^        PRESENT_LATER,$/;"	e	enum:android::IGraphicBufferConsumer::__anon131
PRESS	services/inputflinger/InputReader.h	/^            PRESS,$/;"	e	enum:android::TouchInputMapper::PointerGesture::Mode
PRESSURE	services/inputflinger/tests/InputReader_test.cpp	/^        PRESSURE = 1 << 3,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
PRESSURE_CALIBRATION_AMPLITUDE	services/inputflinger/InputReader.h	/^            PRESSURE_CALIBRATION_AMPLITUDE,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureCalibration
PRESSURE_CALIBRATION_DEFAULT	services/inputflinger/InputReader.h	/^            PRESSURE_CALIBRATION_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureCalibration
PRESSURE_CALIBRATION_NONE	services/inputflinger/InputReader.h	/^            PRESSURE_CALIBRATION_NONE,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureCalibration
PRESSURE_CALIBRATION_PHYSICAL	services/inputflinger/InputReader.h	/^            PRESSURE_CALIBRATION_PHYSICAL,$/;"	e	enum:android::TouchInputMapper::Calibration::PressureCalibration
PRIMARY_USER_PREFIX	cmds/installd/installd.h	54;"	d
PRIVATE_APP_SUBDIR	cmds/installd/installd.h	73;"	d
PRIV_APP_SUBDIR	cmds/installd/installd.h	65;"	d
PROJECTION	opengl/libagl/context.h	/^        PROJECTION          = 0x02,$/;"	e	enum:android::gl::transform_state_t::__anon228
PROPERTY_LABEL	include/input/KeyCharacterMap.h	/^            PROPERTY_LABEL = 1,$/;"	e	enum:android::KeyCharacterMap::Parser::__anon111
PROPERTY_META	include/input/KeyCharacterMap.h	/^            PROPERTY_META = 3,$/;"	e	enum:android::KeyCharacterMap::Parser::__anon111
PROPERTY_NUMBER	include/input/KeyCharacterMap.h	/^            PROPERTY_NUMBER = 2,$/;"	e	enum:android::KeyCharacterMap::Parser::__anon111
PROTOBUF_gltrace_2eproto__INCLUDED	opengl/libs/GLES_trace/src/gltrace.pb.h	5;"	d
PSTORE_LAST_KMSG	cmds/dumpstate/dumpstate.c	47;"	d	file:
PURE	include/ui/TMatHelpers.h	255;"	d
PURE	include/ui/TMatHelpers.h	33;"	d
PURE	include/ui/TVecHelpers.h	30;"	d
PURE	include/ui/TVecHelpers.h	375;"	d
PURE	include/ui/mat4.h	29;"	d
PURE	include/ui/mat4.h	393;"	d
PURE	services/sensorservice/vec.h	29;"	d
ParameterChecker	opengl/tools/glgen/src/ParameterChecker.java	/^    public ParameterChecker(BufferedReader reader) throws Exception {$/;"	m	class:ParameterChecker
ParameterChecker	opengl/tools/glgen/src/ParameterChecker.java	/^public class ParameterChecker {$/;"	c
ParameterType	services/sensorservice/traits.h	/^    typedef typename Select<isStdArith || isPointer, T, const T&>::Result ParameterType;$/;"	t	class:android::TypeTraits
Parameters	services/inputflinger/InputReader.h	/^    struct Parameters {$/;"	s	class:android::CursorInputMapper
Parameters	services/inputflinger/InputReader.h	/^    struct Parameters {$/;"	s	class:android::KeyboardInputMapper
Parameters	services/inputflinger/InputReader.h	/^    struct Parameters {$/;"	s	class:android::TouchInputMapper
Parcel	include/binder/Parcel.h	/^class Parcel {$/;"	c	namespace:android
Parcel	libs/binder/Parcel.cpp	/^Parcel::Parcel()$/;"	f	class:android::Parcel
Parser	include/input/KeyCharacterMap.h	/^    class Parser {$/;"	c	class:android::KeyCharacterMap
Parser	include/input/KeyLayoutMap.h	/^    class Parser {$/;"	c	class:android::KeyLayoutMap
Parser	include/input/VirtualKeyMap.h	/^    class Parser {$/;"	c	class:android::VirtualKeyMap
Parser	libs/input/KeyCharacterMap.cpp	/^KeyCharacterMap::Parser::Parser(KeyCharacterMap* map, Tokenizer* tokenizer, Format format) :$/;"	f	class:android::KeyCharacterMap::Parser
Parser	libs/input/KeyLayoutMap.cpp	/^KeyLayoutMap::Parser::Parser(KeyLayoutMap* map, Tokenizer* tokenizer) :$/;"	f	class:android::KeyLayoutMap::Parser
Parser	libs/input/VirtualKeyMap.cpp	/^VirtualKeyMap::Parser::Parser(VirtualKeyMap* map, Tokenizer* tokenizer) :$/;"	f	class:android::VirtualKeyMap::Parser
PermissionCache	include/binder/PermissionCache.h	/^class PermissionCache : Singleton<PermissionCache> {$/;"	c	namespace:android
PermissionCache	libs/binder/PermissionCache.cpp	/^PermissionCache::PermissionCache() {$/;"	f	class:android::PermissionCache
Phi	services/sensorservice/Fusion.h	/^    mat<mat33_t, 2, 2> Phi;$/;"	m	class:android::Fusion
Pipe	libs/input/tests/TestHelpers.h	/^    Pipe() {$/;"	f	class:android::Pipe
Pipe	libs/input/tests/TestHelpers.h	/^class Pipe {$/;"	c	namespace:android
PixelFormat	include/ui/PixelFormat.h	/^typedef int32_t PixelFormat;$/;"	t	namespace:android
PixelFormatInfo	include/ui/PixelFormat.h	/^    inline PixelFormatInfo() : version(sizeof(PixelFormatInfo)) { }$/;"	f	struct:android::PixelFormatInfo
PixelFormatInfo	include/ui/PixelFormat.h	/^struct PixelFormatInfo {$/;"	s	namespace:android
PlaneIndex	include/media/hardware/HardwareAPI.h	/^    enum PlaneIndex {$/;"	g	struct:android::MediaImage
PlaneInfo	include/media/hardware/HardwareAPI.h	/^    struct PlaneInfo {$/;"	s	struct:android::MediaImage
Point	include/ui/Point.h	/^    inline Point() {$/;"	f	class:android::Point
Point	include/ui/Point.h	/^    inline Point(int x, int y) : x(x), y(y) {$/;"	f	class:android::Point
Point	include/ui/Point.h	/^class Point : public LightFlattenablePod<Point>$/;"	c	namespace:android
PointeeType	services/sensorservice/traits.h	/^        typedef NullType PointeeType;$/;"	t	struct:android::TypeTraits::PointerTraits
PointeeType	services/sensorservice/traits.h	/^        typedef U PointeeType;$/;"	t	struct:android::TypeTraits::PointerTraits
Pointer	include/input/InputTransport.h	/^            struct Pointer{$/;"	s	struct:android::InputMessage::Body::Motion
Pointer	services/inputflinger/InputReader.h	/^    struct Pointer {$/;"	s	struct:android::RawPointerData
PointerControllerInterface	services/inputflinger/PointerControllerInterface.h	/^    PointerControllerInterface() { }$/;"	f	class:android::PointerControllerInterface
PointerControllerInterface	services/inputflinger/PointerControllerInterface.h	/^class PointerControllerInterface : public virtual RefBase {$/;"	c	namespace:android
PointerCoords	include/input/Input.h	/^struct PointerCoords {$/;"	s	namespace:android
PointerCoordsTest	libs/input/tests/InputEvent_test.cpp	/^class PointerCoordsTest : public BaseTest {$/;"	c	namespace:android	file:
PointerDistanceHeapElement	services/inputflinger/InputReader.h	/^    struct PointerDistanceHeapElement {$/;"	s	class:android::TouchInputMapper
PointerGesture	services/inputflinger/InputReader.h	/^    struct PointerGesture {$/;"	s	class:android::TouchInputMapper
PointerProperties	include/input/Input.h	/^struct PointerProperties {$/;"	s	namespace:android
PointerSimple	services/inputflinger/InputReader.h	/^    struct PointerSimple {$/;"	s	class:android::TouchInputMapper
PointerTraits	services/sensorservice/traits.h	/^    template<typename U> struct PointerTraits {$/;"	s	class:android::TypeTraits
PointerTraits	services/sensorservice/traits.h	/^    template<typename U> struct PointerTraits<U*> {$/;"	s	class:android::TypeTraits
PointerUsage	services/inputflinger/InputReader.h	/^    enum PointerUsage {$/;"	g	class:android::TouchInputMapper
PoolThread	libs/binder/ProcessState.cpp	/^    PoolThread(bool isMain)$/;"	f	class:android::PoolThread
PoolThread	libs/binder/ProcessState.cpp	/^class PoolThread : public Thread$/;"	c	namespace:android	file:
PooledInputEventFactory	include/input/Input.h	/^class PooledInputEventFactory : public InputEventFactoryInterface {$/;"	c	namespace:android
PooledInputEventFactory	libs/input/Input.cpp	/^PooledInputEventFactory::PooledInputEventFactory(size_t maxPoolSize) :$/;"	f	class:android::PooledInputEventFactory
Position	include/input/VelocityTracker.h	/^    struct Position {$/;"	s	class:android::VelocityTracker
PowerHAL	services/surfaceflinger/DisplayHardware/PowerHAL.h	/^class PowerHAL$/;"	c	namespace:android
PreallocatedInputEventFactory	include/input/Input.h	/^    PreallocatedInputEventFactory() { }$/;"	f	class:android::PreallocatedInputEventFactory
PreallocatedInputEventFactory	include/input/Input.h	/^class PreallocatedInputEventFactory : public InputEventFactoryInterface {$/;"	c	namespace:android
PrepareForAdaptivePlaybackParams	include/media/hardware/HardwareAPI.h	/^struct PrepareForAdaptivePlaybackParams {$/;"	s	namespace:android
PrependSPSPPSToIDRFramesParams	include/media/hardware/HardwareAPI.h	/^struct PrependSPSPPSToIDRFramesParams {$/;"	s	namespace:android
Presentation	services/inputflinger/PointerControllerInterface.h	/^    enum Presentation {$/;"	g	class:android::PointerControllerInterface
PressureCalibration	services/inputflinger/InputReader.h	/^        enum PressureCalibration {$/;"	g	struct:android::TouchInputMapper::Calibration
Primitive	services/surfaceflinger/RenderEngine/Mesh.h	/^    enum Primitive {$/;"	g	class:android::Mesh
ProcessState	include/binder/ProcessState.h	/^class ProcessState : public virtual RefBase$/;"	c	namespace:android
ProcessState	libs/binder/ProcessState.cpp	/^ProcessState::ProcessState()$/;"	f	class:android::ProcessState
ProducerListener	include/gui/IProducerListener.h	/^    ProducerListener() {}$/;"	f	class:android::ProducerListener
ProducerListener	include/gui/IProducerListener.h	/^class ProducerListener : public virtual RefBase$/;"	c	namespace:android
ProducerThread	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^    class ProducerThread : public Thread {$/;"	c	class:android::SurfaceTextureGLThreadToGLTest
Program	services/surfaceflinger/RenderEngine/Program.cpp	/^Program::Program(const ProgramCache::Key& \/*needs*\/, const char* vertex, const char* fragment)$/;"	f	class:android::Program
Program	services/surfaceflinger/RenderEngine/Program.h	/^class Program {$/;"	c	namespace:android
ProgramCache	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^ProgramCache::ProgramCache() {$/;"	f	class:android::ProgramCache
ProgramCache	services/surfaceflinger/RenderEngine/ProgramCache.h	/^class ProgramCache : public Singleton<ProgramCache> {$/;"	c	namespace:android
Property	include/input/KeyCharacterMap.h	/^            inline Property(int32_t property = 0, int32_t metaState = 0) :$/;"	f	struct:android::KeyCharacterMap::Parser::Property
Property	include/input/KeyCharacterMap.h	/^        struct Property {$/;"	s	class:android::KeyCharacterMap::Parser
ProxyConsumerListener	include/gui/BufferQueue.h	/^    class ProxyConsumerListener : public BnConsumerListener {$/;"	c	class:android::BufferQueue
ProxyConsumerListener	libs/gui/BufferQueue.cpp	/^BufferQueue::ProxyConsumerListener::ProxyConsumerListener($/;"	f	class:android::BufferQueue::ProxyConsumerListener
PublishAndConsumeKeyEvent	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^void InputPublisherAndConsumerTest::PublishAndConsumeKeyEvent() {$/;"	f	class:android::InputPublisherAndConsumerTest
PublishAndConsumeMotionEvent	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^void InputPublisherAndConsumerTest::PublishAndConsumeMotionEvent() {$/;"	f	class:android::InputPublisherAndConsumerTest
Q	opengl/libagl/context.h	/^        struct { GLfixed S, T, R, Q; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon219
QUERY	libs/gui/IGraphicBufferProducer.cpp	/^    QUERY,$/;"	e	enum:android::__anon248	file:
QUEUED	include/gui/BufferSlot.h	/^        QUEUED = 2,$/;"	e	enum:android::BufferSlot::BufferState
QUEUE_BUFFER	libs/gui/IGraphicBufferProducer.cpp	/^    QUEUE_BUFFER,$/;"	e	enum:android::__anon248	file:
QUEUE_BUFFER_INPUT_ASYNC	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^const bool QUEUE_BUFFER_INPUT_ASYNC = false;$/;"	m	namespace:android::__anon255	file:
QUEUE_BUFFER_INPUT_FENCE	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^const sp<Fence> QUEUE_BUFFER_INPUT_FENCE = Fence::NO_FENCE;$/;"	m	namespace:android::__anon255	file:
QUEUE_BUFFER_INPUT_IS_AUTO_TIMESTAMP	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^const bool QUEUE_BUFFER_INPUT_IS_AUTO_TIMESTAMP = false;$/;"	m	namespace:android::__anon255	file:
QUEUE_BUFFER_INPUT_RECT	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^const Rect QUEUE_BUFFER_INPUT_RECT = Rect(DEFAULT_WIDTH, DEFAULT_HEIGHT);$/;"	m	namespace:android::__anon255	file:
QUEUE_BUFFER_INPUT_SCALING_MODE	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^const int QUEUE_BUFFER_INPUT_SCALING_MODE = 0;$/;"	m	namespace:android::__anon255	file:
QUEUE_BUFFER_INPUT_TIMESTAMP	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^const int64_t QUEUE_BUFFER_INPUT_TIMESTAMP = 1384888611;$/;"	m	namespace:android::__anon255	file:
QUEUE_BUFFER_INPUT_TRANSFORM	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^const int QUEUE_BUFFER_INPUT_TRANSFORM = 0;$/;"	m	namespace:android::__anon255	file:
QUIET	services/inputflinger/InputReader.h	/^            QUIET,$/;"	e	enum:android::TouchInputMapper::PointerGesture::Mode
Queue	services/inputflinger/InputDispatcher.h	/^        inline Queue() : head(NULL), tail(NULL), entryCount(0) {$/;"	f	struct:android::InputDispatcher::Queue
Queue	services/inputflinger/InputDispatcher.h	/^    struct Queue {$/;"	s	class:android::InputDispatcher
QueueBufferInput	include/gui/IGraphicBufferProducer.h	/^        inline QueueBufferInput(int64_t timestamp, bool isAutoTimestamp,$/;"	f	struct:android::IGraphicBufferProducer::QueueBufferInput
QueueBufferInput	include/gui/IGraphicBufferProducer.h	/^    struct QueueBufferInput : public Flattenable<QueueBufferInput> {$/;"	s	class:android::IGraphicBufferProducer
QueueBufferInput	libs/gui/IGraphicBufferProducer.cpp	/^IGraphicBufferProducer::QueueBufferInput::QueueBufferInput(const Parcel& parcel) {$/;"	f	class:android::IGraphicBufferProducer::QueueBufferInput
QueueBufferInputBuilder	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        QueueBufferInputBuilder() {$/;"	f	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder
QueueBufferInputBuilder	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    struct QueueBufferInputBuilder {$/;"	s	class:android::IGraphicBufferProducerTest	file:
QueueBufferOutput	include/gui/IGraphicBufferProducer.h	/^        inline QueueBufferOutput() { }$/;"	f	struct:android::IGraphicBufferProducer::QueueBufferOutput
QueueBufferOutput	include/gui/IGraphicBufferProducer.h	/^    struct __attribute__ ((__packed__)) QueueBufferOutput {$/;"	s	class:android::IGraphicBufferProducer
QueuedInputListener	services/inputflinger/InputListener.cpp	/^QueuedInputListener::QueuedInputListener(const sp<InputListenerInterface>& innerListener) :$/;"	f	class:android::QueuedInputListener
QueuedInputListener	services/inputflinger/InputListener.h	/^class QueuedInputListener : public InputListenerInterface {$/;"	c	namespace:android
R	opengl/libagl/context.h	/^        struct { GLfixed S, T, R, Q; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon219
R	opengl/libagl/context.h	/^        struct { GLfixed S, T, R; };$/;"	m	struct:android::gl::vec3_t::__anon212::__anon215
RANDOM_UINT_MAX	opengl/tests/angeles/demo.c	41;"	d	file:
RAW_DISTANCE_MAX	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_DISTANCE_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_DISTANCE_MAX	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_DISTANCE_MAX = 7;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_DISTANCE_MIN	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_DISTANCE_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_DISTANCE_MIN	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_DISTANCE_MIN = 0;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_ID_MAX	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_ID_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_ID_MAX	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_ID_MAX = 9;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_ID_MIN	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_ID_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_ID_MIN	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_ID_MIN = 0;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_ORIENTATION_MAX	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_ORIENTATION_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_ORIENTATION_MAX	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_ORIENTATION_MAX = 7;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_ORIENTATION_MIN	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_ORIENTATION_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_ORIENTATION_MIN	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_ORIENTATION_MIN = -7;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_PRESSURE_MAX	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_PRESSURE_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_PRESSURE_MAX	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_PRESSURE_MAX = RAW_TOUCH_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_PRESSURE_MIN	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_PRESSURE_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_PRESSURE_MIN	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_PRESSURE_MIN = RAW_TOUCH_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_SLOT_MAX	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_SLOT_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_SLOT_MAX	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_SLOT_MAX = 9;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_SLOT_MIN	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_SLOT_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_SLOT_MIN	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_SLOT_MIN = 0;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TILT_MAX	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_TILT_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TILT_MAX	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_TILT_MAX = 150;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TILT_MIN	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_TILT_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TILT_MIN	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_TILT_MIN = 0;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TOOL_MAX	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_TOOL_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TOOL_MAX	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_TOOL_MAX = 15;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TOOL_MIN	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_TOOL_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TOOL_MIN	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_TOOL_MIN = 0;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TOUCH_MAX	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_TOUCH_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TOUCH_MAX	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_TOUCH_MAX = 31;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TOUCH_MIN	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_TOUCH_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_TOUCH_MIN	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_TOUCH_MIN = 0;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_X_MAX	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_X_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_X_MAX	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_X_MAX = 1019;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_X_MIN	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_X_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_X_MIN	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_X_MIN = 25;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_Y_MAX	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_Y_MAX;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_Y_MAX	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_Y_MAX = 1009;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_Y_MIN	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t RAW_Y_MIN;$/;"	m	class:android::TouchInputMapperTest	file:
RAW_Y_MIN	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t TouchInputMapperTest::RAW_Y_MIN = 30;$/;"	m	class:android::TouchInputMapperTest	file:
READ_ONLY	include/binder/IMemory.h	/^        READ_ONLY   = 0x00000001,$/;"	e	enum:android::IMemoryHeap::__anon211
READ_ONLY	include/binder/MemoryHeapBase.h	/^        READ_ONLY = IMemoryHeap::READ_ONLY,$/;"	e	enum:android::MemoryHeapBase::__anon202
REALLY_LONG_APP_NAME	cmds/installd/tests/installd_utils_test.cpp	37;"	d	file:
REALLY_LONG_LEAF_NAME	cmds/installd/tests/installd_utils_test.cpp	42;"	d	file:
RECENT_QUEUE_MAX_SIZE	services/inputflinger/InputDispatcher.cpp	/^const size_t RECENT_QUEUE_MAX_SIZE = 10;$/;"	m	namespace:android	file:
RED	services/surfaceflinger/Colorizer.h	/^        RED     = 31,$/;"	e	enum:android::Colorizer::color
REFRESH	services/surfaceflinger/MessageQueue.h	/^        REFRESH     = 1,$/;"	e	enum:android::MessageQueue::__anon26
REGISTER_LISTENER	include/batteryservice/IBatteryPropertiesRegistrar.h	/^    REGISTER_LISTENER = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon124
RELEASE_ALL_BUFFERS	include/gui/IGraphicBufferProducer.h	/^        RELEASE_ALL_BUFFERS       = 0x2,$/;"	e	enum:android::IGraphicBufferProducer::__anon155
RELEASE_BUFFER	libs/gui/IGraphicBufferConsumer.cpp	/^    RELEASE_BUFFER,$/;"	e	enum:android::__anon261	file:
RELEASE_WAKE_LOCK	services/powermanager/IPowerManager.cpp	/^    RELEASE_WAKE_LOCK = IBinder::FIRST_CALL_TRANSACTION + 2,$/;"	e	enum:android::__anon74	file:
REPLY_MAX	cmds/installd/installd.c	27;"	d	file:
REQ	cmds/atrace/atrace.cpp	/^typedef enum { OPT, REQ } requiredness  ;$/;"	e	enum:__anon2	file:
REQUEST_BUFFER	libs/gui/IGraphicBufferProducer.cpp	/^    REQUEST_BUFFER = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon248	file:
REQUEST_NEXT_VSYNC	libs/gui/IDisplayEventConnection.cpp	/^    REQUEST_NEXT_VSYNC$/;"	e	enum:android::__anon263	file:
RESAMPLE_LATENCY	libs/input/InputTransport.cpp	/^static const nsecs_t RESAMPLE_LATENCY = 5 * NANOS_PER_MS;$/;"	m	namespace:android	file:
RESAMPLE_MAX_PREDICTION	libs/input/InputTransport.cpp	/^static const nsecs_t RESAMPLE_MAX_PREDICTION = 8 * NANOS_PER_MS;$/;"	m	namespace:android	file:
RESAMPLE_MIN_DELTA	libs/input/InputTransport.cpp	/^static const nsecs_t RESAMPLE_MIN_DELTA = 2 * NANOS_PER_MS;$/;"	m	namespace:android	file:
RESERVED	opengl/libagl/context.h	/^        RESERVED        = 0x0080,$/;"	e	enum:android::gl::vertex_t::__anon220
RGB	include/ui/PixelFormat.h	/^        RGB     = 2,$/;"	e	enum:android::PixelFormatInfo::__anon79
RGBA	include/ui/PixelFormat.h	/^        RGBA    = 3,$/;"	e	enum:android::PixelFormatInfo::__anon79
RHS	include/private/ui/RegionHelper.h	/^    static const uint32_t RHS = 0x6;  \/\/ 0b110$/;"	m	class:android::region_operator
ROTATE	services/surfaceflinger/Transform.h	/^                ROTATE              = 0x2,$/;"	e	enum:android::Transform::type_mask
ROT_0	services/surfaceflinger/Transform.h	/^                ROT_0   = 0x00000000,$/;"	e	enum:android::Transform::orientation_flags
ROT_180	services/surfaceflinger/Transform.h	/^                ROT_180 = FLIP_H|FLIP_V,$/;"	e	enum:android::Transform::orientation_flags
ROT_270	services/surfaceflinger/Transform.h	/^                ROT_270 = ROT_180|ROT_90,$/;"	e	enum:android::Transform::orientation_flags
ROT_90	services/surfaceflinger/Transform.h	/^                ROT_90  = HAL_TRANSFORM_ROT_90,$/;"	e	enum:android::Transform::orientation_flags
ROT_INVALID	services/surfaceflinger/Transform.h	/^                ROT_INVALID = 0x80$/;"	e	enum:android::Transform::orientation_flags
ROWS	services/sensorservice/mat.h	/^    enum { ROWS = R, COLS = 1 };$/;"	e	enum:android::mat::__anon51
ROWS	services/sensorservice/mat.h	/^    enum { ROWS = R, COLS = C };$/;"	e	enum:android::mat::__anon50
ROW_SIZE	include/ui/mat4.h	/^    enum { ROW_SIZE = row_type::SIZE };$/;"	e	enum:android::tmat44::__anon88
RUN_LENGTH	opengl/tests/angeles/demo.c	38;"	d	file:
Range	opengl/tests/hwc/hwcCommit.cpp	/^    Range(uint32_t lower, uint32_t upper) : _l(lower), _u(upper) {}$/;"	f	class:Range
Range	opengl/tests/hwc/hwcCommit.cpp	/^    Range(void) : _l(0), _u(0) {}$/;"	f	class:Range
Range	opengl/tests/hwc/hwcCommit.cpp	/^class Range {$/;"	c	file:
Rational	opengl/tests/hwc/hwcCommit.cpp	/^    Rational(uint32_t n, uint32_t d) : _n(n), _d(d) {}$/;"	f	class:Rational
Rational	opengl/tests/hwc/hwcCommit.cpp	/^    Rational(void) : _n(0), _d(1) {}$/;"	f	class:Rational
Rational	opengl/tests/hwc/hwcCommit.cpp	/^class Rational {$/;"	c	file:
RawAbsoluteAxisInfo	services/inputflinger/EventHub.h	/^struct RawAbsoluteAxisInfo {$/;"	s	namespace:android
RawEvent	services/inputflinger/EventHub.h	/^struct RawEvent {$/;"	s	namespace:android
RawPointerAxes	services/inputflinger/InputReader.cpp	/^RawPointerAxes::RawPointerAxes() {$/;"	f	class:android::RawPointerAxes
RawPointerAxes	services/inputflinger/InputReader.h	/^struct RawPointerAxes {$/;"	s	namespace:android
RawPointerData	services/inputflinger/InputReader.cpp	/^RawPointerData::RawPointerData() {$/;"	f	class:android::RawPointerData
RawPointerData	services/inputflinger/InputReader.h	/^struct RawPointerData {$/;"	s	namespace:android
Read	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*Read)( CPhandle hContent, CPbyte *pData, CPuint nSize);$/;"	m	struct:CP_PIPETYPE
ReadBuffer	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*ReadBuffer)( CPhandle hContent, CPbyte **ppBuffer, CPuint *nSize, CPbool bForbidCopy);$/;"	m	struct:CP_PIPETYPE
ReadableBlob	include/binder/Parcel.h	/^    class ReadableBlob : public Blob {$/;"	c	class:android::Parcel
Rect	include/ui/Rect.h	/^    inline Rect() {$/;"	f	class:android::Rect
Rect	include/ui/Rect.h	/^    inline Rect(const Point& lt, const Point& rb) {$/;"	f	class:android::Rect
Rect	include/ui/Rect.h	/^    inline Rect(int32_t l, int32_t t, int32_t r, int32_t b) {$/;"	f	class:android::Rect
Rect	include/ui/Rect.h	/^    inline Rect(int32_t w, int32_t h) {$/;"	f	class:android::Rect
Rect	include/ui/Rect.h	/^class Rect : public ARect, public LightFlattenablePod<Rect>$/;"	c	namespace:android
Rect	opengl/libagl/egl.cpp	/^        inline Rect() { };$/;"	f	struct:android::egl_window_surface_v2_t::Rect
Rect	opengl/libagl/egl.cpp	/^        inline Rect(int32_t l, int32_t t, int32_t r, int32_t b)$/;"	f	struct:android::egl_window_surface_v2_t::Rect
Rect	opengl/libagl/egl.cpp	/^        inline Rect(int32_t w, int32_t h)$/;"	f	struct:android::egl_window_surface_v2_t::Rect
Rect	opengl/libagl/egl.cpp	/^    struct Rect {$/;"	s	struct:android::egl_window_surface_v2_t	file:
Rectangle	opengl/tests/hwc/hwcCommit.cpp	/^Rectangle::Rectangle(uint32_t graphicFormat, HwcTestDim dfDim,$/;"	f	class:Rectangle
Rectangle	opengl/tests/hwc/hwcCommit.cpp	/^class Rectangle {$/;"	c	file:
Rectangle	opengl/tests/hwc/hwcRects.cpp	/^    Rectangle() : format(defaultFormat), transform(defaultTransform),$/;"	f	class:Rectangle
Rectangle	opengl/tests/hwc/hwcRects.cpp	/^class Rectangle {$/;"	c	file:
Ref	opengl/libs/EGL/egl_object.h	/^    typedef egl_object_t::LocalRef<egl_context_t, EGLContext> Ref;$/;"	t	class:android::egl_context_t
Ref	opengl/libs/EGL/egl_object.h	/^    typedef egl_object_t::LocalRef<egl_surface_t, EGLSurface> Ref;$/;"	t	class:android::egl_surface_t
Region	include/ui/Region.h	/^class Region : public LightFlattenable<Region>$/;"	c	namespace:android
Region	libs/ui/Region.cpp	/^Region::Region() {$/;"	f	class:android::Region
Region	libs/ui/Region.cpp	/^Region::Region(const Rect& rhs) {$/;"	f	class:android::Region
Region	libs/ui/Region.cpp	/^Region::Region(const Region& rhs)$/;"	f	class:android::Region
Region	opengl/libagl/egl.cpp	/^        inline Region() : count(0) { }$/;"	f	struct:android::egl_window_surface_v2_t::Region
Region	opengl/libagl/egl.cpp	/^    struct Region {$/;"	s	struct:android::egl_window_surface_v2_t	file:
RegionTest	libs/ui/tests/Region_test.cpp	/^class RegionTest : public testing::Test {$/;"	c	namespace:android	file:
RegisterCallback	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*RegisterCallback)( CPhandle hContent, CPresult (*ClientCallback)(CP_EVENTTYPE eEvent, CPuint iParam));$/;"	m	struct:CP_PIPETYPE
Registry	opengl/tools/glgen2/registry/reg.py	/^class Registry:$/;"	c
ReleaseReadBuffer	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*ReleaseReadBuffer)(CPhandle hContent, CPbyte *pBuffer);$/;"	m	struct:CP_PIPETYPE
RenderEngine	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^RenderEngine::RenderEngine() : mEGLContext(EGL_NO_CONTEXT) {$/;"	f	class:android::RenderEngine
RenderEngine	services/surfaceflinger/RenderEngine/RenderEngine.h	/^class RenderEngine {$/;"	c	namespace:android
Renderer	cmds/flatland/Flatland.h	/^class Renderer {$/;"	c	namespace:android
Renderer	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        public Renderer() {$/;"	m	class:GL2JavaView.Renderer
Renderer	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^    private static class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:GL2JavaView
Renderer	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^    private static class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:GL2JNIView
Renderer	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^    private class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:GLJNIView
Renderer	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^    private static class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:GLPerfView
Renderer	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^    private static class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:GLDualGL2View
Renderer	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^        public Renderer() {$/;"	m	class:TestFramerateView.Renderer
Renderer	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^    private class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:TestFramerateView
Renderer	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        public Renderer() {$/;"	m	class:TestLatencyView.Renderer
Renderer	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^    private class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:TestLatencyView
Renderer	opengl/tests/testPauseResume/src/com/android/test/TestView.java	/^    private class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:TestView
Renderer	opengl/tests/testViewport/src/com/android/test/TestView.java	/^    private class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:TestView
Result	services/sensorservice/traits.h	/^    typedef T Result;$/;"	t	struct:android::Select
Result	services/sensorservice/traits.h	/^    typedef U Result;$/;"	t	struct:android::Select
Rotation	include/gui/ISurfaceComposer.h	/^    enum Rotation {$/;"	g	class:android::ISurfaceComposer
RotationVectorSensor	services/sensorservice/RotationVectorSensor.cpp	/^RotationVectorSensor::RotationVectorSensor()$/;"	f	class:android::RotationVectorSensor
RotationVectorSensor	services/sensorservice/RotationVectorSensor.h	/^class RotationVectorSensor : public SensorInterface {$/;"	c	namespace:android
S	opengl/libagl/context.h	/^        struct { GLfixed S, T, R, Q; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon219
S	opengl/libagl/context.h	/^        struct { GLfixed S, T, R; };$/;"	m	struct:android::gl::vec3_t::__anon212::__anon215
SCALE	services/surfaceflinger/Transform.h	/^                SCALE               = 0x4,$/;"	e	enum:android::Transform::type_mask
SECONDARY_USER_PREFIX	cmds/installd/installd.h	55;"	d
SECOND_TEX_ID	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^    enum { SECOND_TEX_ID = 123 };$/;"	e	enum:android::SurfaceTextureMultiContextGLTest::__anon258
SET_ACTIVE_CONFIG	include/gui/ISurfaceComposer.h	/^        SET_ACTIVE_CONFIG,$/;"	e	enum:android::BnSurfaceComposer::__anon137
SET_BUFFERS_SIZE	libs/gui/IGraphicBufferProducer.cpp	/^    SET_BUFFERS_SIZE,$/;"	e	enum:android::__anon248	file:
SET_BUFFER_COUNT	libs/gui/IGraphicBufferProducer.cpp	/^    SET_BUFFER_COUNT,$/;"	e	enum:android::__anon248	file:
SET_CONSUMER_NAME	libs/gui/IGraphicBufferConsumer.cpp	/^    SET_CONSUMER_NAME,$/;"	e	enum:android::__anon261	file:
SET_CONSUMER_USAGE_BITS	libs/gui/IGraphicBufferConsumer.cpp	/^    SET_CONSUMER_USAGE_BITS,$/;"	e	enum:android::__anon261	file:
SET_DEFAULT_BUFFER_FORMAT	libs/gui/IGraphicBufferConsumer.cpp	/^    SET_DEFAULT_BUFFER_FORMAT,$/;"	e	enum:android::__anon261	file:
SET_DEFAULT_BUFFER_SIZE	libs/gui/IGraphicBufferConsumer.cpp	/^    SET_DEFAULT_BUFFER_SIZE,$/;"	e	enum:android::__anon261	file:
SET_DEFAULT_MAX_BUFFER_COUNT	libs/gui/IGraphicBufferConsumer.cpp	/^    SET_DEFAULT_MAX_BUFFER_COUNT,$/;"	e	enum:android::__anon261	file:
SET_EVENT_RATE	libs/gui/ISensorEventConnection.cpp	/^    SET_EVENT_RATE,$/;"	e	enum:android::__anon260	file:
SET_GRAPHIC_BUFFER_SIZE	libs/gui/IGraphicBufferAlloc.cpp	/^    SET_GRAPHIC_BUFFER_SIZE,$/;"	e	enum:android::__anon262	file:
SET_MAX_ACQUIRED_BUFFER_COUNT	libs/gui/IGraphicBufferConsumer.cpp	/^    SET_MAX_ACQUIRED_BUFFER_COUNT,$/;"	e	enum:android::__anon261	file:
SET_POWER_MODE	include/gui/ISurfaceComposer.h	/^        SET_POWER_MODE,$/;"	e	enum:android::BnSurfaceComposer::__anon137
SET_SIDEBAND_STREAM	libs/gui/IGraphicBufferProducer.cpp	/^    SET_SIDEBAND_STREAM,$/;"	e	enum:android::__anon248	file:
SET_TRANSACTION_STATE	include/gui/ISurfaceComposer.h	/^        SET_TRANSACTION_STATE,$/;"	e	enum:android::BnSurfaceComposer::__anon137
SET_TRANSFORM_HINT	libs/gui/IGraphicBufferConsumer.cpp	/^    SET_TRANSFORM_HINT,$/;"	e	enum:android::__anon261	file:
SET_VSYNC_RATE	libs/gui/IDisplayEventConnection.cpp	/^    SET_VSYNC_RATE,$/;"	e	enum:android::__anon263	file:
SF_EFFECTS_DALTONIZER_H_	services/surfaceflinger/Effects/Daltonizer.h	18;"	d
SF_GLES10RENDERENGINE_H_	services/surfaceflinger/RenderEngine/GLES10RenderEngine.h	19;"	d
SF_GLES11RENDERENGINE_H_	services/surfaceflinger/RenderEngine/GLES11RenderEngine.h	19;"	d
SF_GLES20RENDERENGINE_H_	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	19;"	d
SF_RENDERENGINE_H_	services/surfaceflinger/RenderEngine/RenderEngine.h	19;"	d
SF_RENDER_ENGINE_DESCRIPTION_H_	services/surfaceflinger/RenderEngine/Description.h	21;"	d
SF_RENDER_ENGINE_MESH_H	services/surfaceflinger/RenderEngine/Mesh.h	18;"	d
SF_RENDER_ENGINE_PROGRAMCACHE_H	services/surfaceflinger/RenderEngine/ProgramCache.h	18;"	d
SF_RENDER_ENGINE_PROGRAM_H	services/surfaceflinger/RenderEngine/Program.h	18;"	d
SF_RENDER_ENGINE_TEXTURE_H	services/surfaceflinger/RenderEngine/Texture.h	21;"	d
SHAPES_H_INCLUDED	opengl/tests/angeles/shapes.h	26;"	d
SHOW_DEBUG_STRING	libs/gui/tests/SRGB_test.cpp	/^    static const char SHOW_DEBUG_STRING[];$/;"	m	class:android::SRGBTest	file:
SHOW_DEBUG_STRING	libs/gui/tests/SRGB_test.cpp	/^const char SRGBTest::SHOW_DEBUG_STRING[] = "DEBUG_OUTPUT_SECONDS";$/;"	m	class:android::SRGBTest	file:
SIZE	include/ui/vec2.h	/^    enum { SIZE = 2 };$/;"	e	enum:android::tvec2::__anon86
SIZE	include/ui/vec3.h	/^    enum { SIZE = 3 };$/;"	e	enum:android::tvec3::__anon93
SIZE	include/ui/vec4.h	/^    enum { SIZE = 4 };$/;"	e	enum:android::tvec4::__anon100
SIZE_CALIBRATION_AREA	services/inputflinger/InputReader.h	/^            SIZE_CALIBRATION_AREA,$/;"	e	enum:android::TouchInputMapper::Calibration::SizeCalibration
SIZE_CALIBRATION_BOX	services/inputflinger/InputReader.h	/^            SIZE_CALIBRATION_BOX,$/;"	e	enum:android::TouchInputMapper::Calibration::SizeCalibration
SIZE_CALIBRATION_DEFAULT	services/inputflinger/InputReader.h	/^            SIZE_CALIBRATION_DEFAULT,$/;"	e	enum:android::TouchInputMapper::Calibration::SizeCalibration
SIZE_CALIBRATION_DIAMETER	services/inputflinger/InputReader.h	/^            SIZE_CALIBRATION_DIAMETER,$/;"	e	enum:android::TouchInputMapper::Calibration::SizeCalibration
SIZE_CALIBRATION_GEOMETRIC	services/inputflinger/InputReader.h	/^            SIZE_CALIBRATION_GEOMETRIC,$/;"	e	enum:android::TouchInputMapper::Calibration::SizeCalibration
SIZE_CALIBRATION_NONE	services/inputflinger/InputReader.h	/^            SIZE_CALIBRATION_NONE,$/;"	e	enum:android::TouchInputMapper::Calibration::SizeCalibration
SKIP_PATHS	cmds/rawbu/backup.cpp	/^static const struct special_dir SKIP_PATHS[] = {$/;"	m	namespace:android	typeref:struct:android::special_dir	file:
SLOT	services/inputflinger/tests/InputReader_test.cpp	/^        SLOT = 1 << 9,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
SLOW_EVENT_PROCESSING_WARNING_TIMEOUT	services/inputflinger/InputDispatcher.cpp	/^const nsecs_t SLOW_EVENT_PROCESSING_WARNING_TIMEOUT = 2000 * 1000000LL; \/\/ 2sec$/;"	m	namespace:android	file:
SLSI_DIR	libs/binder/Android.mk	/^SLSI_DIR := samsung_slsi$/;"	m
SLSI_DIR	libs/binder/Android.mk	/^SLSI_DIR := samsung_slsi-cm$/;"	m
SOCKET_BUFFER_SIZE	libs/input/InputTransport.cpp	/^static const size_t SOCKET_BUFFER_SIZE = 32 * 1024;$/;"	m	namespace:android	file:
SOCKET_BUFFER_SIZE_NON_BATCHED	services/sensorservice/SensorService.h	46;"	d
SOCKET_PATH	cmds/installd/installd.h	49;"	d
SOURCE_SCRATCH	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    enum Source {SOURCE_SINK = 0, SOURCE_SCRATCH = 1};$/;"	e	enum:android::VirtualDisplaySurface::Source
SOURCE_SINK	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    enum Source {SOURCE_SINK = 0, SOURCE_SCRATCH = 1};$/;"	e	enum:android::VirtualDisplaySurface::Source
SPECIAL_NO_BACKUP	cmds/rawbu/backup.cpp	48;"	d	file:
SPECIAL_NO_TOUCH	cmds/rawbu/backup.cpp	47;"	d	file:
SPEC_OPTIONS	opengl/tools/glgen2/glgen.py	/^    SPEC_OPTIONS = [$/;"	v	class:SpecGenerator
SRGBTest	libs/gui/tests/SRGB_test.cpp	/^    SRGBTest() :$/;"	f	class:android::SRGBTest
SRGBTest	libs/gui/tests/SRGB_test.cpp	/^class SRGBTest : public ::testing::Test {$/;"	c	namespace:android	file:
SS_CPU_CONSUMER	libs/gui/SurfaceComposerClient.cpp	829;"	d	file:
SS_CPU_CONSUMER	libs/gui/SurfaceComposerClient.cpp	831;"	d	file:
STALE_BUFFER_SLOT	include/gui/IGraphicBufferConsumer.h	/^        STALE_BUFFER_SLOT = 1,$/;"	e	enum:android::IGraphicBufferConsumer::__anon131
STALE_EVENT_TIMEOUT	services/inputflinger/InputDispatcher.cpp	/^const nsecs_t STALE_EVENT_TIMEOUT = 10000 * 1000000LL; \/\/ 10sec$/;"	m	namespace:android	file:
START_OPERATION_TRANSACTION	include/binder/IAppOpsService.h	/^        START_OPERATION_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION+2,$/;"	e	enum:android::IAppOpsService::__anon199
START_WATCHING_MODE_TRANSACTION	include/binder/IAppOpsService.h	/^        START_WATCHING_MODE_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION+4,$/;"	e	enum:android::IAppOpsService::__anon199
STATE_KEY	include/input/KeyCharacterMap.h	/^            STATE_KEY = 1,$/;"	e	enum:android::KeyCharacterMap::Parser::State
STATE_TOP	include/input/KeyCharacterMap.h	/^            STATE_TOP = 0,$/;"	e	enum:android::KeyCharacterMap::Parser::State
STATUS_BROKEN	services/inputflinger/InputDispatcher.h	/^            STATUS_BROKEN,$/;"	e	enum:android::InputDispatcher::Connection::Status
STATUS_NORMAL	services/inputflinger/InputDispatcher.h	/^            STATUS_NORMAL,$/;"	e	enum:android::InputDispatcher::Connection::Status
STATUS_ZOMBIE	services/inputflinger/InputDispatcher.h	/^            STATUS_ZOMBIE$/;"	e	enum:android::InputDispatcher::Connection::Status
STOP_TIME	include/input/VelocityControl.h	/^    static const nsecs_t STOP_TIME = 500 * 1000000; \/\/ 500 ms$/;"	m	class:android::VelocityControl
STOP_TIME	libs/input/VelocityControl.cpp	/^const nsecs_t VelocityControl::STOP_TIME;$/;"	m	class:android::VelocityControl	file:
STOP_WATCHING_MODE_TRANSACTION	include/binder/IAppOpsService.h	/^        STOP_WATCHING_MODE_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION+5,$/;"	e	enum:android::IAppOpsService::__anon199
STORAGE_MAX_SIZE	services/surfaceflinger/EventLog/EventLog.h	/^        enum { STORAGE_MAX_SIZE = 128 };$/;"	e	enum:android::EventLog::TagBuffer::__anon30
STREAM_AHEAD_EVENT_TIMEOUT	services/inputflinger/InputDispatcher.cpp	/^const nsecs_t STREAM_AHEAD_EVENT_TIMEOUT = 500 * 1000000LL; \/\/ 0.5sec$/;"	m	namespace:android	file:
STRICT_MODE_PENALTY_GATHER	libs/binder/Parcel.cpp	60;"	d	file:
STRINGIFY	libs/ui/UiConfig.cpp	21;"	d	file:
STRONG	opengl/libs/EGL/egl_display.h	/^            STRONG = 1,$/;"	e	enum:android::egl_display_t::HibernationMachine::WakeRefStrength
ST_LOGD	libs/gui/GLConsumer.cpp	51;"	d	file:
ST_LOGE	libs/gui/GLConsumer.cpp	54;"	d	file:
ST_LOGI	libs/gui/GLConsumer.cpp	52;"	d	file:
ST_LOGV	libs/gui/GLConsumer.cpp	50;"	d	file:
ST_LOGW	libs/gui/GLConsumer.cpp	53;"	d	file:
SUPERSHAPE_COUNT	opengl/tests/angeles/shapes.h	56;"	d
SUPERSHAPE_PARAMS	opengl/tests/angeles/shapes.h	29;"	d
SU_PATH	cmds/dumpstate/dumpstate.h	25;"	d
SVC_MGR_ADD_SERVICE	cmds/servicemanager/binder.h	/^    SVC_MGR_ADD_SERVICE,$/;"	e	enum:__anon13
SVC_MGR_CHECK_SERVICE	cmds/servicemanager/binder.h	/^    SVC_MGR_CHECK_SERVICE,$/;"	e	enum:__anon13
SVC_MGR_GET_SERVICE	cmds/servicemanager/binder.h	/^    SVC_MGR_GET_SERVICE = 1,$/;"	e	enum:__anon13
SVC_MGR_LIST_SERVICES	cmds/servicemanager/binder.h	/^    SVC_MGR_LIST_SERVICES,$/;"	e	enum:__anon13
SVC_MGR_NAME	cmds/servicemanager/binder.h	33;"	d
SWAP_RECTANGLE	services/surfaceflinger/DisplayDevice.h	/^        SWAP_RECTANGLE  = 0x00080000,$/;"	e	enum:android::DisplayDevice::__anon27
SWIPE	services/inputflinger/InputReader.h	/^            SWIPE,$/;"	e	enum:android::TouchInputMapper::PointerGesture::Mode
SYMMETRY_TOLERANCE	services/sensorservice/Fusion.cpp	/^static const float SYMMETRY_TOLERANCE = 1e-10f;$/;"	m	namespace:android	file:
SYSPROPS_TRANSACTION	include/binder/IBinder.h	/^        SYSPROPS_TRANSACTION    = B_PACK_CHARS('_', 'S', 'P', 'R'),$/;"	e	enum:android::IBinder::__anon209
ScopedScissorDisabler	services/surfaceflinger/LayerBlur.cpp	/^    ScopedScissorDisabler(bool enabled) : scissorEnabled(enabled) {$/;"	f	class:android::ScopedScissorDisabler
ScopedScissorDisabler	services/surfaceflinger/LayerBlur.cpp	/^class ScopedScissorDisabler {$/;"	c	namespace:android	file:
ScreenCapture	services/surfaceflinger/tests/Transaction_test.cpp	/^    ScreenCapture(uint32_t w, uint32_t h, const sp<IMemoryHeap>& heap) :$/;"	f	class:android::ScreenCapture	file:
ScreenCapture	services/surfaceflinger/tests/Transaction_test.cpp	/^class ScreenCapture : public RefBase {$/;"	c	namespace:android	file:
ScreenshotClient	include/gui/SurfaceComposerClient.h	/^class ScreenshotClient$/;"	c	namespace:android
ScreenshotClient	libs/gui/SurfaceComposerClient.cpp	/^ScreenshotClient::ScreenshotClient()$/;"	f	class:android::ScreenshotClient
Select	services/sensorservice/traits.h	/^struct Select {$/;"	s	namespace:android
Select	services/sensorservice/traits.h	/^struct Select<false, T, U> {$/;"	s	namespace:android
SendCommand	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SendCommand)($/;"	m	struct:OMX_COMPONENTTYPE
Sensor	include/gui/Sensor.h	/^class Sensor : public ASensor, public LightFlattenable<Sensor>$/;"	c	namespace:android
Sensor	libs/gui/Sensor.cpp	/^Sensor::Sensor()$/;"	f	class:android::Sensor
Sensor	libs/gui/Sensor.cpp	/^Sensor::Sensor(struct sensor_t const* hwSensor, int halVersion)$/;"	f	class:android::Sensor
SensorDevice	services/sensorservice/SensorDevice.cpp	/^SensorDevice::SensorDevice()$/;"	f	class:android::SensorDevice
SensorDevice	services/sensorservice/SensorDevice.h	/^class SensorDevice : public Singleton<SensorDevice> {$/;"	c	namespace:android
SensorEventAckReceiver	services/sensorservice/SensorService.h	/^        SensorEventAckReceiver(const sp<SensorService>& service): mService(service) {}$/;"	f	class:android::SensorService::SensorEventAckReceiver
SensorEventAckReceiver	services/sensorservice/SensorService.h	/^    class SensorEventAckReceiver : public Thread {$/;"	c	class:android::SensorService
SensorEventConnection	services/sensorservice/SensorService.cpp	/^SensorService::SensorEventConnection::SensorEventConnection($/;"	f	class:android::SensorService::SensorEventConnection
SensorEventConnection	services/sensorservice/SensorService.h	/^    class SensorEventConnection : public BnSensorEventConnection, public LooperCallback {$/;"	c	class:android::SensorService
SensorEventQueue	include/gui/SensorEventQueue.h	/^class SensorEventQueue : public ASensorEventQueue, public RefBase$/;"	c	namespace:android
SensorEventQueue	libs/gui/SensorEventQueue.cpp	/^SensorEventQueue::SensorEventQueue(const sp<ISensorEventConnection>& connection)$/;"	f	class:android::SensorEventQueue
SensorFusion	services/sensorservice/SensorFusion.cpp	/^SensorFusion::SensorFusion()$/;"	f	class:android::SensorFusion
SensorFusion	services/sensorservice/SensorFusion.h	/^class SensorFusion : public Singleton<SensorFusion> {$/;"	c	namespace:android
SensorInterface	services/sensorservice/SensorInterface.h	/^class SensorInterface {$/;"	c	namespace:android
SensorManager	include/gui/SensorManager.h	/^class SensorManager :$/;"	c	namespace:android
SensorManager	libs/gui/SensorManager.cpp	/^SensorManager::SensorManager()$/;"	f	class:android::SensorManager
SensorRecord	services/sensorservice/SensorService.cpp	/^SensorService::SensorRecord::SensorRecord($/;"	f	class:android::SensorService::SensorRecord
SensorRecord	services/sensorservice/SensorService.h	/^    class SensorRecord {$/;"	c	class:android::SensorService
SensorService	services/sensorservice/SensorService.cpp	/^SensorService::SensorService()$/;"	f	class:android::SensorService
SensorService	services/sensorservice/SensorService.h	/^class SensorService :$/;"	c	namespace:android
SeqChain	include/input/InputTransport.h	/^    struct SeqChain {$/;"	s	class:android::InputConsumer
SerializeWithCachedSizes	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage::SerializeWithCachedSizes($/;"	f	class:android::gltrace::GLMessage
SerializeWithCachedSizes	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_DataType::SerializeWithCachedSizes($/;"	f	class:android::gltrace::GLMessage_DataType
SerializeWithCachedSizes	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_FrameBuffer::SerializeWithCachedSizes($/;"	f	class:android::gltrace::GLMessage_FrameBuffer
SetCachedSize	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage::SetCachedSize(int size) const {$/;"	f	class:android::gltrace::GLMessage
SetCachedSize	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_DataType::SetCachedSize(int size) const {$/;"	f	class:android::gltrace::GLMessage_DataType
SetCachedSize	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_FrameBuffer::SetCachedSize(int size) const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
SetCallbacks	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetCallbacks)($/;"	m	struct:OMX_COMPONENTTYPE
SetConfig	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetConfig)($/;"	m	struct:OMX_COMPONENTTYPE
SetParameter	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*SetParameter)($/;"	m	struct:OMX_COMPONENTTYPE
SetPosition	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*SetPosition)( CPhandle  hContent, CPint nOffset, CP_ORIGINTYPE eOrigin);$/;"	m	struct:CP_PIPETYPE
SetUp	cmds/installd/tests/installd_utils_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::UtilsTest
SetUp	libs/gui/tests/CpuConsumer_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::CpuConsumerTest
SetUp	libs/gui/tests/GLTest.cpp	/^void GLTest::SetUp() {$/;"	f	class:android::GLTest
SetUp	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::IGraphicBufferProducerTest
SetUp	libs/gui/tests/MultiTextureConsumer_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::MultiTextureConsumerTest
SetUp	libs/gui/tests/SRGB_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::SRGBTest
SetUp	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::MultiSurfaceTextureClientTest
SetUp	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::SurfaceTextureClientTest
SetUp	libs/gui/tests/SurfaceTextureFBO.h	/^    virtual void SetUp() {$/;"	f	class:android::SurfaceTextureFBOTest
SetUp	libs/gui/tests/SurfaceTextureGL.h	/^    void SetUp() {$/;"	f	class:android::SurfaceTextureGLTest
SetUp	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^    virtual void SetUp() {$/;"	f	class:android::SurfaceTextureGLThreadToGLTest
SetUp	libs/gui/tests/SurfaceTextureGLToGL.h	/^    virtual void SetUp() {$/;"	f	class:android::SurfaceTextureGLToGLTest
SetUp	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^    virtual void SetUp() {$/;"	f	class:android::SurfaceTextureMultiContextGLTest
SetUp	libs/gui/tests/Surface_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::SurfaceTest
SetUp	libs/gui/tests/TextureRenderer.cpp	/^void TextureRenderer::SetUp() {$/;"	f	class:android::TextureRenderer
SetUp	libs/input/tests/InputChannel_test.cpp	/^    virtual void SetUp() { }$/;"	f	class:android::InputChannelTest
SetUp	libs/input/tests/InputEvent_test.cpp	/^    virtual void SetUp() { }$/;"	f	class:android::BaseTest
SetUp	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::InputPublisherAndConsumerTest
SetUp	opengl/tests/EGLTest/EGL_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::EGLTest
SetUp	opengl/tests/EGLTest/egl_cache_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::EGLCacheSerializationTest
SetUp	opengl/tests/EGLTest/egl_cache_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::EGLCacheTest
SetUp	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::InputDispatcherTest
SetUp	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::CursorInputMapperTest
SetUp	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::InputDeviceTest
SetUp	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::InputMapperTest
SetUp	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::InputReaderTest
SetUp	services/surfaceflinger/tests/Transaction_test.cpp	/^    virtual void SetUp() {$/;"	f	class:android::LayerUpdateTest
ShaderDesc	cmds/flatland/GLHelper.h	/^struct ShaderDesc {$/;"	s	namespace:android
SharedCtor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage::SharedCtor() {$/;"	f	class:android::gltrace::GLMessage
SharedCtor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_DataType::SharedCtor() {$/;"	f	class:android::gltrace::GLMessage_DataType
SharedCtor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_FrameBuffer::SharedCtor() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
SharedDtor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage::SharedDtor() {$/;"	f	class:android::gltrace::GLMessage
SharedDtor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_DataType::SharedDtor() {$/;"	f	class:android::gltrace::GLMessage_DataType
SharedDtor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_FrameBuffer::SharedDtor() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
ShouldUseSwapFileForDexopt	cmds/installd/commands.c	/^static bool ShouldUseSwapFileForDexopt() {$/;"	f	file:
SignedInts	services/sensorservice/traits.h	/^            signed int, signed long int) SignedInts;$/;"	t	class:android::TypeTraits
SimpleBestFitAllocator	libs/binder/MemoryDealer.cpp	/^SimpleBestFitAllocator::SimpleBestFitAllocator(size_t size)$/;"	f	class:android::SimpleBestFitAllocator
SimpleBestFitAllocator	libs/binder/MemoryDealer.cpp	/^class SimpleBestFitAllocator$/;"	c	namespace:android	file:
SingleTouchInputMapper	services/inputflinger/InputReader.cpp	/^SingleTouchInputMapper::SingleTouchInputMapper(InputDevice* device) :$/;"	f	class:android::SingleTouchInputMapper
SingleTouchInputMapper	services/inputflinger/InputReader.h	/^class SingleTouchInputMapper : public TouchInputMapper {$/;"	c	namespace:android
SingleTouchInputMapperTest	services/inputflinger/tests/InputReader_test.cpp	/^class SingleTouchInputMapperTest : public TouchInputMapperTest {$/;"	c	namespace:android	file:
SingleTouchMotionAccumulator	services/inputflinger/InputReader.cpp	/^SingleTouchMotionAccumulator::SingleTouchMotionAccumulator() {$/;"	f	class:android::SingleTouchMotionAccumulator
SingleTouchMotionAccumulator	services/inputflinger/InputReader.h	/^class SingleTouchMotionAccumulator {$/;"	c	namespace:android
SizeCalibration	services/inputflinger/InputReader.h	/^        enum SizeCalibration {$/;"	g	struct:android::TouchInputMapper::Calibration
Slot	include/gui/ConsumerBase.h	/^    struct Slot {$/;"	s	class:android::ConsumerBase
Slot	services/inputflinger/InputReader.cpp	/^MultiTouchMotionAccumulator::Slot::Slot() {$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
Slot	services/inputflinger/InputReader.h	/^    class Slot {$/;"	c	class:android::MultiTouchMotionAccumulator
SlotsType	include/gui/BufferQueueDefs.h	/^        typedef BufferSlot SlotsType[NUM_BUFFER_SLOTS];$/;"	t	namespace:android::BufferQueueDefs
Source	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    enum Source {SOURCE_SINK = 0, SOURCE_SCRATCH = 1};$/;"	g	class:android::VirtualDisplaySurface
Spanner	include/private/ui/RegionHelper.h	/^        inline Spanner(const region& lhs, const region& rhs)$/;"	f	class:android::region_operator::Spanner
Spanner	include/private/ui/RegionHelper.h	/^    class Spanner : protected SpannerBase $/;"	c	class:android::region_operator
SpannerBase	include/private/ui/RegionHelper.h	/^        SpannerBase()$/;"	f	class:android::region_operator::SpannerBase
SpannerBase	include/private/ui/RegionHelper.h	/^    class SpannerBase$/;"	c	class:android::region_operator
SpannerInner	include/private/ui/RegionHelper.h	/^        inline SpannerInner(const region& lhs, const region& rhs)$/;"	f	class:android::region_operator::SpannerInner
SpannerInner	include/private/ui/RegionHelper.h	/^    class SpannerInner : protected SpannerBase $/;"	c	class:android::region_operator
SpecGenerator	opengl/tools/glgen2/glgen.py	/^class SpecGenerator(reg.OutputGenerator):$/;"	c
State	include/input/KeyCharacterMap.h	/^        enum State {$/;"	g	class:android::KeyCharacterMap::Parser
State	include/input/VelocityTracker.h	/^    struct State {$/;"	s	class:android::IntegratingVelocityTrackerStrategy
State	services/surfaceflinger/Layer.h	/^    struct State {$/;"	s	class:android::Layer
State	services/surfaceflinger/SurfaceFlinger.h	/^    struct State {$/;"	s	class:android::SurfaceFlinger
StaticDescriptorInitializer_gltrace_2eproto	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^  StaticDescriptorInitializer_gltrace_2eproto() {$/;"	f	struct:android::gltrace::StaticDescriptorInitializer_gltrace_2eproto
StaticDescriptorInitializer_gltrace_2eproto	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^struct StaticDescriptorInitializer_gltrace_2eproto {$/;"	s	namespace:android::gltrace	file:
Status	services/inputflinger/InputDispatcher.h	/^        enum Status {$/;"	g	class:android::InputDispatcher::Connection
StoreMetaDataInBuffersParams	include/media/hardware/HardwareAPI.h	/^struct StoreMetaDataInBuffersParams {$/;"	s	namespace:android
StreamSplitter	include/gui/StreamSplitter.h	/^class StreamSplitter : public BnConsumerListener {$/;"	c	namespace:android
StreamSplitter	libs/gui/StreamSplitter.cpp	/^StreamSplitter::StreamSplitter(const sp<IGraphicBufferConsumer>& inputQueue)$/;"	f	class:android::StreamSplitter
StreamSplitterTest	libs/gui/tests/StreamSplitter_test.cpp	/^    StreamSplitterTest() {$/;"	f	class:android::StreamSplitterTest
StreamSplitterTest	libs/gui/tests/StreamSplitter_test.cpp	/^class StreamSplitterTest : public ::testing::Test {$/;"	c	namespace:android	file:
StringBuilder	opengl/libs/EGL/trace.cpp	/^    StringBuilder() {$/;"	f	class:android::StringBuilder
StringBuilder	opengl/libs/EGL/trace.cpp	/^class StringBuilder {$/;"	c	namespace:android	file:
SubRegionMemory	libs/binder/MemoryHeapPmem.cpp	/^SubRegionMemory::SubRegionMemory(const sp<MemoryHeapPmem>& heap,$/;"	f	class:android::SubRegionMemory
SubRegionMemory	libs/binder/MemoryHeapPmem.cpp	/^class SubRegionMemory : public MemoryHeapPmem::MemoryPmem {$/;"	c	namespace:android	file:
SubSample	include/media/hardware/CryptoAPI.h	/^    struct SubSample {$/;"	s	struct:android::CryptoPlugin
Surface	include/gui/Surface.h	/^class Surface$/;"	c	namespace:android
Surface	libs/gui/Surface.cpp	/^Surface::Surface($/;"	f	class:android::Surface
SurfaceComposerClient	include/gui/SurfaceComposerClient.h	/^class SurfaceComposerClient : public RefBase$/;"	c	namespace:android
SurfaceComposerClient	libs/gui/SurfaceComposerClient.cpp	/^SurfaceComposerClient::SurfaceComposerClient()$/;"	f	class:android::SurfaceComposerClient
SurfaceControl	include/gui/SurfaceControl.h	/^class SurfaceControl : public RefBase$/;"	c	namespace:android
SurfaceControl	libs/gui/SurfaceControl.cpp	/^SurfaceControl::SurfaceControl($/;"	f	class:android::SurfaceControl
SurfaceFlinger	services/surfaceflinger/SurfaceFlinger.cpp	/^SurfaceFlinger::SurfaceFlinger()$/;"	f	class:android::SurfaceFlinger
SurfaceFlinger	services/surfaceflinger/SurfaceFlinger.h	/^class SurfaceFlinger : public BnSurfaceComposer,$/;"	c	namespace:android
SurfaceFlingerConsumer	services/surfaceflinger/SurfaceFlingerConsumer.h	/^    SurfaceFlingerConsumer(const sp<IGraphicBufferConsumer>& consumer,$/;"	f	class:android::SurfaceFlingerConsumer
SurfaceFlingerConsumer	services/surfaceflinger/SurfaceFlingerConsumer.h	/^class SurfaceFlingerConsumer : public GLConsumer {$/;"	c	namespace:android
SurfaceRef	opengl/libs/EGL/egl_object.h	/^typedef egl_surface_t::Ref  SurfaceRef;$/;"	t	namespace:android
SurfaceTest	libs/gui/tests/Surface_test.cpp	/^    SurfaceTest() {$/;"	f	class:android::SurfaceTest
SurfaceTest	libs/gui/tests/Surface_test.cpp	/^class SurfaceTest : public ::testing::Test {$/;"	c	namespace:android	file:
SurfaceTextureClientTest	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    SurfaceTextureClientTest():$/;"	f	class:android::SurfaceTextureClientTest
SurfaceTextureClientTest	libs/gui/tests/SurfaceTextureClient_test.cpp	/^class SurfaceTextureClientTest : public ::testing::Test {$/;"	c	namespace:android	file:
SurfaceTextureFBOTest	libs/gui/tests/SurfaceTextureFBO.h	/^class SurfaceTextureFBOTest : public SurfaceTextureGLTest {$/;"	c	namespace:android
SurfaceTextureGLTest	libs/gui/tests/SurfaceTextureGL.h	/^class SurfaceTextureGLTest : public GLTest {$/;"	c	namespace:android
SurfaceTextureGLThreadToGLTest	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^class SurfaceTextureGLThreadToGLTest : public SurfaceTextureGLToGLTest {$/;"	c	namespace:android
SurfaceTextureGLToGLTest	libs/gui/tests/SurfaceTextureGLToGL.h	/^    SurfaceTextureGLToGLTest():$/;"	f	class:android::SurfaceTextureGLToGLTest
SurfaceTextureGLToGLTest	libs/gui/tests/SurfaceTextureGLToGL.h	/^class SurfaceTextureGLToGLTest : public SurfaceTextureGLTest {$/;"	c	namespace:android
SurfaceTextureMultiContextGLTest	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^    SurfaceTextureMultiContextGLTest():$/;"	f	class:android::SurfaceTextureMultiContextGLTest
SurfaceTextureMultiContextGLTest	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^class SurfaceTextureMultiContextGLTest : public SurfaceTextureGLTest {$/;"	c	namespace:android
Swap	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage::Swap(GLMessage* other) {$/;"	f	class:android::gltrace::GLMessage
Swap	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_DataType::Swap(GLMessage_DataType* other) {$/;"	f	class:android::gltrace::GLMessage_DataType
Swap	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void GLMessage_FrameBuffer::Swap(GLMessage_FrameBuffer* other) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
SwitchInputMapper	services/inputflinger/InputReader.cpp	/^SwitchInputMapper::SwitchInputMapper(InputDevice* device) :$/;"	f	class:android::SwitchInputMapper
SwitchInputMapper	services/inputflinger/InputReader.h	/^class SwitchInputMapper : public InputMapper {$/;"	c	namespace:android
SwitchInputMapperTest	services/inputflinger/tests/InputReader_test.cpp	/^class SwitchInputMapperTest : public InputMapperTest {$/;"	c	namespace:android	file:
SyncFeatures	include/private/gui/SyncFeatures.h	/^class SyncFeatures : public Singleton<SyncFeatures> {$/;"	c	namespace:android
SyncFeatures	libs/gui/SyncFeatures.cpp	/^SyncFeatures::SyncFeatures() : Singleton<SyncFeatures>(),$/;"	f	class:android::SyncFeatures
T	opengl/libagl/context.h	/^        struct { GLfixed S, T, R, Q; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon219
T	opengl/libagl/context.h	/^        struct { GLfixed S, T, R; };$/;"	m	struct:android::gl::vec3_t::__anon212::__anon215
TAG	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private static String TAG = "CamRenderer";$/;"	f	class:CamRenderer	file:
TAG	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^    private static String TAG = "GL2JavaView";$/;"	f	class:GL2JavaView	file:
TAG	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^    private static String TAG = "GL2JNIView";$/;"	f	class:GL2JNIView	file:
TAG	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^        private static final String TAG = "Renderer";$/;"	f	class:GLJNIView.Renderer	file:
TAG	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^    private static String TAG = "GLPerfView";$/;"	f	class:GLPerfView	file:
TAG	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^    private static String TAG = "GLDualGL2View";$/;"	f	class:GLDualGL2View	file:
TAG	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^    private static String TAG = "TestFramerateView";$/;"	f	class:TestFramerateView	file:
TAG	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^    private static String TAG = "TestLatencyiew";$/;"	f	class:TestLatencyView	file:
TAG	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^    private final static String TAG = "TestActivity";$/;"	f	class:TestActivity	file:
TAG	opengl/tests/testPauseResume/src/com/android/test/TestView.java	/^        private static final String TAG = "Renderer";$/;"	f	class:TestView.Renderer	file:
TAG	opengl/tests/testViewport/src/com/android/test/TestActivity.java	/^    private final static String TAG = "TestActivity";$/;"	f	class:TestActivity	file:
TAG	opengl/tests/testViewport/src/com/android/test/TestView.java	/^        private static final String TAG = "Renderer";$/;"	f	class:TestView.Renderer	file:
TAP	services/inputflinger/InputReader.h	/^            TAP,$/;"	e	enum:android::TouchInputMapper::PointerGesture::Mode
TAP_DRAG	services/inputflinger/InputReader.h	/^            TAP_DRAG,$/;"	e	enum:android::TouchInputMapper::PointerGesture::Mode
TCPStream	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^TCPStream::TCPStream(int socket) {$/;"	f	class:android::gltrace::TCPStream
TCPStream	opengl/libs/GLES_trace/src/gltrace_transport.h	/^class TCPStream {$/;"	c	namespace:android::gltrace
TERMINATED	opengl/libs/EGL/egl_display.h	/^        TERMINATED      = 2$/;"	e	enum:android::egl_display_t::__anon240
TESTHELPERS_H	libs/input/tests/TestHelpers.h	18;"	d
TEST_API	libs/gui/tests/IGraphicBufferProducer_test.cpp	36;"	d	file:
TEST_API_OTHER	libs/gui/tests/IGraphicBufferProducer_test.cpp	37;"	d	file:
TEST_APP_DIR	cmds/installd/tests/installd_utils_test.cpp	30;"	d	file:
TEST_APP_PRIVATE_DIR	cmds/installd/tests/installd_utils_test.cpp	31;"	d	file:
TEST_ASEC_DIR	cmds/installd/tests/installd_utils_test.cpp	32;"	d	file:
TEST_CONTROLLED_BY_APP	libs/gui/tests/IGraphicBufferProducer_test.cpp	38;"	d	file:
TEST_DATA_DIR	cmds/installd/tests/installd_utils_test.cpp	29;"	d	file:
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, AppendAndIncrement_Normal) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, AppendAndIncrement_TooBig) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CheckSystemApp_BadPathEscapeFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CheckSystemApp_Dir1) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CheckSystemApp_Dir2) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CheckSystemApp_DoubleEscapeFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CheckSystemApp_EscapeFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CheckSystemApp_Subdir) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CopyAndAppend_Normal) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreateMovePath_Fail_AppTooLong) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreateMovePath_Fail_LeafTooLong) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreateMovePath_Primary) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreatePersonaPath_Primary) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreatePersonaPath_Secondary) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreatePkgPathInDir_ProtectedDir) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreatePkgPath_LongPkgNameFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreatePkgPath_LongPkgNameSuccess) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreatePkgPath_LongPostfixFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreatePkgPath_PrimaryUser) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, CreatePkgPath_SecondaryUser) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, GetPathFromString_CanonicalPath) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, GetPathFromString_EmptyPathFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, GetPathFromString_NonCanonical) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, GetPathFromString_NullPathFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, GetPathFromString_RelativePathFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_AsecGood1) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_AsecGood2) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_BadPrefix) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_CrazyDirFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_DoubleSlashFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_EscapeFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_Internal) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_Private) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_SlashEscapeFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_SubdirEscapeFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_SubdirEscapeSingleFail) {$/;"	f	namespace:android
TEST_F	cmds/installd/tests/installd_utils_test.cpp	/^TEST_F(UtilsTest, IsValidApkPath_TwoSubdirFail) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/BufferQueue_test.cpp	/^TEST_F(BufferQueueTest, AcquireBuffer_ExceedsMaxAcquireCount_Fails) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/BufferQueue_test.cpp	/^TEST_F(BufferQueueTest, BufferQueueInAnotherProcess) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/BufferQueue_test.cpp	/^TEST_F(BufferQueueTest, DetachAndReattachOnConsumerSide) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/BufferQueue_test.cpp	/^TEST_F(BufferQueueTest, DetachAndReattachOnProducerSide) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/BufferQueue_test.cpp	/^TEST_F(BufferQueueTest, MoveFromConsumerToProducer) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/BufferQueue_test.cpp	/^TEST_F(BufferQueueTest, SetMaxAcquiredBufferCountWithIllegalValues_ReturnsError) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/BufferQueue_test.cpp	/^TEST_F(BufferQueueTest, SetMaxAcquiredBufferCountWithLegalValues_Succeeds) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, CancelBuffer_DoesntCrash) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, ConnectAgain_ReturnsError) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, ConnectFirst_ReturnsError) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, Disconnect_ReturnsError) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, Disconnect_Succeeds) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, Query_ReturnsError) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, Query_Succeeds) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, Queue_ReturnsError) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, Queue_Succeeds) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, SetBufferCount_Fails) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^TEST_F(IGraphicBufferProducerTest, SetBufferCount_Succeeds) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/MultiTextureConsumer_test.cpp	/^TEST_F(MultiTextureConsumerTest, EGLImageTargetWorks) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SRGB_test.cpp	/^TEST_F(SRGBTest, GLRenderFromSRGBTexture) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SRGB_test.cpp	/^TEST_F(SRGBTest, RenderToSRGBSurface) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/StreamSplitter_test.cpp	/^TEST_F(StreamSplitterTest, OneInputMultipleOutputs) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/StreamSplitter_test.cpp	/^TEST_F(StreamSplitterTest, OneInputOneOutput) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/StreamSplitter_test.cpp	/^TEST_F(StreamSplitterTest, OutputAbandonment) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(MultiSurfaceTextureClientTest, DISABLED_MakeCurrentBetweenSurfacesWorks) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, BufferGeometryCanBeSet) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, BufferGeometryDefaultSizeSetFormat) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, BufferGeometryInvalidSizesFail) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, BufferGeometrySetSizeDefaultFormat) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, BufferGeometrySizeCanBeChangedWithoutFormat) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, BufferGeometrySizeCanBeUnset) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, ConcreteTypeIsSurfaceTextureClient) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, DISABLED_SurfaceTextureSyncModeDequeueCurrent) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, DISABLED_SurfaceTextureSyncModeWaitRetire) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, DefaultGeometryValues) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, EglCreateWindowSurfaceSucceeds) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, EglSwapBuffersAbandonErrorIsEglBadSurface) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, GetISurfaceTextureIsNotNull) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, GetTransformMatrixReturnsVerticalFlip) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, GetTransformMatrixSucceedsAfterFreeingBuffers) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, GetTransformMatrixSucceedsAfterFreeingBuffersWithCrop) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, QueryFormatAfterSettingWorks) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, QueuesToWindowCompositorIsFalse) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, SetCropCropsCrop) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, SurfaceTextureSetDefaultSize) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, SurfaceTextureSetDefaultSizeAfterDequeue) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, SurfaceTextureSetDefaultSizeVsGeometry) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, SurfaceTextureSyncModeDQQR) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, SurfaceTextureSyncModeFastRetire) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, SurfaceTextureSyncModeMinUndequeued) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, SurfaceTextureSyncModeSlowRetire) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureClient_test.cpp	/^TEST_F(SurfaceTextureClientTest, SurfaceTextureTooManyUpdateTexImage) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureFBO_test.cpp	/^TEST_F(SurfaceTextureFBOTest, BlitFromCpuFilledBufferToFbo) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGLThreadToGL_test.cpp	/^TEST_F(SurfaceTextureGLThreadToGLTest,$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	/^TEST_F(SurfaceTextureGLToGLTest, EglDestroySurfaceAfterAbandonUnrefsBuffers) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	/^TEST_F(SurfaceTextureGLToGLTest, EglDestroySurfaceUnrefsBuffers) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	/^TEST_F(SurfaceTextureGLToGLTest, EglMakeCurrentAfterConsumerDeathUnrefsBuffers) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	/^TEST_F(SurfaceTextureGLToGLTest, EglMakeCurrentBeforeConsumerDeathUnrefsBuffers) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	/^TEST_F(SurfaceTextureGLToGLTest, TexturingFromGLFilledRGBABufferPow2) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	/^TEST_F(SurfaceTextureGLToGLTest, TexturingFromPreRotatedGLFilledBuffer) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	/^TEST_F(SurfaceTextureGLToGLTest, TexturingFromPreRotatedUserSizedGLFilledBuffer) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	/^TEST_F(SurfaceTextureGLToGLTest, TexturingFromUserSizedGLFilledBuffer) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	/^TEST_F(SurfaceTextureGLToGLTest, TransformHintGetsRespected) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, AbandonUnblocksDequeueBuffer) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, CroppedScalingMode) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, DisconnectClearsCurrentTexture) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, DisconnectStressTest) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, InvalidWidthOrHeightFails) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, ScaleToWindowMode) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, TexturingFromCpuFilledRGBABufferNpot) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, TexturingFromCpuFilledRGBABufferPow2) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, TexturingFromCpuFilledYV12BufferNpot) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, TexturingFromCpuFilledYV12BufferPow2) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, TexturingFromCpuFilledYV12BufferWithCrop) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureGL_test.cpp	/^TEST_F(SurfaceTextureGLTest, TexturingFromCpuFilledYV12BuffersRepeatedly) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, AttachToContextFailsWhenAbandoned) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, AttachToContextFailsWhenAttached) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, AttachToContextFailsWithNoDisplay) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, AttachToContextSucceeds) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, AttachToContextSucceedsTwice) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, DetachFromContextFailsWhenAbandoned) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, DetachFromContextFailsWhenDetached) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, DetachFromContextFailsWithNoContext) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, DetachFromContextFailsWithNoDisplay) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, DetachFromContextSucceeds) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, UpdateFromMultipleContextsFails) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest, UpdateTexImageFailsWhenDetached) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^TEST_F(SurfaceTextureMultiContextGLTest,$/;"	f	namespace:android
TEST_F	libs/gui/tests/Surface_test.cpp	/^TEST_F(SurfaceTest, ConcreteTypeIsSurface) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/Surface_test.cpp	/^TEST_F(SurfaceTest, QueryConsumerUsage) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/Surface_test.cpp	/^TEST_F(SurfaceTest, QueuesToWindowComposerIsTrueWhenPurgatorized) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/Surface_test.cpp	/^TEST_F(SurfaceTest, QueuesToWindowComposerIsTrueWhenVisible) {$/;"	f	namespace:android
TEST_F	libs/gui/tests/Surface_test.cpp	/^TEST_F(SurfaceTest, ScreenshotsOfProtectedBuffersSucceed) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputChannel_test.cpp	/^TEST_F(InputChannelTest, ConstructorAndDestructor_TakesOwnershipOfFileDescriptors) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputChannel_test.cpp	/^TEST_F(InputChannelTest, OpenInputChannelPair_ReturnsAPairOfConnectedChannels) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputChannel_test.cpp	/^TEST_F(InputChannelTest, ReceiveSignal_WhenNoSignalPresent_ReturnsAnError) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputChannel_test.cpp	/^TEST_F(InputChannelTest, ReceiveSignal_WhenPeerClosed_ReturnsAnError) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputChannel_test.cpp	/^TEST_F(InputChannelTest, SendSignal_WhenPeerClosed_ReturnsAnError) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(KeyEventTest, Properties) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(MotionEventTest, CopyFrom_DoNotKeepHistory) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(MotionEventTest, CopyFrom_KeepHistory) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(MotionEventTest, OffsetLocation) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(MotionEventTest, Parcel) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(MotionEventTest, Properties) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(MotionEventTest, Scale) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(MotionEventTest, Transform) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(PointerCoordsTest, AxisValues) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(PointerCoordsTest, ClearSetsBitsToZero) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputEvent_test.cpp	/^TEST_F(PointerCoordsTest, Parcel) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^TEST_F(InputPublisherAndConsumerTest, GetChannel_ReturnsTheChannel) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^TEST_F(InputPublisherAndConsumerTest, PublishKeyEvent_EndToEnd) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^TEST_F(InputPublisherAndConsumerTest, PublishMotionEvent_EndToEnd) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^TEST_F(InputPublisherAndConsumerTest, PublishMotionEvent_WhenPointerCountGreaterThanMax_ReturnsError) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^TEST_F(InputPublisherAndConsumerTest, PublishMotionEvent_WhenPointerCountLessThan1_ReturnsError) {$/;"	f	namespace:android
TEST_F	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^TEST_F(InputPublisherAndConsumerTest, PublishMultipleEvents_EndToEnd) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/Region_test.cpp	/^TEST_F(RegionTest, Bigger_TJunction) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/Region_test.cpp	/^TEST_F(RegionTest, MinimalDivision_TJunction) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/Region_test.cpp	/^TEST_F(RegionTest, Random_TJunction) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/Region_test.cpp	/^TEST_F(RegionTest, Simple_TJunction) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/Region_test.cpp	/^TEST_F(RegionTest, Trivial_TJunction) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/mat_test.cpp	/^TEST_F(MatTest, ArithmeticOps) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/mat_test.cpp	/^TEST_F(MatTest, Basics) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/mat_test.cpp	/^TEST_F(MatTest, ComparisonOps) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/mat_test.cpp	/^TEST_F(MatTest, Constructors) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/mat_test.cpp	/^TEST_F(MatTest, MiscOps) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/mat_test.cpp	/^TEST_F(MatTest, UnaryOps) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/vec_test.cpp	/^TEST_F(VecTest, Access) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/vec_test.cpp	/^TEST_F(VecTest, ArithmeticFunc) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/vec_test.cpp	/^TEST_F(VecTest, ArithmeticOps) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/vec_test.cpp	/^TEST_F(VecTest, Basics) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/vec_test.cpp	/^TEST_F(VecTest, ComparisonOps) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/vec_test.cpp	/^TEST_F(VecTest, Constructors) {$/;"	f	namespace:android
TEST_F	libs/ui/tests/vec_test.cpp	/^TEST_F(VecTest, UnaryOps) {$/;"	f	namespace:android
TEST_F	opengl/tests/EGLTest/EGL_test.cpp	/^TEST_F(EGLTest, DISABLED_EGLConfigEightBitFirst) {$/;"	f	namespace:android
TEST_F	opengl/tests/EGLTest/EGL_test.cpp	/^TEST_F(EGLTest, EGLConfigRGBA8888First) {$/;"	f	namespace:android
TEST_F	opengl/tests/EGLTest/EGL_test.cpp	/^TEST_F(EGLTest, EGLTerminateSucceedsWithRemainingObjects) {$/;"	f	namespace:android
TEST_F	opengl/tests/EGLTest/egl_cache_test.cpp	/^TEST_F(EGLCacheSerializationTest, ReinitializedCacheContainsValues) {$/;"	f	namespace:android
TEST_F	opengl/tests/EGLTest/egl_cache_test.cpp	/^TEST_F(EGLCacheTest, InitializedCacheAlwaysHits) {$/;"	f	namespace:android
TEST_F	opengl/tests/EGLTest/egl_cache_test.cpp	/^TEST_F(EGLCacheTest, TerminatedCacheAlwaysMisses) {$/;"	f	namespace:android
TEST_F	opengl/tests/EGLTest/egl_cache_test.cpp	/^TEST_F(EGLCacheTest, UninitializedCacheAlwaysMisses) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputDispatcher_test.cpp	/^TEST_F(InputDispatcherTest, InjectInputEvent_ValidatesKeyEvents) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputDispatcher_test.cpp	/^TEST_F(InputDispatcherTest, InjectInputEvent_ValidatesMotionEvents) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, Process_ShouldHandleAllButtons) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, Process_ShouldHandleCombinedXYAndButtonUpdates) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, Process_ShouldHandleIndependentButtonUpdates) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, Process_ShouldHandleIndependentXYUpdates) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, Process_ShouldSetAllFieldsAndIncludeGlobalMetaState) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, Process_WhenModeIsPointer_ShouldMoveThePointerAround) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, Process_WhenNotOrientationAware_ShouldNotRotateMotions) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, Process_WhenOrientationAware_ShouldRotateMotions) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, WhenModeIsNavigation_GetSources_ReturnsTrackball) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, WhenModeIsNavigation_PopulateDeviceInfo_ReturnsScaledRange) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, WhenModeIsPointer_GetSources_ReturnsMouse) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(CursorInputMapperTest, WhenModeIsPointer_PopulateDeviceInfo_ReturnsRangeFromPointerController) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(InputDeviceTest, ImmutableProperties) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(InputDeviceTest, WhenMappersAreRegistered_DeviceIsNotIgnoredAndForwardsRequestsToMappers) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(InputDeviceTest, WhenNoMappersAreRegistered_DeviceIsIgnored) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(InputReaderTest, GetInputDevices) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(InputReaderTest, GetKeyCodeState_ForwardsRequestsToMappers) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(InputReaderTest, GetScanCodeState_ForwardsRequestsToMappers) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(InputReaderTest, GetSwitchState_ForwardsRequestsToMappers) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(InputReaderTest, LoopOnce_ForwardsRawEventsToMappers) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(InputReaderTest, LoopOnce_WhenDeviceScanFinished_SendsConfigurationChanged) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(InputReaderTest, MarkSupportedKeyCodes_ForwardsRequestsToMappers) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(KeyboardInputMapperTest, GetKeyCodeState) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(KeyboardInputMapperTest, GetScanCodeState) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(KeyboardInputMapperTest, GetSources) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(KeyboardInputMapperTest, MarkSupportedKeyCodes) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(KeyboardInputMapperTest, Process_LockedKeysShouldToggleMetaStateAndLeds) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(KeyboardInputMapperTest, Process_ShouldUpdateMetaState) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(KeyboardInputMapperTest, Process_SimpleKeyPress) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(KeyboardInputMapperTest, Process_WhenNotOrientationAware_ShouldNotRotateDPad) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(KeyboardInputMapperTest, Process_WhenOrientationAware_ShouldRotateDPad) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_AllAxes_WithDefaultCalibration) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_NormalMultiTouchGesture_WithSlots) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_NormalMultiTouchGesture_WithTrackingIds) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_NormalMultiTouchGesture_WithoutTrackingIds) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_PressureAxis_AmplitudeCalibration) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_ShouldHandleAllButtons) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_ShouldHandleAllToolTypes) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_TouchAndToolAxes_AreaCalibration) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_TouchAndToolAxes_GeometricCalibration) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_TouchAndToolAxes_SummedLinearCalibration) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_WhenAbsMTPressureIsPresent_HoversIfItsValueIsZero) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(MultiTouchInputMapperTest, Process_WhenBtnTouchPresent_HoversIfItsValueIsZero) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, GetKeyCodeState) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, GetScanCodeState) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, GetSources_WhenDeviceTypeIsNotSpecifiedAndIsACursor_ReturnsTouchPad) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, GetSources_WhenDeviceTypeIsNotSpecifiedAndNotACursor_ReturnsPointer) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, GetSources_WhenDeviceTypeIsTouchPad_ReturnsTouchPad) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, GetSources_WhenDeviceTypeIsTouchScreen_ReturnsTouchScreen) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, MarkSupportedKeyCodes) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_AllAxes_DefaultCalibration) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_NormalSingleTouchGesture) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_ShouldHandleAllButtons) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_ShouldHandleAllToolTypes) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_WhenAbsPressureIsPresent_HoversIfItsValueIsZero) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_WhenBtnTouchPresent_HoversIfItsValueIsZero) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_WhenNotOrientationAware_DoesNotRotateMotions) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_WhenOrientationAware_RotatesMotions) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_WhenTouchStartsOutsideDisplayAndMovesIn_SendsDownAsTouchEntersDisplay) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_WhenVirtualKeyIsPressedAndMovedOutOfBounds_SendsKeyDownAndKeyCancel) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_WhenVirtualKeyIsPressedAndReleasedNormally_SendsKeyDownAndKeyUp) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SingleTouchInputMapperTest, Process_XYAxes_AffineCalibration) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SwitchInputMapperTest, GetSources) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SwitchInputMapperTest, GetSwitchState) {$/;"	f	namespace:android
TEST_F	services/inputflinger/tests/InputReader_test.cpp	/^TEST_F(SwitchInputMapperTest, Process) {$/;"	f	namespace:android
TEST_F	services/surfaceflinger/tests/Transaction_test.cpp	/^TEST_F(LayerUpdateTest, LayerMoveWorks) {$/;"	f	namespace:android
TEST_F	services/surfaceflinger/tests/Transaction_test.cpp	/^TEST_F(LayerUpdateTest, LayerResizeWorks) {$/;"	f	namespace:android
TEST_P	libs/gui/tests/CpuConsumer_test.cpp	/^TEST_P(CpuConsumerTest, FromCpuLockMax) {$/;"	f	namespace:android
TEST_P	libs/gui/tests/CpuConsumer_test.cpp	/^TEST_P(CpuConsumerTest, FromCpuManyInQueue) {$/;"	f	namespace:android
TEST_P	libs/gui/tests/CpuConsumer_test.cpp	/^TEST_P(CpuConsumerTest, FromCpuSingle) {$/;"	f	namespace:android
TEST_PRODUCER_USAGE_BITS	libs/gui/tests/IGraphicBufferProducer_test.cpp	39;"	d	file:
TEST_SYSTEM_DIR1	cmds/installd/tests/installd_utils_test.cpp	34;"	d	file:
TEST_SYSTEM_DIR2	cmds/installd/tests/installd_utils_test.cpp	35;"	d	file:
TEST_TOKEN	libs/gui/tests/IGraphicBufferProducer_test.cpp	35;"	d	file:
TEXTURE	opengl/libagl/context.h	/^        TEXTURE             = 0x08,$/;"	e	enum:android::gl::transform_state_t::__anon228
TEXTURE_2D	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            TEXTURE_2D              =       0x00000010,$/;"	e	enum:android::ProgramCache::Key::__anon33
TEXTURE_2D	services/surfaceflinger/RenderEngine/Texture.h	/^    enum Target { TEXTURE_2D = 0x0DE1, TEXTURE_EXTERNAL = 0x8D65 };$/;"	e	enum:android::Texture::Target
TEXTURE_EXT	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            TEXTURE_EXT             =       0x00000008,$/;"	e	enum:android::ProgramCache::Key::__anon33
TEXTURE_EXTERNAL	include/gui/GLConsumer.h	/^    enum { TEXTURE_EXTERNAL = 0x8D65 }; \/\/ GL_TEXTURE_EXTERNAL_OES$/;"	e	enum:android::GLConsumer::__anon150
TEXTURE_EXTERNAL	services/surfaceflinger/RenderEngine/Texture.h	/^    enum Target { TEXTURE_2D = 0x0DE1, TEXTURE_EXTERNAL = 0x8D65 };$/;"	e	enum:android::Texture::Target
TEXTURE_MASK	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            TEXTURE_MASK            =       0x00000018,$/;"	e	enum:android::ProgramCache::Key::__anon33
TEXTURE_MASKING_2D	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            TEXTURE_MASKING_2D      =       0x01000000,$/;"	e	enum:android::ProgramCache::Key::__anon33
TEXTURE_MASKING_EXT	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            TEXTURE_MASKING_EXT     =       0x00800000,$/;"	e	enum:android::ProgramCache::Key::__anon33
TEXTURE_MASKING_MASK	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            TEXTURE_MASKING_MASK    =       0x01800000,$/;"	e	enum:android::ProgramCache::Key::__anon33
TEXTURE_MASKING_OFF	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            TEXTURE_MASKING_OFF     =       0x00000000,$/;"	e	enum:android::ProgramCache::Key::__anon33
TEXTURE_OFF	services/surfaceflinger/RenderEngine/ProgramCache.h	/^            TEXTURE_OFF             =       0x00000000,$/;"	e	enum:android::ProgramCache::Key::__anon33
TEX_ID	libs/gui/tests/MultiTextureConsumer_test.cpp	/^    enum { TEX_ID = 123 };$/;"	e	enum:android::MultiTextureConsumerTest::__anon257	file:
TEX_ID	libs/gui/tests/SurfaceTextureGL.h	/^    enum { TEX_ID = 123 };$/;"	e	enum:android::SurfaceTextureGLTest::__anon256
THIRD_TEX_ID	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^    enum { THIRD_TEX_ID = 456 };$/;"	e	enum:android::SurfaceTextureMultiContextGLTest::__anon259
TILT	services/inputflinger/tests/InputReader_test.cpp	/^        TILT = 1 << 8,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
TIMEOUT_NEVER	include/ui/Fence.h	/^    enum { TIMEOUT_NEVER = -1 };$/;"	e	enum:android::Fence::__anon75
TIMING	opengl/libagl/dxt.cpp	18;"	d	file:
TIMING	opengl/libagl/dxt.cpp	31;"	d	file:
TL	services/sensorservice/traits.h	/^namespace TL {$/;"	n	namespace:android
TLS_KEY_NOT_INITIALIZED	opengl/libs/EGL/egl_tls.h	/^    enum { TLS_KEY_NOT_INITIALIZED = -1 };$/;"	e	enum:android::egl_tls_t::__anon239
TMAT_IMPLEMENTATION	include/ui/TMatHelpers.h	20;"	d
TMAT_IMPLEMENTATION	include/ui/mat4.h	26;"	d
TMatDebug	include/ui/TMatHelpers.h	/^class TMatDebug {$/;"	c	namespace:android
TMatProductOperators	include/ui/TMatHelpers.h	/^class TMatProductOperators {$/;"	c	namespace:android
TMatSquareFunctions	include/ui/TMatHelpers.h	/^class TMatSquareFunctions {$/;"	c	namespace:android
TOKEN_MAX	cmds/installd/installd.c	26;"	d	file:
TOLERANCE	libs/gui/tests/SRGB_test.cpp	/^        TOLERANCE = 1,$/;"	e	enum:android::SRGBTest::__anon253	file:
TOMBSTONE_DIR	cmds/dumpstate/dumpstate.c	49;"	d	file:
TOMBSTONE_FILE_PREFIX	cmds/dumpstate/dumpstate.c	50;"	d	file:
TOMBSTONE_MAX_LEN	cmds/dumpstate/dumpstate.c	52;"	d	file:
TOOL	services/inputflinger/tests/InputReader_test.cpp	/^        TOOL = 1 << 2,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
TOOL_TYPE	services/inputflinger/tests/InputReader_test.cpp	/^        TOOL_TYPE = 1 << 10,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
TOP_LOCAL_PATH	opengl/tests/gl2_java/Android.mk	/^TOP_LOCAL_PATH:= $(call my-dir)$/;"	m
TOP_LOCAL_PATH	opengl/tests/gl2_jni/Android.mk	/^TOP_LOCAL_PATH:= $(call my-dir)$/;"	m
TOP_LOCAL_PATH	opengl/tests/gl_jni/Android.mk	/^TOP_LOCAL_PATH:= $(call my-dir)$/;"	m
TOP_LOCAL_PATH	opengl/tests/gl_perfapp/Android.mk	/^TOP_LOCAL_PATH:= $(call my-dir)$/;"	m
TOP_LOCAL_PATH	opengl/tests/gldual/Android.mk	/^TOP_LOCAL_PATH:= $(call my-dir)$/;"	m
TOP_LOCAL_PATH	opengl/tests/testFramerate/Android.mk	/^TOP_LOCAL_PATH:= $(call my-dir)$/;"	m
TOP_LOCAL_PATH	opengl/tests/testLatency/Android.mk	/^TOP_LOCAL_PATH:= $(call my-dir)$/;"	m
TOP_LOCAL_PATH	opengl/tests/testPauseResume/Android.mk	/^TOP_LOCAL_PATH:= $(call my-dir)$/;"	m
TOP_LOCAL_PATH	opengl/tests/testViewport/Android.mk	/^TOP_LOCAL_PATH:= $(call my-dir)$/;"	m
TOSTRING	libs/ui/UiConfig.cpp	22;"	d	file:
TOUCH	services/inputflinger/tests/InputReader_test.cpp	/^        TOUCH = 1 << 1,$/;"	e	enum:android::TouchInputMapperTest::Axes	file:
TOUCH_AFFINE_TRANSFORMATION	services/inputflinger/InputReader.h	/^        TOUCH_AFFINE_TRANSFORMATION = 1 << 7,$/;"	e	enum:android::InputReaderConfiguration::__anon38
TRACE	cmds/servicemanager/binder.c	16;"	d	file:
TRACE_CALL_TEMPLATE	opengl/libs/GLES_trace/tools/genapi.py	/^TRACE_CALL_TEMPLATE = pyratemp.Template($/;"	v
TRACE_GL	opengl/libs/EGL/trace.cpp	326;"	d	file:
TRACE_GL	opengl/libs/EGL/trace.cpp	335;"	d	file:
TRACE_GL	opengl/libs/EGL/trace.cpp	347;"	d	file:
TRACE_GL	opengl/libs/EGL/trace.cpp	361;"	d	file:
TRACE_GL	opengl/libs/EGL/trace.cpp	368;"	d	file:
TRACE_GL	opengl/libs/EGL/trace.cpp	377;"	d	file:
TRACE_GL	opengl/libs/EGL/trace.cpp	389;"	d	file:
TRACE_GL	opengl/libs/EGL/trace.cpp	407;"	d	file:
TRACE_GL	opengl/libs/EGL/trace.cpp	429;"	d	file:
TRACE_GL	opengl/libs/EGL/trace.cpp	442;"	d	file:
TRACE_GL	opengl/libs/EGL/trace.cpp	457;"	d	file:
TRACE_GL_ERRORS	opengl/libagl/state.h	38;"	d
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	325;"	d	file:
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	328;"	d	file:
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	346;"	d	file:
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	360;"	d	file:
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	367;"	d	file:
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	370;"	d	file:
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	388;"	d	file:
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	406;"	d	file:
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	422;"	d	file:
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	441;"	d	file:
TRACE_GL_VOID	opengl/libs/EGL/trace.cpp	456;"	d	file:
TRACKBALL_MOVEMENT_THRESHOLD	services/inputflinger/InputReader.h	/^    static const int32_t TRACKBALL_MOVEMENT_THRESHOLD = 6;$/;"	m	class:android::CursorInputMapper
TRACKBALL_MOVEMENT_THRESHOLD	services/inputflinger/tests/InputReader_test.cpp	/^    static const int32_t TRACKBALL_MOVEMENT_THRESHOLD;$/;"	m	class:android::CursorInputMapperTest	file:
TRACKBALL_MOVEMENT_THRESHOLD	services/inputflinger/tests/InputReader_test.cpp	/^const int32_t CursorInputMapperTest::TRACKBALL_MOVEMENT_THRESHOLD = 6;$/;"	m	class:android::CursorInputMapperTest	file:
TRAMPOLINE_OPTIONS	opengl/tools/glgen2/glgen.py	/^    TRAMPOLINE_OPTIONS = [$/;"	v	class:SpecGenerator
TRANSACTION	services/surfaceflinger/MessageQueue.h	/^        TRANSACTION = 2$/;"	e	enum:android::MessageQueue::__anon26
TRANSACT_BATTERYPROPERTIESCHANGED	include/batteryservice/IBatteryPropertiesListener.h	/^        TRANSACT_BATTERYPROPERTIESCHANGED = IBinder::FIRST_CALL_TRANSACTION,$/;"	e	enum:android::__anon120
TRANSITION_GRADUAL	services/inputflinger/PointerControllerInterface.h	/^        TRANSITION_GRADUAL,$/;"	e	enum:android::PointerControllerInterface::Transition
TRANSITION_IMMEDIATE	services/inputflinger/PointerControllerInterface.h	/^        TRANSITION_IMMEDIATE,$/;"	e	enum:android::PointerControllerInterface::Transition
TRANSLATE	services/surfaceflinger/Transform.h	/^                TRANSLATE           = 0x1,$/;"	e	enum:android::Transform::type_mask
TRIANGLES	services/surfaceflinger/RenderEngine/Mesh.h	/^        TRIANGLES       = 0x0004,       \/\/ GL_TRIANGLES$/;"	e	enum:android::Mesh::Primitive
TRIANGLE_FAN	services/surfaceflinger/RenderEngine/Mesh.h	/^        TRIANGLE_FAN    = 0x0006        \/\/ GL_TRIANGLE_FAN$/;"	e	enum:android::Mesh::Primitive
TRIANGLE_STRIP	services/surfaceflinger/RenderEngine/Mesh.h	/^        TRIANGLE_STRIP  = 0x0005,       \/\/ GL_TRIANGLE_STRIP$/;"	e	enum:android::Mesh::Primitive
TRIANGLE_VERTICES_DATA_POS_OFFSET	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private static final int TRIANGLE_VERTICES_DATA_POS_OFFSET = 0;$/;"	f	class:CamRenderer	file:
TRIANGLE_VERTICES_DATA_STRIDE_BYTES	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private static final int TRIANGLE_VERTICES_DATA_STRIDE_BYTES = 5 * FLOAT_SIZE_BYTES;$/;"	f	class:CamRenderer	file:
TRIANGLE_VERTICES_DATA_STRIDE_BYTES	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^const GLint TRIANGLE_VERTICES_DATA_STRIDE_BYTES = 5 * FLOAT_SIZE_BYTES;$/;"	v
TRIANGLE_VERTICES_DATA_UV_OFFSET	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private static final int TRIANGLE_VERTICES_DATA_UV_OFFSET = 3;$/;"	f	class:CamRenderer	file:
TT	opengl/libagl/context.h	/^        TT              = 0x8000,   \/\/ texture coords transformed$/;"	e	enum:android::gl::vertex_t::__anon220
TVEC_IMPLEMENTATION	include/ui/TVecHelpers.h	20;"	d
TVEC_IMPLEMENTATION	include/ui/vec2.h	23;"	d
TVecAddOperators	include/ui/TVecHelpers.h	/^class TVecAddOperators {$/;"	c	namespace:android
TVecComparisonOperators	include/ui/TVecHelpers.h	/^class TVecComparisonOperators {$/;"	c	namespace:android
TVecFunctions	include/ui/TVecHelpers.h	/^class TVecFunctions {$/;"	c	namespace:android
TVecProductOperators	include/ui/TVecHelpers.h	/^class TVecProductOperators {$/;"	c	namespace:android
TVecUnaryOperators	include/ui/TVecHelpers.h	/^class TVecUnaryOperators {$/;"	c	namespace:android
TYPE	include/private/ui/RegionHelper.h	/^    typedef typename RECT::value_type TYPE;    $/;"	t	class:android::region_operator
TYPELIST_1	services/sensorservice/traits.h	36;"	d
TYPELIST_2	services/sensorservice/traits.h	37;"	d
TYPELIST_3	services/sensorservice/traits.h	38;"	d
TYPELIST_4	services/sensorservice/traits.h	39;"	d
TYPE_ACCELEROMETER	include/gui/Sensor.h	/^        TYPE_ACCELEROMETER  = ASENSOR_TYPE_ACCELEROMETER,$/;"	e	enum:android::Sensor::__anon138
TYPE_APPLICATION	services/inputflinger/InputWindow.h	/^        TYPE_APPLICATION        = 2,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_APPLICATION_ATTACHED_DIALOG	services/inputflinger/InputWindow.h	/^        TYPE_APPLICATION_ATTACHED_DIALOG = FIRST_SUB_WINDOW+3,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_APPLICATION_MEDIA	services/inputflinger/InputWindow.h	/^        TYPE_APPLICATION_MEDIA  = FIRST_SUB_WINDOW+1,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_APPLICATION_MEDIA_OVERLAY	services/inputflinger/InputWindow.h	/^        TYPE_APPLICATION_MEDIA_OVERLAY  = FIRST_SUB_WINDOW+4,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_APPLICATION_PANEL	services/inputflinger/InputWindow.h	/^        TYPE_APPLICATION_PANEL  = FIRST_SUB_WINDOW,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_APPLICATION_STARTING	services/inputflinger/InputWindow.h	/^        TYPE_APPLICATION_STARTING = 3,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_APPLICATION_SUB_PANEL	services/inputflinger/InputWindow.h	/^        TYPE_APPLICATION_SUB_PANEL = FIRST_SUB_WINDOW+2,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_BASE_APPLICATION	services/inputflinger/InputWindow.h	/^        TYPE_BASE_APPLICATION   = 1,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_BOOT_PROGRESS	services/inputflinger/InputWindow.h	/^        TYPE_BOOT_PROGRESS = FIRST_SYSTEM_WINDOW+21,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_CONFIGURATION_CHANGED	services/inputflinger/InputDispatcher.h	/^            TYPE_CONFIGURATION_CHANGED,$/;"	e	enum:android::InputDispatcher::EventEntry::__anon45
TYPE_DEVICE_RESET	services/inputflinger/InputDispatcher.h	/^            TYPE_DEVICE_RESET,$/;"	e	enum:android::InputDispatcher::EventEntry::__anon45
TYPE_DIR	cmds/rawbu/backup.cpp	233;"	d	file:
TYPE_DRAG	services/inputflinger/InputWindow.h	/^        TYPE_DRAG               = FIRST_SYSTEM_WINDOW+16,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_END	cmds/rawbu/backup.cpp	232;"	d	file:
TYPE_FILE	cmds/rawbu/backup.cpp	234;"	d	file:
TYPE_FINISHED	include/input/InputTransport.h	/^        TYPE_FINISHED = 3,$/;"	e	enum:android::InputMessage::__anon109
TYPE_GYROSCOPE	include/gui/Sensor.h	/^        TYPE_GYROSCOPE      = ASENSOR_TYPE_GYROSCOPE,$/;"	e	enum:android::Sensor::__anon138
TYPE_INPUT_METHOD	services/inputflinger/InputWindow.h	/^        TYPE_INPUT_METHOD       = FIRST_SYSTEM_WINDOW+11,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_INPUT_METHOD_DIALOG	services/inputflinger/InputWindow.h	/^        TYPE_INPUT_METHOD_DIALOG= FIRST_SYSTEM_WINDOW+12,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_KEY	include/input/InputTransport.h	/^        TYPE_KEY = 1,$/;"	e	enum:android::InputMessage::__anon109
TYPE_KEY	services/inputflinger/InputDispatcher.h	/^            TYPE_KEY,$/;"	e	enum:android::InputDispatcher::EventEntry::__anon45
TYPE_KEYGUARD	services/inputflinger/InputWindow.h	/^        TYPE_KEYGUARD           = FIRST_SYSTEM_WINDOW+4,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_KEYGUARD_DIALOG	services/inputflinger/InputWindow.h	/^        TYPE_KEYGUARD_DIALOG    = FIRST_SYSTEM_WINDOW+9,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_LIGHT	include/gui/Sensor.h	/^        TYPE_LIGHT          = ASENSOR_TYPE_LIGHT,$/;"	e	enum:android::Sensor::__anon138
TYPE_MAGNETIC_FIELD	include/gui/Sensor.h	/^        TYPE_MAGNETIC_FIELD = ASENSOR_TYPE_MAGNETIC_FIELD,$/;"	e	enum:android::Sensor::__anon138
TYPE_MAGNIFICATION_OVERLAY	services/inputflinger/InputWindow.h	/^        TYPE_MAGNIFICATION_OVERLAY = FIRST_SYSTEM_WINDOW+22,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_MOTION	include/input/InputTransport.h	/^        TYPE_MOTION = 2,$/;"	e	enum:android::InputMessage::__anon109
TYPE_MOTION	services/inputflinger/InputDispatcher.h	/^            TYPE_MOTION$/;"	e	enum:android::InputDispatcher::EventEntry::__anon45
TYPE_NAVIGATION_BAR	services/inputflinger/InputWindow.h	/^        TYPE_NAVIGATION_BAR     = FIRST_SYSTEM_WINDOW+19,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_PHONE	services/inputflinger/InputWindow.h	/^        TYPE_PHONE              = FIRST_SYSTEM_WINDOW+2,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_POINTER	services/inputflinger/InputWindow.h	/^        TYPE_POINTER            = FIRST_SYSTEM_WINDOW+18,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_PRIORITY_PHONE	services/inputflinger/InputWindow.h	/^        TYPE_PRIORITY_PHONE     = FIRST_SYSTEM_WINDOW+7,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_PROXIMITY	include/gui/Sensor.h	/^        TYPE_PROXIMITY      = ASENSOR_TYPE_PROXIMITY$/;"	e	enum:android::Sensor::__anon138
TYPE_SEARCH_BAR	services/inputflinger/InputWindow.h	/^        TYPE_SEARCH_BAR         = FIRST_SYSTEM_WINDOW+1,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_SECURE_SYSTEM_OVERLAY	services/inputflinger/InputWindow.h	/^        TYPE_SECURE_SYSTEM_OVERLAY = FIRST_SYSTEM_WINDOW+15,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_STATUS_BAR	services/inputflinger/InputWindow.h	/^        TYPE_STATUS_BAR         = FIRST_SYSTEM_WINDOW,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_STATUS_BAR_PANEL	services/inputflinger/InputWindow.h	/^        TYPE_STATUS_BAR_PANEL   = FIRST_SYSTEM_WINDOW+14,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_STATUS_BAR_SUB_PANEL	services/inputflinger/InputWindow.h	/^        TYPE_STATUS_BAR_SUB_PANEL  = FIRST_SYSTEM_WINDOW+17,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_SYSTEM_ALERT	services/inputflinger/InputWindow.h	/^        TYPE_SYSTEM_ALERT       = FIRST_SYSTEM_WINDOW+3,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_SYSTEM_DIALOG	services/inputflinger/InputWindow.h	/^        TYPE_SYSTEM_DIALOG      = FIRST_SYSTEM_WINDOW+8,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_SYSTEM_ERROR	services/inputflinger/InputWindow.h	/^        TYPE_SYSTEM_ERROR       = FIRST_SYSTEM_WINDOW+10,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_SYSTEM_OVERLAY	services/inputflinger/InputWindow.h	/^        TYPE_SYSTEM_OVERLAY     = FIRST_SYSTEM_WINDOW+6,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_TOAST	services/inputflinger/InputWindow.h	/^        TYPE_TOAST              = FIRST_SYSTEM_WINDOW+5,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_VOLUME_OVERLAY	services/inputflinger/InputWindow.h	/^        TYPE_VOLUME_OVERLAY = FIRST_SYSTEM_WINDOW+20,$/;"	e	enum:android::InputWindowInfo::__anon40
TYPE_WALLPAPER	services/inputflinger/InputWindow.h	/^        TYPE_WALLPAPER          = FIRST_SYSTEM_WINDOW+13,$/;"	e	enum:android::InputWindowInfo::__anon40
TagBuffer	services/surfaceflinger/EventLog/EventLog.cpp	/^EventLog::TagBuffer::TagBuffer(int32_t tag)$/;"	f	class:android::EventLog::TagBuffer
TagBuffer	services/surfaceflinger/EventLog/EventLog.h	/^    class TagBuffer {$/;"	c	class:android::EventLog
Tail	services/sensorservice/traits.h	/^    typedef U Tail;$/;"	t	struct:android::TypeList
Target	services/surfaceflinger/RenderEngine/Texture.h	/^    enum Target { TEXTURE_2D = 0x0DE1, TEXTURE_EXTERNAL = 0x8D65 };$/;"	g	class:android::Texture
TearDown	cmds/installd/tests/installd_utils_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::UtilsTest
TearDown	libs/gui/tests/CpuConsumer_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::CpuConsumerTest
TearDown	libs/gui/tests/GLTest.cpp	/^void GLTest::TearDown() {$/;"	f	class:android::GLTest
TearDown	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::IGraphicBufferProducerTest
TearDown	libs/gui/tests/MultiTextureConsumer_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::MultiTextureConsumerTest
TearDown	libs/gui/tests/SRGB_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::SRGBTest
TearDown	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::MultiSurfaceTextureClientTest
TearDown	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::SurfaceTextureClientTest
TearDown	libs/gui/tests/SurfaceTextureFBO.h	/^    virtual void TearDown() {$/;"	f	class:android::SurfaceTextureFBOTest
TearDown	libs/gui/tests/SurfaceTextureGL.h	/^    void TearDown() {$/;"	f	class:android::SurfaceTextureGLTest
TearDown	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^    virtual void TearDown() {$/;"	f	class:android::SurfaceTextureGLThreadToGLTest
TearDown	libs/gui/tests/SurfaceTextureGLToGL.h	/^    virtual void TearDown() {$/;"	f	class:android::SurfaceTextureGLToGLTest
TearDown	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^    virtual void TearDown() {$/;"	f	class:android::SurfaceTextureMultiContextGLTest
TearDown	libs/gui/tests/Surface_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::SurfaceTest
TearDown	libs/input/tests/InputChannel_test.cpp	/^    virtual void TearDown() { }$/;"	f	class:android::InputChannelTest
TearDown	libs/input/tests/InputEvent_test.cpp	/^    virtual void TearDown() { }$/;"	f	class:android::BaseTest
TearDown	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::InputPublisherAndConsumerTest
TearDown	opengl/tests/EGLTest/EGL_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::EGLTest
TearDown	opengl/tests/EGLTest/egl_cache_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::EGLCacheSerializationTest
TearDown	opengl/tests/EGLTest/egl_cache_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::EGLCacheTest
TearDown	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::InputDispatcherTest
TearDown	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::InputDeviceTest
TearDown	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::InputMapperTest
TearDown	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::InputReaderTest
TearDown	services/surfaceflinger/tests/Transaction_test.cpp	/^    virtual void TearDown() {$/;"	f	class:android::LayerUpdateTest
TestActivity	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^public class TestActivity extends Activity {$/;"	c
TestActivity	opengl/tests/testViewport/src/com/android/test/TestActivity.java	/^public class TestActivity extends Activity {$/;"	c
TestApiCall	opengl/libs/GLES_trace/tools/testgenapi.py	/^class TestApiCall(unittest.TestCase):$/;"	c
TestFramerateActivity	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateActivity.java	/^public class TestFramerateActivity extends Activity {$/;"	c
TestFramerateView	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^    public TestFramerateView(Context context) {$/;"	m	class:TestFramerateView
TestFramerateView	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^class TestFramerateView extends GLSurfaceView {$/;"	c
TestInputMessageAlignment	libs/input/tests/StructLayout_test.cpp	/^void TestInputMessageAlignment() {$/;"	f	namespace:android
TestLatencyActivity	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyActivity.java	/^public class TestLatencyActivity extends Activity {$/;"	c
TestLatencyView	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^    public TestLatencyView(Context context) {$/;"	m	class:TestLatencyView
TestLatencyView	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^class TestLatencyView extends GLSurfaceView {$/;"	c
TestPointerCoordsAlignment	libs/input/tests/StructLayout_test.cpp	/^void TestPointerCoordsAlignment() {$/;"	f	namespace:android
TestView	opengl/tests/testPauseResume/src/com/android/test/TestView.java	/^    TestView(Context context) {$/;"	m	class:TestView
TestView	opengl/tests/testPauseResume/src/com/android/test/TestView.java	/^    public TestView(Context context, AttributeSet attrs) {$/;"	m	class:TestView
TestView	opengl/tests/testPauseResume/src/com/android/test/TestView.java	/^class TestView extends GLSurfaceView {$/;"	c
TestView	opengl/tests/testViewport/src/com/android/test/TestView.java	/^    TestView(Context context) {$/;"	m	class:TestView
TestView	opengl/tests/testViewport/src/com/android/test/TestView.java	/^    public TestView(Context context, AttributeSet attrs) {$/;"	m	class:TestView
TestView	opengl/tests/testViewport/src/com/android/test/TestView.java	/^class TestView extends GLSurfaceView {$/;"	c
TextOutput	include/binder/TextOutput.h	/^class TextOutput$/;"	c	namespace:android
TextOutput	libs/binder/TextOutput.cpp	/^TextOutput::TextOutput() { $/;"	f	class:android::TextOutput
TextOutputManipFunc	include/binder/TextOutput.h	/^typedef TextOutput& (*TextOutputManipFunc)(TextOutput&);$/;"	t	namespace:android
Texture	services/surfaceflinger/RenderEngine/Texture.cpp	/^Texture::Texture() :$/;"	f	class:android::Texture
Texture	services/surfaceflinger/RenderEngine/Texture.cpp	/^Texture::Texture(Target textureTarget, uint32_t textureName) :$/;"	f	class:android::Texture
Texture	services/surfaceflinger/RenderEngine/Texture.h	/^class Texture {$/;"	c	namespace:android
TextureRenderer	libs/gui/tests/TextureRenderer.cpp	/^TextureRenderer::TextureRenderer(GLuint texName,$/;"	f	class:android::TextureRenderer
TextureRenderer	libs/gui/tests/TextureRenderer.h	/^class TextureRenderer : public RefBase {$/;"	c	namespace:android
ThreadState	libs/binder/BufferedTextOutput.cpp	/^struct BufferedTextOutput::ThreadState$/;"	s	class:android::BufferedTextOutput	file:
TokenManager	opengl/libagl/TokenManager.cpp	/^TokenManager::TokenManager()$/;"	f	class:android::TokenManager
TokenManager	opengl/libagl/TokenManager.h	/^class TokenManager$/;"	c	namespace:android
Tokenizer	opengl/libagl/Tokenizer.cpp	/^Tokenizer::Tokenizer()$/;"	f	class:android::Tokenizer
Tokenizer	opengl/libagl/Tokenizer.cpp	/^Tokenizer::Tokenizer(const Tokenizer& other)$/;"	f	class:android::Tokenizer
Tokenizer	opengl/libagl/Tokenizer.h	/^class Tokenizer$/;"	c	namespace:android
TouchAffineTransformation	services/inputflinger/InputReader.h	/^    TouchAffineTransformation() :$/;"	f	struct:android::TouchAffineTransformation
TouchAffineTransformation	services/inputflinger/InputReader.h	/^    TouchAffineTransformation(float xscale, float xymix, float xoffset,$/;"	f	struct:android::TouchAffineTransformation
TouchAffineTransformation	services/inputflinger/InputReader.h	/^struct TouchAffineTransformation {$/;"	s	namespace:android
TouchButtonAccumulator	services/inputflinger/InputReader.cpp	/^TouchButtonAccumulator::TouchButtonAccumulator() :$/;"	f	class:android::TouchButtonAccumulator
TouchButtonAccumulator	services/inputflinger/InputReader.h	/^class TouchButtonAccumulator {$/;"	c	namespace:android
TouchInputMapper	services/inputflinger/InputReader.cpp	/^TouchInputMapper::TouchInputMapper(InputDevice* device) :$/;"	f	class:android::TouchInputMapper
TouchInputMapper	services/inputflinger/InputReader.h	/^class TouchInputMapper : public InputMapper {$/;"	c	namespace:android
TouchInputMapperTest	services/inputflinger/tests/InputReader_test.cpp	/^class TouchInputMapperTest : public InputMapperTest {$/;"	c	namespace:android	file:
TouchState	include/input/InputTransport.h	/^    struct TouchState {$/;"	s	class:android::InputConsumer
TouchState	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::TouchState::TouchState() :$/;"	f	class:android::InputDispatcher::TouchState
TouchState	services/inputflinger/InputDispatcher.h	/^    struct TouchState {$/;"	s	class:android::InputDispatcher
TouchedWindow	services/inputflinger/InputDispatcher.h	/^    struct TouchedWindow {$/;"	s	class:android::InputDispatcher
TraceGL	opengl/libs/EGL/trace.cpp	/^static void TraceGL(const char* name, int numArgs, ...) {$/;"	f	namespace:android
TraceGLShaderSource	opengl/libs/EGL/trace.cpp	/^static void TraceGLShaderSource(GLuint shader, GLsizei count,$/;"	f	namespace:android
TraceUniformMatrix	opengl/libs/EGL/trace.cpp	/^static void TraceUniformMatrix(int matrixSideLength,$/;"	f	namespace:android
TraceUniformv	opengl/libs/EGL/trace.cpp	/^static void TraceUniformv(int elementCount, char type,$/;"	f	namespace:android
TraceValue	opengl/libs/EGL/trace.cpp	/^static void TraceValue(int elementCount, char type,$/;"	f	namespace:android
TracingCategory	cmds/atrace/atrace.cpp	/^struct TracingCategory {$/;"	s	file:
TrampolineGen	opengl/tools/glgen2/glgen.py	/^class TrampolineGen(reg.OutputGenerator):$/;"	c
Transform	services/surfaceflinger/Transform.cpp	/^Transform::Transform() {$/;"	f	class:android::Transform
Transform	services/surfaceflinger/Transform.cpp	/^Transform::Transform(const Transform&  other)$/;"	f	class:android::Transform
Transform	services/surfaceflinger/Transform.cpp	/^Transform::Transform(uint32_t orientation) {$/;"	f	class:android::Transform
Transform	services/surfaceflinger/Transform.h	/^class Transform$/;"	c	namespace:android
Transition	services/inputflinger/PointerControllerInterface.h	/^    enum Transition {$/;"	g	class:android::PointerControllerInterface
Triangle	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^    public Triangle() {$/;"	m	class:Triangle
Triangle	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^class Triangle {$/;"	c
TriangleRenderer	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^    public TriangleRenderer() {$/;"	m	class:TriangleRenderer
TriangleRenderer	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^public class TriangleRenderer implements GLSurfaceView.Renderer{$/;"	c
TryConnectProducer	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    status_t TryConnectProducer() {$/;"	f	class:android::IGraphicBufferProducerTest
Type	include/media/hardware/HardwareAPI.h	/^    enum Type {$/;"	g	struct:android::MediaImage
Type	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  typedef GLMessage_DataType_Type Type;$/;"	t	class:android::gltrace::GLMessage_DataType
TypeCode	include/binder/TextOutput.h	/^class TypeCode $/;"	c	namespace:android
TypeCode	include/binder/TextOutput.h	/^inline TypeCode::TypeCode(uint32_t code) : mCode(code) { }$/;"	f	class:android::TypeCode
TypeInfo	opengl/tools/glgen2/registry/reg.py	/^class TypeInfo(BaseInfo):$/;"	c
TypeList	services/sensorservice/traits.h	/^struct TypeList {$/;"	s	namespace:android
TypeTraits	services/sensorservice/traits.h	/^class TypeTraits {$/;"	c	namespace:android
Type_ARRAYSIZE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_DataType::Type_ARRAYSIZE;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
Type_ARRAYSIZE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int Type_ARRAYSIZE =$/;"	m	class:android::gltrace::GLMessage_DataType
Type_IsValid	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static inline bool Type_IsValid(int value) {$/;"	f	class:android::gltrace::GLMessage_DataType
Type_MAX	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType_Type GLMessage_DataType::Type_MAX;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
Type_MAX	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Type Type_MAX =$/;"	m	class:android::gltrace::GLMessage_DataType
Type_MIN	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType_Type GLMessage_DataType::Type_MIN;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
Type_MIN	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Type Type_MIN =$/;"	m	class:android::gltrace::GLMessage_DataType
U	include/media/hardware/HardwareAPI.h	/^        U,$/;"	e	enum:android::MediaImage::PlaneIndex
UI_MAT4_H	include/ui/mat4.h	18;"	d
UI_PIXELFORMAT_H	include/ui/PixelFormat.h	26;"	d
UI_TMAT_HELPERS_H	include/ui/TMatHelpers.h	25;"	d
UI_TVEC_HELPERS_H	include/ui/TVecHelpers.h	25;"	d
UI_VEC2_H	include/ui/vec2.h	18;"	d
UI_VEC3_H	include/ui/vec3.h	18;"	d
UI_VEC4_H	include/ui/vec4.h	18;"	d
UNKNOWN	services/surfaceflinger/Transform.h	/^                UNKNOWN             = 0x8$/;"	e	enum:android::Transform::type_mask
UNKNOWN_TYPE	services/surfaceflinger/Transform.h	/^    enum { UNKNOWN_TYPE = 0x80000000 };$/;"	e	enum:android::Transform::__anon16
UNREGISTER_LISTENER	include/batteryservice/IBatteryPropertiesRegistrar.h	/^    UNREGISTER_LISTENER,$/;"	e	enum:android::__anon124
UPDATE_COMMANDS_DIR_PREFIX	cmds/installd/installd.h	78;"	d
UPDATE_WAKE_LOCK_UIDS	services/powermanager/IPowerManager.cpp	/^    UPDATE_WAKE_LOCK_UIDS = IBinder::FIRST_CALL_TRANSACTION + 3,$/;"	e	enum:android::__anon74	file:
USAGE_CURSOR	include/ui/GraphicBuffer.h	/^        USAGE_CURSOR            = GRALLOC_USAGE_CURSOR,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_HW_2D	include/ui/GraphicBuffer.h	/^        USAGE_HW_2D             = GRALLOC_USAGE_HW_2D,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_HW_2D	include/ui/GraphicBufferAllocator.h	/^        USAGE_HW_2D             = GRALLOC_USAGE_HW_2D,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_HW_COMPOSER	include/ui/GraphicBuffer.h	/^        USAGE_HW_COMPOSER       = GRALLOC_USAGE_HW_COMPOSER,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_HW_MASK	include/ui/GraphicBuffer.h	/^        USAGE_HW_MASK           = GRALLOC_USAGE_HW_MASK,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_HW_MASK	include/ui/GraphicBufferAllocator.h	/^        USAGE_HW_MASK           = GRALLOC_USAGE_HW_MASK$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_HW_RENDER	include/ui/GraphicBuffer.h	/^        USAGE_HW_RENDER         = GRALLOC_USAGE_HW_RENDER,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_HW_RENDER	include/ui/GraphicBufferAllocator.h	/^        USAGE_HW_RENDER         = GRALLOC_USAGE_HW_RENDER,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_HW_TEXTURE	include/ui/GraphicBuffer.h	/^        USAGE_HW_TEXTURE        = GRALLOC_USAGE_HW_TEXTURE,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_HW_TEXTURE	include/ui/GraphicBufferAllocator.h	/^        USAGE_HW_TEXTURE        = GRALLOC_USAGE_HW_TEXTURE,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_HW_VIDEO_ENCODER	include/ui/GraphicBuffer.h	/^        USAGE_HW_VIDEO_ENCODER  = GRALLOC_USAGE_HW_VIDEO_ENCODER,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_PROTECTED	include/ui/GraphicBuffer.h	/^        USAGE_PROTECTED         = GRALLOC_USAGE_PROTECTED,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_SOFTWARE_MASK	include/ui/GraphicBuffer.h	/^        USAGE_SOFTWARE_MASK     = USAGE_SW_READ_MASK|USAGE_SW_WRITE_MASK,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_SOFTWARE_MASK	include/ui/GraphicBufferAllocator.h	/^        USAGE_SOFTWARE_MASK     = USAGE_SW_READ_MASK|USAGE_SW_WRITE_MASK,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_SW_READ_MASK	include/ui/GraphicBuffer.h	/^        USAGE_SW_READ_MASK      = GRALLOC_USAGE_SW_READ_MASK,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_SW_READ_MASK	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_READ_MASK      = GRALLOC_USAGE_SW_READ_MASK,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_SW_READ_NEVER	include/ui/GraphicBuffer.h	/^        USAGE_SW_READ_NEVER     = GRALLOC_USAGE_SW_READ_NEVER,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_SW_READ_NEVER	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_READ_NEVER     = GRALLOC_USAGE_SW_READ_NEVER,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_SW_READ_OFTEN	include/ui/GraphicBuffer.h	/^        USAGE_SW_READ_OFTEN     = GRALLOC_USAGE_SW_READ_OFTEN,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_SW_READ_OFTEN	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_READ_OFTEN     = GRALLOC_USAGE_SW_READ_OFTEN,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_SW_READ_RARELY	include/ui/GraphicBuffer.h	/^        USAGE_SW_READ_RARELY    = GRALLOC_USAGE_SW_READ_RARELY,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_SW_READ_RARELY	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_READ_RARELY    = GRALLOC_USAGE_SW_READ_RARELY,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_SW_WRITE_MASK	include/ui/GraphicBuffer.h	/^        USAGE_SW_WRITE_MASK     = GRALLOC_USAGE_SW_WRITE_MASK,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_SW_WRITE_MASK	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_WRITE_MASK     = GRALLOC_USAGE_SW_WRITE_MASK,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_SW_WRITE_NEVER	include/ui/GraphicBuffer.h	/^        USAGE_SW_WRITE_NEVER    = GRALLOC_USAGE_SW_WRITE_NEVER,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_SW_WRITE_NEVER	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_WRITE_NEVER    = GRALLOC_USAGE_SW_WRITE_NEVER,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_SW_WRITE_OFTEN	include/ui/GraphicBuffer.h	/^        USAGE_SW_WRITE_OFTEN    = GRALLOC_USAGE_SW_WRITE_OFTEN,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_SW_WRITE_OFTEN	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_WRITE_OFTEN    = GRALLOC_USAGE_SW_WRITE_OFTEN,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USAGE_SW_WRITE_RARELY	include/ui/GraphicBuffer.h	/^        USAGE_SW_WRITE_RARELY   = GRALLOC_USAGE_SW_WRITE_RARELY,$/;"	e	enum:android::GraphicBuffer::__anon94
USAGE_SW_WRITE_RARELY	include/ui/GraphicBufferAllocator.h	/^        USAGE_SW_WRITE_RARELY   = GRALLOC_USAGE_SW_WRITE_RARELY,$/;"	e	enum:android::GraphicBufferAllocator::__anon76
USER_ACTIVITY_EVENT_BUTTON	include/powermanager/PowerManager.h	/^    USER_ACTIVITY_EVENT_BUTTON = 1,$/;"	e	enum:android::__anon157
USER_ACTIVITY_EVENT_LAST	include/powermanager/PowerManager.h	/^    USER_ACTIVITY_EVENT_LAST = USER_ACTIVITY_EVENT_TOUCH, \/\/ Last valid event code.$/;"	e	enum:android::__anon157
USER_ACTIVITY_EVENT_OTHER	include/powermanager/PowerManager.h	/^    USER_ACTIVITY_EVENT_OTHER = 0,$/;"	e	enum:android::__anon157
USER_ACTIVITY_EVENT_TOUCH	include/powermanager/PowerManager.h	/^    USER_ACTIVITY_EVENT_TOUCH = 2,$/;"	e	enum:android::__anon157
USER_CLIP_0	opengl/libagl/context.h	/^        USER_CLIP_0     = 0x0100,   \/\/ user clipping flags$/;"	e	enum:android::gl::vertex_t::__anon220
USER_CLIP_1	opengl/libagl/context.h	/^        USER_CLIP_1     = 0x0200,$/;"	e	enum:android::gl::vertex_t::__anon220
USER_CLIP_2	opengl/libagl/context.h	/^        USER_CLIP_2     = 0x0400,$/;"	e	enum:android::gl::vertex_t::__anon220
USER_CLIP_3	opengl/libagl/context.h	/^        USER_CLIP_3     = 0x0800,$/;"	e	enum:android::gl::vertex_t::__anon220
USER_CLIP_4	opengl/libagl/context.h	/^        USER_CLIP_4     = 0x1000,$/;"	e	enum:android::gl::vertex_t::__anon220
USER_CLIP_5	opengl/libagl/context.h	/^        USER_CLIP_5     = 0x2000,$/;"	e	enum:android::gl::vertex_t::__anon220
USER_CLIP_ALL	opengl/libagl/context.h	/^        USER_CLIP_ALL   = 0x3F00,$/;"	e	enum:android::gl::vertex_t::__anon220
USE_DRAW_TEXTURE	opengl/tests/filter/filter.cpp	13;"	d	file:
USE_ION_FD	include/binder/IMemory.h	/^        USE_ION_FD  = 0x00008000$/;"	e	enum:android::IMemoryHeap::__anon211
USE_ION_FD	include/binder/MemoryHeapIon.h	/^        USE_ION_FD = IMemoryHeap::USE_ION_FD$/;"	e	enum:android::MemoryHeapIon::__anon203
USE_SLOW_BINDING	opengl/libs/hooks.h	36;"	d
USF_DEVICE_NAME	services/inputflinger/InputReader.cpp	62;"	d	file:
UnsignedInts	services/sensorservice/traits.h	/^            unsigned int, unsigned long int) UnsignedInts;$/;"	t	class:android::TypeTraits
UseAndroidNativeBufferParams	include/media/hardware/HardwareAPI.h	/^struct UseAndroidNativeBufferParams {$/;"	s	namespace:android
UseBuffer	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*UseBuffer)($/;"	m	struct:OMX_COMPONENTTYPE
UseEGLImage	include/media/openmax/OMX_Component.h	/^    OMX_ERRORTYPE (*UseEGLImage)($/;"	m	struct:OMX_COMPONENTTYPE
UtilsTest	cmds/installd/tests/installd_utils_test.cpp	/^class UtilsTest : public testing::Test {$/;"	c	namespace:android	file:
V	include/media/hardware/HardwareAPI.h	/^        V,$/;"	e	enum:android::MediaImage::PlaneIndex
VALIDATE_REGIONS	libs/ui/Region.cpp	36;"	d	file:
VALIDATE_WITH_CORECG	libs/ui/Region.cpp	37;"	d	file:
VC_CACHE_STATISTICS	opengl/libagl/array.cpp	32;"	d	file:
VC_CACHE_TYPE	opengl/libagl/array.cpp	36;"	d	file:
VC_CACHE_TYPE_INDEXED	opengl/libagl/array.cpp	34;"	d	file:
VC_CACHE_TYPE_LRU	opengl/libagl/array.cpp	35;"	d	file:
VC_CACHE_TYPE_NONE	opengl/libagl/array.cpp	33;"	d	file:
VDS_LOGE	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	28;"	d	file:
VDS_LOGV	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	32;"	d	file:
VDS_LOGW_IF	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	30;"	d	file:
VECTOR3	opengl/tests/angeles/demo.c	/^} VECTOR3;$/;"	t	typeref:struct:__anon236	file:
VERBOSE	libs/binder/IMemory.cpp	39;"	d	file:
VERSION_MAJOR	opengl/libagl/egl.cpp	803;"	d	file:
VERSION_MAJOR	opengl/libs/EGL/egldefs.h	22;"	d
VERSION_MINOR	opengl/libagl/egl.cpp	804;"	d	file:
VERSION_MINOR	opengl/libs/EGL/egldefs.h	23;"	d
VERTEX_BUFFER_SIZE	opengl/libagl/context.h	/^        VERTEX_BUFFER_SIZE  = 8,$/;"	e	enum:android::gl::vertex_cache_t::__anon222
VERTEX_CACHE_SIZE	opengl/libagl/context.h	/^        VERTEX_CACHE_SIZE   = 64,   \/\/ 8 KB$/;"	e	enum:android::gl::vertex_cache_t::__anon222
VERTEX_SIZE	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       final static int VERTEX_SIZE = 3 * FLOAT_SIZE;$/;"	f	class:TestView.Grid
VERTS	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^    private final static int VERTS = 3;$/;"	f	class:Triangle	file:
VIEWPORT	opengl/libagl/context.h	/^        VIEWPORT            = 0x04,$/;"	e	enum:android::gl::transform_state_t::__anon228
VIRTUAL_DISPLAY_ID_BASE	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        VIRTUAL_DISPLAY_ID_BASE = HWC_DISPLAY_VIRTUAL,$/;"	e	enum:android::HWComposer::__anon17
VIRTUAL_KEYBOARD_ID	services/inputflinger/EventHub.h	/^    VIRTUAL_KEYBOARD_ID = -1,$/;"	e	enum:android::__anon46
VIRTUAL_KEYS	services/inputflinger/tests/InputReader_test.cpp	/^    static const VirtualKeyDefinition VIRTUAL_KEYS[2];$/;"	m	class:android::TouchInputMapperTest	file:
VIRTUAL_KEYS	services/inputflinger/tests/InputReader_test.cpp	/^const VirtualKeyDefinition TouchInputMapperTest::VIRTUAL_KEYS[2] = {$/;"	m	class:android::TouchInputMapperTest	file:
VOID	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType_Type GLMessage_DataType::VOID;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
VOID	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Type VOID = GLMessage_DataType_Type_VOID;$/;"	m	class:android::gltrace::GLMessage_DataType
VSync	include/gui/DisplayEventReceiver.h	/^        struct VSync {$/;"	s	struct:android::DisplayEventReceiver::Event
VSyncSource	services/surfaceflinger/EventThread.h	/^class VSyncSource : public virtual RefBase {$/;"	c	namespace:android
VSyncThread	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^HWComposer::VSyncThread::VSyncThread(HWComposer& hwc)$/;"	f	class:android::HWComposer::VSyncThread
VSyncThread	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    class VSyncThread : public Thread {$/;"	c	class:android::HWComposer
VecTest	libs/ui/tests/vec_test.cpp	/^class VecTest : public testing::Test {$/;"	c	namespace:android	file:
VelocityControl	include/input/VelocityControl.h	/^class VelocityControl {$/;"	c	namespace:android
VelocityControl	libs/input/VelocityControl.cpp	/^VelocityControl::VelocityControl() {$/;"	f	class:android::VelocityControl
VelocityControlParameters	include/input/VelocityControl.h	/^    VelocityControlParameters() :$/;"	f	struct:android::VelocityControlParameters
VelocityControlParameters	include/input/VelocityControl.h	/^    VelocityControlParameters(float scale, float lowThreshold,$/;"	f	struct:android::VelocityControlParameters
VelocityControlParameters	include/input/VelocityControl.h	/^struct VelocityControlParameters {$/;"	s	namespace:android
VelocityTracker	include/input/VelocityTracker.h	/^class VelocityTracker {$/;"	c	namespace:android
VelocityTracker	libs/input/VelocityTracker.cpp	/^VelocityTracker::VelocityTracker(const char* strategy) :$/;"	f	class:android::VelocityTracker
VelocityTrackerStrategy	include/input/VelocityTracker.h	/^    VelocityTrackerStrategy() { }$/;"	f	class:android::VelocityTrackerStrategy
VelocityTrackerStrategy	include/input/VelocityTracker.h	/^class VelocityTrackerStrategy {$/;"	c	namespace:android
VertexArray	services/surfaceflinger/RenderEngine/Mesh.h	/^        VertexArray(float* data, size_t stride) : mData(data), mStride(stride) { }$/;"	f	class:android::Mesh::VertexArray
VertexArray	services/surfaceflinger/RenderEngine/Mesh.h	/^    class VertexArray {$/;"	c	class:android::Mesh
VibratorInputMapper	services/inputflinger/InputReader.cpp	/^VibratorInputMapper::VibratorInputMapper(InputDevice* device) :$/;"	f	class:android::VibratorInputMapper
VibratorInputMapper	services/inputflinger/InputReader.h	/^class VibratorInputMapper : public InputMapper {$/;"	c	namespace:android
VideoDecoderOutputMetaData	include/media/hardware/HardwareAPI.h	/^struct VideoDecoderOutputMetaData {$/;"	s	namespace:android
VirtualDisplaySurface	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^VirtualDisplaySurface::VirtualDisplaySurface(HWComposer& hwc,$/;"	f	class:android::VirtualDisplaySurface
VirtualDisplaySurface	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^class VirtualDisplaySurface : public DisplaySurface,$/;"	c	namespace:android
VirtualKey	services/inputflinger/InputReader.h	/^    struct VirtualKey {$/;"	s	class:android::TouchInputMapper
VirtualKeyDefinition	include/input/VirtualKeyMap.h	/^struct VirtualKeyDefinition {$/;"	s	namespace:android
VirtualKeyMap	include/input/VirtualKeyMap.h	/^class VirtualKeyMap {$/;"	c	namespace:android
VirtualKeyMap	libs/input/VirtualKeyMap.cpp	/^VirtualKeyMap::VirtualKeyMap() {$/;"	f	class:android::VirtualKeyMap
WAKE_LOCK_ID	services/inputflinger/EventHub.cpp	/^static const char *WAKE_LOCK_ID = "KeyEvents";$/;"	m	namespace:android	file:
WAKE_LOCK_NAME	services/sensorservice/SensorService.cpp	/^const char* SensorService::WAKE_LOCK_NAME = "SensorService";$/;"	m	class:android::SensorService	file:
WAKE_LOCK_NAME	services/sensorservice/SensorService.h	/^    static const char* WAKE_LOCK_NAME;$/;"	m	class:android::SensorService
WAKE_UP_SENSOR_EVENT_NEEDS_ACK	include/gui/SensorEventQueue.h	30;"	d
WEAK	opengl/libs/EGL/egl_display.h	/^            WEAK   = 0,$/;"	e	enum:android::egl_display_t::HibernationMachine::WakeRefStrength
WEIGHTING_CENTRAL	include/input/VelocityTracker.h	/^        WEIGHTING_CENTRAL,$/;"	e	enum:android::LeastSquaresVelocityTrackerStrategy::Weighting
WEIGHTING_DELTA	include/input/VelocityTracker.h	/^        WEIGHTING_DELTA,$/;"	e	enum:android::LeastSquaresVelocityTrackerStrategy::Weighting
WEIGHTING_NONE	include/input/VelocityTracker.h	/^        WEIGHTING_NONE,$/;"	e	enum:android::LeastSquaresVelocityTrackerStrategy::Weighting
WEIGHTING_RECENT	include/input/VelocityTracker.h	/^        WEIGHTING_RECENT,$/;"	e	enum:android::LeastSquaresVelocityTrackerStrategy::Weighting
WHITE	services/surfaceflinger/Colorizer.h	/^        WHITE   = 37$/;"	e	enum:android::Colorizer::color
WHITESPACE	libs/input/KeyCharacterMap.cpp	/^static const char* WHITESPACE = " \\t\\r";$/;"	m	namespace:android	file:
WHITESPACE	libs/input/KeyLayoutMap.cpp	/^static const char* WHITESPACE = " \\t\\r";$/;"	m	namespace:android	file:
WHITESPACE	libs/input/VirtualKeyMap.cpp	/^static const char* WHITESPACE = " \\t\\r";$/;"	m	namespace:android	file:
WHITESPACE_OR_FIELD_DELIMITER	libs/input/VirtualKeyMap.cpp	/^static const char* WHITESPACE_OR_FIELD_DELIMITER = " \\t\\r:";$/;"	m	namespace:android	file:
WHITESPACE_OR_PROPERTY_DELIMITER	libs/input/KeyCharacterMap.cpp	/^static const char* WHITESPACE_OR_PROPERTY_DELIMITER = " \\t\\r,:";$/;"	m	namespace:android	file:
WIN32_LEAN_AND_MEAN	opengl/include/EGL/eglplatform.h	72;"	d
WIN32_LEAN_AND_MEAN	opengl/tests/angeles/include/GLES/gl.h	43;"	d
WINDOW_BPP	opengl/tests/angeles/app.h	37;"	d
WINDOW_DEFAULT_HEIGHT	opengl/tests/angeles/app.h	35;"	d
WINDOW_DEFAULT_WIDTH	opengl/tests/angeles/app.h	34;"	d
WINDOW_FORMAT_RGBA_8888	include/android/native_window.h	/^    WINDOW_FORMAT_RGBA_8888          = 1,$/;"	e	enum:__anon160
WINDOW_FORMAT_RGBX_8888	include/android/native_window.h	/^    WINDOW_FORMAT_RGBX_8888          = 2,$/;"	e	enum:__anon160
WINDOW_FORMAT_RGB_565	include/android/native_window.h	/^    WINDOW_FORMAT_RGB_565            = 4,$/;"	e	enum:__anon160
WakeRefStrength	opengl/libs/EGL/egl_display.h	/^        enum WakeRefStrength {$/;"	g	class:android::egl_display_t::HibernationMachine
Weighting	include/input/VelocityTracker.h	/^    enum Weighting {$/;"	g	class:android::LeastSquaresVelocityTrackerStrategy
WindowSurface	opengl/tests/include/WindowSurface.h	/^class WindowSurface {$/;"	c	namespace:android
WindowSurface	opengl/tests/lib/WindowSurface.cpp	/^WindowSurface::WindowSurface() {$/;"	f	class:WindowSurface
WritableBlob	include/binder/Parcel.h	/^    class WritableBlob : public Blob {$/;"	c	class:android::Parcel
Write	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*Write)( CPhandle hContent, CPbyte *data, CPuint nSize);$/;"	m	struct:CP_PIPETYPE
WriteBuffer	include/media/openmax/OMX_ContentPipe.h	/^    CPresult (*WriteBuffer)( CPhandle hContent, CPbyte *pBuffer, CPuint nFilledSize);$/;"	m	struct:CP_PIPETYPE
X	opengl/tests/gl2_basic/gl2_basic.cpp	180;"	d	file:
X	opengl/tests/gl2_basic/gl2_basic.cpp	215;"	d	file:
X	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	284;"	d	file:
X	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	319;"	d	file:
X	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	285;"	d	file:
X	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	320;"	d	file:
X	opengl/tests/gl_basic/gl_basic.cpp	134;"	d	file:
X	opengl/tests/gl_basic/gl_basic.cpp	99;"	d	file:
X	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	175;"	d	file:
X	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	210;"	d	file:
X	opengl/tests/hwc/hwcTestLib.cpp	1014;"	d	file:
X	opengl/tests/hwc/hwcTestLib.cpp	979;"	d	file:
X	opengl/tests/lib/glTestLib.cpp	107;"	d	file:
X	opengl/tests/lib/glTestLib.cpp	72;"	d	file:
X_MAX	libs/ui/tests/Region_test.cpp	135;"	d	file:
X_OFFSET	libs/input/tests/InputEvent_test.cpp	/^    static const float X_OFFSET;$/;"	m	class:android::MotionEventTest	file:
X_OFFSET	libs/input/tests/InputEvent_test.cpp	/^const float MotionEventTest::X_OFFSET = 1.0f;$/;"	m	class:android::MotionEventTest	file:
X_PRECISION	services/inputflinger/tests/InputReader_test.cpp	/^    static const float X_PRECISION;$/;"	m	class:android::TouchInputMapperTest	file:
X_PRECISION	services/inputflinger/tests/InputReader_test.cpp	/^const float TouchInputMapperTest::X_PRECISION = float(RAW_X_MAX - RAW_X_MIN + 1) \/ DISPLAY_WIDTH;$/;"	m	class:android::TouchInputMapperTest	file:
Y	include/media/hardware/HardwareAPI.h	/^        Y = 0,$/;"	e	enum:android::MediaImage::PlaneIndex
YELLOW	services/surfaceflinger/Colorizer.h	/^        YELLOW  = 33,$/;"	e	enum:android::Colorizer::color
Y_MAX	libs/ui/tests/Region_test.cpp	136;"	d	file:
Y_OFFSET	libs/input/tests/InputEvent_test.cpp	/^    static const float Y_OFFSET;$/;"	m	class:android::MotionEventTest	file:
Y_OFFSET	libs/input/tests/InputEvent_test.cpp	/^const float MotionEventTest::Y_OFFSET = 1.1f;$/;"	m	class:android::MotionEventTest	file:
Y_PRECISION	services/inputflinger/tests/InputReader_test.cpp	/^    static const float Y_PRECISION;$/;"	m	class:android::TouchInputMapperTest	file:
Y_PRECISION	services/inputflinger/tests/InputReader_test.cpp	/^const float TouchInputMapperTest::Y_PRECISION = float(RAW_Y_MAX - RAW_Y_MIN + 1) \/ DISPLAY_HEIGHT;$/;"	m	class:android::TouchInputMapperTest	file:
ZeroPhaseTracer	services/surfaceflinger/DispSync.cpp	/^    ZeroPhaseTracer() : mParity(false) {}$/;"	f	class:android::ZeroPhaseTracer
ZeroPhaseTracer	services/surfaceflinger/DispSync.cpp	/^class ZeroPhaseTracer : public DispSync::Callback {$/;"	c	namespace:android	file:
_ANDROID_INPUT_H	include/android/input.h	18;"	d
_ANDROID_KEYCODES_H	include/android/keycodes.h	18;"	d
_BINDER_H_	cmds/servicemanager/binder.h	5;"	d
_BINDER_MODULE_H_	include/private/binder/binder_module.h	18;"	d
_DUMPSTATE_H_	cmds/dumpstate/dumpstate.h	18;"	d
_GLES_TRACE_H_	opengl/libs/glestrace.h	20;"	d
_GLfuncptr	opengl/tests/angeles/include/GLES/gl.h	/^typedef void (*_GLfuncptr)();$/;"	t
_INPUTFLINGER_POINTER_CONTROLLER_INTERFACE_H	services/inputflinger/PointerControllerInterface.h	18;"	d
_LIBINPUT_INPUT_DEVICE_H	include/input/InputDevice.h	18;"	d
_LIBINPUT_INPUT_EVENT_LABELS_H	include/input/InputEventLabels.h	18;"	d
_LIBINPUT_INPUT_H	include/input/Input.h	18;"	d
_LIBINPUT_INPUT_TRANSPORT_H	include/input/InputTransport.h	18;"	d
_LIBINPUT_KEYBOARD_H	include/input/Keyboard.h	18;"	d
_LIBINPUT_KEY_CHARACTER_MAP_H	include/input/KeyCharacterMap.h	18;"	d
_LIBINPUT_KEY_LAYOUT_MAP_H	include/input/KeyLayoutMap.h	18;"	d
_LIBINPUT_VELOCITY_CONTROL_H	include/input/VelocityControl.h	18;"	d
_LIBINPUT_VELOCITY_TRACKER_H	include/input/VelocityTracker.h	18;"	d
_LIBINPUT_VIRTUAL_KEY_MAP_H	include/input/VirtualKeyMap.h	18;"	d
_RUNTIME_EVENT_HUB_H	services/inputflinger/EventHub.h	19;"	d
_UI_INPUT_APPLICATION_H	services/inputflinger/InputApplication.h	18;"	d
_UI_INPUT_DISPATCHER_H	services/inputflinger/InputDispatcher.h	18;"	d
_UI_INPUT_LISTENER_H	services/inputflinger/InputListener.h	18;"	d
_UI_INPUT_MANAGER_H	services/inputflinger/InputManager.h	18;"	d
_UI_INPUT_READER_H	services/inputflinger/InputReader.h	18;"	d
_UI_INPUT_WINDOW_H	services/inputflinger/InputWindow.h	18;"	d
_ZN7android10MemoryBaseC1ERKNS_2spINS_11IMemoryHeapEEElj	libs/binder/MemoryBase.cpp	/^extern "C" void _ZN7android10MemoryBaseC1ERKNS_2spINS_11IMemoryHeapEEElj(void* obj, void* h, long o, unsigned int size) {$/;"	f
_ZN7android12MemoryDealerC1EjPKc	libs/binder/MemoryDealer.cpp	/^extern "C" void _ZN7android12MemoryDealerC1EjPKc(void* obj, size_t size, const char* name) {$/;"	f	namespace:android
_ZN7android14SurfaceControl11setPositionEii	libs/gui/SurfaceControl.cpp	/^extern "C" int _ZN7android14SurfaceControl11setPositionEii(int32_t x, int32_t y) {$/;"	f	namespace:android
_ZN7android21SurfaceComposerClient13createSurfaceEijjij	libs/gui/SurfaceComposerClient.cpp	/^extern "C" sp<SurfaceControl> _ZN7android21SurfaceComposerClient13createSurfaceEijjij($/;"	f	namespace:android
__GLD_HOOKS_H_	opengl/libs/GLES_trace/src/gltrace_hooks.h	18;"	d
__GLTRACE_CONTEXT_H_	opengl/libs/GLES_trace/src/gltrace_context.h	18;"	d
__GLTRACE_EGL_H_	opengl/libs/GLES_trace/src/gltrace_egl.h	18;"	d
__GLTRACE_FIXUP_H_	opengl/libs/GLES_trace/src/gltrace_fixup.h	18;"	d
__GLTRACE_TRANSPORT_H_	opengl/libs/GLES_trace/src/gltrace_transport.h	18;"	d
__LIBDISKUSAGE_DIRSIZE_H	include/diskusage/dirsize.h	19;"	d
__STDC_LIMIT_MACROS	libs/ui/Fence.cpp	22;"	d	file:
__STDC_LIMIT_MACROS	opengl/libs/EGL/egl_display.cpp	17;"	d	file:
__STDC_LIMIT_MACROS	services/surfaceflinger/DispSync.cpp	20;"	d	file:
__STDC_LIMIT_MACROS	services/surfaceflinger/FrameTracker.cpp	18;"	d	file:
__eglMustCastToProperFunctionPointerType	opengl/include/EGL/egl.h	/^typedef void (*__eglMustCastToProperFunctionPointerType)(void);$/;"	t
__egl_h_	opengl/include/EGL/egl.h	31;"	d
__egl_h_	opengl/tests/angeles/include/GLES/egl.h	2;"	d
__eglext_h_	opengl/include/EGL/eglext.h	2;"	d
__eglplatform_h_	opengl/include/EGL/eglplatform.h	2;"	d
__etc1_h__	opengl/include/ETC1/etc1.h	16;"	d
__for_each_pid	cmds/dumpstate/utils.c	/^static void __for_each_pid(void (*helper)(int, const char *, void *), const char *header, void *arg) {$/;"	f	file:
__gl2_h_	opengl/include/GLES2/gl2.h	2;"	d
__gl2ext_h_	opengl/include/GLES2/gl2ext.h	2;"	d
__gl2platform_h_	opengl/include/GLES2/gl2platform.h	2;"	d
__gl31_h_	opengl/include/GLES3/gl31.h	2;"	d
__gl3_h_	opengl/include/GLES3/gl3.h	2;"	d
__gl3ext_h_	opengl/include/GLES3/gl3ext.h	2;"	d
__gl3platform_h_	opengl/include/GLES3/gl3platform.h	2;"	d
__gl_h_	opengl/include/GLES/gl.h	2;"	d
__gl_h_	opengl/tests/angeles/include/GLES/gl.h	2;"	d
__glext_h_	opengl/include/GLES/glext.h	2;"	d
__glplatform_h_	opengl/include/GLES/glplatform.h	2;"	d
__init__	opengl/libs/GLES_trace/tools/genapi.py	/^    def __init__(self, name):$/;"	m	class:DataType
__init__	opengl/libs/GLES_trace/tools/genapi.py	/^    def __init__(self, prefix, apientry, callsite):$/;"	m	class:ApiCall
__init__	opengl/tools/glgen2/glgen.py	/^    def __init__(self):$/;"	m	class:ApiGenerator
__init__	opengl/tools/glgen2/glgen.py	/^    def __init__(self):$/;"	m	class:SpecGenerator
__init__	opengl/tools/glgen2/glgen.py	/^    def __init__(self):$/;"	m	class:TrampolineGen
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self):$/;"	m	class:Registry
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self, elem):$/;"	m	class:BaseInfo
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self, elem):$/;"	m	class:CmdInfo
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self, elem):$/;"	m	class:EnumInfo
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self, elem):$/;"	m	class:FeatureInfo
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self, elem):$/;"	m	class:GroupInfo
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self, elem):$/;"	m	class:TypeInfo
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self,$/;"	m	class:CGeneratorOptions
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self,$/;"	m	class:COutputGenerator
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self,$/;"	m	class:GeneratorOptions
__init__	opengl/tools/glgen2/registry/reg.py	/^    def __init__(self,$/;"	m	class:OutputGenerator
__khrplatform_h_	opengl/include/KHR/khrplatform.h	2;"	d
__legacy_egl_h_	opengl/include/GLES/egl.h	10;"	d
__str__	opengl/libs/GLES_trace/tools/genapi.py	/^    def __str__(self):$/;"	m	class:DataType	file:
_add_cache_dir_t	cmds/installd/utils.c	/^static cache_dir_t* _add_cache_dir_t(cache_t* cache, cache_dir_t* parent, const char *name)$/;"	f	file:
_add_cache_file_t	cmds/installd/utils.c	/^static cache_file_t* _add_cache_file_t(cache_t* cache, cache_dir_t* dir, time_t modTime,$/;"	f	file:
_add_cache_files	cmds/installd/utils.c	/^static int _add_cache_files(cache_t *cache, cache_dir_t *parentDir, const char *dirName,$/;"	f	file:
_b	opengl/tests/hwc/hwcTestLib.h	/^    float _b;$/;"	m	class:ColorRGB
_bio_get_obj	cmds/servicemanager/binder.c	/^static struct flat_binder_object *_bio_get_obj(struct binder_io *bio)$/;"	f	file:
_c1	opengl/tests/hwc/hwcTestLib.h	/^    float _c1;$/;"	m	class:ColorFract
_c2	opengl/tests/hwc/hwcTestLib.h	/^    float _c2;$/;"	m	class:ColorFract
_c3	opengl/tests/hwc/hwcTestLib.h	/^    float _c3;$/;"	m	class:ColorFract
_cache_malloc	cmds/installd/utils.c	/^static void* _cache_malloc(cache_t* cache, size_t len)$/;"	f	file:
_cache_realloc	cmds/installd/utils.c	/^static void* _cache_realloc(cache_t* cache, void* cur, size_t origLen, size_t len)$/;"	f	file:
_cached_size_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  mutable int _cached_size_;$/;"	m	class:android::gltrace::GLMessage
_cached_size_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  mutable int _cached_size_;$/;"	m	class:android::gltrace::GLMessage_DataType
_cached_size_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  mutable int _cached_size_;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer
_clear_bit	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline void _clear_bit(int index) {$/;"	f	class:android::gltrace::GLMessage
_clear_bit	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline void _clear_bit(int index) {$/;"	f	class:android::gltrace::GLMessage_DataType
_clear_bit	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline void _clear_bit(int index) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
_copy_dir_files	cmds/installd/utils.c	/^static int _copy_dir_files(int sdfd, int ddfd, uid_t owner, gid_t group)$/;"	f	file:
_copy_owner_permissions	cmds/installd/utils.c	/^static int _copy_owner_permissions(int srcfd, int dstfd)$/;"	f	file:
_d	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t _d;$/;"	m	class:Rational	file:
_delete_dir_contents	cmds/installd/utils.c	/^static int _delete_dir_contents(DIR *d,$/;"	f	file:
_eglCreateWindowSurface	opengl/tools/glgen/stubs/egl/eglCreateWindowSurface.java	/^    private static native EGLSurface _eglCreateWindowSurface($/;"	m
_eglCreateWindowSurfaceTexture	opengl/tools/glgen/stubs/egl/eglCreateWindowSurface.java	/^    private static native EGLSurface _eglCreateWindowSurfaceTexture($/;"	m
_g	opengl/tests/hwc/hwcTestLib.h	/^    float _g;$/;"	m	class:ColorRGB
_h	opengl/tests/hwc/hwcTestLib.h	/^    uint32_t _h;$/;"	m	class:HwcTestDim
_has_bit	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline bool _has_bit(int index) const {$/;"	f	class:android::gltrace::GLMessage
_has_bit	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline bool _has_bit(int index) const {$/;"	f	class:android::gltrace::GLMessage_DataType
_has_bit	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline bool _has_bit(int index) const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
_has_bits_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(3 + 31) \/ 32];$/;"	m	class:android::gltrace::GLMessage_FrameBuffer
_has_bits_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(8 + 31) \/ 32];$/;"	m	class:android::gltrace::GLMessage
_has_bits_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::uint32 _has_bits_[(8 + 31) \/ 32];$/;"	m	class:android::gltrace::GLMessage_DataType
_inc_num_cache_collected	cmds/installd/utils.c	/^static void _inc_num_cache_collected(cache_t* cache)$/;"	f	file:
_indexOrderOf	opengl/libagl/Tokenizer.cpp	/^ssize_t Tokenizer::_indexOrderOf(uint32_t token, size_t* order) const$/;"	f	class:android::Tokenizer
_insertTokenAt	opengl/libagl/Tokenizer.cpp	/^ssize_t Tokenizer::_insertTokenAt(uint32_t token, size_t index)$/;"	f	class:android::Tokenizer
_l	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t _l; \/\/ lower$/;"	m	class:Range	file:
_n	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t _n;$/;"	m	class:Rational	file:
_ogles_error	opengl/libagl/state.cpp	/^void _ogles_error(ogles_context_t* c, GLenum error)$/;"	f	namespace:android
_r	opengl/tests/hwc/hwcTestLib.h	/^    float _r;$/;"	m	class:ColorRGB
_set_bit	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline void _set_bit(int index) {$/;"	f	class:android::gltrace::GLMessage
_set_bit	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline void _set_bit(int index) {$/;"	f	class:android::gltrace::GLMessage_DataType
_set_bit	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline void _set_bit(int index) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
_u	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t _u; \/\/ upper$/;"	m	class:Range	file:
_w	opengl/tests/hwc/hwcTestLib.h	/^    uint32_t _w;$/;"	m	class:HwcTestDim
_writeStr	cmds/atrace/atrace.cpp	/^static bool _writeStr(const char* filename, const char* str, int flags)$/;"	f	file:
a	include/ui/vec4.h	/^        struct { T r, g, b, a; };$/;"	m	struct:android::tvec4::__anon96::__anon99
a	opengl/libagl/context.h	/^        struct { GLfixed r, g, b, a; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon218
aapt	cmds/installd/commands.c	/^int aapt(const char *source_apk, const char *internal_path, const char *out_restable, uid_t uid,$/;"	f
abandon	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::abandon() {$/;"	f	class:android::ConsumerBase
abandonLocked	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::abandonLocked() {$/;"	f	class:android::ConsumerBase
abandonLocked	libs/gui/GLConsumer.cpp	/^void GLConsumer::abandonLocked() {$/;"	f	class:android::GLConsumer
abortBrokenDispatchCycleLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::abortBrokenDispatchCycleLocked(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher
abortPointerGestures	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::abortPointerGestures(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
abortPointerMouse	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::abortPointerMouse(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
abortPointerSimple	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::abortPointerSimple(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
abortPointerStylus	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::abortPointerStylus(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
abortPointerUsage	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::abortPointerUsage(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
abs	libs/gui/tests/GLTest.cpp	/^static int abs(int value) {$/;"	f	namespace:android
abs	services/inputflinger/InputReader.cpp	/^inline static T abs(const T& value) {$/;"	f	namespace:android
absBitmask	services/inputflinger/EventHub.h	/^        uint8_t absBitmask[(ABS_MAX + 1) \/ 8];$/;"	m	struct:android::EventHub::Device
absIsOne	services/surfaceflinger/Transform.cpp	/^bool Transform::absIsOne(float f) {$/;"	f	class:android::Transform
absf	opengl/libagl/fp.h	/^GLfloat  absf(GLfloat v) {$/;"	f	namespace:android::gl
absoluteAxes	services/inputflinger/tests/InputReader_test.cpp	/^        KeyedVector<int, RawAbsoluteAxisInfo> absoluteAxes;$/;"	m	struct:android::FakeEventHub::Device	file:
absoluteAxisValue	services/inputflinger/tests/InputReader_test.cpp	/^        KeyedVector<int32_t, int32_t> absoluteAxisValue;$/;"	m	struct:android::FakeEventHub::Device	file:
accSTDEV	services/sensorservice/Fusion.cpp	/^static const float accSTDEV  = 0.05f;   \/\/ m\/s^2 (measured 0.08 \/ CDD 0.05)$/;"	m	namespace:android	file:
acceleration	include/android/sensor.h	/^            ASensorVector   acceleration;$/;"	m	union:ASensorEvent::__anon187::__anon188
acceleration	include/input/VelocityControl.h	/^    float acceleration;$/;"	m	struct:android::VelocityControlParameters
acceptClientConnection	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^int acceptClientConnection(char *sockname) {$/;"	f	namespace:android::gltrace
acquire	opengl/libagl/Tokenizer.cpp	/^uint32_t Tokenizer::acquire()$/;"	f	class:android::Tokenizer
acquire	opengl/libs/EGL/egl_object.h	/^void egl_object_t::LocalRef<N,T>::acquire() const {$/;"	f	class:android::egl_object_t::LocalRef
acquireBuffer	libs/gui/BufferItemConsumer.cpp	/^status_t BufferItemConsumer::acquireBuffer(BufferItem *item,$/;"	f	class:android::BufferItemConsumer
acquireBuffer	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::acquireBuffer(BufferItem* outBuffer,$/;"	f	class:android::BufferQueueConsumer
acquireBuffer	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t acquireBuffer(BufferItem *buffer, nsecs_t presentWhen) {$/;"	f	class:android::BpGraphicBufferConsumer
acquireBufferLocked	libs/gui/ConsumerBase.cpp	/^status_t ConsumerBase::acquireBufferLocked(BufferQueue::BufferItem *item,$/;"	f	class:android::ConsumerBase
acquireBufferLocked	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::acquireBufferLocked(BufferQueue::BufferItem *item,$/;"	f	class:android::GLConsumer
acquireBufferLocked	services/surfaceflinger/SurfaceFlingerConsumer.cpp	/^status_t SurfaceFlingerConsumer::acquireBufferLocked($/;"	f	class:android::SurfaceFlingerConsumer
acquireObjects	libs/binder/Parcel.cpp	/^void Parcel::acquireObjects()$/;"	f	class:android::Parcel
acquireWakeLock	services/powermanager/IPowerManager.cpp	/^    virtual status_t acquireWakeLock(int flags, const sp<IBinder>& lock, const String16& tag,$/;"	f	class:android::BpPowerManager
acquireWakeLockWithUid	services/powermanager/IPowerManager.cpp	/^    virtual status_t acquireWakeLockWithUid(int flags, const sp<IBinder>& lock, const String16& tag,$/;"	f	class:android::BpPowerManager
acquire_object	libs/binder/Parcel.cpp	/^void acquire_object(const sp<ProcessState>& proc,$/;"	f	namespace:android
action	include/input/InputTransport.h	/^            int32_t action;$/;"	m	struct:android::InputMessage::Body::Key
action	include/input/InputTransport.h	/^            int32_t action;$/;"	m	struct:android::InputMessage::Body::Motion
action	services/inputflinger/InputDispatcher.h	/^        int32_t action;$/;"	m	struct:android::InputDispatcher::KeyEntry
action	services/inputflinger/InputDispatcher.h	/^        int32_t action;$/;"	m	struct:android::InputDispatcher::MotionEntry
action	services/inputflinger/InputListener.h	/^    int32_t action;$/;"	m	struct:android::NotifyKeyArgs
action	services/inputflinger/InputListener.h	/^    int32_t action;$/;"	m	struct:android::NotifyMotionArgs
activate	services/sensorservice/CorrectedGyroSensor.cpp	/^status_t CorrectedGyroSensor::activate(void* ident, bool enabled) {$/;"	f	class:android::CorrectedGyroSensor
activate	services/sensorservice/GravitySensor.cpp	/^status_t GravitySensor::activate(void* ident, bool enabled) {$/;"	f	class:android::GravitySensor
activate	services/sensorservice/LinearAccelerationSensor.cpp	/^status_t LinearAccelerationSensor::activate(void* ident, bool enabled) {$/;"	f	class:android::LinearAccelerationSensor
activate	services/sensorservice/OrientationSensor.cpp	/^status_t OrientationSensor::activate(void* ident, bool enabled) {$/;"	f	class:android::OrientationSensor
activate	services/sensorservice/RotationVectorSensor.cpp	/^status_t GyroDriftSensor::activate(void* ident, bool enabled) {$/;"	f	class:android::GyroDriftSensor
activate	services/sensorservice/RotationVectorSensor.cpp	/^status_t RotationVectorSensor::activate(void* ident, bool enabled) {$/;"	f	class:android::RotationVectorSensor
activate	services/sensorservice/SensorDevice.cpp	/^status_t SensorDevice::activate(void* ident, int handle, int enabled)$/;"	f	class:android::SensorDevice
activate	services/sensorservice/SensorFusion.cpp	/^status_t SensorFusion::activate(void* ident, bool enabled) {$/;"	f	class:android::SensorFusion
activate	services/sensorservice/SensorInterface.cpp	/^status_t HardwareSensor::activate(void* ident, bool enabled) {$/;"	f	class:android::HardwareSensor
active	opengl/libagl/context.h	/^    int                 active;     \/\/ active tmu$/;"	m	struct:android::gl::texture_state_t
active	services/surfaceflinger/Layer.h	/^        Geometry active;$/;"	m	struct:android::Layer::State
activeGestureId	services/inputflinger/InputReader.h	/^        int32_t activeGestureId; \/\/ -1 if none$/;"	m	struct:android::TouchInputMapper::PointerGesture
activeTexture	opengl/libagl/context.h	/^    uint8_t         activeTexture;$/;"	m	struct:android::gl::array_machine_t
activeTouchId	services/inputflinger/InputReader.h	/^        int32_t activeTouchId; \/\/ -1 if none$/;"	m	struct:android::TouchInputMapper::PointerGesture
activeTransparentRegion	services/surfaceflinger/Layer.h	/^        Region activeTransparentRegion;$/;"	m	struct:android::Layer::State
actualPresentFence	services/surfaceflinger/FrameTracker.h	/^        sp<Fence> actualPresentFence;$/;"	m	struct:android::FrameTracker::FrameRecord
actualPresentTime	services/surfaceflinger/FrameTracker.h	/^        nsecs_t actualPresentTime;$/;"	m	struct:android::FrameTracker::FrameRecord
actualPresentTimesNano	include/ui/FrameStats.h	/^    Vector<nsecs_t> actualPresentTimesNano;$/;"	m	class:android::FrameStats
addAbsoluteAxis	services/inputflinger/tests/InputReader_test.cpp	/^    void addAbsoluteAxis(int32_t deviceId, int axis,$/;"	f	class:android::FakeEventHub
addArgument	opengl/tools/glgen/src/CFunc.java	/^    public void addArgument(String argName, CType argType) {$/;"	m	class:CFunc
addArgument	opengl/tools/glgen/src/JFunc.java	/^    public void addArgument(String argName, JType argType, int cindex) {$/;"	m	class:JFunc
addClientLayer	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::addClientLayer(const sp<Client>& client,$/;"	f	class:android::SurfaceFlinger
addConfigurationMap	services/inputflinger/tests/InputReader_test.cpp	/^    void addConfigurationMap(int32_t deviceId, const PropertyMap* configuration) {$/;"	f	class:android::FakeEventHub
addConfigurationProperty	services/inputflinger/tests/InputReader_test.cpp	/^    void addConfigurationProperty(const char* key, const char* value) {$/;"	f	class:android::InputMapperTest
addConfigurationProperty	services/inputflinger/tests/InputReader_test.cpp	/^    void addConfigurationProperty(int32_t deviceId, const String8& key, const String8& value) {$/;"	f	class:android::FakeEventHub
addConnection	services/sensorservice/SensorService.cpp	/^bool SensorService::SensorRecord::addConnection($/;"	f	class:android::SensorService::SensorRecord
addDevice	services/inputflinger/tests/InputReader_test.cpp	/^    void addDevice(int32_t deviceId, const String8& name, uint32_t classes) {$/;"	f	class:android::FakeEventHub
addDevice	services/inputflinger/tests/InputReader_test.cpp	/^    void addDevice(int32_t deviceId, const String8& name, uint32_t classes,$/;"	f	class:android::InputReaderTest
addDeviceLocked	services/inputflinger/EventHub.cpp	/^void EventHub::addDeviceLocked(Device* device) {$/;"	f	class:android::EventHub
addDeviceLocked	services/inputflinger/InputReader.cpp	/^void InputReader::addDeviceLocked(nsecs_t when, int32_t deviceId) {$/;"	f	class:android::InputReader
addDeviceWithFakeInputMapper	services/inputflinger/tests/InputReader_test.cpp	/^    FakeInputMapper* addDeviceWithFakeInputMapper(int32_t deviceId, int32_t controllerNumber,$/;"	f	class:android::InputReaderTest
addDoubleEphemeralMetaKey	libs/input/KeyCharacterMap.cpp	/^void KeyCharacterMap::addDoubleEphemeralMetaKey(Vector<KeyEvent>& outEvents,$/;"	f	class:android::KeyCharacterMap
addElementInfo	opengl/tools/glgen2/registry/reg.py	/^    def addElementInfo(self, elem, info, infoName, dictionary):$/;"	m	class:Registry
addEventListener	services/surfaceflinger/DispSync.cpp	/^    status_t addEventListener(nsecs_t phase, const sp<DispSync::Callback>& callback) {$/;"	f	class:android::DispSyncThread
addEventListener	services/surfaceflinger/DispSync.cpp	/^status_t DispSync::addEventListener(nsecs_t phase,$/;"	f	class:android::DispSync
addExcludedDeviceName	services/inputflinger/tests/InputReader_test.cpp	/^    void addExcludedDeviceName(const String8& deviceName) {$/;"	f	class:android::FakeInputReaderPolicy
addExpf	opengl/libagl/fp.h	/^GLfloat addExpf(GLfloat v, int e) {$/;"	f	namespace:android::gl
addGlBufferData	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void addGlBufferData(GLMessage *glmsg, int dataIndex, GLvoid *src, GLsizeiptr len) {$/;"	f	namespace:android::gltrace
addHistory	include/input/InputTransport.h	/^        void addHistory(const InputMessage* msg) {$/;"	f	struct:android::InputConsumer::TouchState
addKey	libs/input/KeyCharacterMap.cpp	/^void KeyCharacterMap::addKey(Vector<KeyEvent>& outEvents,$/;"	f	class:android::KeyCharacterMap
addKey	services/inputflinger/tests/InputReader_test.cpp	/^    void addKey(int32_t deviceId, int32_t scanCode, int32_t usageCode,$/;"	f	class:android::FakeEventHub
addKeyMemento	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::InputState::addKeyMemento(const KeyEntry* entry, int32_t flags) {$/;"	f	class:android::InputDispatcher::InputState
addLed	services/inputflinger/tests/InputReader_test.cpp	/^    void addLed(int32_t deviceId, int32_t led, bool initialState) {$/;"	f	class:android::FakeEventHub
addLockedMetaKey	libs/input/KeyCharacterMap.cpp	/^void KeyCharacterMap::addLockedMetaKey(Vector<KeyEvent>& outEvents,$/;"	f	class:android::KeyCharacterMap
addMapper	services/inputflinger/InputReader.cpp	/^void InputDevice::addMapper(InputMapper* mapper) {$/;"	f	class:android::InputDevice
addMapperAndConfigure	services/inputflinger/tests/InputReader_test.cpp	/^    void addMapperAndConfigure(InputMapper* mapper) {$/;"	f	class:android::InputMapperTest
addMetaKeys	libs/input/KeyCharacterMap.cpp	/^void KeyCharacterMap::addMetaKeys(Vector<KeyEvent>& outEvents,$/;"	f	class:android::KeyCharacterMap
addMonitoringTargetsLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::addMonitoringTargetsLocked(Vector<InputTarget>& inputTargets) {$/;"	f	class:android::InputDispatcher
addMotionMemento	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::InputState::addMotionMemento(const MotionEntry* entry,$/;"	f	class:android::InputDispatcher::InputState
addMotionRange	libs/input/InputDevice.cpp	/^void InputDeviceInfo::addMotionRange(const MotionRange& range) {$/;"	f	class:android::InputDeviceInfo
addMotionRange	libs/input/InputDevice.cpp	/^void InputDeviceInfo::addMotionRange(int32_t axis, uint32_t source, float min, float max,$/;"	f	class:android::InputDeviceInfo
addMotionRange	services/inputflinger/InputReader.cpp	/^void JoystickInputMapper::addMotionRange(int32_t axisId, const Axis& axis,$/;"	f	class:android::JoystickInputMapper
addMovement	libs/input/VelocityTracker.cpp	/^void IntegratingVelocityTrackerStrategy::addMovement(nsecs_t eventTime, BitSet32 idBits,$/;"	f	class:android::IntegratingVelocityTrackerStrategy
addMovement	libs/input/VelocityTracker.cpp	/^void LeastSquaresVelocityTrackerStrategy::addMovement(nsecs_t eventTime, BitSet32 idBits,$/;"	f	class:android::LeastSquaresVelocityTrackerStrategy
addMovement	libs/input/VelocityTracker.cpp	/^void LegacyVelocityTrackerStrategy::addMovement(nsecs_t eventTime, BitSet32 idBits,$/;"	f	class:android::LegacyVelocityTrackerStrategy
addMovement	libs/input/VelocityTracker.cpp	/^void VelocityTracker::addMovement(const MotionEvent* event) {$/;"	f	class:android::VelocityTracker
addMovement	libs/input/VelocityTracker.cpp	/^void VelocityTracker::addMovement(nsecs_t eventTime, BitSet32 idBits, const Position* positions) {$/;"	f	class:android::VelocityTracker
addNativeRegistration	opengl/tools/glgen/src/CodeEmitter.java	/^    void addNativeRegistration(String fname);$/;"	m	interface:CodeEmitter
addNativeRegistration	opengl/tools/glgen/src/JniCodeEmitter.java	/^    public void addNativeRegistration(String s) {$/;"	m	class:JniCodeEmitter
addObject	opengl/libs/EGL/egl_display.cpp	/^void egl_display_t::addObject(egl_object_t* object) {$/;"	f	class:android::egl_display_t
addOrUpdateWindow	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::TouchState::addOrUpdateWindow(const sp<InputWindowHandle>& windowHandle,$/;"	f	class:android::InputDispatcher::TouchState
addOutput	libs/gui/StreamSplitter.cpp	/^status_t StreamSplitter::addOutput($/;"	f	class:android::StreamSplitter
addPendingFlushConnection	services/sensorservice/SensorService.cpp	/^void SensorService::SensorRecord::addPendingFlushConnection($/;"	f	class:android::SensorService::SensorRecord
addPresentFence	services/surfaceflinger/DispSync.cpp	/^bool DispSync::addPresentFence(const sp<Fence>& fence) {$/;"	f	class:android::DispSync
addRecentEventLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::addRecentEventLocked(EventEntry* entry) {$/;"	f	class:android::InputDispatcher
addRectUnchecked	libs/ui/Region.cpp	/^void Region::addRectUnchecked(int l, int t, int r, int b)$/;"	f	class:android::Region
addRelativeAxis	services/inputflinger/tests/InputReader_test.cpp	/^    void addRelativeAxis(int32_t deviceId, int32_t axis) {$/;"	f	class:android::FakeEventHub
addReleaseFence	libs/gui/ConsumerBase.cpp	/^status_t ConsumerBase::addReleaseFence(int slot,$/;"	f	class:android::ConsumerBase
addReleaseFenceLocked	libs/gui/ConsumerBase.cpp	/^status_t ConsumerBase::addReleaseFenceLocked(int slot,$/;"	f	class:android::ConsumerBase
addResyncSample	services/surfaceflinger/DispSync.cpp	/^bool DispSync::addResyncSample(nsecs_t timestamp) {$/;"	f	class:android::DispSync
addSample	libs/input/Input.cpp	/^void MotionEvent::addSample($/;"	f	class:android::MotionEvent
addSample	libs/input/InputTransport.cpp	/^void InputConsumer::addSample(MotionEvent* event, const InputMessage* msg) {$/;"	f	class:android::InputConsumer
addSensor	services/sensorservice/BatteryService.cpp	/^bool BatteryService::addSensor(uid_t uid, int handle) {$/;"	f	class:android::BatteryService
addSensor	services/sensorservice/SensorService.cpp	/^bool SensorService::SensorEventConnection::addSensor(int32_t handle) {$/;"	f	class:android::SensorService::SensorEventConnection
addService	libs/binder/IServiceManager.cpp	/^    virtual status_t addService(const String16& name, const sp<IBinder>& service,$/;"	f	class:android::BpServiceManager
addSingleEphemeralMetaKey	libs/input/KeyCharacterMap.cpp	/^bool KeyCharacterMap::addSingleEphemeralMetaKey(Vector<KeyEvent>& outEvents,$/;"	f	class:android::KeyCharacterMap
addSource	libs/input/InputDevice.cpp	/^void InputDeviceInfo::addSource(uint32_t source) {$/;"	f	class:android::InputDeviceInfo
addSupportedKeyCode	services/inputflinger/tests/InputReader_test.cpp	/^    void addSupportedKeyCode(int32_t keyCode) {$/;"	f	class:android::FakeInputMapper
addTouchableRegion	services/inputflinger/InputWindow.cpp	/^void InputWindowInfo::addTouchableRegion(const Rect& region) {$/;"	f	class:android::InputWindowInfo
addVirtualKeyDefinition	services/inputflinger/tests/InputReader_test.cpp	/^    void addVirtualKeyDefinition(int32_t deviceId, const VirtualKeyDefinition& definition) {$/;"	f	class:android::FakeEventHub
addWindowTargetLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::addWindowTargetLocked(const sp<InputWindowHandle>& windowHandle,$/;"	f	class:android::InputDispatcher
add_args	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::android::gltrace::GLMessage_DataType* GLMessage::add_args() {$/;"	f	class:android::gltrace::GLMessage
add_boolvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::add_boolvalue(bool value) {$/;"	f	class:android::gltrace::GLMessage_DataType
add_cache_files	cmds/installd/utils.c	/^void add_cache_files(cache_t* cache, const char *basepath, const char *cachedir)$/;"	f
add_charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::std::string* GLMessage_DataType::add_charvalue() {$/;"	f	class:android::gltrace::GLMessage_DataType
add_charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::add_charvalue(const ::std::string& value) {$/;"	f	class:android::gltrace::GLMessage_DataType
add_charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::add_charvalue(const char* value) {$/;"	f	class:android::gltrace::GLMessage_DataType
add_charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::add_charvalue(const void* value, size_t size) {$/;"	f	class:android::gltrace::GLMessage_DataType
add_contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::std::string* GLMessage_FrameBuffer::add_contents() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
add_contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::add_contents(const ::std::string& value) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
add_contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::add_contents(const char* value) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
add_contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::add_contents(const void* value, size_t size) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
add_floatvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::add_floatvalue(float value) {$/;"	f	class:android::gltrace::GLMessage_DataType
add_int64value	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::add_int64value(::google::protobuf::int64 value) {$/;"	f	class:android::gltrace::GLMessage_DataType
add_intvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::add_intvalue(::google::protobuf::int32 value) {$/;"	f	class:android::gltrace::GLMessage_DataType
add_rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::std::string* GLMessage_DataType::add_rawbytes() {$/;"	f	class:android::gltrace::GLMessage_DataType
add_rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::add_rawbytes(const ::std::string& value) {$/;"	f	class:android::gltrace::GLMessage_DataType
add_rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::add_rawbytes(const char* value) {$/;"	f	class:android::gltrace::GLMessage_DataType
add_rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::add_rawbytes(const void* value, size_t size) {$/;"	f	class:android::gltrace::GLMessage_DataType
address	opengl/libagl/egl.cpp	/^    __eglMustCastToProperFunctionPointerType address;$/;"	m	struct:android::extention_map_t	file:
address	opengl/libs/EGL/eglApi.cpp	/^    __eglMustCastToProperFunctionPointerType address;$/;"	m	struct:android::extention_map_t	file:
advance	include/private/ui/RegionHelper.h	/^        void advance(region& reg, TYPE& aTop, TYPE& aBottom) {$/;"	f	class:android::region_operator::Spanner
advance	include/private/ui/RegionHelper.h	/^        void advance(region& reg, TYPE& left, TYPE& right) {$/;"	f	class:android::region_operator::SpannerInner
advanceFrame	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^status_t FramebufferSurface::advanceFrame() {$/;"	f	class:android::FramebufferSurface
advanceFrame	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::advanceFrame() {$/;"	f	class:android::VirtualDisplaySurface
advanceFrame	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::advanceFrame() {$/;"	f	class:android::FrameTracker
afterKeyEventLockedInterruptible	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::afterKeyEventLockedInterruptible(const sp<Connection>& connection,$/;"	f	class:android::InputDispatcher
afterMotionEventLockedInterruptible	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::afterMotionEventLockedInterruptible(const sp<Connection>& connection,$/;"	f	class:android::InputDispatcher
ah	libs/ui/PixelFormat.cpp	/^        uint8_t     ah;$/;"	m	struct:android::Info::__anon243	file:
al	libs/ui/PixelFormat.cpp	/^        uint8_t     al;$/;"	m	struct:android::Info::__anon243	file:
align	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^int align(int x, int a) {$/;"	f
align	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^int align(int x, int a) {$/;"	f
alignment	include/binder/TextOutput.h	/^inline size_t HexDump::alignment() const { return mAlignment; }$/;"	f	class:android::HexDump
alloc	libs/binder/MemoryDealer.cpp	/^ssize_t SimpleBestFitAllocator::alloc(size_t size, uint32_t flags)$/;"	f	class:android::SimpleBestFitAllocator
alloc	libs/ui/GraphicBufferAllocator.cpp	/^status_t GraphicBufferAllocator::alloc(uint32_t w, uint32_t h, PixelFormat format,$/;"	f	class:android::GraphicBufferAllocator
alloc	libs/ui/GraphicBufferAllocator.cpp	/^status_t GraphicBufferAllocator::alloc(uint32_t w, uint32_t h,$/;"	f	class:android::GraphicBufferAllocator
allocBufferIndex	libs/binder/BufferedTextOutput.cpp	/^static int32_t allocBufferIndex()$/;"	f	namespace:android
alloc_rec_t	include/ui/GraphicBufferAllocator.h	/^    struct alloc_rec_t {$/;"	s	class:android::GraphicBufferAllocator
allocate	libs/binder/MemoryDealer.cpp	/^size_t SimpleBestFitAllocator::allocate(size_t size, uint32_t flags)$/;"	f	class:android::SimpleBestFitAllocator
allocate	libs/binder/MemoryDealer.cpp	/^sp<IMemory> MemoryDealer::allocate(size_t size)$/;"	f	class:android::MemoryDealer
allocateBuffers	libs/gui/BufferQueueProducer.cpp	/^void BufferQueueProducer::allocateBuffers(bool async, uint32_t width,$/;"	f	class:android::BufferQueueProducer
allocateBuffers	libs/gui/IGraphicBufferProducer.cpp	/^    virtual void allocateBuffers(bool async, uint32_t width, uint32_t height,$/;"	f	class:android::BpGraphicBufferProducer
allocateBuffers	libs/gui/Surface.cpp	/^void Surface::allocateBuffers() {$/;"	f	class:android::Surface
allocateBuffers	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^void VirtualDisplaySurface::allocateBuffers(bool \/* async *\/,$/;"	f	class:android::VirtualDisplaySurface
allocateBuffers	services/surfaceflinger/MonitoredProducer.cpp	/^void MonitoredProducer::allocateBuffers(bool async, uint32_t width,$/;"	f	class:android::MonitoredProducer
allocateDisplayId	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^int32_t HWComposer::allocateDisplayId() {$/;"	f	class:android::HWComposer
allocateHwcDisplayId	services/surfaceflinger/SurfaceFlinger.cpp	/^int32_t SurfaceFlinger::allocateHwcDisplayId(DisplayDevice::DisplayType type) {$/;"	f	class:android::SurfaceFlinger
allocateMipmaps	opengl/libagl/TextureObjectManager.cpp	/^status_t EGLTextureObject::allocateMipmaps()$/;"	f	class:android::EGLTextureObject
allocateStore	opengl/libagl/BufferObjectManager.cpp	/^int EGLBufferObjectManager::allocateStore(buffer_t* bo,$/;"	f	class:android::EGLBufferObjectManager
allocator	libs/binder/MemoryDealer.cpp	/^SimpleBestFitAllocator* MemoryDealer::allocator() const {$/;"	f	class:android::MemoryDealer
allowIndirectBuffers	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^allowIndirectBuffers(JNIEnv *_env) {$/;"	f	file:
allowIndirectBuffersID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jmethodID allowIndirectBuffersID;$/;"	v	file:
allow_isolated	cmds/servicemanager/service_manager.c	/^    int allow_isolated;$/;"	m	struct:svcinfo	file:
alpha	include/private/gui/LayerState.h	/^            float           alpha;$/;"	m	struct:android::layer_state_t
alpha	opengl/tests/hwc/hwcCommit.cpp	/^    float        alpha;$/;"	m	class:Rectangle	file:
alpha	opengl/tests/hwc/hwcRects.cpp	/^    float        alpha;$/;"	m	class:Rectangle	file:
alpha	services/surfaceflinger/Layer.h	/^        uint8_t alpha;$/;"	m	struct:android::Layer::State
ambient	opengl/libagl/context.h	/^    vec4_t      ambient;$/;"	m	struct:android::gl::light_model_t
ambient	opengl/libagl/context.h	/^    vec4_t      ambient;$/;"	m	struct:android::gl::light_t
ambient	opengl/libagl/context.h	/^    vec4_t      ambient;$/;"	m	struct:android::gl::material_t
andSelf	libs/ui/Region.cpp	/^Region& Region::andSelf(const Rect& r) {$/;"	f	class:android::Region
andSelf	libs/ui/Region.cpp	/^Region& Region::andSelf(const Region& rhs) {$/;"	f	class:android::Region
andSelf	libs/ui/Region.cpp	/^Region& Region::andSelf(const Region& rhs, int dx, int dy) {$/;"	f	class:android::Region
andSelf	opengl/libagl/egl.cpp	/^        Rect& andSelf(const Rect& r) {$/;"	f	struct:android::egl_window_surface_v2_t::Rect
android	cmds/flatland/Composers.cpp	/^namespace android {$/;"	n	file:
android	cmds/flatland/Flatland.h	/^namespace android {$/;"	n
android	cmds/flatland/GLHelper.cpp	/^ namespace android {$/;"	n	file:
android	cmds/flatland/GLHelper.h	/^namespace android {$/;"	n
android	cmds/flatland/Renderers.cpp	/^namespace android {$/;"	n	file:
android	cmds/installd/tests/installd_utils_test.cpp	/^namespace android {$/;"	n	file:
android	cmds/rawbu/backup.cpp	/^namespace android {$/;"	n	file:
android	include/batteryservice/BatteryService.h	/^namespace android {$/;"	n
android	include/batteryservice/IBatteryPropertiesListener.h	/^namespace android {$/;"	n
android	include/batteryservice/IBatteryPropertiesRegistrar.h	/^namespace android {$/;"	n
android	include/binder/AppOpsManager.h	/^namespace android {$/;"	n
android	include/binder/Binder.h	/^namespace android {$/;"	n
android	include/binder/BinderService.h	/^namespace android {$/;"	n
android	include/binder/BpBinder.h	/^namespace android {$/;"	n
android	include/binder/BufferedTextOutput.h	/^namespace android {$/;"	n
android	include/binder/Debug.h	/^namespace android {$/;"	n
android	include/binder/IAppOpsCallback.h	/^namespace android {$/;"	n
android	include/binder/IAppOpsService.h	/^namespace android {$/;"	n
android	include/binder/IBatteryStats.h	/^namespace android {$/;"	n
android	include/binder/IBinder.h	/^namespace android {$/;"	n
android	include/binder/IInterface.h	/^namespace android {$/;"	n
android	include/binder/IMemory.h	/^namespace android {$/;"	n
android	include/binder/IPCThreadState.h	/^namespace android {$/;"	n
android	include/binder/IPermissionController.h	/^namespace android {$/;"	n
android	include/binder/IServiceManager.h	/^namespace android {$/;"	n
android	include/binder/MemoryBase.h	/^namespace android {$/;"	n
android	include/binder/MemoryDealer.h	/^namespace android {$/;"	n
android	include/binder/MemoryHeapBase.h	/^namespace android {$/;"	n
android	include/binder/MemoryHeapIon.h	/^namespace android {$/;"	n
android	include/binder/MemoryHeapPmem.h	/^namespace android {$/;"	n
android	include/binder/Parcel.h	/^namespace android {$/;"	n
android	include/binder/PermissionCache.h	/^namespace android {$/;"	n
android	include/binder/ProcessState.h	/^namespace android {$/;"	n
android	include/binder/TextOutput.h	/^namespace android {$/;"	n
android	include/gui/BitTube.h	/^namespace android {$/;"	n
android	include/gui/BufferItem.h	/^namespace android {$/;"	n
android	include/gui/BufferItemConsumer.h	/^namespace android {$/;"	n
android	include/gui/BufferQueue.h	/^namespace android {$/;"	n
android	include/gui/BufferQueueConsumer.h	/^namespace android {$/;"	n
android	include/gui/BufferQueueCore.h	/^namespace android {$/;"	n
android	include/gui/BufferQueueDefs.h	/^namespace android {$/;"	n
android	include/gui/BufferQueueProducer.h	/^namespace android {$/;"	n
android	include/gui/BufferSlot.h	/^namespace android {$/;"	n
android	include/gui/ConsumerBase.h	/^namespace android {$/;"	n
android	include/gui/CpuConsumer.h	/^namespace android {$/;"	n
android	include/gui/DisplayEventReceiver.h	/^namespace android {$/;"	n
android	include/gui/GLConsumer.h	/^namespace android {$/;"	n
android	include/gui/GraphicBufferAlloc.h	/^namespace android {$/;"	n
android	include/gui/GuiConfig.h	/^namespace android {$/;"	n
android	include/gui/IConsumerListener.h	/^namespace android {$/;"	n
android	include/gui/IDisplayEventConnection.h	/^namespace android {$/;"	n
android	include/gui/IGraphicBufferAlloc.h	/^namespace android {$/;"	n
android	include/gui/IGraphicBufferConsumer.h	/^namespace android {$/;"	n
android	include/gui/IGraphicBufferProducer.h	/^namespace android {$/;"	n
android	include/gui/IProducerListener.h	/^namespace android {$/;"	n
android	include/gui/ISensorEventConnection.h	/^namespace android {$/;"	n
android	include/gui/ISensorServer.h	/^namespace android {$/;"	n
android	include/gui/ISurfaceComposer.h	/^namespace android {$/;"	n
android	include/gui/ISurfaceComposerClient.h	/^namespace android {$/;"	n
android	include/gui/Sensor.h	/^namespace android {$/;"	n
android	include/gui/SensorEventQueue.h	/^namespace android {$/;"	n
android	include/gui/SensorManager.h	/^namespace android {$/;"	n
android	include/gui/StreamSplitter.h	/^namespace android {$/;"	n
android	include/gui/Surface.h	/^namespace android {$/;"	n
android	include/gui/SurfaceComposerClient.h	/^namespace android {$/;"	n
android	include/gui/SurfaceControl.h	/^namespace android {$/;"	n
android	include/input/Input.h	/^namespace android {$/;"	n
android	include/input/InputDevice.h	/^namespace android {$/;"	n
android	include/input/InputEventLabels.h	/^namespace android {$/;"	n
android	include/input/InputTransport.h	/^namespace android {$/;"	n
android	include/input/KeyCharacterMap.h	/^namespace android {$/;"	n
android	include/input/KeyLayoutMap.h	/^namespace android {$/;"	n
android	include/input/Keyboard.h	/^namespace android {$/;"	n
android	include/input/VelocityControl.h	/^namespace android {$/;"	n
android	include/input/VelocityTracker.h	/^namespace android {$/;"	n
android	include/input/VirtualKeyMap.h	/^namespace android {$/;"	n
android	include/media/drm/DrmAPI.h	/^namespace android {$/;"	n
android	include/media/hardware/CryptoAPI.h	/^namespace android {$/;"	n
android	include/media/hardware/HDCPAPI.h	/^namespace android {$/;"	n
android	include/media/hardware/HardwareAPI.h	/^namespace android {$/;"	n
android	include/media/hardware/MetadataBufferType.h	/^namespace android {$/;"	n
android	include/media/hardware/OMXPluginBase.h	/^namespace android {$/;"	n
android	include/powermanager/IPowerManager.h	/^namespace android {$/;"	n
android	include/powermanager/PowerManager.h	/^namespace android {$/;"	n
android	include/private/binder/Static.h	/^namespace android {$/;"	n
android	include/private/binder/binder_module.h	/^namespace android {$/;"	n
android	include/private/gui/ComposerService.h	/^namespace android {$/;"	n
android	include/private/gui/LayerState.h	/^namespace android {$/;"	n
android	include/private/gui/SyncFeatures.h	/^namespace android {$/;"	n
android	include/private/ui/RegionHelper.h	/^namespace android {$/;"	n
android	include/ui/ANativeObjectBase.h	/^namespace android {$/;"	n
android	include/ui/DisplayInfo.h	/^namespace android {$/;"	n
android	include/ui/DisplayStatInfo.h	/^namespace android {$/;"	n
android	include/ui/Fence.h	/^namespace android {$/;"	n
android	include/ui/FrameStats.h	/^namespace android {$/;"	n
android	include/ui/FramebufferNativeWindow.h	/^namespace android {$/;"	n
android	include/ui/GraphicBuffer.h	/^namespace android {$/;"	n
android	include/ui/GraphicBufferAllocator.h	/^namespace android {$/;"	n
android	include/ui/GraphicBufferMapper.h	/^namespace android {$/;"	n
android	include/ui/PixelFormat.h	/^namespace android {$/;"	n
android	include/ui/Point.h	/^namespace android {$/;"	n
android	include/ui/Rect.h	/^namespace android {$/;"	n
android	include/ui/Region.h	/^namespace android {$/;"	n
android	include/ui/TMatHelpers.h	/^namespace android {$/;"	n
android	include/ui/TVecHelpers.h	/^namespace android {$/;"	n
android	include/ui/UiConfig.h	/^namespace android {$/;"	n
android	include/ui/mat4.h	/^namespace android {$/;"	n
android	include/ui/vec2.h	/^namespace android {$/;"	n
android	include/ui/vec3.h	/^namespace android {$/;"	n
android	include/ui/vec4.h	/^namespace android {$/;"	n
android	libs/binder/AppOpsManager.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/Binder.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/BpBinder.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/BufferedTextOutput.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/Debug.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/IAppOpsCallback.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/IAppOpsService.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/IBatteryStats.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/IInterface.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/IMemory.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/IPCThreadState.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/IPermissionController.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/IServiceManager.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/MemoryBase.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/MemoryDealer.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/MemoryHeapBase.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/MemoryHeapIon.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/MemoryHeapPmem.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/Parcel.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/PermissionCache.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/ProcessState.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/Static.cpp	/^namespace android {$/;"	n	file:
android	libs/binder/TextOutput.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/BitTube.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/BufferItem.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/BufferItemConsumer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/BufferQueue.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/BufferQueueConsumer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/BufferQueueCore.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/BufferQueueProducer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/BufferSlot.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/ConsumerBase.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/CpuConsumer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/DisplayEventReceiver.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/GLConsumer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/GraphicBufferAlloc.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/GuiConfig.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/IConsumerListener.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/IDisplayEventConnection.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/IGraphicBufferAlloc.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/IGraphicBufferConsumer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/IGraphicBufferProducer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/IProducerListener.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/ISensorEventConnection.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/ISensorServer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/ISurfaceComposer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/ISurfaceComposerClient.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/LayerState.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/Sensor.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/SensorEventQueue.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/SensorManager.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/StreamSplitter.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/Surface.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/SurfaceComposerClient.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/SurfaceControl.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/SyncFeatures.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/BufferQueue_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/CpuConsumer_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/DisconnectWaiter.h	/^namespace android {$/;"	n
android	libs/gui/tests/FillBuffer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/FillBuffer.h	/^namespace android {$/;"	n
android	libs/gui/tests/FrameWaiter.h	/^namespace android {$/;"	n
android	libs/gui/tests/GLTest.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/GLTest.h	/^namespace android {$/;"	n
android	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/MultiTextureConsumer_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/SRGB_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/StreamSplitter_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/SurfaceTextureClient_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/SurfaceTextureFBO.h	/^namespace android {$/;"	n
android	libs/gui/tests/SurfaceTextureFBO_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/SurfaceTextureGL.h	/^namespace android {$/;"	n
android	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^namespace android {$/;"	n
android	libs/gui/tests/SurfaceTextureGLThreadToGL_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/SurfaceTextureGLToGL.h	/^namespace android {$/;"	n
android	libs/gui/tests/SurfaceTextureGLToGL_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/SurfaceTextureGL_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^namespace android {$/;"	n
android	libs/gui/tests/SurfaceTextureMultiContextGL_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/Surface_test.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/TextureRenderer.cpp	/^namespace android {$/;"	n	file:
android	libs/gui/tests/TextureRenderer.h	/^namespace android {$/;"	n
android	libs/input/Input.cpp	/^namespace android {$/;"	n	file:
android	libs/input/InputDevice.cpp	/^namespace android {$/;"	n	file:
android	libs/input/InputTransport.cpp	/^namespace android {$/;"	n	file:
android	libs/input/KeyCharacterMap.cpp	/^namespace android {$/;"	n	file:
android	libs/input/KeyLayoutMap.cpp	/^namespace android {$/;"	n	file:
android	libs/input/Keyboard.cpp	/^namespace android {$/;"	n	file:
android	libs/input/VelocityControl.cpp	/^namespace android {$/;"	n	file:
android	libs/input/VelocityTracker.cpp	/^namespace android {$/;"	n	file:
android	libs/input/VirtualKeyMap.cpp	/^namespace android {$/;"	n	file:
android	libs/input/tests/InputChannel_test.cpp	/^namespace android {$/;"	n	file:
android	libs/input/tests/InputEvent_test.cpp	/^namespace android {$/;"	n	file:
android	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^namespace android {$/;"	n	file:
android	libs/input/tests/StructLayout_test.cpp	/^namespace android {$/;"	n	file:
android	libs/input/tests/TestHelpers.h	/^namespace android {$/;"	n
android	libs/ui/Fence.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/FrameStats.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/FramebufferNativeWindow.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/GraphicBuffer.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/GraphicBufferAllocator.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/GraphicBufferMapper.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/PixelFormat.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/Rect.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/Region.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/UiConfig.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/tests/Region_test.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/tests/mat_test.cpp	/^namespace android {$/;"	n	file:
android	libs/ui/tests/vec_test.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/BufferObjectManager.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/BufferObjectManager.h	/^namespace android {$/;"	n
android	opengl/libagl/TextureObjectManager.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/TextureObjectManager.h	/^namespace android {$/;"	n
android	opengl/libagl/TokenManager.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/TokenManager.h	/^namespace android {$/;"	n
android	opengl/libagl/Tokenizer.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/Tokenizer.h	/^namespace android {$/;"	n
android	opengl/libagl/array.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/array.h	/^namespace android {$/;"	n
android	opengl/libagl/context.h	/^namespace android {$/;"	n
android	opengl/libagl/dxt.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/dxt.h	/^namespace android {$/;"	n
android	opengl/libagl/egl.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/fp.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/fp.h	/^namespace android {$/;"	n
android	opengl/libagl/light.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/light.h	/^namespace android {$/;"	n
android	opengl/libagl/matrix.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/matrix.h	/^namespace android {$/;"	n
android	opengl/libagl/mipmap.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/primitives.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/primitives.h	/^namespace android {$/;"	n
android	opengl/libagl/state.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/state.h	/^namespace android {$/;"	n
android	opengl/libagl/texture.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/texture.h	/^namespace android {$/;"	n
android	opengl/libagl/vertex.cpp	/^namespace android {$/;"	n	file:
android	opengl/libagl/vertex.h	/^namespace android {$/;"	n
android	opengl/libs/EGL/Loader.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/EGL/Loader.h	/^namespace android {$/;"	n
android	opengl/libs/EGL/egl.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/EGL/eglApi.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/EGL/egl_cache.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/EGL/egl_cache.h	/^namespace android {$/;"	n
android	opengl/libs/EGL/egl_display.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/EGL/egl_display.h	/^namespace android {$/;"	n
android	opengl/libs/EGL/egl_object.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/EGL/egl_object.h	/^namespace android {$/;"	n
android	opengl/libs/EGL/egl_tls.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/EGL/egl_tls.h	/^namespace android {$/;"	n
android	opengl/libs/EGL/egldefs.h	/^namespace android {$/;"	n
android	opengl/libs/EGL/getProcAddress.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/EGL/trace.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/GLES_trace/src/gltrace.pb.h	/^namespace android {$/;"	n
android	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/GLES_trace/src/gltrace_api.h	/^namespace android {$/;"	n
android	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/GLES_trace/src/gltrace_context.h	/^namespace android {$/;"	n
android	opengl/libs/GLES_trace/src/gltrace_egl.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/GLES_trace/src/gltrace_egl.h	/^namespace android {$/;"	n
android	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/GLES_trace/src/gltrace_fixup.h	/^namespace android {$/;"	n
android	opengl/libs/GLES_trace/src/gltrace_hooks.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/GLES_trace/src/gltrace_hooks.h	/^namespace android {$/;"	n
android	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^namespace android {$/;"	n	file:
android	opengl/libs/GLES_trace/src/gltrace_transport.h	/^namespace android {$/;"	n
android	opengl/libs/egl_impl.h	/^namespace android {$/;"	n
android	opengl/libs/glestrace.h	/^namespace android {$/;"	n
android	opengl/libs/hooks.h	/^namespace android {$/;"	n
android	opengl/tests/EGLTest/EGL_test.cpp	/^namespace android {$/;"	n	file:
android	opengl/tests/EGLTest/egl_cache_test.cpp	/^namespace android {$/;"	n	file:
android	opengl/tests/include/EGLUtils.h	/^namespace android {$/;"	n
android	opengl/tests/include/WindowSurface.h	/^namespace android {$/;"	n
android	services/batteryservice/BatteryProperties.cpp	/^namespace android {$/;"	n	file:
android	services/batteryservice/BatteryProperty.cpp	/^namespace android {$/;"	n	file:
android	services/batteryservice/IBatteryPropertiesListener.cpp	/^namespace android {$/;"	n	file:
android	services/batteryservice/IBatteryPropertiesRegistrar.cpp	/^namespace android {$/;"	n	file:
android	services/inputflinger/EventHub.cpp	/^namespace android {$/;"	n	file:
android	services/inputflinger/EventHub.h	/^namespace android {$/;"	n
android	services/inputflinger/InputApplication.cpp	/^namespace android {$/;"	n	file:
android	services/inputflinger/InputApplication.h	/^namespace android {$/;"	n
android	services/inputflinger/InputDispatcher.cpp	/^namespace android {$/;"	n	file:
android	services/inputflinger/InputDispatcher.h	/^namespace android {$/;"	n
android	services/inputflinger/InputListener.cpp	/^namespace android {$/;"	n	file:
android	services/inputflinger/InputListener.h	/^namespace android {$/;"	n
android	services/inputflinger/InputManager.cpp	/^namespace android {$/;"	n	file:
android	services/inputflinger/InputManager.h	/^namespace android {$/;"	n
android	services/inputflinger/InputReader.cpp	/^namespace android {$/;"	n	file:
android	services/inputflinger/InputReader.h	/^namespace android {$/;"	n
android	services/inputflinger/InputWindow.cpp	/^namespace android {$/;"	n	file:
android	services/inputflinger/InputWindow.h	/^namespace android {$/;"	n
android	services/inputflinger/PointerControllerInterface.h	/^namespace android {$/;"	n
android	services/inputflinger/tests/InputDispatcher_test.cpp	/^namespace android {$/;"	n	file:
android	services/inputflinger/tests/InputReader_test.cpp	/^namespace android {$/;"	n	file:
android	services/powermanager/IPowerManager.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/BatteryService.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/BatteryService.h	/^namespace android {$/;"	n
android	services/sensorservice/CorrectedGyroSensor.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/CorrectedGyroSensor.h	/^namespace android {$/;"	n
android	services/sensorservice/Fusion.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/Fusion.h	/^namespace android {$/;"	n
android	services/sensorservice/GravitySensor.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/GravitySensor.h	/^namespace android {$/;"	n
android	services/sensorservice/LinearAccelerationSensor.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/LinearAccelerationSensor.h	/^namespace android {$/;"	n
android	services/sensorservice/OrientationSensor.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/OrientationSensor.h	/^namespace android {$/;"	n
android	services/sensorservice/RotationVectorSensor.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/RotationVectorSensor.h	/^namespace android {$/;"	n
android	services/sensorservice/SensorDevice.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/SensorDevice.h	/^namespace android {$/;"	n
android	services/sensorservice/SensorFusion.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/SensorFusion.h	/^namespace android {$/;"	n
android	services/sensorservice/SensorInterface.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/SensorInterface.h	/^namespace android {$/;"	n
android	services/sensorservice/SensorService.cpp	/^namespace android {$/;"	n	file:
android	services/sensorservice/SensorService.h	/^namespace android {$/;"	n
android	services/sensorservice/mat.h	/^namespace android {$/;"	n
android	services/sensorservice/quat.h	/^namespace android {$/;"	n
android	services/sensorservice/traits.h	/^namespace android {$/;"	n
android	services/sensorservice/vec.h	/^namespace android {$/;"	n
android	services/surfaceflinger/Barrier.h	/^namespace android {$/;"	n
android	services/surfaceflinger/Client.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/Client.h	/^namespace android {$/;"	n
android	services/surfaceflinger/Colorizer.h	/^namespace android {$/;"	n
android	services/surfaceflinger/DdmConnection.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/DdmConnection.h	/^namespace android {$/;"	n
android	services/surfaceflinger/DispSync.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/DispSync.h	/^namespace android {$/;"	n
android	services/surfaceflinger/DisplayDevice.h	/^namespace android {$/;"	n
android	services/surfaceflinger/DisplayHardware/DisplaySurface.h	/^namespace android {$/;"	n
android	services/surfaceflinger/DisplayHardware/FloatRect.h	/^namespace android {$/;"	n
android	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/DisplayHardware/FramebufferSurface.h	/^namespace android {$/;"	n
android	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/DisplayHardware/HWComposer.h	/^namespace android {$/;"	n
android	services/surfaceflinger/DisplayHardware/PowerHAL.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/DisplayHardware/PowerHAL.h	/^namespace android {$/;"	n
android	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^namespace android {$/;"	n
android	services/surfaceflinger/Effects/Daltonizer.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/Effects/Daltonizer.h	/^namespace android {$/;"	n
android	services/surfaceflinger/EventControlThread.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/EventControlThread.h	/^namespace android {$/;"	n
android	services/surfaceflinger/EventLog/EventLog.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/EventLog/EventLog.h	/^namespace android {$/;"	n
android	services/surfaceflinger/EventThread.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/EventThread.h	/^namespace android {$/;"	n
android	services/surfaceflinger/FrameRateHelper.h	/^namespace android {$/;"	n
android	services/surfaceflinger/FrameTracker.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/FrameTracker.h	/^namespace android {$/;"	n
android	services/surfaceflinger/Layer.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/Layer.h	/^namespace android {$/;"	n
android	services/surfaceflinger/LayerBlur.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/LayerBlur.h	/^namespace android {$/;"	n
android	services/surfaceflinger/LayerDim.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/LayerDim.h	/^namespace android {$/;"	n
android	services/surfaceflinger/MessageQueue.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/MessageQueue.h	/^namespace android {$/;"	n
android	services/surfaceflinger/MonitoredProducer.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/MonitoredProducer.h	/^namespace android {$/;"	n
android	services/surfaceflinger/RenderEngine/Description.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/RenderEngine/Description.h	/^namespace android {$/;"	n
android	services/surfaceflinger/RenderEngine/GLES10RenderEngine.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/RenderEngine/GLES10RenderEngine.h	/^namespace android {$/;"	n
android	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/RenderEngine/GLES11RenderEngine.h	/^namespace android {$/;"	n
android	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^namespace android {$/;"	n
android	services/surfaceflinger/RenderEngine/GLExtensions.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/RenderEngine/GLExtensions.h	/^namespace android {$/;"	n
android	services/surfaceflinger/RenderEngine/Mesh.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/RenderEngine/Mesh.h	/^namespace android {$/;"	n
android	services/surfaceflinger/RenderEngine/Program.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/RenderEngine/Program.h	/^namespace android {$/;"	n
android	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/RenderEngine/ProgramCache.h	/^namespace android {$/;"	n
android	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/RenderEngine/RenderEngine.h	/^namespace android {$/;"	n
android	services/surfaceflinger/RenderEngine/Texture.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/RenderEngine/Texture.h	/^namespace android {$/;"	n
android	services/surfaceflinger/SurfaceFlinger.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/SurfaceFlinger.h	/^namespace android {$/;"	n
android	services/surfaceflinger/SurfaceFlingerConsumer.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/SurfaceFlingerConsumer.h	/^namespace android {$/;"	n
android	services/surfaceflinger/Transform.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/Transform.h	/^namespace android {$/;"	n
android	services/surfaceflinger/clz.h	/^namespace android {$/;"	n
android	services/surfaceflinger/tests/Transaction_test.cpp	/^namespace android {$/;"	n	file:
android	services/surfaceflinger/tests/resize/resize.cpp	/^namespace android {$/;"	n	file:
android.opengl	opengl/tools/glgen/static/egl/EGLConfig.java	/^package android.opengl;$/;"	p
android.opengl	opengl/tools/glgen/static/egl/EGLContext.java	/^package android.opengl;$/;"	p
android.opengl	opengl/tools/glgen/static/egl/EGLDisplay.java	/^package android.opengl;$/;"	p
android.opengl	opengl/tools/glgen/static/egl/EGLObjectHandle.java	/^package android.opengl;$/;"	p
android.opengl	opengl/tools/glgen/static/egl/EGLSurface.java	/^package android.opengl;$/;"	p
android_app_dir	cmds/installd/commands.c	/^dir_rec_t android_app_dir;$/;"	v
android_app_lib_dir	cmds/installd/commands.c	/^dir_rec_t android_app_lib_dir;$/;"	v
android_app_private_dir	cmds/installd/commands.c	/^dir_rec_t android_app_private_dir;$/;"	v
android_asec_dir	cmds/installd/commands.c	/^dir_rec_t android_asec_dir;$/;"	v
android_createDisplaySurface	libs/ui/FramebufferNativeWindow.cpp	/^EGLNativeWindowType android_createDisplaySurface(void)$/;"	f
android_data_dir	cmds/installd/commands.c	/^dir_rec_t android_data_dir;$/;"	v
android_eglCreatePbufferFromClientBuffer	opengl/tools/glgen/stubs/egl/eglCreatePbufferFromClientBuffer.cpp	/^android_eglCreatePbufferFromClientBuffer$/;"	f	file:
android_eglCreatePbufferFromClientBufferInt	opengl/tools/glgen/stubs/egl/eglCreatePbufferFromClientBuffer.cpp	/^android_eglCreatePbufferFromClientBufferInt$/;"	f	file:
android_eglCreateWindowSurface	opengl/tools/glgen/stubs/egl/eglCreateWindowSurface.cpp	/^android_eglCreateWindowSurface$/;"	f	file:
android_eglCreateWindowSurfaceTexture	opengl/tools/glgen/stubs/egl/eglCreateWindowSurface.cpp	/^android_eglCreateWindowSurfaceTexture$/;"	f	file:
android_eglGetDisplay	opengl/tools/glgen/stubs/egl/eglGetDisplay.cpp	/^android_eglGetDisplay$/;"	f	file:
android_eglGetDisplayInt	opengl/tools/glgen/stubs/egl/eglGetDisplay.cpp	/^android_eglGetDisplayInt$/;"	f	file:
android_eglQueryString__Landroind_opengl_EGLDisplay_2I	opengl/tools/glgen/stubs/egl/eglQueryString.cpp	/^android_eglQueryString__Landroind_opengl_EGLDisplay_2I$/;"	f	file:
android_glBindVertexBuffer__IIJI	opengl/tools/glgen/stubs/gles11/glBindVertexBuffer.cpp	/^android_glBindVertexBuffer__IIJI$/;"	f	file:
android_glCreateShaderProgramv	opengl/tools/glgen/stubs/gles11/glCreateShaderProgramv.cpp	/^android_glCreateShaderProgramv$/;"	f	file:
android_glDebugMessageCallbackKHR	opengl/tools/glgen/stubs/gles11/glDebugMessageCallbackKHR.cpp	/^android_glDebugMessageCallbackKHR(JNIEnv *_env, jobject _this, jobject callback) {$/;"	f	file:
android_glDebugMessageInsertKHR__IIIILjava_lang_String_2	opengl/tools/glgen/stubs/gles11/glDebugMessageInsertKHR.cpp	/^android_glDebugMessageInsertKHR__IIIILjava_lang_String_2$/;"	f	file:
android_glDispatchComputeIndirect	opengl/tools/glgen/stubs/gles11/glDispatchComputeIndirect.cpp	/^static void android_glDispatchComputeIndirect(JNIEnv *_env, jobject, jlong indirect) {$/;"	f	file:
android_glDrawArraysIndirect	opengl/tools/glgen/stubs/gles11/glDrawArraysIndirect.cpp	/^static void android_glDrawArraysIndirect(JNIEnv *_env, jobject, int mode, jlong indirect) {$/;"	f	file:
android_glDrawElementsIndirect	opengl/tools/glgen/stubs/gles11/glDrawElementsIndirect.cpp	/^static void android_glDrawElementsIndirect(JNIEnv *_env, jobject, jint mode, jint type, jlong indirect) {$/;"	f	file:
android_glDrawElementsInstanced__IIIII	opengl/tools/glgen/stubs/gles11/glDrawElementsInstanced.cpp	/^android_glDrawElementsInstanced__IIIII$/;"	f	file:
android_glDrawElementsInstanced__IIILjava_nio_Buffer_2I	opengl/tools/glgen/stubs/gles11/glDrawElementsInstanced.cpp	/^android_glDrawElementsInstanced__IIILjava_nio_Buffer_2I$/;"	f	file:
android_glGetActiveAttrib1	opengl/tools/glgen/stubs/gles11/glGetActiveAttrib.cpp	/^android_glGetActiveAttrib1$/;"	f	file:
android_glGetActiveAttrib2	opengl/tools/glgen/stubs/gles11/glGetActiveAttrib.cpp	/^android_glGetActiveAttrib2$/;"	f	file:
android_glGetActiveAttrib__IIILjava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2B	opengl/tools/glgen/stubs/gles11/glGetActiveAttrib.cpp	/^android_glGetActiveAttrib__IIILjava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2B$/;"	f	file:
android_glGetActiveAttrib__III_3II_3II_3II_3BI	opengl/tools/glgen/stubs/gles11/glGetActiveAttrib.cpp	/^android_glGetActiveAttrib__III_3II_3II_3II_3BI$/;"	f	file:
android_glGetActiveUniform1	opengl/tools/glgen/stubs/gles11/glGetActiveUniform.cpp	/^android_glGetActiveUniform1$/;"	f	file:
android_glGetActiveUniform2	opengl/tools/glgen/stubs/gles11/glGetActiveUniform.cpp	/^android_glGetActiveUniform2$/;"	f	file:
android_glGetActiveUniformBlockName_II	opengl/tools/glgen/stubs/gles11/glGetActiveUniformBlockName.cpp	/^android_glGetActiveUniformBlockName_II$/;"	f	file:
android_glGetActiveUniformBlockName_III_3II_3BI	opengl/tools/glgen/stubs/gles11/glGetActiveUniformBlockName.cpp	/^android_glGetActiveUniformBlockName_III_3II_3BI$/;"	f	file:
android_glGetActiveUniformBlockName_IILjava_nio_Buffer_2Ljava_nio_Buffer_2	opengl/tools/glgen/stubs/gles11/glGetActiveUniformBlockName.cpp	/^android_glGetActiveUniformBlockName_IILjava_nio_Buffer_2Ljava_nio_Buffer_2$/;"	f	file:
android_glGetActiveUniform__IIILjava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2B	opengl/tools/glgen/stubs/gles11/glGetActiveUniform.cpp	/^android_glGetActiveUniform__IIILjava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2B$/;"	f	file:
android_glGetActiveUniform__III_3II_3II_3II_3BI	opengl/tools/glgen/stubs/gles11/glGetActiveUniform.cpp	/^android_glGetActiveUniform__III_3II_3II_3II_3BI$/;"	f	file:
android_glGetBooleanv__ILjava_nio_IntBuffer_2	opengl/tools/glgen/stubs/gles11/glGetBooleanv.cpp	/^android_glGetBooleanv__ILjava_nio_IntBuffer_2$/;"	f	file:
android_glGetBooleanv__I_3ZI	opengl/tools/glgen/stubs/gles11/glGetBooleanv.cpp	/^android_glGetBooleanv__I_3ZI$/;"	f	file:
android_glGetBufferPointerv__II	opengl/tools/glgen/stubs/gles11/glGetBufferPointerv.cpp	/^android_glGetBufferPointerv__II$/;"	f	file:
android_glGetDebugMessageCallbackKHR	opengl/tools/glgen/stubs/gles11/glGetPointervKHR.cpp	/^android_glGetDebugMessageCallbackKHR(JNIEnv *_env, jobject _this) {$/;"	f	file:
android_glGetDebugMessageLogKHR__II_3II_3II_3II_3II_3II_3BI	opengl/tools/glgen/stubs/gles11/glGetDebugMessageLogKHR.cpp	/^android_glGetDebugMessageLogKHR__II_3II_3II_3II_3II_3II_3BI$/;"	f	file:
android_glGetDebugMessageLogKHR__ILjava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2	opengl/tools/glgen/stubs/gles11/glGetDebugMessageLogKHR.cpp	/^android_glGetDebugMessageLogKHR__ILjava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2$/;"	f	file:
android_glGetDebugMessageLogKHR__ILjava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_ByteBuffer_2	opengl/tools/glgen/stubs/gles11/glGetDebugMessageLogKHR.cpp	/^android_glGetDebugMessageLogKHR__ILjava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_ByteBuffer_2$/;"	f	file:
android_glGetDebugMessageLogKHR__I_3II_3II_3II_3II	opengl/tools/glgen/stubs/gles11/glGetDebugMessageLogKHR.cpp	/^android_glGetDebugMessageLogKHR__I_3II_3II_3II_3II$/;"	f	file:
android_glGetFloatv__ILjava_nio_FloatBuffer_2	opengl/tools/glgen/stubs/gles11/glGetFloatv.cpp	/^android_glGetFloatv__ILjava_nio_FloatBuffer_2$/;"	f	file:
android_glGetFloatv__I_3FI	opengl/tools/glgen/stubs/gles11/glGetFloatv.cpp	/^android_glGetFloatv__I_3FI$/;"	f	file:
android_glGetIntegerv__ILjava_nio_IntBuffer_2	opengl/tools/glgen/stubs/gles11/glGetIntegerv.cpp	/^android_glGetIntegerv__ILjava_nio_IntBuffer_2$/;"	f	file:
android_glGetIntegerv__I_3II	opengl/tools/glgen/stubs/gles11/glGetIntegerv.cpp	/^android_glGetIntegerv__I_3II$/;"	f	file:
android_glGetObjectLabelKHR	opengl/tools/glgen/stubs/gles11/glGetObjectLabelKHR.cpp	/^android_glGetObjectLabelKHR(JNIEnv *_env, jobject _this, jint identifier, jint name) {$/;"	f	file:
android_glGetObjectPtrLabelKHR	opengl/tools/glgen/stubs/gles11/glGetObjectPtrLabelKHR.cpp	/^android_glGetObjectPtrLabelKHR(JNIEnv *_env, jobject _this, jlong ptr) {$/;"	f	file:
android_glGetProgramInfoLog	opengl/tools/glgen/stubs/gles11/glGetProgramInfoLog.cpp	/^static jstring android_glGetProgramInfoLog(JNIEnv *_env, jobject, jint shader) {$/;"	f	file:
android_glGetProgramPipelineInfoLog	opengl/tools/glgen/stubs/gles11/glGetProgramPipelineInfoLog.cpp	/^static jstring android_glGetProgramPipelineInfoLog(JNIEnv *_env, jobject, jint shader) {$/;"	f	file:
android_glGetProgramResourceName	opengl/tools/glgen/stubs/gles11/glGetProgramResourceName.cpp	/^android_glGetProgramResourceName$/;"	f	file:
android_glGetShaderInfoLog	opengl/tools/glgen/stubs/gles11/glGetShaderInfoLog.cpp	/^static jstring android_glGetShaderInfoLog(JNIEnv *_env, jobject, jint shader) {$/;"	f	file:
android_glGetShaderSource	opengl/tools/glgen/stubs/gles11/glGetShaderSource.cpp	/^static jstring android_glGetShaderSource(JNIEnv *_env, jobject, jint shader) {$/;"	f	file:
android_glGetShaderSource__IILjava_nio_IntBuffer_2B	opengl/tools/glgen/stubs/gles11/glGetShaderSource.cpp	/^android_glGetShaderSource__IILjava_nio_IntBuffer_2B$/;"	f	file:
android_glGetShaderSource__II_3II_3BI	opengl/tools/glgen/stubs/gles11/glGetShaderSource.cpp	/^android_glGetShaderSource__II_3II_3BI$/;"	f	file:
android_glGetString	opengl/tools/glgen/stubs/gles11/glGetString.cpp	/^static jstring android_glGetString(JNIEnv* _env, jobject, jint name) {$/;"	f	file:
android_glGetString	opengl/tools/glgen/stubs/jsr239/glGetString.cpp	/^static jstring android_glGetString(JNIEnv *_env, jobject, jint name) {$/;"	f	file:
android_glGetStringi__II	opengl/tools/glgen/stubs/gles11/glGetStringi.cpp	/^android_glGetStringi__II$/;"	f	file:
android_glGetTransformFeedbackVarying1	opengl/tools/glgen/stubs/gles11/glGetTransformFeedbackVarying.cpp	/^android_glGetTransformFeedbackVarying1$/;"	f	file:
android_glGetTransformFeedbackVarying2	opengl/tools/glgen/stubs/gles11/glGetTransformFeedbackVarying.cpp	/^android_glGetTransformFeedbackVarying2$/;"	f	file:
android_glGetTransformFeedbackVarying__IIILjava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2B	opengl/tools/glgen/stubs/gles11/glGetTransformFeedbackVarying.cpp	/^android_glGetTransformFeedbackVarying__IIILjava_nio_IntBuffer_2Ljava_nio_IntBuffer_2Ljava_nio_IntBuffer_2B$/;"	f	file:
android_glGetTransformFeedbackVarying__III_3II_3II_3II_3BI	opengl/tools/glgen/stubs/gles11/glGetTransformFeedbackVarying.cpp	/^android_glGetTransformFeedbackVarying__III_3II_3II_3II_3BI$/;"	f	file:
android_glGetUniformIndices_array	opengl/tools/glgen/stubs/gles11/glGetUniformIndices.cpp	/^android_glGetUniformIndices_array$/;"	f	file:
android_glGetUniformIndices_buffer	opengl/tools/glgen/stubs/gles11/glGetUniformIndices.cpp	/^android_glGetUniformIndices_buffer$/;"	f	file:
android_glMapBufferRange__IIII	opengl/tools/glgen/stubs/gles11/glMapBufferRange.cpp	/^android_glMapBufferRange__IIII$/;"	f	file:
android_glObjectPtrLabelKHR	opengl/tools/glgen/stubs/gles11/glObjectPtrLabelKHR.cpp	/^android_glObjectPtrLabelKHR(JNIEnv *_env, jobject _this, jlong ptr, jstring label) {$/;"	f	file:
android_glShaderSource	opengl/tools/glgen/stubs/gles11/glShaderSource.cpp	/^android_glShaderSource$/;"	f	file:
android_glTransformFeedbackVaryings	opengl/tools/glgen/stubs/gles11/glTransformFeedbackVaryings.cpp	/^android_glTransformFeedbackVaryings$/;"	f	file:
android_media_dir	cmds/installd/commands.c	/^dir_rec_t android_media_dir;$/;"	v
android_system_dirs	cmds/installd/commands.c	/^dir_rec_array_t android_system_dirs;$/;"	v
apiGen	opengl/tools/glgen2/registry/reg.py	/^    def apiGen(self, genOpts):$/;"	m	class:Registry
apiReset	opengl/tools/glgen2/registry/reg.py	/^    def apiReset(self):$/;"	m	class:Registry
apigen	opengl/tools/glgen2/glgen.py	/^    apigen = ApiGenerator()$/;"	v	class:SpecGenerator
apis	opengl/libs/GLES_trace/tools/genapi.py	/^    apis = parseAllSpecs(API_SPECS)    # read in all the specfiles$/;"	v
apis	opengl/libs/GLES_trace/tools/genapi.py	/^    apis = removeDuplicates(apis)      # remove duplication of functions common to multiple versions$/;"	v
appDeinit	opengl/tests/angeles/demo.c	/^void appDeinit()$/;"	f
appInit	opengl/tests/angeles/demo.c	/^void appInit()$/;"	f
appRender	opengl/tests/angeles/demo.c	/^void appRender(long tick, int width, int height)$/;"	f
appVsyncOffset	include/ui/DisplayInfo.h	/^    nsecs_t appVsyncOffset;$/;"	m	struct:android::DisplayInfo
append	libs/binder/BufferedTextOutput.cpp	/^    status_t append(const char* txt, size_t len) {$/;"	f	struct:android::BufferedTextOutput::BufferState
append	opengl/libs/EGL/trace.cpp	/^    void append(const char* fmt, ...) {$/;"	f	class:android::StringBuilder
appendDescription	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::ConfigurationChangedEntry::appendDescription(String8& msg) const {$/;"	f	class:android::InputDispatcher::ConfigurationChangedEntry
appendDescription	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::DeviceResetEntry::appendDescription(String8& msg) const {$/;"	f	class:android::InputDispatcher::DeviceResetEntry
appendDescription	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::KeyEntry::appendDescription(String8& msg) const {$/;"	f	class:android::InputDispatcher::KeyEntry
appendDescription	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::MotionEntry::appendDescription(String8& msg) const {$/;"	f	class:android::InputDispatcher::MotionEntry
appendFrom	libs/binder/Parcel.cpp	/^status_t Parcel::appendFrom(const Parcel *parcel, size_t offset, size_t len)$/;"	f	class:android::Parcel
appendGuiConfigString	libs/gui/GuiConfig.cpp	/^void appendGuiConfigString(String8& configStr)$/;"	f	namespace:android
appendInputDeviceConfigurationFileRelativePath	libs/input/InputDevice.cpp	/^static void appendInputDeviceConfigurationFileRelativePath(String8& path,$/;"	f	namespace:android
appendSfConfigString	services/surfaceflinger/SurfaceFlinger.cpp	/^\/*static*\/ void SurfaceFlinger::appendSfConfigString(String8& result)$/;"	f	class:android::SurfaceFlinger
appendStr	cmds/atrace/atrace.cpp	/^static bool appendStr(const char* filename, const char* str)$/;"	f	file:
appendUiConfigString	libs/ui/UiConfig.cpp	/^void appendUiConfigString(String8& configStr)$/;"	f	namespace:android
append_and_increment	cmds/installd/utils.c	/^int append_and_increment(char** dst, const char* src, size_t* dst_size) {$/;"	f
appendcharornum	libs/binder/Debug.cpp	/^static char* appendcharornum(char c, char* out, bool skipzero = true)$/;"	f	namespace:android
appendhexnum	libs/binder/Debug.cpp	/^static char* appendhexnum(uint32_t val, char* out)$/;"	f	namespace:android
applyOffset	libs/input/Input.cpp	/^void PointerCoords::applyOffset(float xOffset, float yOffset) {$/;"	f	class:android::PointerCoords
applySizeScaleAndBias	services/inputflinger/InputReader.h	/^        inline void applySizeScaleAndBias(float* outSize) const {$/;"	f	struct:android::TouchInputMapper::Calibration
applyTo	services/inputflinger/InputReader.cpp	/^void TouchAffineTransformation::applyTo(float& x, float& y) const {$/;"	f	class:android::TouchAffineTransformation
areVisibleRegionsOverlapping	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::areVisibleRegionsOverlapping(int32_t id ) {$/;"	f	class:android::HWComposer
area	opengl/libagl/context.h	/^    GGLcoord area() const { return m_area; }$/;"	f	struct:android::gl::compute_iterators_t
arg	opengl/tools/glgen2/registry/genheaders.py	/^        arg = sys.argv[i]$/;"	v
argCIndices	opengl/tools/glgen/src/JFunc.java	/^    List<Integer> argCIndices = new ArrayList<Integer>();$/;"	f	class:JFunc
argNames	opengl/tools/glgen/src/CFunc.java	/^    List<String> argNames = new ArrayList<String>();$/;"	f	class:CFunc
argNames	opengl/tools/glgen/src/JFunc.java	/^    List<String> argNames = new ArrayList<String>();$/;"	f	class:JFunc
argTypes	opengl/tools/glgen/src/CFunc.java	/^    List<CType> argTypes = new ArrayList<CType>();$/;"	f	class:CFunc
argTypes	opengl/tools/glgen/src/JFunc.java	/^    List<JType> argTypes = new ArrayList<JType>();$/;"	f	class:JFunc
args	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage::args() const {$/;"	f	class:android::gltrace::GLMessage
args	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline const ::android::gltrace::GLMessage_DataType& GLMessage::args(int index) const {$/;"	f	class:android::gltrace::GLMessage
args_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::android::gltrace::GLMessage_DataType > args_;$/;"	m	class:android::gltrace::GLMessage
args_size	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline int GLMessage::args_size() const {$/;"	f	class:android::gltrace::GLMessage
array	opengl/libagl/egl.cpp	/^    const config_pair_t* array;$/;"	m	struct:android::configs_t	file:
arrayTypeMapping	opengl/tools/glgen/src/JType.java	/^    static HashMap<CType,JType> arrayTypeMapping = new HashMap<CType,JType>();$/;"	f	class:JType
array_buffer	opengl/libagl/context.h	/^    buffer_t const* array_buffer;$/;"	m	struct:android::gl::array_machine_t
array_machine_t	opengl/libagl/context.h	/^struct array_machine_t {$/;"	s	namespace:android::gl
array_t	opengl/libagl/context.h	/^struct array_t {$/;"	s	namespace:android::gl
arrays	opengl/libagl/context.h	/^    array_machine_t         arrays         __attribute__((aligned(32)));$/;"	m	struct:android::gl::ogles_context_t
arrays_prims_fct_t	opengl/libagl/array.cpp	/^typedef void (*arrays_prims_fct_t)(ogles_context_t*, GLint, GLsizei);$/;"	t	namespace:android	file:
asArray	include/ui/mat4.h	/^    T const* asArray() const { return &mValue[0][0]; }$/;"	f	class:android::tmat44
asBinder	libs/binder/IInterface.cpp	/^sp<IBinder> IInterface::asBinder()$/;"	f	class:android::IInterface
asBinder	libs/binder/IInterface.cpp	/^sp<const IBinder> IInterface::asBinder() const$/;"	f	class:android::IInterface
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString($/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_AUDIO_AACSTREAMFORMATTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_AUDIO_AMRBANDMODETYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_AUDIO_AMRDTXMODETYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_AUDIO_AMRFRAMEFORMATTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_AUDIO_CHANNELMODETYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_AUDIO_CHANNELTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_AUDIO_CODINGEXTTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_AUDIO_CODINGTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_AUDIO_PCMMODETYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_BOOL i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_COLOR_FORMATTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_COMMANDTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_DIRTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_ENDIANTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_ERRORTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_EVENTTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_IMAGE_CODINGTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_INDEXEXTTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_INDEXTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_NUMERICALDATATYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_PORTDOMAINTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_STATETYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_AVCLEVELTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_AVCLOOPFILTERTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_AVCPROFILETYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_CODINGTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_CONTROLRATETYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_H263LEVELTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_H263PROFILETYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_HEVCLEVELTYPE i, const char *def = "!!") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_HEVCPROFILETYPE i, const char *def = "!!") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_INTRAREFRESHTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_MPEG4LEVELTYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_MPEG4PROFILETYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_PICTURETYPE i, const char *def = "??") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_VP8LEVELTYPE i, const char *def = "!!") {$/;"	f
asString	include/media/openmax/OMX_AsString.h	/^inline static const char *asString(OMX_VIDEO_VP8PROFILETYPE i, const char *def = "!!") {$/;"	f
asString	include/ui/TMatHelpers.h	/^    String8 asString() const {$/;"	f	class:android::TMatDebug
asString	include/ui/TMatHelpers.h	/^String8 asString(const MATRIX& m) {$/;"	f	namespace:android::matrix
assertConfigureWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertConfigureWasCalled() {$/;"	f	class:android::FakeInputMapper
assertEqualsEventWithHistory	libs/input/tests/InputEvent_test.cpp	/^void MotionEventTest::assertEqualsEventWithHistory(const MotionEvent* event) {$/;"	f	class:android::MotionEventTest
assertMapped	libs/binder/IMemory.cpp	/^void BpMemoryHeap::assertMapped() const$/;"	f	class:android::BpMemoryHeap
assertMotionRange	services/inputflinger/tests/InputReader_test.cpp	/^    static void assertMotionRange(const InputDeviceInfo& info,$/;"	f	class:android::InputMapperTest
assertNotifyConfigurationChangedWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertNotifyConfigurationChangedWasCalled($/;"	f	class:android::FakeInputListener
assertNotifyDeviceResetWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertNotifyDeviceResetWasCalled($/;"	f	class:android::FakeInputListener
assertNotifyKeyWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertNotifyKeyWasCalled(NotifyKeyArgs* outEventArgs = NULL) {$/;"	f	class:android::FakeInputListener
assertNotifyKeyWasNotCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertNotifyKeyWasNotCalled() {$/;"	f	class:android::FakeInputListener
assertNotifyMotionWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertNotifyMotionWasCalled(NotifyMotionArgs* outEventArgs = NULL) {$/;"	f	class:android::FakeInputListener
assertNotifyMotionWasNotCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertNotifyMotionWasNotCalled() {$/;"	f	class:android::FakeInputListener
assertNotifySwitchWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertNotifySwitchWasCalled(NotifySwitchArgs* outEventArgs = NULL) {$/;"	f	class:android::FakeInputListener
assertPointerCoords	services/inputflinger/tests/InputReader_test.cpp	/^    static void assertPointerCoords(const PointerCoords& coords,$/;"	f	class:android::InputMapperTest
assertPosition	services/inputflinger/tests/InputReader_test.cpp	/^    static void assertPosition(const sp<FakePointerController>& controller, float x, float y) {$/;"	f	class:android::InputMapperTest
assertProcessWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertProcessWasCalled(RawEvent* outLastEvent = NULL) {$/;"	f	class:android::FakeInputMapper
assertQueueIsEmpty	services/inputflinger/tests/InputReader_test.cpp	/^    void assertQueueIsEmpty() {$/;"	f	class:android::FakeEventHub
assertReallyMapped	libs/binder/IMemory.cpp	/^void BpMemoryHeap::assertReallyMapped() const$/;"	f	class:android::BpMemoryHeap
assertRectEq	libs/gui/tests/GLTest.cpp	/^::testing::AssertionResult GLTest::assertRectEq(const Rect &r1, const Rect &r2,$/;"	f	class:android::GLTest
assertResetWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertResetWasCalled() {$/;"	f	class:android::FakeInputMapper
assertStateLocked	libs/gui/SensorManager.cpp	/^status_t SensorManager::assertStateLocked() const {$/;"	f	class:android::SensorManager
assertUpdateGlobalMetaStateWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    void assertUpdateGlobalMetaStateWasCalled() {$/;"	f	class:android::FakeInputReaderContext
assetManager	include/android/native_activity.h	/^    AAssetManager* assetManager;$/;"	m	struct:ANativeActivity
assignDescriptorLocked	services/inputflinger/EventHub.cpp	/^void EventHub::assignDescriptorLocked(InputDeviceIdentifier& identifier) {$/;"	f	class:android::EventHub
assignPointerIds	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::assignPointerIds() {$/;"	f	class:android::TouchInputMapper
associatedDisplayIsExternal	services/inputflinger/InputReader.h	/^        bool associatedDisplayIsExternal;$/;"	m	struct:android::TouchInputMapper::Parameters
async	include/gui/IGraphicBufferProducer.h	/^        int async;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferInput
async	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        int async;$/;"	m	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder	file:
atFront	libs/binder/BufferedTextOutput.cpp	/^    bool atFront;$/;"	m	struct:android::BufferedTextOutput::BufferState	file:
atLeast	opengl/libagl/egl.cpp	/^    static bool atLeast(GLint reqValue, GLint confValue) {$/;"	f	struct:android::config_management_t
attach	libs/binder/BpBinder.cpp	/^void BpBinder::ObjectManager::attach($/;"	f	class:android::BpBinder::ObjectManager
attachBuffer	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::attachBuffer(int* outSlot,$/;"	f	class:android::BufferQueueConsumer
attachBuffer	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::attachBuffer(int* outSlot,$/;"	f	class:android::BufferQueueProducer
attachBuffer	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t attachBuffer(int* slot, const sp<GraphicBuffer>& buffer) {$/;"	f	class:android::BpGraphicBufferConsumer
attachBuffer	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t attachBuffer(int* slot, const sp<GraphicBuffer>& buffer) {$/;"	f	class:android::BpGraphicBufferProducer
attachBuffer	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::attachBuffer(int* \/* outSlot *\/,$/;"	f	class:android::VirtualDisplaySurface
attachBuffer	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::attachBuffer(int* outSlot,$/;"	f	class:android::MonitoredProducer
attachLayer	services/surfaceflinger/Client.cpp	/^void Client::attachLayer(const sp<IBinder>& handle, const sp<Layer>& layer)$/;"	f	class:android::Client
attachObject	libs/binder/Binder.cpp	/^void BBinder::attachObject($/;"	f	class:android::BBinder
attachObject	libs/binder/BpBinder.cpp	/^void BpBinder::attachObject($/;"	f	class:android::BpBinder
attachToContext	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::attachToContext(uint32_t tex) {$/;"	f	class:android::GLConsumer
attemptIncStrongHandle	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::attemptIncStrongHandle(int32_t handle)$/;"	f	class:android::IPCThreadState
attenuation	opengl/libagl/context.h	/^    GLfixed     attenuation[3];$/;"	m	struct:android::gl::light_t
attribute	opengl/tests/configdump/configdump.cpp	/^    EGLint attribute;$/;"	m	struct:Attribute	file:
attribute	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^        EGLint attribute;$/;"	m	class:android::EGLAttributeVector::Adder	file:
attributes	opengl/tests/configdump/configdump.cpp	/^Attribute attributes[] = {$/;"	v
audio	include/media/openmax/OMX_Component.h	/^        OMX_AUDIO_PORTDEFINITIONTYPE audio;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon129
audit_callback	cmds/servicemanager/service_manager.c	/^static int audit_callback(void *data, security_class_t cls, char *buf, size_t len)$/;"	f	file:
authenticateSurfaceTexture	libs/gui/ISurfaceComposer.cpp	/^    virtual bool authenticateSurfaceTexture($/;"	f	class:android::BpSurfaceComposer
authenticateSurfaceTexture	services/surfaceflinger/SurfaceFlinger.cpp	/^bool SurfaceFlinger::authenticateSurfaceTexture($/;"	f	class:android::SurfaceFlinger
autoDisable	services/sensorservice/SensorDevice.cpp	/^void SensorDevice::autoDisable(void *ident, int handle) {$/;"	f	class:android::SensorDevice
autoDisable	services/sensorservice/SensorInterface.cpp	/^void HardwareSensor::autoDisable(void *ident, int handle) {$/;"	f	class:android::HardwareSensor
autoDisable	services/sensorservice/SensorInterface.h	/^    virtual void autoDisable(void* \/*ident*\/, int \/*handle*\/) { }$/;"	f	class:android::SensorInterface
avail	services/inputflinger/InputReader.h	/^        bool avail; \/\/ led is available$/;"	m	struct:android::KeyboardInputMapper::LedState
availDirs	cmds/installd/installd.h	/^    size_t availDirs;$/;"	m	struct:__anon12
availFiles	cmds/installd/installd.h	/^    size_t availFiles;$/;"	m	struct:__anon12
avg	services/inputflinger/InputReader.cpp	/^inline static float avg(float x, float y) {$/;"	f	namespace:android
avg	services/inputflinger/tests/InputReader_test.cpp	/^static inline float avg(float x, float y) {$/;"	f	namespace:android
avg23	opengl/libagl/dxt.cpp	49;"	d	file:
avg23tab	opengl/libagl/dxt.cpp	/^static uint8_t avg23tab[64*64];$/;"	m	namespace:android	file:
axis	include/input/InputDevice.h	/^        int32_t axis;$/;"	m	struct:android::InputDeviceInfo::MotionRange
axis	include/input/KeyLayoutMap.h	/^    int32_t axis;$/;"	m	struct:android::AxisInfo
axisInfo	services/inputflinger/InputReader.h	/^        AxisInfo axisInfo;$/;"	m	struct:android::JoystickInputMapper::Axis
azimuth	include/android/sensor.h	/^            float azimuth;$/;"	m	struct:ASensorVector::__anon180::__anon182
b	include/ui/vec3.h	/^        struct { T r, g, b; };$/;"	m	struct:android::tvec3::__anon89::__anon92
b	include/ui/vec4.h	/^        struct { T r, g, b, a; };$/;"	m	struct:android::tvec4::__anon96::__anon99
b	opengl/libagl/context.h	/^        struct { GLfixed r, g, b, a; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon218
b	opengl/libagl/context.h	/^        struct { GLfixed r, g, b; };$/;"	m	struct:android::gl::vec3_t::__anon212::__anon214
b	opengl/tests/hwc/hwcTestLib.h	/^    float b(void) const { return _b; }$/;"	f	class:ColorRGB
b16x16	include/media/openmax/OMX_Video.h	/^    OMX_BOOL b16x16;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b16x8	include/media/openmax/OMX_Video.h	/^    OMX_BOOL b16x8;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b4x4	include/media/openmax/OMX_Video.h	/^    OMX_BOOL b4x4;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b4x8	include/media/openmax/OMX_Video.h	/^    OMX_BOOL b4x8;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b8x16	include/media/openmax/OMX_Video.h	/^    OMX_BOOL b8x16;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b8x4	include/media/openmax/OMX_Video.h	/^    OMX_BOOL b8x4;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
b8x8	include/media/openmax/OMX_Video.h	/^    OMX_BOOL b8x8;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
bACPred	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bACPred;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
bAllKeys	include/media/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;  \/* if true then this structure refers to all keys and$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
bAllKeys	include/media/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
bAllKeys	include/media/openmax/OMX_Component.h	/^    OMX_BOOL bAllKeys;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
bAlternateFrameRefresh	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bAlternateFrameRefresh;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMETYPE
bAutoAperture	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoAperture;       \/**< Whether aperture number is defined automatically *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
bAutoSensitivity	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoSensitivity;    \/**< Whether sensitivity is defined automatically *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
bAutoShutterSpeed	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bAutoShutterSpeed;   \/**< Whether shutter speed is defined automatically *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
bBottom	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottom;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bBottomLeft	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bBottomLeftStatus	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bBottomRight	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bBottomRightStatus	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bBottomStatus	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bBottomStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bBuffersContiguous	include/media/openmax/OMX_Component.h	/^    OMX_BOOL bBuffersContiguous;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
bCenter	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bCenter;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bCenterStatus	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bCenterStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bColorEnhancement	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bColorEnhancement;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
bContinuous	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bContinuous;   \/**< If true then ignore frame rate and emit capture$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
bDTX	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
bDTX	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
bDTX	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
bDTX	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
bDTX	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
bDTX	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;                \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
bDTX	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
bDTX	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE
bDTX	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE
bDTX	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDTX;            \/**< Enable Discontinuous Transmisssion *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE
bDeblocking	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bDeblocking;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE
bDepedentSegments	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bDepedentSegments;$/;"	m	struct:OMX_VIDEO_SLICESEGMENTSTYPE
bDirect8x8Inference	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bDirect8x8Inference;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bDirectSpatialTemporal	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bDirectSpatialTemporal;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bDownmix	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bDownmix;        \/**< Downmix input from stereo to mono (has no effect on$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
bEnable	include/media/hardware/HardwareAPI.h	/^    OMX_BOOL bEnable;$/;"	m	struct:android::PrepareForAdaptivePlaybackParams
bEnable	include/media/hardware/HardwareAPI.h	/^    OMX_BOOL bEnable;$/;"	m	struct:android::PrependSPSPPSToIDRFramesParams
bEnable	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;             \/**< Enable\/disable for reverberation control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
bEnable	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for bass control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE
bEnable	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for chorus *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
bEnable	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for equalizer *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
bEnable	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for stereo widening control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
bEnable	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bEnable;          \/**< Enable\/disable for treble control *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE
bEnable	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bEnable;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE
bEnableASO	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableASO;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bEnableBitrate	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bEnableBitrate;   \/**< Use bitrate value instead of bitpool *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
bEnableDataPartitioning	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableDataPartitioning;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
bEnableFMO	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableFMO;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bEnableHEC	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableHEC;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
bEnableLatencyMode	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableLatencyMode;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
bEnableLoopFilterAcrossSlices	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bEnableLoopFilterAcrossSlices;$/;"	m	struct:OMX_VIDEO_SLICESEGMENTSTYPE
bEnablePM	include/media/openmax/OMX_Other.h	/^    OMX_BOOL bEnablePM;       \/**< Flag to enable Power Management *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE
bEnablePostFilter	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnablePostFilter;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
bEnableRS	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableRS;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bEnableRVLC	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableRVLC;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
bEnableResync	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableResync;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
bEnableTemporalInterpolation	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableTemporalInterpolation;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
bEnableUEP	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableUEP;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bEnableVFU	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnableVFU;$/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
bEnabled	include/media/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;             \/**< Ports default to enabled and are enabled\/disabled by$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
bEnabled	include/media/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;  \/* if true then key is part of filter (e.g.$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
bEnabled	include/media/openmax/OMX_Component.h	/^    OMX_BOOL bEnabled;$/;"	m	struct:OMX_CONFIG_BOOLEANTYPE
bEnabled	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEnabled;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE
bEntropyCodingCABAC	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bEntropyCodingCABAC;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bErrorResilientMode	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bErrorResilientMode;$/;"	m	struct:OMX_VIDEO_PARAM_VP8TYPE
bFlagErrorConcealment	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bFlagErrorConcealment;  \/**< Turns on error concealment if it is$/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE
bFlagErrorConcealment	include/media/openmax/OMX_Image.h	/^    OMX_BOOL bFlagErrorConcealment;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
bFlagErrorConcealment	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bFlagErrorConcealment;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
bForceRoundingTypeToZero	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bForceRoundingTypeToZero;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
bFourMV	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bFourMV;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
bFrameLimited	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bFrameLimited; \/**< If true then terminate capture after the port emits the$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
bFrameMBsOnly	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bFrameMBsOnly;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bGoldenFrameRefresh	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bGoldenFrameRefresh;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMETYPE
bGov	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bGov;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable encoder's High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;       \/**< Enable encoder's High Pass Filter ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE
bHiPassFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bHiPassFilter;   \/**< Enable High Pass Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE
bInterleaved	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bInterleaved;            \/**< True for normal interleaved data; false for$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
bIsGoldenOrAlternateFrame	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bIsGoldenOrAlternateFrame;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE
bIsIntraFrame	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bIsIntraFrame;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE
bIsLeafType	include/media/openmax/OMX_Component.h	/^    OMX_BOOL bIsLeafType;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
bIsMIDI	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bIsMIDI;           \/**< TRUE if nChannel refers to a MIDI channel,$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
bIsMIDI	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bIsMIDI;           \/**< TRUE if nChannel refers to a MIDI channel,$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
bLeft	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bLeftStatus	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bLinear	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bLinear;           \/**< Is the volume to be set in linear (0.100) or$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
bLinear	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bLinear;           \/**< Is the volume to be set in linear (0.100)$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE
bLoadDefaultSound	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bLoadDefaultSound;    \/**< Whether to load default sound$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
bLoudness	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bLoudness;        \/**< Enable\/disable for loudness *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
bMBAFF	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bMBAFF;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bManaged	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bManaged;        \/**< Set  bitrate  management  mode. This turns off the$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
bMute	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bMute;             \/**< Mute setting for this channel *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
bMute	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bMute;             \/**< Mute setting for this port *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE
bNoiseReduction	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseReduction;  \/**< Enable\/disable for noise reduction *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
bNoiseSuppressor	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseSuppressor;    \/**< Enable encoder's noise suppressor pre-processing *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
bNoiseSuppressor	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bNoiseSuppressor;    \/**< Enable encoder's noise suppressor pre-processing *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
bOneShot	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bOneShot;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
bPLUSPTYPEAllowed	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bPLUSPTYPEAllowed;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
bPopulated	include/media/openmax/OMX_Component.h	/^    OMX_BOOL bPopulated;           \/**< Port is populated with all of its buffers as indicated by$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
bPostFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable Post Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
bPostFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable decoder's post Filter *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
bPostFilter	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bPostFilter;         \/**< Enable decoder's post Filter ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
bPreviousFrameRefresh	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bPreviousFrameRefresh;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMETYPE
bRATE_REDUCon	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bRATE_REDUCon;           \/**< RATE_REDUCtion is requested for this frame *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
bRATE_REDUCon	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bRATE_REDUCon;       \/**< RATE_REDUCtion is requested for this frame *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
bResourceConcealmentForbidden	include/media/openmax/OMX_Component.h	/^    OMX_BOOL bResourceConcealmentForbidden; \/**< disallow the use of resource concealment$/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE
bReversibleVLC	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bReversibleVLC;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
bRight	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bRightStatus	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bSVH	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bSVH;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
bStab	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bStab;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE
bStoreMetaData	include/media/hardware/HardwareAPI.h	/^    OMX_BOOL bStoreMetaData;$/;"	m	struct:android::StoreMetaDataInBuffersParams
bTop	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTop;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bTopLeft	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopLeft;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bTopLeftStatus	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopLeftStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bTopRight	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopRight;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
bTopRightStatus	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopRightStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bTopStatus	include/media/openmax/OMX_IVCommon.h	/^    OMX_BOOL bTopStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
bTunneled	include/media/hardware/HardwareAPI.h	/^    OMX_BOOL bTunneled;         \/\/ IN\/OUT$/;"	m	struct:android::ConfigureVideoTunnelModeParams
bUnrestrictedMVs	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bUnrestrictedMVs;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
bUseAlternateFrame	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bUseAlternateFrame;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMETYPE
bUseGoldenFrame	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bUseGoldenFrame;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMETYPE
bUseHadamard	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bUseHadamard;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
bUsePreviousFrame	include/media/openmax/OMX_VideoExt.h	/^    OMX_BOOL bUsePreviousFrame;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMETYPE
bUsingNativeBuffers	include/media/hardware/HardwareAPI.h	/^    OMX_BOOL bUsingNativeBuffers;$/;"	m	struct:android::DescribeColorFormatParams
bVibra	include/media/openmax/OMX_Audio.h	/^    OMX_BOOL bVibra;            \/**< Does Vibra track exist? NOTE: May not return a meaningful$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
bWeightedPPrediction	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bWeightedPPrediction;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
background	opengl/tests/gl_jni/jni/gl_code.cpp	/^GLfloat background;$/;"	v
backupFilePath	cmds/rawbu/backup.cpp	/^static char *backupFilePath = NULL;$/;"	m	namespace:android	file:
backup_data	cmds/rawbu/backup.cpp	/^static int backup_data(const char* destPath)$/;"	f	namespace:android
backup_dir	cmds/rawbu/backup.cpp	/^static int backup_dir(FILE* fh, const char* srcPath)$/;"	f	namespace:android
barrier	services/surfaceflinger/MessageQueue.h	/^    mutable Barrier barrier;$/;"	m	class:android::MessageBase
barrier	services/surfaceflinger/SurfaceFlinger.cpp	/^    Barrier barrier;$/;"	m	class:android::GraphicProducerWrapper	file:
base	include/binder/IMemory.h	/^    void*   base() const  { return getBase(); }$/;"	f	class:android::IMemoryHeap
base	opengl/libagl/context.h	/^    void*           base;$/;"	m	struct:android::gl::vertex_cache_t
base	services/sensorservice/mat.h	/^    typedef vec< vec<TYPE, R>, C > base;$/;"	t	class:android::mat
base	services/sensorservice/mat.h	/^    typedef vec<TYPE, R> base;$/;"	t	class:android::mat
base	services/sensorservice/vec.h	/^    typedef vbase<TYPE, SIZE> base;$/;"	t	class:android::vec
baseType	opengl/tools/glgen/src/CType.java	/^    String baseType;$/;"	f	class:CType
baseType	opengl/tools/glgen/src/JType.java	/^    String baseType;$/;"	f	class:JType
batch	services/sensorservice/SensorDevice.cpp	/^status_t SensorDevice::batch(void* ident, int handle, int flags, int64_t samplingPeriodNs,$/;"	f	class:android::SensorDevice
batch	services/sensorservice/SensorInterface.cpp	/^status_t HardwareSensor::batch(void* ident, int \/*handle*\/, int flags,$/;"	f	class:android::HardwareSensor
batch	services/sensorservice/SensorInterface.h	/^    virtual status_t batch(void* ident, int handle, int \/*flags*\/, int64_t samplingPeriodNs,$/;"	f	class:android::SensorInterface
batchDelay	services/sensorservice/SensorDevice.h	/^      nsecs_t batchDelay, batchTimeout;$/;"	m	struct:android::SensorDevice::BatchParams
batchParams	services/sensorservice/SensorDevice.h	/^        KeyedVector<void*, BatchParams> batchParams;$/;"	m	struct:android::SensorDevice::Info
batchTimeout	services/sensorservice/SensorDevice.h	/^      nsecs_t batchDelay, batchTimeout;$/;"	m	struct:android::SensorDevice::BatchParams
batteryHealth	include/batteryservice/BatteryService.h	/^    int batteryHealth;$/;"	m	struct:android::BatteryProperties
batteryLevel	include/batteryservice/BatteryService.h	/^    int batteryLevel;$/;"	m	struct:android::BatteryProperties
batteryPresent	include/batteryservice/BatteryService.h	/^    bool batteryPresent;$/;"	m	struct:android::BatteryProperties
batteryPropertiesChanged	services/batteryservice/IBatteryPropertiesListener.cpp	/^    void batteryPropertiesChanged(struct BatteryProperties props)$/;"	f	class:android::BpBatteryPropertiesListener
batteryStatus	include/batteryservice/BatteryService.h	/^    int batteryStatus;$/;"	m	struct:android::BatteryProperties
batteryTechnology	include/batteryservice/BatteryService.h	/^    String8 batteryTechnology;$/;"	m	struct:android::BatteryProperties
batteryTemperature	include/batteryservice/BatteryService.h	/^    int batteryTemperature;$/;"	m	struct:android::BatteryProperties
batteryVoltage	include/batteryservice/BatteryService.h	/^    int batteryVoltage;$/;"	m	struct:android::BatteryProperties
bconstIpred	include/media/openmax/OMX_Video.h	/^    OMX_BOOL bconstIpred ;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
becomeContextManager	libs/binder/ProcessState.cpp	/^bool ProcessState::becomeContextManager(context_check_func checkFunc, void* userData)$/;"	f	class:android::ProcessState
begin	libs/ui/Region.cpp	/^Region::const_iterator Region::begin() const {$/;"	f	class:android::Region
begin	opengl/libagl/egl.cpp	/^        const_iterator begin() const { return storage; }$/;"	f	struct:android::egl_window_surface_v2_t::Region
begin	services/sensorservice/vec.h	/^    const_iterator begin() const { return base::v; }$/;"	f	class:android::vec
begin	services/sensorservice/vec.h	/^    iterator begin() { return base::v; }$/;"	f	class:android::vec
begin	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^HWComposer::LayerListIterator HWComposer::begin(int32_t id) {$/;"	f	class:android::HWComposer
beginFeature	opengl/tools/glgen2/registry/reg.py	/^    def beginFeature(self, interface, emit):$/;"	m	class:COutputGenerator
beginFeature	opengl/tools/glgen2/registry/reg.py	/^    def beginFeature(self, interface, emit):$/;"	m	class:OutputGenerator
beginFile	opengl/tools/glgen2/registry/reg.py	/^    def beginFile(self, genOpts):$/;"	m	class:COutputGenerator
beginFile	opengl/tools/glgen2/registry/reg.py	/^    def beginFile(self, genOpts):$/;"	m	class:OutputGenerator
beginFrame	services/surfaceflinger/DisplayDevice.cpp	/^status_t DisplayDevice::beginFrame(bool mustRecompose) const {$/;"	f	class:DisplayDevice
beginFrame	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^status_t FramebufferSurface::beginFrame(bool \/*mustRecompose*\/) {$/;"	f	class:android::FramebufferSurface
beginFrame	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::beginFrame(bool mustRecompose) {$/;"	f	class:android::VirtualDisplaySurface
beginGroup	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::beginGroup(const mat4& colorTransform) {$/;"	f	class:android::GLES20RenderEngine
beginResync	services/surfaceflinger/DispSync.cpp	/^void DispSync::beginResync() {$/;"	f	class:android::DispSync
benchmarks	cmds/flatland/Main.cpp	/^static const BenchmarkDesc benchmarks[] = {$/;"	v	file:
bestBatchParams	services/sensorservice/SensorDevice.h	/^        BatchParams bestBatchParams;$/;"	m	struct:android::SensorDevice::Info
bh	libs/ui/PixelFormat.cpp	/^        uint8_t     bh;$/;"	m	struct:android::Info::__anon243	file:
bias	include/android/sensor.h	/^    float bias[3];$/;"	m	union:AUncalibratedEvent::__anon185
biasVAR	services/sensorservice/Fusion.cpp	/^static const float biasVAR = 1e-8;      \/\/ (rad\/s)^2 \/ s (guessed)$/;"	m	namespace:android	file:
binarySearch	opengl/libagl/egl.cpp	/^static int binarySearch(T const sortedArray[], int first, int last, EGLint key)$/;"	f	namespace:android
bind	opengl/libagl/BufferObjectManager.cpp	/^buffer_t const* EGLBufferObjectManager::bind(GLuint buffer)$/;"	f	class:android::EGLBufferObjectManager
bindBuffer	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceContext::bindBuffer(GLuint bufferId, GLvoid *data, GLsizeiptr size) {$/;"	f	class:android::gltrace::GLTraceContext
bindDrawSurface	opengl/libagl/egl.cpp	/^EGLBoolean egl_pbuffer_surface_t::bindDrawSurface(ogles_context_t* gl)$/;"	f	class:android::egl_pbuffer_surface_t
bindDrawSurface	opengl/libagl/egl.cpp	/^EGLBoolean egl_pixmap_surface_t::bindDrawSurface(ogles_context_t* gl)$/;"	f	class:android::egl_pixmap_surface_t
bindDrawSurface	opengl/libagl/egl.cpp	/^EGLBoolean egl_window_surface_v2_t::bindDrawSurface(ogles_context_t* gl)$/;"	f	class:android::egl_window_surface_v2_t
bindImageAsFramebuffer	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::bindImageAsFramebuffer(EGLImageKHR image,$/;"	f	class:android::GLES11RenderEngine
bindImageAsFramebuffer	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::bindImageAsFramebuffer(EGLImageKHR image,$/;"	f	class:android::GLES20RenderEngine
bindReadSurface	opengl/libagl/egl.cpp	/^EGLBoolean egl_pbuffer_surface_t::bindReadSurface(ogles_context_t* gl)$/;"	f	class:android::egl_pbuffer_surface_t
bindReadSurface	opengl/libagl/egl.cpp	/^EGLBoolean egl_pixmap_surface_t::bindReadSurface(ogles_context_t* gl)$/;"	f	class:android::egl_pixmap_surface_t
bindReadSurface	opengl/libagl/egl.cpp	/^EGLBoolean egl_window_surface_v2_t::bindReadSurface(ogles_context_t* gl)$/;"	f	class:android::egl_window_surface_v2_t
bindTextureImage	services/surfaceflinger/SurfaceFlingerConsumer.cpp	/^status_t SurfaceFlingerConsumer::bindTextureImage()$/;"	f	class:android::SurfaceFlingerConsumer
bindTextureImageLocked	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::bindTextureImageLocked() {$/;"	f	class:android::GLConsumer
bindTextureTmu	opengl/libagl/texture.cpp	/^void bindTextureTmu($/;"	f	namespace:android
bindToTextureTarget	libs/gui/GLConsumer.cpp	/^void GLConsumer::EglImage::bindToTextureTarget(uint32_t texTarget) {$/;"	f	class:android::GLConsumer::EglImage
binder	include/binder/ProcessState.h	/^                IBinder* binder;$/;"	m	struct:android::ProcessState::handle_entry
binderDied	libs/binder/IMemory.cpp	/^void HeapCache::binderDied(const wp<IBinder>& binder)$/;"	f	class:android::HeapCache
binderDied	libs/gui/BufferQueueProducer.cpp	/^void BufferQueueProducer::binderDied(const wp<android::IBinder>& \/* who *\/) {$/;"	f	class:android::BufferQueueProducer
binderDied	libs/gui/StreamSplitter.cpp	/^void StreamSplitter::OutputListener::binderDied(const wp<IBinder>& \/* who *\/) {$/;"	f	class:android::StreamSplitter::OutputListener
binderDied	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::binderDied(const wp<IBinder>& \/* who *\/)$/;"	f	class:android::SurfaceFlinger
binder_acquire	cmds/servicemanager/binder.c	/^void binder_acquire(struct binder_state *bs, uint32_t target)$/;"	f
binder_become_context_manager	cmds/servicemanager/binder.c	/^int binder_become_context_manager(struct binder_state *bs)$/;"	f
binder_call	cmds/servicemanager/binder.c	/^int binder_call(struct binder_state *bs,$/;"	f
binder_close	cmds/servicemanager/binder.c	/^void binder_close(struct binder_state *bs)$/;"	f
binder_death	cmds/servicemanager/binder.h	/^struct binder_death {$/;"	s
binder_done	cmds/servicemanager/binder.c	/^void binder_done(struct binder_state *bs,$/;"	f
binder_dump_txn	cmds/servicemanager/binder.c	/^void binder_dump_txn(struct binder_transaction_data *txn)$/;"	f
binder_dump_txn	cmds/servicemanager/binder.c	80;"	d	file:
binder_handler	cmds/servicemanager/binder.h	/^typedef int (*binder_handler)(struct binder_state *bs,$/;"	t
binder_io	cmds/servicemanager/binder.h	/^struct binder_io$/;"	s
binder_link_to_death	cmds/servicemanager/binder.c	/^void binder_link_to_death(struct binder_state *bs, uint32_t target, struct binder_death *death)$/;"	f
binder_loop	cmds/servicemanager/binder.c	/^void binder_loop(struct binder_state *bs, binder_handler func)$/;"	f
binder_open	cmds/servicemanager/binder.c	/^struct binder_state *binder_open(size_t mapsize)$/;"	f
binder_parse	cmds/servicemanager/binder.c	/^int binder_parse(struct binder_state *bs, struct binder_io *bio,$/;"	f
binder_release	cmds/servicemanager/binder.c	/^void binder_release(struct binder_state *bs, uint32_t target)$/;"	f
binder_send_reply	cmds/servicemanager/binder.c	/^void binder_send_reply(struct binder_state *bs,$/;"	f
binder_state	cmds/servicemanager/binder.c	/^struct binder_state$/;"	s	file:
binder_write	cmds/servicemanager/binder.c	/^int binder_write(struct binder_state *bs, void *data, size_t len)$/;"	f
bio_alloc	cmds/servicemanager/binder.c	/^static void *bio_alloc(struct binder_io *bio, size_t size)$/;"	f	file:
bio_alloc_obj	cmds/servicemanager/binder.c	/^static struct flat_binder_object *bio_alloc_obj(struct binder_io *bio)$/;"	f	file:
bio_get	cmds/servicemanager/binder.c	/^static void *bio_get(struct binder_io *bio, size_t size)$/;"	f	file:
bio_get_ref	cmds/servicemanager/binder.c	/^uint32_t bio_get_ref(struct binder_io *bio)$/;"	f
bio_get_string16	cmds/servicemanager/binder.c	/^uint16_t *bio_get_string16(struct binder_io *bio, size_t *sz)$/;"	f
bio_get_uint32	cmds/servicemanager/binder.c	/^uint32_t bio_get_uint32(struct binder_io *bio)$/;"	f
bio_init	cmds/servicemanager/binder.c	/^void bio_init(struct binder_io *bio, void *data,$/;"	f
bio_init_from_txn	cmds/servicemanager/binder.c	/^void bio_init_from_txn(struct binder_io *bio, struct binder_transaction_data *txn)$/;"	f
bio_put_obj	cmds/servicemanager/binder.c	/^void bio_put_obj(struct binder_io *bio, void *ptr)$/;"	f
bio_put_ref	cmds/servicemanager/binder.c	/^void bio_put_ref(struct binder_io *bio, uint32_t handle)$/;"	f
bio_put_string16	cmds/servicemanager/binder.c	/^void bio_put_string16(struct binder_io *bio, const uint16_t *str)$/;"	f
bio_put_string16_x	cmds/servicemanager/binder.c	/^void bio_put_string16_x(struct binder_io *bio, const char *_str)$/;"	f
bio_put_uint32	cmds/servicemanager/binder.c	/^void bio_put_uint32(struct binder_io *bio, uint32_t n)$/;"	f
bits	include/android/native_window.h	/^    void* bits;$/;"	m	struct:ANativeWindow_Buffer
bits	include/input/Input.h	/^    uint64_t bits __attribute__((aligned(8)));$/;"	m	struct:android::PointerCoords
bits	libs/gui/GLConsumer.cpp	/^    char const* bits;$/;"	m	struct:android::__anon246	file:
bits	opengl/libagl/egl.cpp	/^    void* bits;$/;"	m	struct:android::egl_window_surface_v2_t	file:
bitsPerPixel	include/ui/PixelFormat.h	/^    size_t      bitsPerPixel;$/;"	m	struct:android::PixelFormatInfo
bitsPerPixel	libs/ui/PixelFormat.cpp	/^    size_t      bitsPerPixel;$/;"	m	struct:android::Info	file:
bitsPerPixel	libs/ui/PixelFormat.cpp	/^ssize_t bitsPerPixel(PixelFormat format) {$/;"	f	namespace:android
bl	libs/ui/PixelFormat.cpp	/^        uint8_t     bl;$/;"	m	struct:android::Info::__anon243	file:
blend	cmds/flatland/Composers.cpp	/^Composer* blend() {$/;"	f	namespace:android
blend	opengl/tests/hwc/hwcCommit.cpp	/^    int32_t      blend;$/;"	m	class:Rectangle	file:
blend	opengl/tests/hwc/hwcRects.cpp	/^    int32_t      blend;$/;"	m	class:Rectangle	file:
blendList2str	opengl/tests/hwc/hwcCommit.cpp	/^string blendList2str(const list<uint32_t>& blendList)$/;"	f
blendShrink	cmds/flatland/Composers.cpp	/^Composer* blendShrink() {$/;"	f	namespace:android
blendType	opengl/tests/hwc/hwcCommit.cpp	/^const struct blendType {$/;"	s	file:
blendType	opengl/tests/hwc/hwcCommit.cpp	/^} blendType[] = {$/;"	v	typeref:struct:blendType
blendingOps	opengl/tests/hwc/hwcStress.cpp	/^const unsigned int blendingOps[] = {$/;"	v
blends	opengl/tests/hwc/hwcCommit.cpp	/^    list<uint32_t> blends;$/;"	m	struct:meas	file:
blit	cmds/flatland/Composers.cpp	/^    bool blit(GLuint texName, const float* texMatrix,$/;"	f	class:android::Blitter
blue	opengl/libagl/dxt.cpp	54;"	d	file:
blur	include/private/gui/LayerState.h	/^            float           blur;$/;"	m	struct:android::layer_state_t
blur	services/surfaceflinger/Layer.h	/^        uint8_t blur;$/;"	m	struct:android::Layer::State
blurMaskAlphaThreshold	include/private/gui/LayerState.h	/^            float           blurMaskAlphaThreshold;$/;"	m	struct:android::layer_state_t
blurMaskSampling	include/private/gui/LayerState.h	/^            int32_t         blurMaskSampling;$/;"	m	struct:android::layer_state_t
blurMaskSurface	include/private/gui/LayerState.h	/^            sp<IBinder>     blurMaskSurface;$/;"	m	struct:android::layer_state_t
bo	opengl/libagl/context.h	/^    buffer_t const* bo;$/;"	m	struct:android::gl::array_t
body	include/input/InputTransport.h	/^    } __attribute__((aligned(8))) body;$/;"	m	struct:android::InputMessage	typeref:union:android::InputMessage::Body
bold	services/surfaceflinger/Colorizer.h	/^    void bold(String8& out) {$/;"	f	class:android::Colorizer
boolean_operation	libs/ui/Region.cpp	/^void Region::boolean_operation(int op, Region& dst,$/;"	f	class:android::Region
boolvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::boolvalue() const {$/;"	f	class:android::gltrace::GLMessage_DataType
boolvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage_DataType::boolvalue(int index) const {$/;"	f	class:android::gltrace::GLMessage_DataType
boolvalue_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::RepeatedField< bool > boolvalue_;$/;"	m	class:android::gltrace::GLMessage_DataType
boolvalue_size	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline int GLMessage_DataType::boolvalue_size() const {$/;"	f	class:android::gltrace::GLMessage_DataType
bootFinished	libs/gui/ISurfaceComposer.cpp	/^    virtual void bootFinished()$/;"	f	class:android::BpSurfaceComposer
bootFinished	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::bootFinished()$/;"	f	class:android::SurfaceFlinger
bottom	include/android/rect.h	/^    int32_t bottom;$/;"	m	struct:ARect
bottom	opengl/libagl/egl.cpp	/^        int32_t bottom;$/;"	m	struct:android::egl_window_surface_v2_t::Rect	file:
bottom	services/surfaceflinger/DisplayHardware/FloatRect.h	/^    float bottom;$/;"	m	class:android::FloatRect
bounds	include/ui/Region.h	/^    inline  Rect        bounds() const      { return getBounds(); }$/;"	f	class:android::Region
bounds	libs/ui/Region.cpp	/^    Rect bounds;$/;"	m	class:android::Region::rasterizer	file:
bounds	opengl/libagl/context.h	/^    GLsizei         bounds;$/;"	m	struct:android::gl::array_t
bounds	services/surfaceflinger/DisplayDevice.h	/^    inline Rect bounds() const { return getBounds(); }$/;"	f	class:android::DisplayDevice
bpm	include/android/sensor.h	/^  float bpm;$/;"	m	struct:AHeartRateEvent
buffer	include/binder/TextOutput.h	/^inline const void* HexDump::buffer() const { return mBuffer; }$/;"	f	class:android::HexDump
buffer	include/gui/Surface.h	/^        sp<GraphicBuffer> buffer;$/;"	m	struct:android::Surface::BufferSlot
buffer	libs/binder/BufferedTextOutput.cpp	/^    char* buffer;$/;"	m	struct:android::BufferedTextOutput::BufferState	file:
buffer	opengl/libagl/TextureObjectManager.h	/^    ANativeWindowBuffer* buffer;$/;"	m	class:android::EGLTextureObject
buffer	opengl/libagl/egl.cpp	/^    ANativeWindowBuffer*   buffer;$/;"	m	struct:android::egl_window_surface_v2_t	file:
bufferArgNames	opengl/tools/glgen/src/JFunc.java	/^    ArrayList<String> bufferArgNames = new ArrayList<String>();$/;"	f	class:JFunc
bufferClass	opengl/tools/glgen/stubs/gles11/common.cpp	/^static jclass bufferClass;$/;"	v	file:
bufferClass	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jclass bufferClass;$/;"	v	file:
bufferHeader	include/media/hardware/HardwareAPI.h	/^    OMX_BUFFERHEADERTYPE **bufferHeader;$/;"	m	struct:android::UseAndroidNativeBufferParams
bufferObjectManager	opengl/libagl/context.h	/^    EGLBufferObjectManager* bufferObjectManager;$/;"	m	struct:android::gl::ogles_context_t
bufferPos	libs/binder/BufferedTextOutput.cpp	/^    size_t bufferPos;$/;"	m	struct:android::BufferedTextOutput::BufferState	file:
bufferSize	libs/binder/BufferedTextOutput.cpp	/^    size_t bufferSize;$/;"	m	struct:android::BufferedTextOutput::BufferState	file:
bufferStateName	libs/gui/BufferSlot.cpp	/^const char* BufferSlot::bufferStateName(BufferState state) {$/;"	f	class:android::BufferSlot
buffer_t	opengl/libagl/BufferObjectManager.h	/^struct buffer_t {$/;"	s	namespace:android::gl
buffers	include/ui/FramebufferNativeWindow.h	/^    sp<NativeBuffer> buffers[MAX_NUM_FRAME_BUFFERS];$/;"	m	class:android::FramebufferNativeWindow
build	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        IGraphicBufferProducer::QueueBufferInput build() {$/;"	f	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder
buildAPyramid	opengl/libagl/mipmap.cpp	/^status_t buildAPyramid(ogles_context_t* c, EGLTextureObject* tex)$/;"	f	namespace:android
buildList	opengl/tools/glgen2/registry/genheaders.py	/^buildList = [$/;"	v
buildShader	services/surfaceflinger/RenderEngine/Program.cpp	/^GLuint Program::buildShader(const char* source, GLenum type) {$/;"	f	class:android::Program
build_string2	cmds/installd/utils.c	/^char *build_string2(char *s1, char *s2) {$/;"	f
build_string3	cmds/installd/utils.c	/^char *build_string3(char *s1, char *s2, char *s3) {$/;"	f
bumpGeneration	services/inputflinger/InputReader.cpp	/^int32_t InputReader::ContextImpl::bumpGeneration() {$/;"	f	class:android::InputReader::ContextImpl
bumpGeneration	services/inputflinger/InputReader.cpp	/^void InputDevice::bumpGeneration() {$/;"	f	class:android::InputDevice
bumpGeneration	services/inputflinger/InputReader.cpp	/^void InputMapper::bumpGeneration() {$/;"	f	class:android::InputMapper
bumpGeneration	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t bumpGeneration() {$/;"	f	class:android::FakeInputReaderContext	file:
bumpGenerationLocked	services/inputflinger/InputReader.cpp	/^int32_t InputReader::bumpGenerationLocked() {$/;"	f	class:android::InputReader
bundle	libs/binder/BufferedTextOutput.cpp	/^    int32_t bundle;$/;"	m	struct:android::BufferedTextOutput::BufferState	file:
bus	include/input/InputDevice.h	/^    uint16_t bus;$/;"	m	struct:android::InputDeviceIdentifier
buttonState	include/input/InputTransport.h	/^            int32_t buttonState;$/;"	m	struct:android::InputMessage::Body::Motion
buttonState	services/inputflinger/InputDispatcher.h	/^        int32_t buttonState;$/;"	m	struct:android::InputDispatcher::MotionEntry
buttonState	services/inputflinger/InputListener.h	/^    int32_t buttonState;$/;"	m	struct:android::NotifyMotionArgs
bytesPerLine	include/binder/TextOutput.h	/^inline size_t HexDump::bytesPerLine() const { return mBytesPerLine; }$/;"	f	class:android::HexDump
bytesPerPixel	include/ui/PixelFormat.h	/^    size_t      bytesPerPixel;$/;"	m	struct:android::PixelFormatInfo
bytesPerPixel	libs/ui/PixelFormat.cpp	/^ssize_t bytesPerPixel(PixelFormat format) {$/;"	f	namespace:android
c1	opengl/tests/hwc/hwcTestLib.h	/^    float c1(void) const { return _c1; }$/;"	f	class:ColorFract
c2	opengl/tests/hwc/hwcTestLib.h	/^    float c2(void) const { return _c2; }$/;"	f	class:ColorFract
c3	opengl/tests/hwc/hwcTestLib.h	/^    float c3(void) const { return _c3; }$/;"	f	class:ColorFract
cMIMEType	include/media/openmax/OMX_Audio.h	/^    OMX_STRING cMIMEType;            \/**< MIME type of data for the port *\/$/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE
cMIMEType	include/media/openmax/OMX_Image.h	/^    OMX_STRING cMIMEType;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
cMIMEType	include/media/openmax/OMX_Video.h	/^    OMX_STRING cMIMEType;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
cNodeName	include/media/openmax/OMX_Component.h	/^    OMX_STRING cNodeName;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
cRole	include/media/openmax/OMX_Core.h	/^    OMX_U8 cRole[OMX_MAX_STRINGNAME_SIZE];  \/**< name of standard component which defines component role *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE
c_includes	cmds/installd/tests/Android.mk	/^c_includes := \\$/;"	m
c_includes	services/inputflinger/tests/Android.mk	/^c_includes := \\$/;"	m
cache	libs/binder/PermissionCache.cpp	/^void PermissionCache::cache(const String16& permission,$/;"	f	class:android::PermissionCache
cacheFileHeaderSize	opengl/libs/EGL/egl_cache.cpp	/^static const size_t cacheFileHeaderSize = 8;$/;"	v	file:
cacheFileMagic	opengl/libs/EGL/egl_cache.cpp	/^static const char* cacheFileMagic = "EGL$";$/;"	v	file:
cache_dir_struct	cmds/installd/installd.h	/^typedef struct cache_dir_struct {$/;"	s
cache_dir_t	cmds/installd/installd.h	/^} cache_dir_t;$/;"	t	typeref:struct:cache_dir_struct
cache_file_t	cmds/installd/installd.h	/^} cache_file_t;$/;"	t	typeref:struct:__anon11
cache_modtime_sort	cmds/installd/utils.c	/^static int cache_modtime_sort(const void *lhsP, const void *rhsP)$/;"	f	file:
cache_t	cmds/installd/installd.h	/^} cache_t;$/;"	t	typeref:struct:__anon12
cache_vertex	opengl/libagl/array.cpp	/^vertex_t* cache_vertex(ogles_context_t* c, vertex_t* v, uint32_t index)$/;"	f	namespace:android
calculateCommonVector	services/inputflinger/InputReader.cpp	/^static float calculateCommonVector(float a, float b) {$/;"	f	namespace:android
calculate_dir_size	libs/diskusage/dirsize.c	/^int64_t calculate_dir_size(int dfd)$/;"	f
calculate_odex_file_path	cmds/installd/commands.c	/^static bool calculate_odex_file_path(char path[PKG_PATH_MAX],$/;"	f	file:
callbacks	include/android/native_activity.h	/^    struct ANativeActivityCallbacks* callbacks;$/;"	m	struct:ANativeActivity	typeref:struct:ANativeActivity::ANativeActivityCallbacks
callbacks	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    struct callbacks : public hwc_procs_t {$/;"	s	struct:android::HWComposer::cb_context	file:
camTrack	opengl/tests/angeles/demo.c	/^static void camTrack()$/;"	f	file:
canAccessSensor	services/sensorservice/SensorService.cpp	/^bool SensorService::canAccessSensor(const Sensor& sensor) {$/;"	f	class:android::SensorService
canAddSample	libs/input/InputTransport.cpp	/^bool InputConsumer::canAddSample(const Batch& batch, const InputMessage *msg) {$/;"	f	class:android::InputConsumer
canHandleOverlapArea	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::canHandleOverlapArea(int32_t id, Rect unionDr) {$/;"	f	class:android::HWComposer
canReceiveKeys	services/inputflinger/InputWindow.h	/^    bool canReceiveKeys;$/;"	m	struct:android::InputWindowInfo
canUseTiledDR	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::canUseTiledDR(int32_t id, Rect& unionDr ){$/;"	f	class:android::HWComposer
cancelBuffer	libs/gui/BufferQueueProducer.cpp	/^void BufferQueueProducer::cancelBuffer(int slot, const sp<Fence>& fence) {$/;"	f	class:android::BufferQueueProducer
cancelBuffer	libs/gui/IGraphicBufferProducer.cpp	/^    virtual void cancelBuffer(int buf, const sp<Fence>& fence) {$/;"	f	class:android::BpGraphicBufferProducer
cancelBuffer	libs/gui/Surface.cpp	/^int Surface::cancelBuffer(android_native_buffer_t* buffer,$/;"	f	class:android::Surface
cancelBuffer	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^void VirtualDisplaySurface::cancelBuffer(int pslot, const sp<Fence>& fence) {$/;"	f	class:android::VirtualDisplaySurface
cancelBuffer	services/surfaceflinger/MonitoredProducer.cpp	/^void MonitoredProducer::cancelBuffer(int slot, const sp<Fence>& fence) {$/;"	f	class:android::MonitoredProducer
cancelVibrate	services/inputflinger/EventHub.cpp	/^void EventHub::cancelVibrate(int32_t deviceId) {$/;"	f	class:android::EventHub
cancelVibrate	services/inputflinger/InputReader.cpp	/^void InputDevice::cancelVibrate(int32_t token) {$/;"	f	class:android::InputDevice
cancelVibrate	services/inputflinger/InputReader.cpp	/^void InputMapper::cancelVibrate(int32_t token) {$/;"	f	class:android::InputMapper
cancelVibrate	services/inputflinger/InputReader.cpp	/^void InputReader::cancelVibrate(int32_t deviceId, int32_t token) {$/;"	f	class:android::InputReader
cancelVibrate	services/inputflinger/InputReader.cpp	/^void VibratorInputMapper::cancelVibrate(int32_t token) {$/;"	f	class:android::VibratorInputMapper
cancelVibrate	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void cancelVibrate(int32_t deviceId) {$/;"	f	class:android::FakeEventHub	file:
capacity	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        size_t capacity;$/;"	m	struct:android::HWComposer::DisplayData
capture	libs/gui/SurfaceComposerClient.cpp	/^status_t ScreenshotClient::capture($/;"	f	class:android::ScreenshotClient
captureScreen	libs/gui/ISurfaceComposer.cpp	/^    virtual status_t captureScreen($/;"	f	class:android::BpSurfaceComposer
captureScreen	libs/gui/ISurfaceComposer.cpp	/^    virtual status_t captureScreen(const sp<IBinder>& display,$/;"	f	class:android::BpSurfaceComposer
captureScreen	services/surfaceflinger/LayerBlur.cpp	/^bool LayerBlur::captureScreen(const sp<const DisplayDevice>& hw, FBO& fbo, Texture& texture, int width, int height) {$/;"	f	class:android::LayerBlur
captureScreen	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::captureScreen(const sp<IBinder>& display,$/;"	f	class:android::SurfaceFlinger
captureScreen	services/surfaceflinger/tests/Transaction_test.cpp	/^    static void captureScreen(sp<ScreenCapture>* sc) {$/;"	f	class:android::ScreenCapture
captureScreenImplCpuConsumerLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::captureScreenImplCpuConsumerLocked($/;"	f	class:android::SurfaceFlinger
captureScreenImplLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::captureScreenImplLocked($/;"	f	class:android::SurfaceFlinger
carrayStyle	include/binder/TextOutput.h	/^inline bool HexDump::carrayStyle() const { return mCArrayStyle; }$/;"	f	class:android::HexDump
cb_context	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^struct HWComposer::cb_context {$/;"	s	class:android::HWComposer	file:
cb_eventReceiver	services/surfaceflinger/MessageQueue.cpp	/^int MessageQueue::cb_eventReceiver(int fd, int events, void* data) {$/;"	f	class:android::MessageQueue
centerX	include/input/VirtualKeyMap.h	/^    int32_t centerX;$/;"	m	struct:android::VirtualKeyDefinition
centerY	include/input/VirtualKeyMap.h	/^    int32_t centerY;$/;"	m	struct:android::VirtualKeyDefinition
cfunc	opengl/tools/glgen/src/JFunc.java	/^    CFunc cfunc;$/;"	f	class:JFunc
chain	include/input/InputTransport.h	/^        uint32_t chain; \/\/ sequence number of previous batched input message$/;"	m	struct:android::InputConsumer::SeqChain
changeBackground	opengl/tests/gl_jni/src/com/android/gljni/GLJNILib.java	/^     public static native void changeBackground();$/;"	m	class:GLJNILib
character	include/input/KeyCharacterMap.h	/^        char16_t character;$/;"	m	struct:android::KeyCharacterMap::Behavior
chargerAcOnline	include/batteryservice/BatteryService.h	/^    bool chargerAcOnline;$/;"	m	struct:android::BatteryProperties
chargerDockAcOnline	include/batteryservice/BatteryService.h	/^    bool chargerDockAcOnline;$/;"	m	struct:android::BatteryProperties
chargerUsbOnline	include/batteryservice/BatteryService.h	/^    bool chargerUsbOnline;$/;"	m	struct:android::BatteryProperties
chargerWirelessOnline	include/batteryservice/BatteryService.h	/^    bool chargerWirelessOnline;$/;"	m	struct:android::BatteryProperties
charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::charvalue() const {$/;"	f	class:android::gltrace::GLMessage_DataType
charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline const ::std::string& GLMessage_DataType::charvalue(int index) const {$/;"	f	class:android::gltrace::GLMessage_DataType
charvalue_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> charvalue_;$/;"	m	class:android::gltrace::GLMessage_DataType
charvalue_size	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline int GLMessage_DataType::charvalue_size() const {$/;"	f	class:android::gltrace::GLMessage_DataType
check	libs/binder/PermissionCache.cpp	/^status_t PermissionCache::check(bool* granted,$/;"	f	class:android::PermissionCache
checkAndUpdateEglStateLocked	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::checkAndUpdateEglStateLocked(bool contextCheck) {$/;"	f	class:android::GLConsumer
checkAnyBuffer	libs/gui/tests/CpuConsumer_test.cpp	/^void checkAnyBuffer(const CpuConsumer::LockedBuffer &buf, int format) {$/;"	f	namespace:android
checkBayerRawBuffer	libs/gui/tests/CpuConsumer_test.cpp	/^void checkBayerRawBuffer(const CpuConsumer::LockedBuffer &buf) {$/;"	f	namespace:android
checkCallingPermission	libs/binder/IServiceManager.cpp	/^bool checkCallingPermission(const String16& permission)$/;"	f	namespace:android
checkCallingPermission	libs/binder/IServiceManager.cpp	/^bool checkCallingPermission(const String16& permission, int32_t* outPid, int32_t* outUid)$/;"	f	namespace:android
checkCallingPermission	libs/binder/PermissionCache.cpp	/^bool PermissionCache::checkCallingPermission($/;"	f	class:android::PermissionCache
checkCallingPermission	libs/binder/PermissionCache.cpp	/^bool PermissionCache::checkCallingPermission(const String16& permission) {$/;"	f	class:android::PermissionCache
checkEGLErrors	opengl/tests/angeles/app-linux.cpp	/^static void checkEGLErrors()$/;"	f	file:
checkEglError	opengl/tests/gl2_basic/gl2_basic.cpp	/^static void checkEglError(const char* op, EGLBoolean returnVal = EGL_TRUE) {$/;"	f	file:
checkEglError	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^static void checkEglError(const char* op, EGLBoolean returnVal = EGL_TRUE) {$/;"	f	file:
checkEglError	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^    private static void checkEglError(String prompt, EGL10 egl) {$/;"	m	class:GL2JNIView	file:
checkEglError	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^static void checkEglError(const char* op, EGLBoolean returnVal = EGL_TRUE) {$/;"	f	file:
checkEglError	opengl/tests/gl_basic/gl_basic.cpp	/^static void checkEglError(const char* op, EGLBoolean returnVal = EGL_TRUE) {$/;"	f	file:
checkEglError	opengl/tests/gl_perf/gl2_perf.cpp	/^static void checkEglError(const char* op, EGLBoolean returnVal = EGL_TRUE) {$/;"	f	file:
checkEglError	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^    private static void checkEglError(String prompt, EGL10 egl) {$/;"	m	class:GLPerfView	file:
checkEglError	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^static void checkEglError(const char* op, EGLBoolean returnVal = EGL_TRUE) {$/;"	f	file:
checkEglError	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^    private static void checkEglError(String prompt, EGL10 egl) {$/;"	m	class:GLDualGL2View	file:
checkEglError	opengl/tests/hwc/hwcTestLib.cpp	/^static void checkEglError(const char* op, EGLBoolean returnVal)$/;"	f	file:
checkErrors	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::checkErrors() const {$/;"	f	class:android::RenderEngine
checkForExtension	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^checkForExtension(const GLubyte* pExtensions, const GLubyte* pExtension) {$/;"	f	file:
checkGLErrors	opengl/tests/angeles/app-linux.cpp	/^static void checkGLErrors()$/;"	f	file:
checkGlError	opengl/tests/gl2_basic/gl2_basic.cpp	/^static void checkGlError(const char* op) {$/;"	f	file:
checkGlError	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private void checkGlError(String op) {$/;"	m	class:CamRenderer	file:
checkGlError	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^static void checkGlError(const char* op) {$/;"	f	file:
checkGlError	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        private void checkGlError(String op) {$/;"	m	class:GL2JavaView.Renderer	file:
checkGlError	opengl/tests/gl2_jni/jni/gl_code.cpp	/^static void checkGlError(const char* op) {$/;"	f	file:
checkGlError	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^static void checkGlError(const char* op) {$/;"	f	file:
checkGlError	opengl/tests/gl_perf/fill_common.cpp	/^static void checkGlError(const char* op) {$/;"	f	file:
checkGlError	opengl/tests/gl_perf/gl2_perf.cpp	/^static void checkGlError(const char* op) {$/;"	f	file:
checkGlError	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^static void checkGlError(const char* op) {$/;"	f	file:
checkGlError	opengl/tests/gldual/jni/gl_code.cpp	/^static void checkGlError(const char* op) {$/;"	f	file:
checkGlError	opengl/tests/hwc/hwcTestLib.cpp	/^static void checkGlError(const char* op)$/;"	f	file:
checkGlError	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private void checkGlError(String op) {$/;"	m	class:TestLatencyView.Renderer	file:
checkGlesEmulationStatus	opengl/libs/EGL/Loader.cpp	/^checkGlesEmulationStatus(void)$/;"	f	namespace:android
checkGreyscaleBuffer	libs/gui/tests/CpuConsumer_test.cpp	/^void checkGreyscaleBuffer(const CpuConsumer::LockedBuffer &buf) {$/;"	f	namespace:android
checkInitComplete	services/sensorservice/Fusion.cpp	/^bool Fusion::checkInitComplete(int what, const vec3_t& d, float dT) {$/;"	f	class:android::Fusion
checkInjectEventsPermissionNonReentrant	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual bool checkInjectEventsPermissionNonReentrant($/;"	f	class:android::FakeInputDispatcherPolicy	file:
checkInjectionPermission	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::checkInjectionPermission(const sp<InputWindowHandle>& windowHandle,$/;"	f	class:android::InputDispatcher
checkInterface	libs/binder/Parcel.cpp	/^bool Parcel::checkInterface(IBinder* binder) const$/;"	f	class:android::Parcel
checkLockedBuffer	libs/gui/tests/SRGB_test.cpp	/^    void checkLockedBuffer(PixelFormat format) {$/;"	f	class:android::SRGBTest
checkOp	libs/binder/AppOpsManager.cpp	/^int32_t AppOpsManager::checkOp(int32_t op, int32_t uid, const String16& callingPackage)$/;"	f	class:android::AppOpsManager
checkOperation	libs/binder/IAppOpsService.cpp	/^    virtual int32_t checkOperation(int32_t code, int32_t uid, const String16& packageName) {$/;"	f	class:android::BpAppOpsService
checkPermission	libs/binder/IPermissionController.cpp	/^    virtual bool checkPermission(const String16& permission, int32_t pid, int32_t uid)$/;"	f	class:android::BpPermissionController
checkPermission	libs/binder/IServiceManager.cpp	/^bool checkPermission(const String16& permission, pid_t pid, uid_t uid)$/;"	f	namespace:android
checkPermission	libs/binder/PermissionCache.cpp	/^bool PermissionCache::checkPermission($/;"	f	class:android::PermissionCache
checkPixel	libs/gui/tests/CpuConsumer_test.cpp	/^void checkPixel(const CpuConsumer::LockedBuffer &buf,$/;"	f	namespace:android
checkPixel	libs/gui/tests/GLTest.cpp	/^::testing::AssertionResult GLTest::checkPixel(int x, int y,$/;"	f	class:android::GLTest
checkPixel	services/surfaceflinger/tests/Transaction_test.cpp	/^    void checkPixel(uint32_t x, uint32_t y, uint8_t r, uint8_t g, uint8_t b) {$/;"	f	class:android::ScreenCapture
checkRgba8888Buffer	libs/gui/tests/CpuConsumer_test.cpp	/^void checkRgba8888Buffer(const CpuConsumer::LockedBuffer &buf) {$/;"	f	namespace:android
checkScreenshot	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::checkScreenshot(size_t w, size_t s, size_t h, void const* vaddr,$/;"	f	class:android::SurfaceFlinger
checkService	libs/binder/IServiceManager.cpp	/^    virtual sp<IBinder> checkService( const String16& name) const$/;"	f	class:android::BpServiceManager
checkState	services/sensorservice/Fusion.cpp	/^void Fusion::checkState() {$/;"	f	class:android::Fusion
checkSubclass	libs/binder/Binder.cpp	/^bool IBinder::checkSubclass(const void* \/*subclassID*\/) const$/;"	f	class:android::IBinder
checkTJunctionFreeFromRegion	libs/ui/tests/Region_test.cpp	/^    void checkTJunctionFreeFromRegion(const Region& original, int expectedCount = -1) {$/;"	f	class:android::RegionTest
checkVertTJunction	libs/ui/tests/Region_test.cpp	/^    void checkVertTJunction(const Rect* lhs, const Rect* rhs) {$/;"	f	class:android::RegionTest
checkWakeLockState	services/sensorservice/SensorService.cpp	/^void SensorService::checkWakeLockState() {$/;"	f	class:android::SensorService
checkWakeLockStateLocked	services/sensorservice/SensorService.cpp	/^void SensorService::checkWakeLockStateLocked() {$/;"	f	class:android::SensorService
checkWindowReadyForMoreInputLocked	services/inputflinger/InputDispatcher.cpp	/^String8 InputDispatcher::checkWindowReadyForMoreInputLocked(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher
check_mac_perms	cmds/servicemanager/service_manager.c	/^static bool check_mac_perms(pid_t spid, const char *tctx, const char *perm, const char *name)$/;"	f	file:
check_mac_perms_from_getcon	cmds/servicemanager/service_manager.c	/^static bool check_mac_perms_from_getcon(pid_t spid, const char *perm)$/;"	f	file:
check_mac_perms_from_lookup	cmds/servicemanager/service_manager.c	/^static bool check_mac_perms_from_lookup(pid_t spid, const char *perm, const char *name)$/;"	f	file:
childCount	cmds/installd/installd.h	/^    int32_t childCount;$/;"	m	struct:cache_dir_struct
chooseColorRgba8888	libs/gui/tests/CpuConsumer_test.cpp	/^inline uint8_t chooseColorRgba8888(int blockX, int blockY, uint8_t channel) {$/;"	f	namespace:android
chooseConfig	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        public EGLConfig chooseConfig(EGL10 egl, EGLDisplay display) {$/;"	m	class:GL2JNIView.ConfigChooser
chooseConfig	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        public EGLConfig chooseConfig(EGL10 egl, EGLDisplay display,$/;"	m	class:GL2JNIView.ConfigChooser
chooseConfig	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        public EGLConfig chooseConfig(EGL10 egl, EGLDisplay display) {$/;"	m	class:GLPerfView.ConfigChooser
chooseConfig	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        public EGLConfig chooseConfig(EGL10 egl, EGLDisplay display,$/;"	m	class:GLPerfView.ConfigChooser
chooseConfig	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        public EGLConfig chooseConfig(EGL10 egl, EGLDisplay display) {$/;"	m	class:GLDualGL2View.ConfigChooser
chooseConfig	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        public EGLConfig chooseConfig(EGL10 egl, EGLDisplay display,$/;"	m	class:GLDualGL2View.ConfigChooser
chooseEglConfig	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^EGLConfig RenderEngine::chooseEglConfig(EGLDisplay display, int format) {$/;"	f	class:android::RenderEngine
chooseModifier	opengl/libs/ETC1/etc1.cpp	/^static etc1_uint32 chooseModifier(const etc1_byte* pBaseColors,$/;"	f	file:
chooseWeight	libs/input/VelocityTracker.cpp	/^float LeastSquaresVelocityTrackerStrategy::chooseWeight(uint32_t index) const {$/;"	f	class:android::LeastSquaresVelocityTrackerStrategy
chromaStep	include/gui/CpuConsumer.h	/^        uint32_t    chromaStep;$/;"	m	struct:android::CpuConsumer::LockedBuffer
chromaStride	include/gui/CpuConsumer.h	/^        uint32_t    chromaStride;$/;"	m	struct:android::CpuConsumer::LockedBuffer
chunk_t	libs/binder/MemoryDealer.cpp	/^        chunk_t(size_t start, size_t size)$/;"	f	struct:android::SimpleBestFitAllocator::chunk_t
chunk_t	libs/binder/MemoryDealer.cpp	/^    struct chunk_t {$/;"	s	class:android::SimpleBestFitAllocator	file:
cinfo	include/ui/PixelFormat.h	/^        szinfo      cinfo[4];$/;"	m	union:android::PixelFormatInfo::__anon80
clamp	opengl/libs/ETC1/etc1.cpp	/^static inline etc1_byte clamp(int x) {$/;"	f	file:
clampF	opengl/libagl/light.cpp	/^int32_t clampF(GLfixed f) {$/;"	f	namespace:android
clampToZerof	opengl/libagl/fp.h	/^GLfloat clampToZerof(GLfloat v) {$/;"	f	namespace:android::gl
clampZ	opengl/libagl/primitives.cpp	/^int32_t clampZ(GLfixed z) {$/;"	f	namespace:android
className	opengl/tools/glgen/src/JFunc.java	/^    String className = "com.google.android.gles_jni.GL11Impl";$/;"	f	class:JFunc
classes	services/inputflinger/EventHub.h	/^        uint32_t classes;$/;"	m	struct:android::EventHub::Device
classes	services/inputflinger/tests/InputReader_test.cpp	/^        uint32_t classes;$/;"	m	struct:android::FakeEventHub::Device	file:
clazz	include/android/native_activity.h	/^    jobject clazz;$/;"	m	struct:ANativeActivity
cleanUpTrace	cmds/atrace/atrace.cpp	/^static void cleanUpTrace()$/;"	f	file:
cleanup	services/sensorservice/BatteryService.h	/^    static void cleanup(uid_t uid) {$/;"	f	class:android::BatteryService
cleanupAutoDisabledSensorLocked	services/sensorservice/SensorService.cpp	/^void SensorService::cleanupAutoDisabledSensorLocked(const sp<SensorEventConnection>& connection,$/;"	f	class:android::SensorService
cleanupConnection	services/sensorservice/SensorService.cpp	/^void SensorService::cleanupConnection(SensorEventConnection* c)$/;"	f	class:android::SensorService
cleanupCookie	include/binder/BpBinder.h	/^            void* cleanupCookie;$/;"	m	struct:android::BpBinder::ObjectManager::entry_t
cleanupImpl	services/sensorservice/BatteryService.cpp	/^void BatteryService::cleanupImpl(uid_t uid) {$/;"	f	class:android::BatteryService
cleanupWithoutDisable	services/sensorservice/SensorService.cpp	/^status_t SensorService::cleanupWithoutDisable($/;"	f	class:android::SensorService
cleanupWithoutDisableLocked	services/sensorservice/SensorService.cpp	/^status_t SensorService::cleanupWithoutDisableLocked($/;"	f	class:android::SensorService
clear	include/input/Input.h	/^    inline void clear() {$/;"	f	struct:android::PointerCoords
clear	include/input/Input.h	/^    inline void clear() {$/;"	f	struct:android::PointerProperties
clear	include/input/VelocityTracker.h	/^        inline void clear() {$/;"	f	struct:android::VelocityTracker::Estimator
clear	include/ui/Rect.h	/^    inline void clear() {$/;"	f	class:android::Rect
clear	libs/binder/Parcel.cpp	/^void Parcel::Blob::clear() {$/;"	f	class:android::Parcel::Blob
clear	libs/gui/SurfaceControl.cpp	/^void SurfaceControl::clear()$/;"	f	class:android::SurfaceControl
clear	libs/input/VelocityTracker.cpp	/^void IntegratingVelocityTrackerStrategy::clear() {$/;"	f	class:android::IntegratingVelocityTrackerStrategy
clear	libs/input/VelocityTracker.cpp	/^void LeastSquaresVelocityTrackerStrategy::clear() {$/;"	f	class:android::LeastSquaresVelocityTrackerStrategy
clear	libs/input/VelocityTracker.cpp	/^void LegacyVelocityTrackerStrategy::clear() {$/;"	f	class:android::LegacyVelocityTrackerStrategy
clear	libs/input/VelocityTracker.cpp	/^void VelocityTracker::clear() {$/;"	f	class:android::VelocityTracker
clear	libs/ui/Region.cpp	/^void Region::clear()$/;"	f	class:android::Region
clear	opengl/libagl/array.cpp	/^void vertex_cache_t::clear()$/;"	f	class:android::vertex_cache_t
clear	opengl/libagl/context.h	/^    inline void clear() {$/;"	f	struct:android::gl::vertex_t
clear	services/inputflinger/EventHub.h	/^    inline void clear() {$/;"	f	struct:android::RawAbsoluteAxisInfo
clear	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::InputState::clear() {$/;"	f	class:android::InputDispatcher::InputState
clear	services/inputflinger/InputReader.cpp	/^void CookedPointerData::clear() {$/;"	f	class:android::CookedPointerData
clear	services/inputflinger/InputReader.cpp	/^void MultiTouchMotionAccumulator::Slot::clear() {$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
clear	services/inputflinger/InputReader.cpp	/^void RawPointerAxes::clear() {$/;"	f	class:android::RawPointerAxes
clear	services/inputflinger/InputReader.cpp	/^void RawPointerData::clear() {$/;"	f	class:android::RawPointerData
clear	services/inputflinger/InputReader.h	/^        void clear() {$/;"	f	struct:android::TouchInputMapper::OrientedRanges
clearAbsoluteAxes	services/inputflinger/InputReader.cpp	/^void SingleTouchMotionAccumulator::clearAbsoluteAxes() {$/;"	f	class:android::SingleTouchMotionAccumulator
clearAnimationFrameStats	libs/gui/ISurfaceComposer.cpp	/^    virtual status_t clearAnimationFrameStats() {$/;"	f	class:android::BpSurfaceComposer
clearAnimationFrameStats	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::clearAnimationFrameStats() {$/;"	f	class:android::SurfaceComposerClient
clearAnimationFrameStats	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::clearAnimationFrameStats() {$/;"	f	class:android::SurfaceFlinger
clearButtons	services/inputflinger/InputReader.cpp	/^void CursorButtonAccumulator::clearButtons() {$/;"	f	class:android::CursorButtonAccumulator
clearButtons	services/inputflinger/InputReader.cpp	/^void TouchButtonAccumulator::clearButtons() {$/;"	f	class:android::TouchButtonAccumulator
clearCaller	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::clearCaller()$/;"	f	class:android::IPCThreadState
clearCallingIdentity	libs/binder/IPCThreadState.cpp	/^int64_t IPCThreadState::clearCallingIdentity()$/;"	f	class:android::IPCThreadState
clearDeathNotification	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::clearDeathNotification(int32_t handle, BpBinder* proxy)$/;"	f	class:android::IPCThreadState
clearError	opengl/libs/EGL/eglApi.cpp	/^static inline void clearError() { egl_tls_t::clearError(); }$/;"	f	file:
clearError	opengl/libs/EGL/egl_tls.cpp	/^void egl_tls_t::clearError() {$/;"	f	class:android::egl_tls_t
clearFrameStats	services/surfaceflinger/Layer.cpp	/^void Layer::clearFrameStats() {$/;"	f	class:android::Layer
clearIdBits	services/inputflinger/InputReader.h	/^    inline void clearIdBits() {$/;"	f	struct:android::RawPointerData
clearLastError	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::clearLastError()$/;"	f	class:android::IPCThreadState
clearLayerFrameStats	libs/gui/ISurfaceComposerClient.cpp	/^    virtual status_t clearLayerFrameStats(const sp<IBinder>& handle) const {$/;"	f	class:android::BpSurfaceComposerClient
clearLayerFrameStats	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::clearLayerFrameStats(const sp<IBinder>& token) const {$/;"	f	class:android::SurfaceComposerClient
clearLayerFrameStats	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::clearLayerFrameStats() const {$/;"	f	class:android::SurfaceControl
clearLayerFrameStats	services/surfaceflinger/Client.cpp	/^status_t Client::clearLayerFrameStats(const sp<IBinder>& handle) const {$/;"	f	class:android::Client
clearPointers	libs/input/VelocityTracker.cpp	/^void IntegratingVelocityTrackerStrategy::clearPointers(BitSet32 idBits) {$/;"	f	class:android::IntegratingVelocityTrackerStrategy
clearPointers	libs/input/VelocityTracker.cpp	/^void LeastSquaresVelocityTrackerStrategy::clearPointers(BitSet32 idBits) {$/;"	f	class:android::LeastSquaresVelocityTrackerStrategy
clearPointers	libs/input/VelocityTracker.cpp	/^void LegacyVelocityTrackerStrategy::clearPointers(BitSet32 idBits) {$/;"	f	class:android::LegacyVelocityTrackerStrategy
clearPointers	libs/input/VelocityTracker.cpp	/^void VelocityTracker::clearPointers(BitSet32 idBits) {$/;"	f	class:android::VelocityTracker
clearRelativeAxes	services/inputflinger/InputReader.cpp	/^void CursorMotionAccumulator::clearRelativeAxes() {$/;"	f	class:android::CursorMotionAccumulator
clearRelativeAxes	services/inputflinger/InputReader.cpp	/^void CursorScrollAccumulator::clearRelativeAxes() {$/;"	f	class:android::CursorScrollAccumulator
clearSlots	services/inputflinger/InputReader.cpp	/^void MultiTouchMotionAccumulator::clearSlots(int32_t initialSlot) {$/;"	f	class:android::MultiTouchMotionAccumulator
clearSpots	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void clearSpots() {$/;"	f	class:android::FakePointerController	file:
clearStats	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::clearStats() {$/;"	f	class:android::FrameTracker
clearStatsLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::clearStatsLocked(const Vector<String16>& args, size_t& index,$/;"	f	class:android::SurfaceFlinger
clearTLS	opengl/libs/EGL/egl_tls.cpp	/^void egl_tls_t::clearTLS() {$/;"	f	class:android::egl_tls_t
clearTrace	cmds/atrace/atrace.cpp	/^static bool clearTrace()$/;"	f	file:
clearWithColor	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::clearWithColor(float red, float green, float blue, float alpha) {$/;"	f	class:android::RenderEngine
clearWithOpenGL	services/surfaceflinger/Layer.cpp	/^void Layer::clearWithOpenGL($/;"	f	class:android::Layer
clearWithOpenGL	services/surfaceflinger/Layer.cpp	/^void Layer::clearWithOpenGL(const sp<const DisplayDevice>& hw,$/;"	f	class:android::Layer
clear_args	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::clear_args() {$/;"	f	class:android::gltrace::GLMessage
clear_boolvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::clear_boolvalue() {$/;"	f	class:android::gltrace::GLMessage_DataType
clear_cache_files	cmds/installd/utils.c	/^void clear_cache_files(cache_t* cache, int64_t free_size)$/;"	f
clear_charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::clear_charvalue() {$/;"	f	class:android::gltrace::GLMessage_DataType
clear_contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::clear_contents() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
clear_context_id	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::clear_context_id() {$/;"	f	class:android::gltrace::GLMessage
clear_duration	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::clear_duration() {$/;"	f	class:android::gltrace::GLMessage
clear_fb	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::clear_fb() {$/;"	f	class:android::gltrace::GLMessage
clear_floatvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::clear_floatvalue() {$/;"	f	class:android::gltrace::GLMessage_DataType
clear_function	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::clear_function() {$/;"	f	class:android::gltrace::GLMessage
clear_height	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::clear_height() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
clear_int64value	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::clear_int64value() {$/;"	f	class:android::gltrace::GLMessage_DataType
clear_intvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::clear_intvalue() {$/;"	f	class:android::gltrace::GLMessage_DataType
clear_isarray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::clear_isarray() {$/;"	f	class:android::gltrace::GLMessage_DataType
clear_rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::clear_rawbytes() {$/;"	f	class:android::gltrace::GLMessage_DataType
clear_returnvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::clear_returnvalue() {$/;"	f	class:android::gltrace::GLMessage
clear_start_time	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::clear_start_time() {$/;"	f	class:android::gltrace::GLMessage
clear_threadtime	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::clear_threadtime() {$/;"	f	class:android::gltrace::GLMessage
clear_type	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::clear_type() {$/;"	f	class:android::gltrace::GLMessage_DataType
clear_width	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::clear_width() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
client	include/private/gui/LayerState.h	/^    sp<ISurfaceComposerClient> client;$/;"	m	struct:android::ComposerState
clientApi	opengl/libs/EGL/egl_display.h	/^        char const * clientApi;$/;"	m	struct:android::egl_display_t::strings_t
clientChannel	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^    sp<InputChannel> serverChannel, clientChannel;$/;"	m	class:android::InputPublisherAndConsumerTest	file:
clip	opengl/libagl/context.h	/^    vec4_t          clip;$/;"	m	struct:android::gl::vertex_t
clipAllPerspective	opengl/libagl/vertex.cpp	/^void clipAllPerspective(ogles_context_t* c, vertex_t* v, uint32_t enables)$/;"	f	namespace:android
clipDivide	opengl/libagl/primitives.cpp	/^int32_t clipDivide(GLfixed a, GLfixed b) {$/;"	f	namespace:android
clipEye	opengl/libagl/array.cpp	/^static void clipEye(ogles_context_t* c, vertex_t* nv,$/;"	f	namespace:android
clipEye	opengl/libagl/context.h	/^    void (*clipEye)(ogles_context_t* c, vertex_t* nv,$/;"	m	struct:android::gl::array_machine_t
clipFrustumPerspective	opengl/libagl/vertex.cpp	/^void clipFrustumPerspective(ogles_context_t* c, vertex_t* v, uint32_t enables)$/;"	f	namespace:android
clipPlanes	opengl/libagl/context.h	/^    user_clip_planes_t      clipPlanes;$/;"	m	struct:android::gl::ogles_context_t
clipPlanex	opengl/libagl/vertex.cpp	/^static void clipPlanex(GLenum plane, const GLfixed* equ, ogles_context_t* c)$/;"	f	namespace:android
clipVec4	opengl/libagl/array.cpp	/^static void clipVec4(vec4_t& nv,$/;"	f	namespace:android
clipVertex	opengl/libagl/array.cpp	/^static void clipVertex(ogles_context_t* c, vertex_t* nv,$/;"	f	namespace:android
clipVertex	opengl/libagl/context.h	/^    void (*clipVertex)(ogles_context_t* c, vertex_t* nv,$/;"	m	struct:android::gl::array_machine_t
clipVertexAll	opengl/libagl/array.cpp	/^static void clipVertexAll(ogles_context_t* c, vertex_t* nv,$/;"	f	namespace:android
clipVertexC	opengl/libagl/array.cpp	/^static void clipVertexC(ogles_context_t* c, vertex_t* nv,$/;"	f	namespace:android
clipVertexT	opengl/libagl/array.cpp	/^static void clipVertexT(ogles_context_t* c, vertex_t* nv,$/;"	f	namespace:android
clip_line	opengl/libagl/primitives.cpp	/^unsigned int clip_line(ogles_context_t* c, vertex_t* s, vertex_t* p)$/;"	f	namespace:android
clip_plane_t	opengl/libagl/context.h	/^struct clip_plane_t {$/;"	s	namespace:android::gl
clip_triangle	opengl/libagl/primitives.cpp	/^void clip_triangle(ogles_context_t* c,$/;"	f	namespace:android
close	opengl/libs/EGL/Loader.cpp	/^status_t Loader::close(void* driver)$/;"	f	class:android::Loader
close	services/inputflinger/EventHub.cpp	/^void EventHub::Device::close() {$/;"	f	class:android::EventHub::Device
close	services/surfaceflinger/Barrier.h	/^    void close() {$/;"	f	class:android::Barrier
closeAllDevicesLocked	services/inputflinger/EventHub.cpp	/^void EventHub::closeAllDevicesLocked() {$/;"	f	class:android::EventHub
closeDeviceByPathLocked	services/inputflinger/EventHub.cpp	/^status_t EventHub::closeDeviceByPathLocked(const char *devicePath) {$/;"	f	class:android::EventHub
closeDeviceLocked	services/inputflinger/EventHub.cpp	/^void EventHub::closeDeviceLocked(Device* device) {$/;"	f	class:android::EventHub
closeFileDescriptors	libs/binder/Parcel.cpp	/^void Parcel::closeFileDescriptors()$/;"	f	class:android::Parcel
closeGlobalTransaction	libs/gui/SurfaceComposerClient.cpp	/^    static void closeGlobalTransaction(bool synchronous) {$/;"	f	class:android::Composer
closeGlobalTransaction	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::closeGlobalTransaction(bool synchronous) {$/;"	f	class:android::SurfaceComposerClient
closeGlobalTransactionImpl	libs/gui/SurfaceComposerClient.cpp	/^void Composer::closeGlobalTransactionImpl(bool synchronous) {$/;"	f	class:android::Composer
closeStream	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^void TCPStream::closeStream() {$/;"	f	class:android::gltrace::TCPStream
clz	services/surfaceflinger/clz.h	/^int inline clz(int32_t x) {$/;"	f	namespace:android
cmd_name	cmds/servicemanager/binder.c	/^const char *cmd_name(uint32_t cmd)$/;"	f
cmdinfo	cmds/installd/installd.c	/^struct cmdinfo {$/;"	s	file:
cmdline_buf	cmds/dumpstate/dumpstate.c	/^static char cmdline_buf[16384] = "(unknown)";$/;"	v	file:
cmds	cmds/installd/installd.c	/^struct cmdinfo cmds[] = {$/;"	v	typeref:struct:cmdinfo
cmpDouble	cmds/flatland/Main.cpp	/^static int cmpDouble(const double* lhs, const double* rhs) {$/;"	f	file:
cmpf	opengl/libagl/fp.h	/^bool cmpf(GLfloat a, GLfloat b) {$/;"	f	namespace:android::gl
cnx	opengl/libs/EGL/egl_object.h	/^    egl_connection_t const* cnx;$/;"	m	class:android::egl_context_t
cnx	opengl/libs/EGL/egl_object.h	/^    egl_connection_t const* cnx;$/;"	m	class:android::egl_surface_t
code	services/inputflinger/EventHub.h	/^    int32_t code;$/;"	m	struct:android::RawEvent
code	services/surfaceflinger/SurfaceFlinger.cpp	/^    uint32_t code;$/;"	m	class:android::GraphicProducerWrapper	file:
col_size	include/ui/mat4.h	/^    static inline size_t col_size() { return COL_SIZE; }$/;"	f	class:android::tmat44
col_type	include/ui/mat4.h	/^    typedef tvec4<T> col_type;$/;"	t	class:android::tmat44
color	opengl/libagl/context.h	/^    array_t         color;$/;"	m	struct:android::gl::array_machine_t
color	opengl/libagl/context.h	/^    vec4_t          color;$/;"	m	struct:android::gl::vertex_t
color	opengl/tests/hwc/hwcCommit.cpp	/^    ColorFract   color;$/;"	m	class:Rectangle	file:
color	opengl/tests/hwc/hwcRects.cpp	/^    ColorFract   color;$/;"	m	class:Rectangle	file:
color	services/surfaceflinger/Colorizer.h	/^    enum color {$/;"	g	class:android::Colorizer
colorArray	opengl/tests/angeles/demo.c	/^    GLubyte *colorArray;$/;"	m	struct:__anon235	file:
colorMaterial	opengl/libagl/context.h	/^    color_material_t    colorMaterial;$/;"	m	struct:android::gl::lighting_t
colorTransform	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        mat4 colorTransform;$/;"	m	struct:android::GLES20RenderEngine::Group
color_clamp_fct	opengl/libagl/array.cpp	/^static const fn_t color_clamp_fct[2][16] = { \/\/ size={3,4}, type={ub,f,x}$/;"	m	namespace:android	file:
color_fct	opengl/libagl/array.cpp	/^static const fn_t color_fct[2][16] = { \/\/ size={3,4}, type={ub,f,x}$/;"	m	namespace:android	file:
color_material_t	opengl/libagl/context.h	/^struct color_material_t {$/;"	s	namespace:android::gl
colorize	services/surfaceflinger/Colorizer.h	/^    void colorize(String8& out, color c) {$/;"	f	class:android::Colorizer
colors	cmds/flatland/Renderers.cpp	/^static float colors[][4] = {$/;"	m	namespace:android	file:
column_builder	services/sensorservice/mat.h	/^        column_builder(mat& matrix) : matrix(matrix) { }$/;"	f	struct:android::mat::column_builder
column_builder	services/sensorservice/mat.h	/^    struct column_builder {$/;"	s	class:android::mat
com.android.gl2cameraeye	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^package com.android.gl2cameraeye;$/;"	p
com.android.gl2java	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaActivity.java	/^package com.android.gl2java;$/;"	p
com.android.gl2java	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^package com.android.gl2java;$/;"	p
com.android.gl2jni	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIActivity.java	/^package com.android.gl2jni;$/;"	p
com.android.gl2jni	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNILib.java	/^package com.android.gl2jni;$/;"	p
com.android.gl2jni	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^package com.android.gl2jni;$/;"	p
com.android.gldual	opengl/tests/gldual/src/com/android/gldual/GLDualActivity.java	/^package com.android.gldual;$/;"	p
com.android.gldual	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^package com.android.gldual;$/;"	p
com.android.gldual	opengl/tests/gldual/src/com/android/gldual/GLDualLib.java	/^package com.android.gldual;$/;"	p
com.android.gldual	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^package com.android.gldual;$/;"	p
com.android.gljni	opengl/tests/gl_jni/src/com/android/gljni/GLJNIActivity.java	/^package com.android.gljni;$/;"	p
com.android.gljni	opengl/tests/gl_jni/src/com/android/gljni/GLJNILib.java	/^package com.android.gljni;$/;"	p
com.android.gljni	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^package com.android.gljni;$/;"	p
com.android.glperf	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfActivity.java	/^package com.android.glperf;$/;"	p
com.android.glperf	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfLib.java	/^package com.android.glperf;$/;"	p
com.android.glperf	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^package com.android.glperf;$/;"	p
com.android.lightingtest	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^package com.android.lightingtest;$/;"	p
com.android.test	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^package com.android.test;$/;"	p
com.android.test	opengl/tests/testPauseResume/src/com/android/test/TestView.java	/^package com.android.test;$/;"	p
com.android.test	opengl/tests/testViewport/src/com/android/test/TestActivity.java	/^package com.android.test;$/;"	p
com.android.test	opengl/tests/testViewport/src/com/android/test/TestView.java	/^package com.android.test;$/;"	p
com.android.testframerate	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateActivity.java	/^package com.android.testframerate;$/;"	p
com.android.testframerate	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^package com.android.testframerate;$/;"	p
com.android.testlatency	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyActivity.java	/^package com.android.testlatency;$/;"	p
com.android.testlatency	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^package com.android.testlatency;$/;"	p
combine	libs/input/KeyCharacterMap.cpp	/^sp<KeyCharacterMap> KeyCharacterMap::combine(const sp<KeyCharacterMap>& base,$/;"	f	class:android::KeyCharacterMap
combinedKeyMap	services/inputflinger/EventHub.h	/^        sp<KeyCharacterMap> combinedKeyMap;$/;"	m	struct:android::EventHub::Device
command	services/inputflinger/InputDispatcher.h	/^        Command command;$/;"	m	struct:android::InputDispatcher::CommandEntry
commandReceiveTask	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^static void *commandReceiveTask(void *arg) {$/;"	f	namespace:android
commit	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::commit() {$/;"	f	class:android::HWComposer
commitTransaction	services/surfaceflinger/Layer.cpp	/^void Layer::commitTransaction() {$/;"	f	class:android::Layer
commitTransaction	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::commitTransaction()$/;"	f	class:android::SurfaceFlinger
commonSources	libs/input/Android.mk	/^commonSources := \\$/;"	m
common_cflags	cmds/installd/Android.mk	/^common_cflags := -Wall -Werror$/;"	m
common_src_files	cmds/installd/Android.mk	/^common_src_files := commands.c utils.c$/;"	m
compType	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        int32_t compType[MAX_LAYER_COUNT];$/;"	m	struct:android::HWComposer::CompMap
compareGLEnum	opengl/libs/EGL/trace.cpp	/^static int compareGLEnum(const void* a, const void* b) {$/;"	f	namespace:android
compareGenerated	opengl/tools/glgen/gen	/^compareGenerated() {$/;"	f
compare_prop	cmds/dumpstate/utils.c	/^static int compare_prop(const void *a, const void *b) {$/;"	f	file:
compare_type	libs/gui/SurfaceComposerClient.cpp	/^int compare_type(const ComposerState& lhs, const ComposerState& rhs) {$/;"	f	namespace:android
compare_type	libs/gui/SurfaceComposerClient.cpp	/^int compare_type(const DisplayState& lhs, const DisplayState& rhs) {$/;"	f	namespace:android
compileElement	opengl/libagl/context.h	/^    void (*compileElement)(ogles_context_t*, vertex_t*, GLint);$/;"	m	struct:android::gl::array_machine_t
compileElement__generic	opengl/libagl/array.cpp	/^void compileElement__generic(ogles_context_t* c,$/;"	f	namespace:android
compileElements	opengl/libagl/context.h	/^    void (*compileElements)(ogles_context_t*, vertex_t*, GLint, GLsizei);$/;"	m	struct:android::gl::array_machine_t
compileElements__generic	opengl/libagl/array.cpp	/^void compileElements__generic(ogles_context_t* c,$/;"	f	namespace:android
compileShader	cmds/flatland/GLHelper.cpp	/^static bool compileShader(GLenum shaderType, const char* src,$/;"	f	namespace:android
compileShaderLines	cmds/flatland/GLHelper.cpp	/^static bool compileShaderLines(GLenum shaderType, const char* const* lines,$/;"	f	namespace:android
components	include/ui/PixelFormat.h	/^    uint8_t     components;$/;"	m	struct:android::PixelFormatInfo
components	libs/ui/PixelFormat.cpp	/^    uint8_t     components;$/;"	m	struct:android::Info	file:
compose	cmds/flatland/Composers.cpp	/^    virtual bool compose(GLuint \/*texName*\/, const sp<GLConsumer>& \/*glc*\/) {$/;"	f	class:android::ComposerBase
compose	cmds/flatland/Main.cpp	/^    bool compose() {$/;"	f	class:Layer
composerFactory	cmds/flatland/Flatland.h	/^    Composer* (*composerFactory)();$/;"	m	struct:android::LayerDesc
composerServiceDied	libs/gui/SurfaceComposerClient.cpp	/^void ComposerService::composerServiceDied()$/;"	f	class:android::ComposerService
compositionComplete	libs/ui/FramebufferNativeWindow.cpp	/^status_t FramebufferNativeWindow::compositionComplete()$/;"	f	class:android::FramebufferNativeWindow
compositionComplete	services/surfaceflinger/DisplayDevice.cpp	/^status_t DisplayDevice::compositionComplete() const {$/;"	f	class:DisplayDevice
compositionComplete	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^status_t FramebufferSurface::compositionComplete()$/;"	f	class:android::FramebufferSurface
compositionComplete	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::compositionComplete() {$/;"	f	class:android::VirtualDisplaySurface
compressedFormat	include/ui/ANativeObjectBase.h	/^        uint32_t    compressedFormat;$/;"	m	union:egl_native_pixmap_t::__anon102
computeBounds	services/surfaceflinger/Layer.cpp	/^Rect Layer::computeBounds() const {$/;"	f	class:android::Layer
computeBounds	services/surfaceflinger/Layer.cpp	/^Rect Layer::computeBounds(const Region& activeTransparentRegion) const {$/;"	f	class:android::Layer
computeBufferTransform	services/surfaceflinger/Layer.cpp	/^Transform Layer::computeBufferTransform(const sp<const DisplayDevice>& hw) const$/;"	f	class:android::Layer
computeCrop	services/surfaceflinger/Layer.cpp	/^FloatRect Layer::computeCrop(const sp<const DisplayDevice>& hw) const {$/;"	f	class:android::Layer
computeCurrentTransformMatrixLocked	libs/gui/GLConsumer.cpp	/^void GLConsumer::computeCurrentTransformMatrixLocked() {$/;"	f	class:android::GLConsumer
computeExpectedPresent	services/surfaceflinger/SurfaceFlingerConsumer.cpp	/^nsecs_t SurfaceFlingerConsumer::computeExpectedPresent(const DispSync& dispSync)$/;"	f	class:android::SurfaceFlingerConsumer
computeGeometry	services/surfaceflinger/Layer.cpp	/^void Layer::computeGeometry(const sp<const DisplayDevice>& hw, Mesh& mesh,$/;"	f	class:android::Layer
computeKey	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^ProgramCache::Key ProgramCache::computeKey(const Description& description) {$/;"	f	class:android::ProgramCache
computeListenerNextEventTimeLocked	services/surfaceflinger/DispSync.cpp	/^    nsecs_t computeListenerNextEventTimeLocked(const EventListener& listener,$/;"	f	class:android::DispSyncThread	file:
computeMaxCacheSizeLocked	services/sensorservice/SensorService.cpp	/^int SensorService::SensorEventConnection::computeMaxCacheSizeLocked() const {$/;"	f	class:android::SensorService::SensorEventConnection
computeNextEventTimeLocked	services/surfaceflinger/DispSync.cpp	/^    nsecs_t computeNextEventTimeLocked(nsecs_t now) {$/;"	f	class:android::DispSyncThread	file:
computeNextRefresh	services/surfaceflinger/DispSync.cpp	/^nsecs_t DispSync::computeNextRefresh(int periodOffset) const {$/;"	f	class:android::DispSync
computeTiledDr	services/surfaceflinger/SurfaceFlinger.cpp	/^bool SurfaceFlinger::computeTiledDr(const sp<const DisplayDevice>& hw) {$/;"	f	class:android::SurfaceFlinger
computeUnionDirtyRect	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::computeUnionDirtyRect(int32_t id, Rect& unionDirtyRect) {$/;"	f	class:android::HWComposer
computeVisibleRegions	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::computeVisibleRegions(size_t dpy,$/;"	f	class:android::SurfaceFlinger
computeWindowScale	cmds/flatland/GLHelper.cpp	/^bool GLHelper::computeWindowScale(uint32_t w, uint32_t h, float* scale) {$/;"	f	class:android::GLHelper
compute_iterators_t	opengl/libagl/context.h	/^struct compute_iterators_t$/;"	s	namespace:android::gl
compute_lod	opengl/libagl/primitives.cpp	/^int compute_lod(ogles_context_t* c, int i,$/;"	f	namespace:android
confidence	include/input/VelocityTracker.h	/^        float confidence;$/;"	m	struct:android::VelocityTracker::Estimator
config	opengl/libagl/egl.cpp	/^    EGLConfig           config;$/;"	m	struct:android::egl_context_t	file:
config	opengl/libagl/egl.cpp	/^    EGLConfig           config;$/;"	m	struct:android::egl_surface_t	file:
config	opengl/libs/EGL/egl_object.h	/^    EGLConfig config;$/;"	m	class:android::egl_context_t
config	opengl/libs/EGL/egl_object.h	/^    EGLConfig config;$/;"	m	class:android::egl_surface_t
config_0_attribute_list	opengl/libagl/egl.cpp	/^static config_pair_t const config_0_attribute_list[] = {$/;"	m	namespace:android	file:
config_1_attribute_list	opengl/libagl/egl.cpp	/^static config_pair_t const config_1_attribute_list[] = {$/;"	m	namespace:android	file:
config_2_attribute_list	opengl/libagl/egl.cpp	/^static config_pair_t const config_2_attribute_list[] = {$/;"	m	namespace:android	file:
config_3_attribute_list	opengl/libagl/egl.cpp	/^static config_pair_t const config_3_attribute_list[] = {$/;"	m	namespace:android	file:
config_4_attribute_list	opengl/libagl/egl.cpp	/^static config_pair_t const config_4_attribute_list[] = {$/;"	m	namespace:android	file:
config_5_attribute_list	opengl/libagl/egl.cpp	/^static config_pair_t const config_5_attribute_list[] = {$/;"	m	namespace:android	file:
config_6_attribute_list	opengl/libagl/egl.cpp	/^static config_pair_t const config_6_attribute_list[] = {$/;"	m	namespace:android	file:
config_7_attribute_list	opengl/libagl/egl.cpp	/^static config_pair_t const config_7_attribute_list[] = {$/;"	m	namespace:android	file:
config_base_attribute_list	opengl/libagl/egl.cpp	/^static config_pair_t const config_base_attribute_list[] = {$/;"	m	namespace:android	file:
config_defaults	opengl/libagl/egl.cpp	/^static config_pair_t const config_defaults[] = {$/;"	m	namespace:android	file:
config_management_t	opengl/libagl/egl.cpp	/^struct config_management_t {$/;"	s	namespace:android	file:
config_pair_t	opengl/libagl/egl.cpp	/^struct config_pair_t {$/;"	s	namespace:android	file:
configs	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        Vector<DisplayConfig> configs;$/;"	m	struct:android::HWComposer::DisplayData
configs_t	opengl/libagl/egl.cpp	/^struct configs_t {$/;"	s	namespace:android	file:
configuration	services/inputflinger/EventHub.h	/^        PropertyMap* configuration;$/;"	m	struct:android::EventHub::Device
configuration	services/inputflinger/tests/InputReader_test.cpp	/^        PropertyMap configuration;$/;"	m	struct:android::FakeEventHub::Device	file:
configurationFile	services/inputflinger/EventHub.h	/^        String8 configurationFile;$/;"	m	struct:android::EventHub::Device
configure	services/inputflinger/InputReader.cpp	/^void CursorInputMapper::configure(nsecs_t when,$/;"	f	class:android::CursorInputMapper
configure	services/inputflinger/InputReader.cpp	/^void CursorScrollAccumulator::configure(InputDevice* device) {$/;"	f	class:android::CursorScrollAccumulator
configure	services/inputflinger/InputReader.cpp	/^void InputDevice::configure(nsecs_t when, const InputReaderConfiguration* config, uint32_t changes) {$/;"	f	class:android::InputDevice
configure	services/inputflinger/InputReader.cpp	/^void InputMapper::configure(nsecs_t when,$/;"	f	class:android::InputMapper
configure	services/inputflinger/InputReader.cpp	/^void JoystickInputMapper::configure(nsecs_t when,$/;"	f	class:android::JoystickInputMapper
configure	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::configure(nsecs_t when,$/;"	f	class:android::KeyboardInputMapper
configure	services/inputflinger/InputReader.cpp	/^void MultiTouchMotionAccumulator::configure(InputDevice* device,$/;"	f	class:android::MultiTouchMotionAccumulator
configure	services/inputflinger/InputReader.cpp	/^void TouchButtonAccumulator::configure(InputDevice* device) {$/;"	f	class:android::TouchButtonAccumulator
configure	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::configure(nsecs_t when,$/;"	f	class:android::TouchInputMapper
configure	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void configure(nsecs_t when,$/;"	f	class:android::FakeInputMapper	file:
configureANW	libs/gui/tests/CpuConsumer_test.cpp	/^void configureANW(const sp<ANativeWindow>& anw,$/;"	f	namespace:android
configureLightAndMaterial	opengl/tests/angeles/demo.c	/^static void configureLightAndMaterial()$/;"	f	file:
configureParameters	services/inputflinger/InputReader.cpp	/^void CursorInputMapper::configureParameters() {$/;"	f	class:android::CursorInputMapper
configureParameters	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::configureParameters() {$/;"	f	class:android::KeyboardInputMapper
configureParameters	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::configureParameters() {$/;"	f	class:android::TouchInputMapper
configureRawPointerAxes	services/inputflinger/InputReader.cpp	/^void MultiTouchInputMapper::configureRawPointerAxes() {$/;"	f	class:android::MultiTouchInputMapper
configureRawPointerAxes	services/inputflinger/InputReader.cpp	/^void SingleTouchInputMapper::configureRawPointerAxes() {$/;"	f	class:android::SingleTouchInputMapper
configureRawPointerAxes	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::configureRawPointerAxes() {$/;"	f	class:android::TouchInputMapper
configureStrategy	libs/input/VelocityTracker.cpp	/^bool VelocityTracker::configureStrategy(const char* strategy) {$/;"	f	class:android::VelocityTracker
configureSurface	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::configureSurface(nsecs_t when, bool* outResetNeeded) {$/;"	f	class:android::TouchInputMapper
configureVirtualDisplay	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::configureVirtualDisplay(int32_t &hwcDisplayId,$/;"	f	class:android::SurfaceFlinger
configureVirtualKeys	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::configureVirtualKeys() {$/;"	f	class:android::TouchInputMapper
connect	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::connect($/;"	f	class:android::BufferQueueConsumer
connect	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::connect(const sp<IProducerListener>& listener,$/;"	f	class:android::BufferQueueProducer
connect	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t connect(const sp<IProducerListener>& listener,$/;"	f	class:android::BpGraphicBufferProducer
connect	libs/gui/Surface.cpp	/^int Surface::connect(int api) {$/;"	f	class:android::Surface
connect	opengl/libagl/egl.cpp	/^    virtual     EGLBoolean  connect() { return EGL_TRUE; }$/;"	f	struct:android::egl_surface_t
connect	opengl/libagl/egl.cpp	/^EGLBoolean egl_window_surface_v2_t::connect() $/;"	f	class:android::egl_window_surface_v2_t
connect	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::connect(const sp<IProducerListener>& listener,$/;"	f	class:android::VirtualDisplaySurface
connect	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::connect(const sp<IProducerListener>& listener,$/;"	f	class:android::MonitoredProducer
connectLocked	libs/gui/SurfaceComposerClient.cpp	/^void ComposerService::connectLocked() {$/;"	f	class:android::ComposerService
connected	include/gui/DisplayEventReceiver.h	/^            bool connected;$/;"	m	struct:android::DisplayEventReceiver::Event::Hotplug
connected	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        bool connected;$/;"	m	struct:android::HWComposer::DisplayData
connection	libs/gui/SurfaceComposerClient.cpp	/^sp<IBinder> SurfaceComposerClient::connection() const {$/;"	f	class:android::SurfaceComposerClient
connection	services/inputflinger/InputDispatcher.h	/^        sp<Connection> connection;$/;"	m	struct:android::InputDispatcher::CommandEntry
const_iterator	include/ui/Region.h	/^    typedef Rect const* const_iterator;$/;"	t	class:android::Region
const_iterator	opengl/libagl/egl.cpp	/^        typedef Rect const* const_iterator;$/;"	t	struct:android::egl_window_surface_v2_t::Region	file:
const_iterator	services/sensorservice/vec.h	/^    typedef TYPE const* const_iterator;$/;"	t	class:android::vec
const_reference	include/ui/mat4.h	/^    typedef T const& const_reference;$/;"	t	class:android::tmat44
const_reference	include/ui/vec2.h	/^    typedef T const& const_reference;$/;"	t	class:android::tvec2
const_reference	include/ui/vec3.h	/^    typedef T const& const_reference;$/;"	t	class:android::tvec3
const_reference	include/ui/vec4.h	/^    typedef T const& const_reference;$/;"	t	class:android::tvec4
const_reference	services/sensorservice/mat.h	/^    typedef TYPE const& const_reference;$/;"	t	class:android::mat
const_reference	services/sensorservice/vec.h	/^    typedef TYPE const& const_reference;$/;"	t	class:android::vec
consume	libs/input/InputTransport.cpp	/^status_t InputConsumer::consume(InputEventFactoryInterface* factory,$/;"	f	class:android::InputConsumer
consumeBatch	libs/input/InputTransport.cpp	/^status_t InputConsumer::consumeBatch(InputEventFactoryInterface* factory,$/;"	f	class:android::InputConsumer
consumeFieldDelimiterAndSkipWhitespace	libs/input/VirtualKeyMap.cpp	/^bool VirtualKeyMap::Parser::consumeFieldDelimiterAndSkipWhitespace() {$/;"	f	class:android::VirtualKeyMap::Parser
consumeRawTouches	services/inputflinger/InputReader.cpp	/^bool TouchInputMapper::consumeRawTouches(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
consumeSamples	libs/input/InputTransport.cpp	/^status_t InputConsumer::consumeSamples(InputEventFactoryInterface* factory,$/;"	f	class:android::InputConsumer
consumerConnect	include/gui/BufferQueueConsumer.h	/^    virtual status_t consumerConnect(const sp<IConsumerListener>& consumer,$/;"	f	class:android::BufferQueueConsumer
consumerConnect	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t consumerConnect(const sp<IConsumerListener>& consumer, bool controlledByApp) {$/;"	f	class:android::BpGraphicBufferConsumer
consumerDisconnect	include/gui/BufferQueueConsumer.h	/^    virtual status_t consumerDisconnect() { return disconnect(); }$/;"	f	class:android::BufferQueueConsumer
consumerDisconnect	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t consumerDisconnect() {$/;"	f	class:android::BpGraphicBufferConsumer
contains	libs/ui/Region.cpp	/^bool Region::contains(const Point& point) const {$/;"	f	class:android::Region
contains	libs/ui/Region.cpp	/^bool Region::contains(int x, int y) const {$/;"	f	class:android::Region
containsNonZeroByte	services/inputflinger/EventHub.cpp	/^static bool containsNonZeroByte(const uint8_t* array, uint32_t startIndex, uint32_t endIndex) {$/;"	f	namespace:android
contentDirty	services/surfaceflinger/Layer.h	/^    mutable bool contentDirty;$/;"	m	class:android::Layer
contentURI	include/media/openmax/OMX_Component.h	/^    OMX_U8 contentURI[1];               \/**< The URI name *\/$/;"	m	struct:OMX_PARAM_CONTENTURITYPE
contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_FrameBuffer::contents() const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline const ::std::string& GLMessage_FrameBuffer::contents(int index) const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
contents_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> contents_;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer
contents_size	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline int GLMessage_FrameBuffer::contents_size() const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
context	opengl/libagl/egl.cpp	/^    static inline egl_context_t* context(EGLContext ctx) {$/;"	f	struct:android::egl_context_t
context	opengl/libs/EGL/egl_object.h	/^    EGLContext context;$/;"	m	class:android::egl_context_t
context_check_func	include/binder/ProcessState.h	/^    typedef bool (*context_check_func)(const String16& name,$/;"	t	class:android::ProcessState
context_id	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::google::protobuf::int32 GLMessage::context_id() const {$/;"	f	class:android::gltrace::GLMessage
context_id_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::int32 context_id_;$/;"	m	class:android::gltrace::GLMessage
continueWrite	libs/binder/Parcel.cpp	/^status_t Parcel::continueWrite(size_t desired)$/;"	f	class:android::Parcel
controllerNumber	services/inputflinger/EventHub.h	/^        int32_t controllerNumber;$/;"	m	struct:android::EventHub::Device
convert	opengl/tools/glgen/src/JFunc.java	/^    public static JFunc convert(CFunc cfunc, boolean useArray) {$/;"	m	class:JFunc
convert	opengl/tools/glgen/src/JType.java	/^    public static JType convert(CType ctype, boolean useArray) {$/;"	m	class:JType
convert4To8	opengl/libs/ETC1/etc1.cpp	/^inline int convert4To8(int b) {$/;"	f	file:
convert5To8	opengl/libs/ETC1/etc1.cpp	/^inline int convert5To8(int b) {$/;"	f	file:
convert6To8	opengl/libs/ETC1/etc1.cpp	/^inline int convert6To8(int b) {$/;"	f	file:
convert8To4	opengl/libs/ETC1/etc1.cpp	/^inline int convert8To4(int b) {$/;"	f	file:
convert8To5	opengl/libs/ETC1/etc1.cpp	/^inline int convert8To5(int b) {$/;"	f	file:
convertDecoderOutputToI420	include/media/editor/II420ColorConverter.h	/^    int (*convertDecoderOutputToI420)($/;"	m	struct:II420ColorConverter
convertDiff	opengl/libs/ETC1/etc1.cpp	/^inline int convertDiff(int base, int diff) {$/;"	f	file:
convertGLPixelFormat	opengl/libagl/texture.cpp	/^static int32_t convertGLPixelFormat(GLint format, GLenum type)$/;"	f	namespace:android
convertI420ToEncoderInput	include/media/editor/II420ColorConverter.h	/^    int (*convertI420ToEncoderInput)($/;"	m	struct:II420ColorConverter
cookPointerData	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::cookPointerData() {$/;"	f	class:android::TouchInputMapper
cookie	include/binder/BpBinder.h	/^        void* cookie;$/;"	m	struct:android::BpBinder::Obituary
coords	include/input/InputTransport.h	/^                PointerCoords coords;$/;"	m	struct:android::InputMessage::Body::Motion::Pointer
coords	libs/input/tests/StructLayout_test.cpp	/^  PointerCoords coords;$/;"	m	struct:android::Foo	file:
copy	opengl/tools/glgen/src/GenerateEGL.java	/^    private static void copy(String filename, PrintStream out) throws IOException {$/;"	m	class:GenerateEGL	file:
copy	opengl/tools/glgen/src/GenerateGL.java	/^    static void copy(String filename, PrintStream out) throws IOException {$/;"	m	class:GenerateGL
copy	opengl/tools/glgen/src/GenerateGLES.java	/^    static void copy(String filename, PrintStream out) throws IOException {$/;"	m	class:GenerateGLES
copy	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        static HWCLayer* copy(HWCLayer *rhs) {$/;"	f	class:android::HWComposer::HWCLayer
copyBlt	libs/gui/Surface.cpp	/^static status_t copyBlt($/;"	f	namespace:android
copyBlt	opengl/libagl/egl.cpp	/^void egl_window_surface_v2_t::copyBlt($/;"	f	class:android::egl_window_surface_v2_t
copyBuffer	cmds/rawbu/backup.cpp	/^static char copyBuffer[8192];$/;"	m	namespace:android	file:
copyFrom	libs/input/Input.cpp	/^void MotionEvent::copyFrom(const MotionEvent* other, bool keepHistory) {$/;"	f	class:android::MotionEvent
copyFrom	libs/input/Input.cpp	/^void PointerCoords::copyFrom(const PointerCoords& other) {$/;"	f	class:android::PointerCoords
copyFrom	libs/input/Input.cpp	/^void PointerProperties::copyFrom(const PointerProperties& other) {$/;"	f	class:android::PointerProperties
copyFrom	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::TouchState::copyFrom(const TouchState& other) {$/;"	f	class:android::InputDispatcher::TouchState
copyFrom	services/inputflinger/InputReader.cpp	/^void CookedPointerData::copyFrom(const CookedPointerData& other) {$/;"	f	class:android::CookedPointerData
copyFrom	services/inputflinger/InputReader.cpp	/^void RawPointerData::copyFrom(const RawPointerData& other) {$/;"	f	class:android::RawPointerData
copyParameters	opengl/libagl/TextureObjectManager.cpp	/^void EGLTextureObject::copyParameters(const sp<EGLTextureObject>& old)$/;"	f	class:android::EGLTextureObject
copyPixels	opengl/libagl/texture.cpp	/^int copyPixels($/;"	f	namespace:android
copyPointerStateTo	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::InputState::copyPointerStateTo(InputState& other) const {$/;"	f	class:android::InputDispatcher::InputState
copyToDebugSurface	libs/gui/tests/SRGB_test.cpp	/^    void copyToDebugSurface() {$/;"	f	class:android::SRGBTest	file:
copy_and_append	cmds/installd/utils.c	/^int copy_and_append(dir_rec_t* dst, const dir_rec_t* src, const char* suffix) {$/;"	f
copy_dir_files	cmds/installd/utils.c	/^int copy_dir_files(const char *srcname,$/;"	f
copy_file	cmds/rawbu/backup.cpp	/^static int copy_file(FILE* dest, FILE* src, off_t size, const char* destName,$/;"	f	namespace:android
correction	services/surfaceflinger/Effects/Daltonizer.h	/^        correction$/;"	e	enum:android::Daltonizer::Mode
cosinef	opengl/libagl/fp.cpp	/^float cosinef(float x)$/;"	f	namespace:android::gl
count	cmds/installd/installd.h	/^    size_t count;$/;"	m	struct:__anon10
count	include/gui/DisplayEventReceiver.h	/^            uint32_t count;$/;"	m	struct:android::DisplayEventReceiver::Event::VSync
count	include/private/ui/RegionHelper.h	/^        size_t count;$/;"	m	struct:android::region_operator::region
count	libs/binder/IMemory.cpp	/^        int32_t         count;$/;"	m	struct:android::HeapCache::heap_info_t	file:
count	opengl/libagl/egl.cpp	/^        ssize_t count;$/;"	m	struct:android::egl_window_surface_v2_t::Region	file:
count	opengl/libs/EGL/egl_object.h	/^    mutable volatile int32_t count;$/;"	m	class:android::egl_object_t
count	opengl/tests/angeles/demo.c	/^    GLsizei count;$/;"	m	struct:__anon235	file:
count	services/inputflinger/InputDispatcher.h	/^        uint32_t count() const {$/;"	f	struct:android::InputDispatcher::Queue
count	services/sensorservice/BatteryService.h	/^        int32_t count;$/;"	m	struct:android::BatteryService::Info
count	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        int32_t count;$/;"	m	struct:android::HWComposer::CompMap
count	services/surfaceflinger/EventThread.h	/^        int32_t count;$/;"	m	class:android::EventThread::Connection
countFlushCompleteEventsLocked	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::countFlushCompleteEventsLocked($/;"	f	class:android::SensorService::SensorEventConnection
countLayers	cmds/flatland/Main.cpp	/^    static size_t countLayers(const BenchmarkDesc& desc) {$/;"	f	class:BenchmarkRunner	file:
coverageCalibration	services/inputflinger/InputReader.h	/^        CoverageCalibration coverageCalibration;$/;"	m	struct:android::TouchInputMapper::Calibration
coveredRegion	services/surfaceflinger/Layer.h	/^    Region coveredRegion;$/;"	m	class:android::Layer
crc32c	opengl/libs/EGL/egl_cache.cpp	/^static uint32_t crc32c(const uint8_t* buf, size_t len) {$/;"	f	namespace:android
create	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^RenderEngine* RenderEngine::create(EGLDisplay display, int hwcFormat) {$/;"	f	class:android::RenderEngine
createBlurLayer	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::createBlurLayer(const sp<Client>& client,$/;"	f	class:android::SurfaceFlinger
createBufferObjects	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       public void createBufferObjects(GL gl) {$/;"	m	class:TestView.Grid
createBufferQueue	libs/gui/BufferQueue.cpp	/^void BufferQueue::createBufferQueue(sp<IGraphicBufferProducer>* outProducer,$/;"	f	class:android::BufferQueue
createBufferQueue	libs/gui/tests/BufferQueue_test.cpp	/^    void createBufferQueue() {$/;"	f	class:android::BufferQueueTest
createBuiltinDisplayLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::createBuiltinDisplayLocked(DisplayDevice::DisplayType type,$/;"	f	class:android::SurfaceFlinger
createConnection	libs/gui/ISurfaceComposer.cpp	/^    virtual sp<ISurfaceComposerClient> createConnection()$/;"	f	class:android::BpSurfaceComposer
createConnection	services/surfaceflinger/SurfaceFlinger.cpp	/^sp<ISurfaceComposerClient> SurfaceFlinger::createConnection()$/;"	f	class:android::SurfaceFlinger
createContext	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        public EGLContext createContext(EGL10 egl, EGLDisplay display, EGLConfig eglConfig) {$/;"	m	class:GL2JNIView.ContextFactory
createContext	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        public EGLContext createContext(EGL10 egl, EGLDisplay display, EGLConfig eglConfig) {$/;"	m	class:GLPerfView.ContextFactory
createContext	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        public EGLContext createContext(EGL10 egl, EGLDisplay display, EGLConfig eglConfig) {$/;"	m	class:GLDualGL2View.ContextFactory
createDebugSurface	libs/gui/tests/SRGB_test.cpp	/^    void createDebugSurface() {$/;"	f	class:android::SRGBTest	file:
createDeviceLocked	services/inputflinger/InputReader.cpp	/^InputDevice* InputReader::createDeviceLocked(int32_t deviceId, int32_t controllerNumber,$/;"	f	class:android::InputReader
createDeviceLocked	services/inputflinger/tests/InputReader_test.cpp	/^    virtual InputDevice* createDeviceLocked(int32_t deviceId, int32_t controllerNumber,$/;"	f	class:android::InstrumentedInputReader
createDimLayer	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::createDimLayer(const sp<Client>& client,$/;"	f	class:android::SurfaceFlinger
createDisplay	libs/gui/ISurfaceComposer.cpp	/^    virtual sp<IBinder> createDisplay(const String8& displayName, bool secure)$/;"	f	class:android::BpSurfaceComposer
createDisplay	libs/gui/SurfaceComposerClient.cpp	/^sp<IBinder> Composer::createDisplay(const String8& displayName, bool secure) {$/;"	f	class:android::Composer
createDisplay	libs/gui/SurfaceComposerClient.cpp	/^sp<IBinder> SurfaceComposerClient::createDisplay(const String8& displayName,$/;"	f	class:android::SurfaceComposerClient
createDisplay	services/surfaceflinger/SurfaceFlinger.cpp	/^sp<IBinder> SurfaceFlinger::createDisplay(const String8& displayName,$/;"	f	class:android::SurfaceFlinger
createDisplayEventConnection	libs/gui/ISurfaceComposer.cpp	/^    virtual sp<IDisplayEventConnection> createDisplayEventConnection()$/;"	f	class:android::BpSurfaceComposer
createDisplayEventConnection	services/surfaceflinger/SurfaceFlinger.cpp	/^sp<IDisplayEventConnection> SurfaceFlinger::createDisplayEventConnection() {$/;"	f	class:android::SurfaceFlinger
createEGLSurface	libs/gui/tests/SRGB_test.cpp	/^    void createEGLSurface(Surface* inputSurface) {$/;"	f	class:android::SRGBTest	file:
createEventConnection	services/surfaceflinger/EventThread.cpp	/^sp<EventThread::Connection> EventThread::createEventConnection() const {$/;"	f	class:android::EventThread
createEventQueue	libs/gui/SensorManager.cpp	/^sp<SensorEventQueue> SensorManager::createEventQueue()$/;"	f	class:android::SensorManager
createGraphicBuffer	libs/gui/GraphicBufferAlloc.cpp	/^sp<GraphicBuffer> GraphicBufferAlloc::createGraphicBuffer(uint32_t w, uint32_t h,$/;"	f	class:android::GraphicBufferAlloc
createGraphicBuffer	libs/gui/IGraphicBufferAlloc.cpp	/^    virtual sp<GraphicBuffer> createGraphicBuffer(uint32_t w, uint32_t h,$/;"	f	class:android::BpGraphicBufferAlloc
createGraphicBuffer	libs/gui/tests/StreamSplitter_test.cpp	/^    virtual sp<GraphicBuffer> createGraphicBuffer(uint32_t w, uint32_t h,$/;"	f	class:android::CountedAllocator
createGraphicBufferAlloc	libs/gui/ISurfaceComposer.cpp	/^    virtual sp<IGraphicBufferAlloc> createGraphicBufferAlloc()$/;"	f	class:android::BpSurfaceComposer
createGraphicBufferAlloc	services/surfaceflinger/SurfaceFlinger.cpp	/^sp<IGraphicBufferAlloc> SurfaceFlinger::createGraphicBufferAlloc()$/;"	f	class:android::SurfaceFlinger
createGrid	opengl/tests/testViewport/src/com/android/test/TestView.java	/^        private void createGrid(GL10 gl, float w, float h) {$/;"	m	class:TestView.Renderer	file:
createGroundPlane	opengl/tests/angeles/demo.c	/^static GLOBJECT * createGroundPlane()$/;"	f	file:
createIfNeeded	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::EglImage::createIfNeeded(EGLDisplay eglDisplay,$/;"	f	class:android::GLConsumer::EglImage
createImage	libs/gui/GLConsumer.cpp	/^EGLImageKHR GLConsumer::EglImage::createImage(EGLDisplay dpy,$/;"	f	class:android::GLConsumer::EglImage
createKeyEvent	include/input/Input.h	/^    virtual KeyEvent* createKeyEvent() { return & mKeyEvent; }$/;"	f	class:android::PreallocatedInputEventFactory
createKeyEvent	libs/input/Input.cpp	/^KeyEvent* PooledInputEventFactory::createKeyEvent() {$/;"	f	class:android::PooledInputEventFactory
createLayer	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::createLayer($/;"	f	class:android::SurfaceFlinger
createMemory	libs/binder/MemoryHeapPmem.cpp	/^sp<MemoryHeapPmem::MemoryPmem> MemoryHeapPmem::createMemory($/;"	f	class:android::MemoryHeapPmem
createMotionEvent	include/input/Input.h	/^    virtual MotionEvent* createMotionEvent() { return & mMotionEvent; }$/;"	f	class:android::PreallocatedInputEventFactory
createMotionEvent	libs/input/Input.cpp	/^MotionEvent* PooledInputEventFactory::createMotionEvent() {$/;"	f	class:android::PooledInputEventFactory
createNamedSurfaceTexture	cmds/flatland/GLHelper.cpp	/^bool GLHelper::createNamedSurfaceTexture(GLuint name, uint32_t w, uint32_t h,$/;"	f	class:android::GLHelper
createNormalLayer	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::createNormalLayer(const sp<Client>& client,$/;"	f	class:android::SurfaceFlinger
createPbufferSurface	opengl/libagl/egl.cpp	/^static EGLSurface createPbufferSurface(EGLDisplay dpy, EGLConfig config,$/;"	f	namespace:android
createPixmapSurface	opengl/libagl/egl.cpp	/^static EGLSurface createPixmapSurface(EGLDisplay dpy, EGLConfig config,$/;"	f	namespace:android
createProcessUniqueId	libs/gui/ConsumerBase.cpp	/^static int32_t createProcessUniqueId() {$/;"	f	namespace:android
createProgram	libs/gui/tests/GLTest.cpp	/^void GLTest::createProgram(const char* pVertexSource,$/;"	f	class:android::GLTest
createProgram	opengl/tests/gl2_basic/gl2_basic.cpp	/^GLuint createProgram(const char* pVertexSource, const char* pFragmentSource) {$/;"	f
createProgram	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private int createProgram(String vertexSource, String fragmentSource) {$/;"	m	class:CamRenderer	file:
createProgram	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint createProgram(const char* pVertexSource, const char* pFragmentSource) {$/;"	f
createProgram	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        private int createProgram(String vertexSource, String fragmentSource) {$/;"	m	class:GL2JavaView.Renderer	file:
createProgram	opengl/tests/gl2_jni/jni/gl_code.cpp	/^GLuint createProgram(const char* pVertexSource, const char* pFragmentSource) {$/;"	f
createProgram	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^GLuint createProgram(const char* pVertexSource, const char* pFragmentSource) {$/;"	f
createProgram	opengl/tests/gl_perf/fill_common.cpp	/^GLuint createProgram(const char* pVertexSource, const char* pFragmentSource) {$/;"	f
createProgram	opengl/tests/gldual/jni/gl_code.cpp	/^GLuint createProgram(const char* pVertexSource, const char* pFragmentSource) {$/;"	f
createProgram	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private int createProgram(String vertexSource, String fragmentSource) {$/;"	m	class:TestLatencyView.Renderer	file:
createSensorEventConnection	libs/gui/ISensorServer.cpp	/^    virtual sp<ISensorEventConnection> createSensorEventConnection()$/;"	f	class:android::BpSensorServer
createSensorEventConnection	services/sensorservice/SensorService.cpp	/^sp<ISensorEventConnection> SensorService::createSensorEventConnection()$/;"	f	class:android::SensorService
createSplitter	libs/gui/StreamSplitter.cpp	/^status_t StreamSplitter::createSplitter($/;"	f	class:android::StreamSplitter
createStrategy	libs/input/VelocityTracker.cpp	/^VelocityTrackerStrategy* VelocityTracker::createStrategy(const char* strategy) {$/;"	f	class:android::VelocityTracker
createSuperShape	opengl/tests/angeles/demo.c	/^static GLOBJECT * createSuperShape(const float *params)$/;"	f	file:
createSurface	libs/gui/ISurfaceComposerClient.cpp	/^    virtual status_t createSurface(const String8& name, uint32_t w,$/;"	f	class:android::BpSurfaceComposerClient
createSurface	libs/gui/SurfaceComposerClient.cpp	/^sp<SurfaceControl> SurfaceComposerClient::createSurface($/;"	f	class:android::SurfaceComposerClient
createSurface	services/surfaceflinger/Client.cpp	/^status_t Client::createSurface($/;"	f	class:android::Client
createSurfaceTexture	cmds/flatland/GLHelper.cpp	/^bool GLHelper::createSurfaceTexture(uint32_t w, uint32_t h,$/;"	f	class:android::GLHelper
createTJunctionFreeRegion	libs/ui/Region.cpp	/^Region Region::createTJunctionFreeRegion(const Region& r) {$/;"	f	class:android::Region
createTLSKey	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void createTLSKey() {$/;"	f	namespace:android::gltrace
createTexture	opengl/libagl/TextureObjectManager.cpp	/^sp<EGLTextureObject> EGLSurfaceManager::createTexture(GLuint name)$/;"	f	class:android::EGLSurfaceManager
createTextureSurface	opengl/libagl/texture.cpp	/^int createTextureSurface(ogles_context_t* c,$/;"	f	namespace:android
createTraceContext	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^GLTraceContext *GLTraceState::createTraceContext(int version, EGLContext eglContext) {$/;"	f	class:android::gltrace::GLTraceState
createVirtualKeyboardLocked	services/inputflinger/EventHub.cpp	/^void EventHub::createVirtualKeyboardLocked() {$/;"	f	class:android::EventHub
createWindowSurface	cmds/flatland/GLHelper.cpp	/^bool GLHelper::createWindowSurface(uint32_t w, uint32_t h,$/;"	f	class:android::GLHelper
createWindowSurface	libs/gui/tests/GLTest.cpp	/^EGLSurface GLTest::createWindowSurface(EGLDisplay display, EGLConfig config,$/;"	f	class:android::GLTest
createWindowSurface	opengl/libagl/egl.cpp	/^static EGLSurface createWindowSurface(EGLDisplay dpy, EGLConfig config,$/;"	f	namespace:android
createWorkList	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::createWorkList(int32_t id, size_t numLayers) {$/;"	f	class:android::HWComposer
create_cache_path	cmds/installd/commands.c	/^int create_cache_path(char path[PKG_PATH_MAX], const char *src, const char *instruction_set)$/;"	f
create_dir_path	cmds/installd/utils.c	/^static char *create_dir_path(char path[PATH_MAX], cache_dir_t* dir)$/;"	f	file:
create_move_path	cmds/installd/utils.c	/^int create_move_path(char path[PKG_PATH_MAX],$/;"	f
create_pkg_path	cmds/installd/utils.c	/^int create_pkg_path(char path[PKG_PATH_MAX],$/;"	f
create_pkg_path_in_dir	cmds/installd/utils.c	/^int create_pkg_path_in_dir(char path[PKG_PATH_MAX],$/;"	f
create_profile_file	cmds/installd/utils.c	/^int create_profile_file(const char *pkgname, gid_t gid) {$/;"	f
create_texture	opengl/tests/gl_basic/gl_basic.cpp	/^void create_texture(void)$/;"	f
create_texture	opengl/tests/gl_jni/jni/gl_code.cpp	/^void create_texture()$/;"	f
create_texture	opengl/tests/tritex/tritex.cpp	/^void create_texture(void)$/;"	f
create_user_config_path	cmds/installd/utils.c	/^int create_user_config_path(char path[PATH_MAX], userid_t userid) {$/;"	f
create_user_media_path	cmds/installd/utils.c	/^int create_user_media_path(char path[PATH_MAX], userid_t userid) {$/;"	f
create_user_path	cmds/installd/utils.c	/^int create_user_path(char path[PKG_PATH_MAX],$/;"	f
crop	include/gui/CpuConsumer.h	/^        Rect        crop;$/;"	m	struct:android::CpuConsumer::LockedBuffer
crop	include/gui/IGraphicBufferProducer.h	/^        Rect crop;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferInput
crop	include/private/gui/LayerState.h	/^            Rect            crop;$/;"	m	struct:android::layer_state_t
crop	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        Rect crop;$/;"	m	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder	file:
crop	services/surfaceflinger/Layer.h	/^        Rect crop;$/;"	m	struct:android::Layer::Geometry
crop_rect	opengl/libagl/TextureObjectManager.h	/^    GLint               crop_rect[4];$/;"	m	class:android::EGLTextureObject
cross	include/ui/vec3.h	/^    tvec3 __attribute__((pure)) cross(const tvec3& u, const tvec3<RT>& v) {$/;"	f	class:android::tvec3
crossMatrix	services/sensorservice/Fusion.cpp	/^static mat<TYPE, 3, 3> crossMatrix(const vec<TYPE, 3>& p, OTHER_TYPE diag) {$/;"	f	namespace:android
cross_product	services/sensorservice/vec.h	/^VLHS<TYPE, 3> PURE cross_product($/;"	f	namespace:android
ctx	opengl/libagl/egl.cpp	/^    EGLContext          ctx;$/;"	m	struct:android::egl_surface_t	file:
ctx	opengl/libs/EGL/egl_tls.h	/^    EGLContext  ctx;$/;"	m	class:android::egl_tls_t
cull	opengl/libagl/context.h	/^    culling_t               cull;$/;"	m	struct:android::gl::ogles_context_t
cull	opengl/libagl/context.h	/^    uint16_t        cull;$/;"	m	struct:android::gl::array_machine_t
cullFace	opengl/libagl/context.h	/^    GLenum      cullFace;$/;"	m	struct:android::gl::culling_t
cull_triangle	opengl/libagl/primitives.cpp	/^bool cull_triangle(ogles_context_t* c, vertex_t* \/*v0*\/, vertex_t* \/*v1*\/, vertex_t* \/*v2*\/)$/;"	f	namespace:android
culling_t	opengl/libagl/context.h	/^struct culling_t {$/;"	s	namespace:android::gl
cur	libs/ui/Region.cpp	/^    Rect* cur;$/;"	m	class:android::Region::rasterizer	file:
curMemBlockAvail	cmds/installd/installd.h	/^    int8_t* curMemBlockAvail;$/;"	m	struct:__anon12
curMemBlockEnd	cmds/installd/installd.h	/^    int8_t* curMemBlockEnd;$/;"	m	struct:__anon12
current	opengl/libagl/context.h	/^    matrix_stack_t      *current;$/;"	m	struct:android::gl::transform_state_t
current	opengl/libagl/context.h	/^    vertex_t                current;$/;"	m	struct:android::gl::ogles_context_t
currentColor	opengl/libagl/array.cpp	/^static void currentColor(ogles_context_t* c, GLfixed* v, const GLvoid*) {$/;"	f	namespace:android
currentColorClamped	opengl/libagl/context.h	/^    vec4_t                  currentColorClamped;$/;"	m	struct:android::gl::ogles_context_t
currentColor_clamp	opengl/libagl/array.cpp	/^static void currentColor_clamp(ogles_context_t* c, GLfixed* v, const GLvoid*) {$/;"	f	namespace:android
currentConfig	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        size_t currentConfig;$/;"	m	struct:android::HWComposer::DisplayData
currentCoords	services/inputflinger/InputReader.h	/^        PointerCoords currentCoords;$/;"	m	struct:android::TouchInputMapper::PointerSimple
currentGestureCoords	services/inputflinger/InputReader.h	/^        PointerCoords currentGestureCoords[MAX_POINTERS];$/;"	m	struct:android::TouchInputMapper::PointerGesture
currentGestureIdBits	services/inputflinger/InputReader.h	/^        BitSet32 currentGestureIdBits;$/;"	m	struct:android::TouchInputMapper::PointerGesture
currentGestureIdToIndex	services/inputflinger/InputReader.h	/^        uint32_t currentGestureIdToIndex[MAX_POINTER_ID + 1];$/;"	m	struct:android::TouchInputMapper::PointerGesture
currentGestureMode	services/inputflinger/InputReader.h	/^        Mode currentGestureMode;$/;"	m	struct:android::TouchInputMapper::PointerGesture
currentGestureProperties	services/inputflinger/InputReader.h	/^        PointerProperties currentGestureProperties[MAX_POINTERS];$/;"	m	struct:android::TouchInputMapper::PointerGesture
currentNormal	opengl/libagl/array.cpp	/^static void currentNormal(ogles_context_t* c, GLfixed* v, const GLvoid*) {$/;"	f	namespace:android
currentNormal	opengl/libagl/context.h	/^    vec3_t                  currentNormal;$/;"	m	struct:android::gl::ogles_context_t
currentPointerIndex	services/inputflinger/InputReader.h	/^        uint32_t currentPointerIndex : 8;$/;"	m	struct:android::TouchInputMapper::PointerDistanceHeapElement
currentProperties	services/inputflinger/InputReader.h	/^        PointerProperties currentProperties;$/;"	m	struct:android::TouchInputMapper::PointerSimple
currentTexCoord	opengl/libagl/array.cpp	/^static void currentTexCoord(ogles_context_t* c, GLfixed* v, const GLvoid*) {$/;"	f	namespace:android
currentValue	services/inputflinger/InputReader.h	/^        float currentValue; \/\/ current value$/;"	m	struct:android::JoystickInputMapper::Axis
current_comp_map	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    CompMap prev_comp_map[MAX_HWC_DISPLAYS], current_comp_map[MAX_HWC_DISPLAYS];$/;"	m	class:android::HWComposer
cv	services/surfaceflinger/Barrier.h	/^    mutable     Condition   cv;$/;"	m	class:android::Barrier
data	cmds/servicemanager/binder.h	/^    char *data;            \/* pointer to read\/write from *\/$/;"	m	struct:binder_io
data	include/android/sensor.h	/^            float           data[16];$/;"	m	union:ASensorEvent::__anon187::__anon188
data	include/android/sensor.h	/^            uint64_t        data[8];$/;"	m	union:ASensorEvent::__anon187::__anon189
data	include/binder/Parcel.h	/^        inline const void* data() const { return mData; }$/;"	f	class:android::Parcel::ReadableBlob
data	include/binder/Parcel.h	/^        inline void* data() { return mData; }$/;"	f	class:android::Parcel::WritableBlob
data	include/gui/CpuConsumer.h	/^        uint8_t    *data;$/;"	m	struct:android::CpuConsumer::LockedBuffer
data	include/media/openmax/OMX_Core.h	/^    OMX_U8  data[1];     \/* Supporting data hint  *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
data	include/ui/ANativeObjectBase.h	/^    uint8_t*    data;$/;"	m	struct:egl_native_pixmap_t
data	libs/binder/Parcel.cpp	/^    uint32_t data;$/;"	m	struct:small_flat_data	file:
data	libs/binder/Parcel.cpp	/^const uint8_t* Parcel::data() const$/;"	f	class:android::Parcel
data	opengl/libagl/BufferObjectManager.h	/^    uint8_t*        data;$/;"	m	struct:android::gl::buffer_t
data	services/surfaceflinger/SurfaceFlinger.cpp	/^    Parcel const* data;$/;"	m	class:android::GraphicProducerWrapper	file:
data0	cmds/servicemanager/binder.h	/^    char *data0;           \/* start of data buffer *\/$/;"	m	struct:binder_io
dataAvail	libs/binder/Parcel.cpp	/^size_t Parcel::dataAvail() const$/;"	f	class:android::Parcel
dataCapacity	libs/binder/Parcel.cpp	/^size_t Parcel::dataCapacity() const$/;"	f	class:android::Parcel
dataCb	include/gui/CpuConsumer.h	/^        uint8_t    *dataCb;$/;"	m	struct:android::CpuConsumer::LockedBuffer
dataCr	include/gui/CpuConsumer.h	/^        uint8_t    *dataCr;$/;"	m	struct:android::CpuConsumer::LockedBuffer
dataPosition	libs/binder/Parcel.cpp	/^size_t Parcel::dataPosition() const$/;"	f	class:android::Parcel
dataSize	libs/binder/Parcel.cpp	/^size_t Parcel::dataSize() const$/;"	f	class:android::Parcel
dataSizePalette4	opengl/libagl/texture.cpp	/^static size_t dataSizePalette4(int numLevels, int width, int height, int format)$/;"	f	namespace:android
data_avail	cmds/servicemanager/binder.h	/^    size_t data_avail;     \/* bytes available in data buffer *\/$/;"	m	struct:binder_io
data_disk_free	cmds/installd/utils.c	/^int64_t data_disk_free()$/;"	f
dbgCompositionTypeStr	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^static const char* dbgCompositionTypeStr(DisplaySurface::CompositionType type) {$/;"	f	namespace:android
dbgSourceStr	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^const char* VirtualDisplaySurface::dbgSourceStr(Source s) {$/;"	f	class:android::VirtualDisplaySurface
dbgStateStr	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^const char* VirtualDisplaySurface::dbgStateStr() const {$/;"	f	class:android::VirtualDisplaySurface
dealloc	libs/binder/MemoryDealer.cpp	/^SimpleBestFitAllocator::chunk_t* SimpleBestFitAllocator::dealloc(size_t start)$/;"	f	class:android::SimpleBestFitAllocator
deallocate	libs/binder/MemoryDealer.cpp	/^status_t SimpleBestFitAllocator::deallocate(size_t offset)$/;"	f	class:android::SimpleBestFitAllocator
deallocate	libs/binder/MemoryDealer.cpp	/^void MemoryDealer::deallocate(size_t offset)$/;"	f	class:android::MemoryDealer
death	cmds/servicemanager/service_manager.c	/^    struct binder_death death;$/;"	m	struct:svcinfo	typeref:struct:svcinfo::binder_death	file:
debug	opengl/tools/glgen2/registry/genheaders.py	/^            debug = True$/;"	v
debug	opengl/tools/glgen2/registry/genheaders.py	/^debug   = False$/;"	v
debugPrintFunc	include/binder/Debug.h	/^typedef void (*debugPrintFunc)(void* cookie, const char* txt);$/;"	t
decRef	include/ui/ANativeObjectBase.h	/^    static void decRef(android_native_base_t* base) {$/;"	f	class:android::ANativeObjectBase
decRef	opengl/libs/EGL/egl_object.h	/^    inline int32_t decRef() { return android_atomic_dec(&count); }$/;"	f	class:android::egl_object_t
decStrong	include/ui/ANativeObjectBase.h	/^    void decStrong(const void* id) const {$/;"	f	class:android::ANativeObjectBase
decStrong	opengl/libagl/BufferObjectManager.h	/^void EGLBufferObjectManager::decStrong(const void* \/*id*\/) const {$/;"	f	class:android::EGLBufferObjectManager
decStrongHandle	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::decStrongHandle(int32_t handle)$/;"	f	class:android::IPCThreadState
decWakeCount	opengl/libs/EGL/egl_display.cpp	/^void egl_display_t::HibernationMachine::decWakeCount(WakeRefStrength strength) {$/;"	f	class:android::egl_display_t::HibernationMachine
decWeakHandle	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::decWeakHandle(int32_t handle)$/;"	f	class:android::IPCThreadState
decodeDXT	opengl/libagl/dxt.cpp	/^decodeDXT(const GLvoid *data, int width, int height,$/;"	f	namespace:android
decodeDXT1	opengl/libagl/dxt.cpp	/^decodeDXT1(const GLvoid *data, int width, int height,$/;"	f	namespace:android
decodeDXT3	opengl/libagl/dxt.cpp	/^decodeDXT3(const GLvoid *data, int width, int height,$/;"	f	namespace:android
decodeDXT5	opengl/libagl/dxt.cpp	/^decodeDXT5(const GLvoid *data, int width, int height,$/;"	f	namespace:android
decodePalette4	opengl/libagl/texture.cpp	/^static void decodePalette4(const GLvoid *data, int level, int width, int height,$/;"	f	namespace:android
decode_subblock	opengl/libs/ETC1/etc1.cpp	/^void decode_subblock(etc1_byte* pOut, int r, int g, int b, const int* table,$/;"	f	file:
decrementPendingForegroundDispatchesLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::decrementPendingForegroundDispatchesLocked(EventEntry* entry) {$/;"	f	class:android::InputDispatcher
decrypt	include/media/hardware/HDCPAPI.h	/^    virtual status_t decrypt($/;"	f	struct:android::HDCPModule
dedent	include/binder/TextOutput.h	/^inline TextOutput& dedent(TextOutput& to)$/;"	f	namespace:android
dedent	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^Formatter& dedent(Formatter& f) {$/;"	f	namespace:android
defaultAlpha	opengl/tests/hwc/hwcCommit.cpp	/^const float      defaultAlpha = 1.0; \/\/ Opaque$/;"	v
defaultAlpha	opengl/tests/hwc/hwcRects.cpp	/^const float      defaultAlpha = 1.0; \/\/ Opaque$/;"	v
defaultBlend	opengl/tests/hwc/hwcCommit.cpp	/^const uint32_t   defaultBlend = HWC_BLENDING_NONE;$/;"	v
defaultBlend	opengl/tests/hwc/hwcRects.cpp	/^const uint32_t   defaultBlend = HWC_BLENDING_NONE;$/;"	v
defaultDisplayFrame	opengl/tests/hwc/hwcCommit.cpp	/^const struct hwc_rect defaultDisplayFrame = {0, 0, 100, 100};$/;"	v	typeref:struct:hwc_rect
defaultDisplayFrame	opengl/tests/hwc/hwcRects.cpp	/^const struct hwc_rect defaultDisplayFrame = {0, 0, 100, 100};$/;"	v	typeref:struct:hwc_rect
defaultDuration	opengl/tests/hwc/hwcStress.cpp	/^const float defaultDuration = FLT_MAX; \/\/ A fairly long time, so that$/;"	v
defaultEndDelay	opengl/tests/hwc/hwcColorEquiv.cpp	/^const float defaultEndDelay = 2.0; \/\/ Default delay after rendering graphics$/;"	v
defaultEndDelay	opengl/tests/hwc/hwcRects.cpp	/^const float defaultEndDelay = 2.0; \/\/ Default delay after rendering graphics$/;"	v
defaultEndDelay	opengl/tests/hwc/hwcStress.cpp	/^const float defaultEndDelay = 2.0; \/\/ Default delay between completion of$/;"	v
defaultEndPass	opengl/tests/hwc/hwcStress.cpp	/^const unsigned int defaultEndPass = 99999;$/;"	v
defaultFormat	opengl/tests/hwc/hwcCommit.cpp	/^const uint32_t   defaultFormat = HAL_PIXEL_FORMAT_RGBA_8888;$/;"	v
defaultFormat	opengl/tests/hwc/hwcRects.cpp	/^const uint32_t   defaultFormat = HAL_PIXEL_FORMAT_RGBA_8888;$/;"	v
defaultPerPassNumSet	opengl/tests/hwc/hwcStress.cpp	/^const unsigned int defaultPerPassNumSet = 10;$/;"	v
defaultPerSetDelay	opengl/tests/hwc/hwcStress.cpp	/^const float defaultPerSetDelay = 0.0; \/\/ Default delay after each set$/;"	v
defaultPrintFunc	libs/binder/Debug.cpp	/^static void defaultPrintFunc(void* \/*cookie*\/, const char* txt)$/;"	f	namespace:android
defaultRefFormat	opengl/tests/hwc/hwcColorEquiv.cpp	/^const char *defaultRefFormat = "RGBA8888";$/;"	v
defaultServiceManager	libs/binder/IServiceManager.cpp	/^sp<IServiceManager> defaultServiceManager()$/;"	f	namespace:android
defaultSourceCrop	opengl/tests/hwc/hwcCommit.cpp	/^const struct hwc_rect defaultSourceCrop = {0, 0, 1, 1};$/;"	v	typeref:struct:hwc_rect
defaultSourceCrop	opengl/tests/hwc/hwcRects.cpp	/^const struct hwc_rect defaultSourceCrop = {0, 0, 1, 1};$/;"	v	typeref:struct:hwc_rect
defaultStartDim	opengl/tests/hwc/hwcCommit.cpp	/^const HwcTestDim defaultStartDim = HwcTestDim(100, 100);$/;"	v
defaultStartPass	opengl/tests/hwc/hwcStress.cpp	/^const unsigned int defaultStartPass = 0;$/;"	v
defaultTexture	opengl/libagl/context.h	/^    EGLTextureObject*   defaultTexture;$/;"	m	struct:android::gl::texture_state_t
defaultTransform	opengl/tests/hwc/hwcCommit.cpp	/^const int32_t    defaultTransform = 0;$/;"	v
defaultTransform	opengl/tests/hwc/hwcRects.cpp	/^const int32_t    defaultTransform = 0;$/;"	v
defaultVerbose	opengl/tests/hwc/hwcColorEquiv.cpp	/^const bool defaultVerbose = false;$/;"	v
defaultVerbose	opengl/tests/hwc/hwcCommit.cpp	/^const bool defaultVerbose = false;$/;"	v
defaultVerbose	opengl/tests/hwc/hwcRects.cpp	/^const bool defaultVerbose = false;$/;"	v
defaultVerbose	opengl/tests/hwc/hwcStress.cpp	/^const bool defaultVerbose = false;$/;"	v
default_instance	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage& GLMessage::default_instance() {$/;"	f	class:android::gltrace::GLMessage
default_instance	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_DataType& GLMessage_DataType::default_instance() {$/;"	f	class:android::gltrace::GLMessage_DataType
default_instance	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_FrameBuffer& GLMessage_FrameBuffer::default_instance() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
default_instance_	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage* GLMessage::default_instance_ = NULL;$/;"	m	class:android::gltrace::GLMessage	file:
default_instance_	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage_DataType* GLMessage_DataType::default_instance_ = NULL;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
default_instance_	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage_FrameBuffer* GLMessage_FrameBuffer::default_instance_ = NULL;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer	file:
default_instance_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static GLMessage* default_instance_;$/;"	m	class:android::gltrace::GLMessage
default_instance_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static GLMessage_DataType* default_instance_;$/;"	m	class:android::gltrace::GLMessage_DataType
default_instance_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static GLMessage_FrameBuffer* default_instance_;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer
deferredSaveDelay	opengl/libs/EGL/egl_cache.cpp	/^static const unsigned int deferredSaveDelay = 4;$/;"	v	file:
deflate	include/gui/IGraphicBufferProducer.h	/^        inline void deflate(int64_t* outTimestamp, bool* outIsAutoTimestamp,$/;"	f	struct:android::IGraphicBufferProducer::QueueBufferInput
deflate	include/gui/IGraphicBufferProducer.h	/^        inline void deflate(uint32_t* outWidth,$/;"	f	struct:android::IGraphicBufferProducer::QueueBufferOutput
degree	include/input/VelocityTracker.h	/^        uint32_t degree;$/;"	m	struct:android::IntegratingVelocityTrackerStrategy::State
degree	include/input/VelocityTracker.h	/^        uint32_t degree;$/;"	m	struct:android::VelocityTracker::Estimator
deinitGraphics	opengl/tests/angeles/app-linux.cpp	/^static void deinitGraphics()$/;"	f	file:
deleteBuffer	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceContext::deleteBuffer(GLuint bufferId) {$/;"	f	class:android::gltrace::GLTraceContext
deleteBuffers	opengl/libagl/BufferObjectManager.cpp	/^void EGLBufferObjectManager::deleteBuffers(GLsizei n, const GLuint* buffers)$/;"	f	class:android::EGLBufferObjectManager
deleteTextureAsync	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::deleteTextureAsync(uint32_t texture) {$/;"	f	class:android::SurfaceFlinger
deleteTextures	opengl/libagl/TextureObjectManager.cpp	/^void EGLSurfaceManager::deleteTextures(GLsizei n, const GLuint *tokens)$/;"	f	class:android::EGLSurfaceManager
deleteTextures	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::deleteTextures(size_t count, uint32_t const* names) {$/;"	f	class:android::RenderEngine
delete_cache	cmds/installd/commands.c	/^int delete_cache(const char *pkgname, userid_t userid)$/;"	f
delete_cache_dir	cmds/installd/utils.c	/^static void delete_cache_dir(char path[PATH_MAX], cache_dir_t* dir)$/;"	f	file:
delete_code_cache	cmds/installd/commands.c	/^int delete_code_cache(const char *pkgname, userid_t userid)$/;"	f
delete_dir_contents	cmds/installd/utils.c	/^int delete_dir_contents(const char *pathname,$/;"	f
delete_dir_contents_fd	cmds/installd/utils.c	/^int delete_dir_contents_fd(int dfd, const char *name)$/;"	f
delete_user	cmds/installd/commands.c	/^int delete_user(userid_t userid)$/;"	f
delete_user_data	cmds/installd/commands.c	/^int delete_user_data(const char *pkgname, userid_t userid)$/;"	f
deleted	cmds/installd/installd.h	/^    int32_t deleted;$/;"	m	struct:cache_dir_struct
deliveryTime	services/inputflinger/InputDispatcher.h	/^        nsecs_t deliveryTime; \/\/ time when the event was actually delivered$/;"	m	struct:android::InputDispatcher::DispatchEntry
denominator	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t denominator(void) { return _d; }$/;"	f	class:Rational
density	include/ui/DisplayInfo.h	/^    float density;$/;"	m	struct:android::DisplayInfo
density	opengl/libagl/context.h	/^    GLfixed     density;$/;"	m	struct:android::gl::fog_t
depth	opengl/libagl/context.h	/^    uint8_t         depth;$/;"	m	struct:android::gl::matrix_stack_t
depth	opengl/libagl/egl.cpp	/^    GGLSurface              depth;$/;"	m	struct:android::egl_surface_t	file:
depthRangef	opengl/libagl/matrix.cpp	/^static void depthRangef(GLclampf zNear, GLclampf zFar, ogles_context_t* c)$/;"	f	namespace:android
dequeue	services/inputflinger/InputDispatcher.h	/^        inline void dequeue(T* entry) {$/;"	f	struct:android::InputDispatcher::Queue
dequeueAtHead	services/inputflinger/InputDispatcher.h	/^        inline T* dequeueAtHead() {$/;"	f	struct:android::InputDispatcher::Queue
dequeueBuffer	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::dequeueBuffer(int *outSlot,$/;"	f	class:android::BufferQueueProducer
dequeueBuffer	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t dequeueBuffer(int *buf, sp<Fence>* fence, bool async,$/;"	f	class:android::BpGraphicBufferProducer
dequeueBuffer	libs/gui/Surface.cpp	/^int Surface::dequeueBuffer(android_native_buffer_t** buffer, int* fenceFd) {$/;"	f	class:android::Surface
dequeueBuffer	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    status_t dequeueBuffer(bool async, uint32_t w, uint32_t h, uint32_t format, uint32_t usage, DequeueBufferResult* result) {$/;"	f	class:android::IGraphicBufferProducerTest
dequeueBuffer	libs/ui/FramebufferNativeWindow.cpp	/^int FramebufferNativeWindow::dequeueBuffer(ANativeWindow* window, $/;"	f	class:android::FramebufferNativeWindow
dequeueBuffer	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::dequeueBuffer(Source source,$/;"	f	class:android::VirtualDisplaySurface
dequeueBuffer	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::dequeueBuffer(int* pslot, sp<Fence>* fence, bool async,$/;"	f	class:android::VirtualDisplaySurface
dequeueBuffer	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::dequeueBuffer(int* slot, sp<Fence>* fence,$/;"	f	class:android::MonitoredProducer
dequeueBuffer_DEPRECATED	libs/ui/FramebufferNativeWindow.cpp	/^int FramebufferNativeWindow::dequeueBuffer_DEPRECATED(ANativeWindow* window, $/;"	f	class:android::FramebufferNativeWindow
desc	opengl/tests/hwc/hwcCommit.cpp	/^    const char *desc;$/;"	m	struct:blendType	file:
desc	opengl/tests/hwc/hwcCommit.cpp	/^    const char *desc;$/;"	m	struct:transformType	file:
desc	opengl/tests/hwc/hwcTestLib.h	/^    const char *desc;$/;"	m	struct:hwcTestGraphicFormat
descriptor	include/input/InputDevice.h	/^    String8 descriptor;$/;"	m	struct:android::InputDeviceIdentifier
desiredPresentTime	services/surfaceflinger/FrameTracker.h	/^        nsecs_t desiredPresentTime;$/;"	m	struct:android::FrameTracker::FrameRecord
desiredPresentTimesNano	include/ui/FrameStats.h	/^    Vector<nsecs_t> desiredPresentTimesNano;$/;"	m	class:android::FrameStats
dest	opengl/tests/angeles/cams.h	/^    short src[5], dest[5];$/;"	m	struct:__anon234
destroy	libs/gui/SurfaceControl.cpp	/^void SurfaceControl::destroy()$/;"	f	class:android::SurfaceControl
destroy	opengl/libs/EGL/egl_object.cpp	/^void egl_object_t::destroy() {$/;"	f	class:android::egl_object_t
destroyContext	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        public void destroyContext(EGL10 egl, EGLDisplay display, EGLContext context) {$/;"	m	class:GL2JNIView.ContextFactory
destroyContext	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        public void destroyContext(EGL10 egl, EGLDisplay display, EGLContext context) {$/;"	m	class:GLPerfView.ContextFactory
destroyContext	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        public void destroyContext(EGL10 egl, EGLDisplay display, EGLContext context) {$/;"	m	class:GLDualGL2View.ContextFactory
destroyDisplay	libs/gui/ISurfaceComposer.cpp	/^    virtual void destroyDisplay(const sp<IBinder>& display)$/;"	f	class:android::BpSurfaceComposer
destroyDisplay	libs/gui/SurfaceComposerClient.cpp	/^void Composer::destroyDisplay(const sp<IBinder>& display) {$/;"	f	class:android::Composer
destroyDisplay	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::destroyDisplay(const sp<IBinder>& display) {$/;"	f	class:android::SurfaceComposerClient
destroyDisplay	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::destroyDisplay(const sp<IBinder>& display) {$/;"	f	class:android::SurfaceFlinger
destroySurface	cmds/flatland/GLHelper.cpp	/^void GLHelper::destroySurface(EGLSurface* surface) {$/;"	f	class:android::GLHelper
destroySurface	libs/gui/ISurfaceComposerClient.cpp	/^    virtual status_t destroySurface(const sp<IBinder>& handle) {$/;"	f	class:android::BpSurfaceComposerClient
destroySurface	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::destroySurface(const sp<IBinder>& sid) {$/;"	f	class:android::SurfaceComposerClient
destroySurface	services/surfaceflinger/Client.cpp	/^status_t Client::destroySurface(const sp<IBinder>& handle) {$/;"	f	class:android::Client
det22	opengl/libagl/matrix.cpp	/^GLfloat det22(GLfloat a, GLfloat b, GLfloat c, GLfloat d) {$/;"	f	namespace:android
detach	libs/binder/BpBinder.cpp	/^void BpBinder::ObjectManager::detach(const void* objectID)$/;"	f	class:android::BpBinder::ObjectManager
detachBuffer	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::detachBuffer(int slot) {$/;"	f	class:android::BufferQueueConsumer
detachBuffer	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::detachBuffer(int slot) {$/;"	f	class:android::BufferQueueProducer
detachBuffer	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t detachBuffer(int slot) {$/;"	f	class:android::BpGraphicBufferConsumer
detachBuffer	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t detachBuffer(int slot) {$/;"	f	class:android::BpGraphicBufferProducer
detachBuffer	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::detachBuffer(int \/* slot *\/) {$/;"	f	class:android::VirtualDisplaySurface
detachBuffer	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::detachBuffer(int slot) {$/;"	f	class:android::MonitoredProducer
detachFromContext	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::detachFromContext() {$/;"	f	class:android::GLConsumer
detachLayer	services/surfaceflinger/Client.cpp	/^void Client::detachLayer(const Layer* layer)$/;"	f	class:android::Client
detachNextBuffer	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::detachNextBuffer(sp<GraphicBuffer>* outBuffer,$/;"	f	class:android::BufferQueueProducer
detachNextBuffer	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t detachNextBuffer(sp<GraphicBuffer>* outBuffer,$/;"	f	class:android::BpGraphicBufferProducer
detachNextBuffer	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::detachNextBuffer($/;"	f	class:android::VirtualDisplaySurface
detachNextBuffer	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::detachNextBuffer(sp<GraphicBuffer>* outBuffer,$/;"	f	class:android::MonitoredProducer
detachObject	libs/binder/Binder.cpp	/^void BBinder::detachObject(const void* objectID)$/;"	f	class:android::BBinder
detachObject	libs/binder/BpBinder.cpp	/^void BpBinder::detachObject(const void* objectID)$/;"	f	class:android::BpBinder
deuteranomaly	services/surfaceflinger/Effects/Daltonizer.h	/^        deuteranomaly,      \/\/ M (green) cone deficient (most common)$/;"	e	enum:android::Daltonizer::ColorBlindnessTypes
deuteranopia	services/surfaceflinger/Effects/Daltonizer.h	/^        deuteranopia,       \/\/ M (green) cone missing$/;"	e	enum:android::Daltonizer::ColorBlindnessTypes
deviceHeight	services/inputflinger/InputReader.h	/^    int32_t deviceHeight;$/;"	m	struct:android::DisplayViewport
deviceId	include/input/InputTransport.h	/^            int32_t deviceId;$/;"	m	struct:android::InputMessage::Body::Key
deviceId	include/input/InputTransport.h	/^            int32_t deviceId;$/;"	m	struct:android::InputMessage::Body::Motion
deviceId	include/input/InputTransport.h	/^        int32_t deviceId;$/;"	m	struct:android::InputConsumer::TouchState
deviceId	services/inputflinger/EventHub.h	/^    int32_t deviceId;$/;"	m	struct:android::RawEvent
deviceId	services/inputflinger/InputDispatcher.h	/^            int32_t deviceId;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
deviceId	services/inputflinger/InputDispatcher.h	/^            int32_t deviceId;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
deviceId	services/inputflinger/InputDispatcher.h	/^        int32_t deviceId; \/\/ id of the device that is currently down, others are rejected$/;"	m	struct:android::InputDispatcher::TouchState
deviceId	services/inputflinger/InputDispatcher.h	/^        int32_t deviceId;$/;"	m	struct:android::InputDispatcher::CancelationOptions
deviceId	services/inputflinger/InputDispatcher.h	/^        int32_t deviceId;$/;"	m	struct:android::InputDispatcher::DeviceResetEntry
deviceId	services/inputflinger/InputDispatcher.h	/^        int32_t deviceId;$/;"	m	struct:android::InputDispatcher::KeyEntry
deviceId	services/inputflinger/InputDispatcher.h	/^        int32_t deviceId;$/;"	m	struct:android::InputDispatcher::KeyReplacement
deviceId	services/inputflinger/InputDispatcher.h	/^        int32_t deviceId;$/;"	m	struct:android::InputDispatcher::MotionEntry
deviceId	services/inputflinger/InputListener.h	/^    int32_t deviceId;$/;"	m	struct:android::NotifyDeviceResetArgs
deviceId	services/inputflinger/InputListener.h	/^    int32_t deviceId;$/;"	m	struct:android::NotifyKeyArgs
deviceId	services/inputflinger/InputListener.h	/^    int32_t deviceId;$/;"	m	struct:android::NotifyMotionArgs
deviceSources	libs/input/Android.mk	/^deviceSources := \\$/;"	m
deviceType	services/inputflinger/InputReader.h	/^        DeviceType deviceType;$/;"	m	struct:android::TouchInputMapper::Parameters
deviceWidth	services/inputflinger/InputReader.h	/^    int32_t deviceWidth;$/;"	m	struct:android::DisplayViewport
dexopt	cmds/installd/commands.c	/^int dexopt(const char *apk_path, uid_t uid, bool is_public,$/;"	f
df	opengl/tests/hwc/hwcCommit.cpp	/^    } df;$/;"	m	struct:meas	typeref:struct:meas::displayFrame	file:
dfMaxDim	opengl/tests/hwc/hwcCommit.cpp	/^HwcTestDim dfMaxDim(uint32_t format)$/;"	f
dfMaxHeight	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t dfMaxHeight(uint32_t format)$/;"	f
dfMaxWidth	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t dfMaxWidth(uint32_t format)$/;"	f
dfMinDim	opengl/tests/hwc/hwcCommit.cpp	/^HwcTestDim dfMinDim(uint32_t format)$/;"	f
dfMinHeight	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t dfMinHeight(uint32_t format)$/;"	f
dfMinWidth	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t dfMinWidth(uint32_t format)$/;"	f
diag	include/ui/TMatHelpers.h	/^typename MATRIX::col_type PURE diag(const MATRIX& m) {$/;"	f	namespace:android::matrix
diag	include/ui/mat4.h	/^typename tmat44<T>::col_type PURE diag(const tmat44<T>& m) {$/;"	f	namespace:android
diag	opengl/tools/glgen2/registry/genheaders.py	/^diag = open(diagFilename, 'w')$/;"	v
diagFilename	opengl/tools/glgen2/registry/genheaders.py	/^diagFilename = 'diag.txt'$/;"	v
diffuse	opengl/libagl/context.h	/^    vec4_t      diffuse;$/;"	m	struct:android::gl::light_t
diffuse	opengl/libagl/context.h	/^    vec4_t      diffuse;$/;"	m	struct:android::gl::material_t
dir	cmds/installd/installd.h	/^    cache_dir_t* dir;$/;"	m	struct:__anon11
dir_rec_array_t	cmds/installd/installd.h	/^} dir_rec_array_t;$/;"	t	typeref:struct:__anon10
dir_rec_t	cmds/installd/installd.h	/^} dir_rec_t;$/;"	t	typeref:struct:__anon9
direct	opengl/libagl/TextureObjectManager.h	/^    GLint               direct;$/;"	m	class:android::EGLTextureObject
direction_LTR	libs/ui/Region.cpp	/^    direction_LTR,$/;"	e	enum:android::__anon245	file:
direction_RTL	libs/ui/Region.cpp	/^    direction_RTL$/;"	e	enum:android::__anon245	file:
dirs	cmds/installd/installd.h	/^    cache_dir_t** dirs;$/;"	m	struct:__anon12
dirs	cmds/installd/installd.h	/^    dir_rec_t* dirs;$/;"	m	struct:__anon10
dirs	opengl/tests/Android.mk	/^dirs := \\$/;"	m
dirty	opengl/libagl/context.h	/^    uint32_t            dirty;$/;"	m	struct:android::gl::transform_state_t
dirty	opengl/libagl/context.h	/^    uint8_t             dirty;$/;"	m	struct:android::gl::texture_unit_t
dirty	opengl/libagl/context.h	/^    uint8_t         dirty;$/;"	m	struct:android::gl::matrix_stack_t
dirtyRect	include/gui/IGraphicBufferProducer.h	/^        Rect dirtyRect;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferInput
dirtyRegion	include/gui/Surface.h	/^        Region dirtyRegion;$/;"	m	struct:android::Surface::BufferSlot
dirtyRegion	opengl/libagl/egl.cpp	/^    Rect dirtyRegion;$/;"	m	struct:android::egl_window_surface_v2_t	file:
dirtyRegion	services/surfaceflinger/DisplayDevice.h	/^    mutable Region dirtyRegion;$/;"	m	class:android::DisplayDevice
disable	services/sensorservice/SensorService.cpp	/^status_t SensorService::disable(const sp<SensorEventConnection>& connection,$/;"	f	class:android::SensorService
disableAsyncBuffer	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::disableAsyncBuffer() {$/;"	f	class:android::BufferQueueConsumer
disableAsyncBuffer	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t disableAsyncBuffer() {$/;"	f	class:android::BpGraphicBufferConsumer
disableBackgroundScheduling	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::disableBackgroundScheduling(bool disable)$/;"	f	class:android::IPCThreadState
disableBlending	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::disableBlending() {$/;"	f	class:android::GLES11RenderEngine
disableBlending	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::disableBlending() {$/;"	f	class:android::GLES20RenderEngine
disableHardwareVsync	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::disableHardwareVsync(bool makeUnavailable) {$/;"	f	class:android::SurfaceFlinger
disableKernelTraceEvents	cmds/atrace/atrace.cpp	/^static bool disableKernelTraceEvents() {$/;"	f	file:
disableLayerMasking	services/surfaceflinger/RenderEngine/GLES11RenderEngine.h	/^    virtual void disableLayerMasking() {}$/;"	f	class:android::GLES11RenderEngine
disableLayerMasking	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::disableLayerMasking() {$/;"	f	class:android::GLES20RenderEngine
disableMasking	services/surfaceflinger/RenderEngine/Description.cpp	/^void Description::disableMasking() {$/;"	f	class:android::Description
disableScissor	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::disableScissor() {$/;"	f	class:android::RenderEngine
disableSensor	libs/gui/SensorEventQueue.cpp	/^status_t SensorEventQueue::disableSensor(Sensor const* sensor) const {$/;"	f	class:android::SensorEventQueue
disableSensor	libs/gui/SensorEventQueue.cpp	/^status_t SensorEventQueue::disableSensor(int32_t handle) const {$/;"	f	class:android::SensorEventQueue
disableSensor	services/sensorservice/BatteryService.h	/^    static void disableSensor(uid_t uid, int handle) {$/;"	f	class:android::BatteryService
disableSensorImpl	services/sensorservice/BatteryService.cpp	/^void BatteryService::disableSensorImpl(uid_t uid, int handle) {$/;"	f	class:android::BatteryService
disableTexture	services/surfaceflinger/RenderEngine/Description.cpp	/^void Description::disableTexture() {$/;"	f	class:android::Description
disableTexturing	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::disableTexturing() {$/;"	f	class:android::GLES11RenderEngine
disableTexturing	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::disableTexturing() {$/;"	f	class:android::GLES20RenderEngine
disableVSyncLocked	services/surfaceflinger/EventThread.cpp	/^void EventThread::disableVSyncLocked() {$/;"	f	class:android::EventThread
disableVirtualKeysUntil	services/inputflinger/InputReader.cpp	/^void InputReader::ContextImpl::disableVirtualKeysUntil(nsecs_t time) {$/;"	f	class:android::InputReader::ContextImpl
disableVirtualKeysUntil	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void disableVirtualKeysUntil(nsecs_t time) {$/;"	f	class:android::FakeInputReaderContext	file:
disableVirtualKeysUntilLocked	services/inputflinger/InputReader.cpp	/^void InputReader::disableVirtualKeysUntilLocked(nsecs_t time) {$/;"	f	class:android::InputReader
disconnect	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::disconnect() {$/;"	f	class:android::BufferQueueConsumer
disconnect	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::disconnect(int api) {$/;"	f	class:android::BufferQueueProducer
disconnect	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t disconnect(int api) {$/;"	f	class:android::BpGraphicBufferProducer
disconnect	libs/gui/Surface.cpp	/^int Surface::disconnect(int api) {$/;"	f	class:android::Surface
disconnect	opengl/libagl/egl.cpp	/^    virtual     void        disconnect() {}$/;"	f	struct:android::egl_surface_t
disconnect	opengl/libagl/egl.cpp	/^void egl_window_surface_v2_t::disconnect() $/;"	f	class:android::egl_window_surface_v2_t
disconnect	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::disconnect(HWComposer& hwc) {$/;"	f	class:DisplayDevice
disconnect	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::disconnect(int api) {$/;"	f	class:android::VirtualDisplaySurface
disconnect	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::disconnect(int api) {$/;"	f	class:android::MonitoredProducer
disconnectDisplay	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::disconnectDisplay(int disp) {$/;"	f	class:android::HWComposer
disp	opengl/libs/EGL/egl_display.h	/^    DisplayImpl     disp;$/;"	m	class:android::egl_display_t
dispatchConfigurationChangedLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::dispatchConfigurationChangedLocked($/;"	f	class:android::InputDispatcher
dispatchConnect	libs/gui/Surface.cpp	/^int Surface::dispatchConnect(va_list args) {$/;"	f	class:android::Surface
dispatchDeviceResetLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::dispatchDeviceResetLocked($/;"	f	class:android::InputDispatcher
dispatchDisconnect	libs/gui/Surface.cpp	/^int Surface::dispatchDisconnect(va_list args) {$/;"	f	class:android::Surface
dispatchEventLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::dispatchEventLocked(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher
dispatchHoverEnterAndMove	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dispatchHoverEnterAndMove(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
dispatchHoverExit	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dispatchHoverExit(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
dispatchInProgress	services/inputflinger/InputDispatcher.h	/^        bool dispatchInProgress; \/\/ initially false, set to true while dispatching$/;"	m	struct:android::InputDispatcher::EventEntry
dispatchInvalidate	services/surfaceflinger/MessageQueue.cpp	/^void MessageQueue::Handler::dispatchInvalidate() {$/;"	f	class:android::MessageQueue::Handler
dispatchKeyLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::dispatchKeyLocked(nsecs_t currentTime, KeyEntry* entry,$/;"	f	class:android::InputDispatcher
dispatchLock	libs/gui/Surface.cpp	/^int Surface::dispatchLock(va_list args) {$/;"	f	class:android::Surface
dispatchMotion	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dispatchMotion(nsecs_t when, uint32_t policyFlags, uint32_t source,$/;"	f	class:android::TouchInputMapper
dispatchMotionLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::dispatchMotionLocked($/;"	f	class:android::InputDispatcher
dispatchOnce	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::dispatchOnce() {$/;"	f	class:android::InputDispatcher
dispatchOnceInnerLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::dispatchOnceInnerLocked(nsecs_t* nextWakeupTime) {$/;"	f	class:android::InputDispatcher
dispatchPointerGestures	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dispatchPointerGestures(nsecs_t when, uint32_t policyFlags,$/;"	f	class:android::TouchInputMapper
dispatchPointerMouse	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dispatchPointerMouse(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
dispatchPointerSimple	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dispatchPointerSimple(nsecs_t when, uint32_t policyFlags,$/;"	f	class:android::TouchInputMapper
dispatchPointerStylus	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dispatchPointerStylus(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
dispatchPointerUsage	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dispatchPointerUsage(nsecs_t when, uint32_t policyFlags,$/;"	f	class:android::TouchInputMapper
dispatchRefresh	services/surfaceflinger/MessageQueue.cpp	/^void MessageQueue::Handler::dispatchRefresh() {$/;"	f	class:android::MessageQueue::Handler
dispatchSetBufferCount	libs/gui/Surface.cpp	/^int Surface::dispatchSetBufferCount(va_list args) {$/;"	f	class:android::Surface
dispatchSetBuffersDimensions	libs/gui/Surface.cpp	/^int Surface::dispatchSetBuffersDimensions(va_list args) {$/;"	f	class:android::Surface
dispatchSetBuffersFormat	libs/gui/Surface.cpp	/^int Surface::dispatchSetBuffersFormat(va_list args) {$/;"	f	class:android::Surface
dispatchSetBuffersGeometry	libs/gui/Surface.cpp	/^int Surface::dispatchSetBuffersGeometry(va_list args) {$/;"	f	class:android::Surface
dispatchSetBuffersSize	libs/gui/Surface.cpp	/^int Surface::dispatchSetBuffersSize(va_list args) {$/;"	f	class:android::Surface
dispatchSetBuffersStickyTransform	libs/gui/Surface.cpp	/^int Surface::dispatchSetBuffersStickyTransform(va_list args) {$/;"	f	class:android::Surface
dispatchSetBuffersTimestamp	libs/gui/Surface.cpp	/^int Surface::dispatchSetBuffersTimestamp(va_list args) {$/;"	f	class:android::Surface
dispatchSetBuffersTransform	libs/gui/Surface.cpp	/^int Surface::dispatchSetBuffersTransform(va_list args) {$/;"	f	class:android::Surface
dispatchSetBuffersUserDimensions	libs/gui/Surface.cpp	/^int Surface::dispatchSetBuffersUserDimensions(va_list args) {$/;"	f	class:android::Surface
dispatchSetCrop	libs/gui/Surface.cpp	/^int Surface::dispatchSetCrop(va_list args) {$/;"	f	class:android::Surface
dispatchSetScalingMode	libs/gui/Surface.cpp	/^int Surface::dispatchSetScalingMode(va_list args) {$/;"	f	class:android::Surface
dispatchSetSidebandStream	libs/gui/Surface.cpp	/^int Surface::dispatchSetSidebandStream(va_list args) {$/;"	f	class:android::Surface
dispatchSetUsage	libs/gui/Surface.cpp	/^int Surface::dispatchSetUsage(va_list args) {$/;"	f	class:android::Surface
dispatchTouches	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dispatchTouches(nsecs_t when, uint32_t policyFlags) {$/;"	f	class:android::TouchInputMapper
dispatchTransaction	services/surfaceflinger/MessageQueue.cpp	/^void MessageQueue::Handler::dispatchTransaction() {$/;"	f	class:android::MessageQueue::Handler
dispatchUnhandledKey	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual bool dispatchUnhandledKey(const sp<InputWindowHandle>& inputWindowHandle,$/;"	f	class:android::FakeInputDispatcherPolicy	file:
dispatchUnlockAndPost	libs/gui/Surface.cpp	/^int Surface::dispatchUnlockAndPost(va_list args __attribute__((unused))) {$/;"	f	class:android::Surface
dispatchVirtualKey	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dispatchVirtualKey(nsecs_t when, uint32_t policyFlags,$/;"	f	class:android::TouchInputMapper
dispatchingTimeout	services/inputflinger/InputApplication.h	/^    nsecs_t dispatchingTimeout;$/;"	m	struct:android::InputApplicationInfo
dispatchingTimeout	services/inputflinger/InputWindow.h	/^    nsecs_t dispatchingTimeout;$/;"	m	struct:android::InputWindowInfo
display	opengl/libs/EGL/egl_object.h	/^    egl_display_t *display;$/;"	m	class:android::egl_object_t
displayFrame	opengl/tests/hwc/hwcCommit.cpp	/^    struct displayFrame {$/;"	s	struct:meas	file:
displayFrame	opengl/tests/hwc/hwcCommit.cpp	/^    struct hwc_rect   displayFrame;$/;"	m	class:Rectangle	typeref:struct:Rectangle::hwc_rect	file:
displayFrame	opengl/tests/hwc/hwcRects.cpp	/^    struct hwc_rect   displayFrame;$/;"	m	class:Rectangle	typeref:struct:Rectangle::hwc_rect	file:
displayId	services/inputflinger/InputDispatcher.h	/^            int32_t displayId;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
displayId	services/inputflinger/InputDispatcher.h	/^        int32_t displayId; \/\/ id to the display that currently has a touch, others are rejected$/;"	m	struct:android::InputDispatcher::TouchState
displayId	services/inputflinger/InputDispatcher.h	/^        int32_t displayId;$/;"	m	struct:android::InputDispatcher::MotionEntry
displayId	services/inputflinger/InputListener.h	/^    int32_t displayId;$/;"	m	struct:android::NotifyMotionArgs
displayId	services/inputflinger/InputReader.h	/^    int32_t displayId; \/\/ -1 if invalid$/;"	m	struct:android::DisplayViewport
displayId	services/inputflinger/InputWindow.h	/^    int32_t displayId;$/;"	m	struct:android::InputWindowInfo
displayName	services/surfaceflinger/SurfaceFlinger.h	/^        String8 displayName;$/;"	m	struct:android::SurfaceFlinger::DisplayDeviceState
displays	services/surfaceflinger/SurfaceFlinger.h	/^        DefaultKeyedVector< wp<IBinder>, DisplayDeviceState> displays;$/;"	m	struct:android::SurfaceFlinger::State
dispose	libs/binder/MemoryHeapBase.cpp	/^void MemoryHeapBase::dispose()$/;"	f	class:android::MemoryHeapBase
dispose	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::dispose() {$/;"	f	class:android::SurfaceComposerClient
dist	opengl/tests/angeles/cams.h	/^    unsigned char dist;     \/\/ if >0, cam rotates around eye xy on dist * 0.1$/;"	m	struct:__anon234
distance	include/android/sensor.h	/^            float           distance;$/;"	m	union:ASensorEvent::__anon187::__anon188
distance	include/ui/TVecHelpers.h	/^    T PURE distance(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecFunctions
distance	services/inputflinger/InputReader.cpp	/^inline static float distance(float x1, float y1, float x2, float y2) {$/;"	f	namespace:android
distance	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange distance;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
distance	services/inputflinger/InputReader.h	/^        int32_t distance;$/;"	m	struct:android::RawPointerData::Pointer
distance	services/inputflinger/InputReader.h	/^        uint64_t distance : 48; \/\/ squared distance$/;"	m	struct:android::TouchInputMapper::PointerDistanceHeapElement
distance	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo distance;$/;"	m	struct:android::RawPointerAxes
distanceCalibration	services/inputflinger/InputReader.h	/^        DistanceCalibration distanceCalibration;$/;"	m	struct:android::TouchInputMapper::Calibration
distanceScale	services/inputflinger/InputReader.h	/^        float distanceScale;$/;"	m	struct:android::TouchInputMapper::Calibration
div2f	opengl/libagl/fp.h	/^GLfloat div2f(GLfloat v) {$/;"	f	namespace:android::gl
div5	opengl/libagl/dxt.cpp	45;"	d	file:
div7	opengl/libagl/dxt.cpp	46;"	d	file:
divideBy255	opengl/libs/ETC1/etc1.cpp	/^inline int divideBy255(int d) {$/;"	f	file:
doAdd	services/sensorservice/vec.h	/^VLHS<TYPE, SIZE> PURE doAdd($/;"	f	namespace:android::helpers
doAssign	services/sensorservice/mat.h	/^mat<TYPE, C, R>& doAssign($/;"	f	namespace:android::helpers
doAssign	services/sensorservice/vec.h	/^vec<TYPE, SIZE>& doAssign($/;"	f	namespace:android::helpers
doComposeSurfaces	services/surfaceflinger/SurfaceFlinger.cpp	/^bool SurfaceFlinger::doComposeSurfaces(const sp<const DisplayDevice>& hw, const Region& dirty)$/;"	f	class:android::SurfaceFlinger
doComposition	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::doComposition() {$/;"	f	class:android::SurfaceFlinger
doDebugFlashRegions	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::doDebugFlashRegions()$/;"	f	class:android::SurfaceFlinger
doDispatchCycleFinishedLockedInterruptible	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::doDispatchCycleFinishedLockedInterruptible($/;"	f	class:android::InputDispatcher
doDisplayComposition	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::doDisplayComposition(const sp<const DisplayDevice>& hw,$/;"	f	class:android::SurfaceFlinger
doDrawFinal	services/surfaceflinger/LayerBlur.cpp	/^void LayerBlur::doDrawFinal(const sp<const DisplayDevice>& hw,$/;"	f	class:android::LayerBlur
doFrame	cmds/flatland/Main.cpp	/^    bool doFrame(EGLSurface surface) {$/;"	f	class:BenchmarkRunner	file:
doGLFenceWait	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::doGLFenceWait() const {$/;"	f	class:android::GLConsumer
doGLFenceWaitLocked	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::doGLFenceWaitLocked() const {$/;"	f	class:android::GLConsumer
doInterceptKeyBeforeDispatchingLockedInterruptible	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::doInterceptKeyBeforeDispatchingLockedInterruptible($/;"	f	class:android::InputDispatcher
doLogFrameDurations	services/surfaceflinger/EventLog/EventLog.cpp	/^void EventLog::doLogFrameDurations(const String8& window,$/;"	f	class:android::EventLog
doLoop	opengl/tests/gl_perf/fill_common.cpp	/^static void doLoop(bool warmup, int pgm, uint32_t passCount) {$/;"	f	file:
doLoopStates	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^const int doLoopStates = 2;$/;"	v
doMul	services/sensorservice/mat.h	/^mat<TYPE, C, R> PURE doMul($/;"	f	namespace:android::helpers
doMul	services/sensorservice/mat.h	/^vec<TYPE, R> PURE doMul($/;"	f	namespace:android::helpers
doMulScalar	services/sensorservice/vec.h	/^VEC<TYPE, SIZE> PURE doMulScalar($/;"	f	namespace:android::helpers
doNotifyANRLockedInterruptible	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::doNotifyANRLockedInterruptible($/;"	f	class:android::InputDispatcher
doNotifyConfigurationChangedInterruptible	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::doNotifyConfigurationChangedInterruptible($/;"	f	class:android::InputDispatcher
doNotifyInputChannelBrokenLockedInterruptible	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::doNotifyInputChannelBrokenLockedInterruptible($/;"	f	class:android::InputDispatcher
doPhysics	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private void doPhysics(long timestamp) {$/;"	m	class:CamRenderer	file:
doPokeUserActivityLockedInterruptible	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::doPokeUserActivityLockedInterruptible(CommandEntry* commandEntry) {$/;"	f	class:android::InputDispatcher
doScalarMul	services/sensorservice/vec.h	/^VEC<TYPE, SIZE> PURE doScalarMul($/;"	f	namespace:android::helpers
doSingleTest	opengl/tests/gl_perf/fill_common.cpp	/^static void doSingleTest(uint32_t pgmNum, int tex) {$/;"	f	file:
doSingleTestStates	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^const int doSingleTestStates = 2;$/;"	v
doSub	services/sensorservice/vec.h	/^VLHS<TYPE, SIZE> PURE doSub($/;"	f	namespace:android::helpers
doTest	opengl/tests/gl_perf/filltest.cpp	/^bool doTest(uint32_t w, uint32_t h) {$/;"	f
doTest	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^void doTest() {$/;"	f
doTransaction	services/surfaceflinger/Layer.cpp	/^uint32_t Layer::doTransaction(uint32_t flags) {$/;"	f	class:android::Layer
do_aapt	cmds/installd/installd.c	/^static int do_aapt(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_aapt_with_common	cmds/installd/installd.c	/^static int do_aapt_with_common(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_add_service	cmds/servicemanager/service_manager.c	/^int do_add_service(struct binder_state *bs,$/;"	f
do_compare	services/surfaceflinger/SurfaceFlinger.cpp	/^int SurfaceFlinger::LayerVector::do_compare(const void* lhs,$/;"	f	class:android::SurfaceFlinger::LayerVector
do_dexopt	cmds/installd/installd.c	/^static int do_dexopt(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_dmesg	cmds/dumpstate/utils.c	/^void do_dmesg() {$/;"	f
do_dump_settings	cmds/dumpstate/utils.c	/^void do_dump_settings(int userid) {$/;"	f
do_find_service	cmds/servicemanager/service_manager.c	/^uint32_t do_find_service(struct binder_state *bs, const uint16_t *s, size_t len, uid_t uid, pid_t spid)$/;"	f
do_fixuid	cmds/installd/installd.c	/^static int do_fixuid(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_free_cache	cmds/installd/installd.c	/^static int do_free_cache(char **arg, char reply[REPLY_MAX]) \/* TODO int:free_size *\/$/;"	f	file:
do_get_size	cmds/installd/installd.c	/^static int do_get_size(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_idmap	cmds/installd/installd.c	/^static int do_idmap(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_install	cmds/installd/installd.c	/^static int do_install(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_linklib	cmds/installd/installd.c	/^static int do_linklib(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_mark_boot_complete	cmds/installd/installd.c	/^static int do_mark_boot_complete(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_mk_user_config	cmds/installd/installd.c	/^static int do_mk_user_config(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_mk_user_data	cmds/installd/installd.c	/^static int do_mk_user_data(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_move_dex	cmds/installd/installd.c	/^static int do_move_dex(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_movefiles	cmds/installd/installd.c	/^static int do_movefiles(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_patchoat	cmds/installd/installd.c	/^static int do_patchoat(char **arg, char reply[REPLY_MAX]) {$/;"	f	file:
do_ping	cmds/installd/installd.c	/^static int do_ping(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_remove	cmds/installd/installd.c	/^static int do_remove(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_rename	cmds/installd/installd.c	/^static int do_rename(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_restorecon_data	cmds/installd/installd.c	/^static int do_restorecon_data(char **arg, char reply[REPLY_MAX] __attribute__((unused)))$/;"	f	file:
do_rm_cache	cmds/installd/installd.c	/^static int do_rm_cache(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_rm_code_cache	cmds/installd/installd.c	/^static int do_rm_code_cache(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_rm_dex	cmds/installd/installd.c	/^static int do_rm_dex(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_rm_user	cmds/installd/installd.c	/^static int do_rm_user(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_rm_user_data	cmds/installd/installd.c	/^static int do_rm_user_data(char **arg, char reply[REPLY_MAX])$/;"	f	file:
do_showmap	cmds/dumpstate/utils.c	/^void do_showmap(int pid, const char *name) {$/;"	f
dockBatteryHealth	include/batteryservice/BatteryService.h	/^    int dockBatteryHealth;$/;"	m	struct:android::BatteryProperties
dockBatteryLevel	include/batteryservice/BatteryService.h	/^    int dockBatteryLevel;$/;"	m	struct:android::BatteryProperties
dockBatteryPresent	include/batteryservice/BatteryService.h	/^    bool dockBatteryPresent;$/;"	m	struct:android::BatteryProperties
dockBatteryStatus	include/batteryservice/BatteryService.h	/^    int dockBatteryStatus;$/;"	m	struct:android::BatteryProperties
dockBatterySupported	include/batteryservice/BatteryService.h	/^    bool dockBatterySupported;$/;"	m	struct:android::BatteryProperties
dockBatteryTechnology	include/batteryservice/BatteryService.h	/^    String8 dockBatteryTechnology;$/;"	m	struct:android::BatteryProperties
dockBatteryTemperature	include/batteryservice/BatteryService.h	/^    int dockBatteryTemperature;$/;"	m	struct:android::BatteryProperties
dockBatteryVoltage	include/batteryservice/BatteryService.h	/^    int dockBatteryVoltage;$/;"	m	struct:android::BatteryProperties
done	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^bool done;$/;"	v
dot	include/ui/TVecHelpers.h	/^    T PURE dot(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecFunctions
dot3	opengl/libagl/matrix.h	/^GLfixed dot3(const GLfixed* a, const GLfixed* b) $/;"	f	namespace:android
dot4	opengl/libagl/matrix.h	/^GLfixed dot4(const GLfixed* a, const GLfixed* b) $/;"	f	namespace:android
dot_product	services/sensorservice/vec.h	/^    friend inline TYPE PURE dot_product(const vec& lhs, const vec& rhs) {$/;"	f	class:android::vec
dot_product	services/sensorservice/vec.h	/^TYPE PURE dot_product($/;"	f	namespace:android
double2Rational	opengl/tests/hwc/hwcCommit.cpp	/^void Rational::double2Rational(double f, Range nRange, Range dRange,$/;"	f	class:Rational
down	services/inputflinger/InputDispatcher.h	/^        bool down;$/;"	m	struct:android::InputDispatcher::TouchState
down	services/inputflinger/InputReader.h	/^        bool down;$/;"	m	struct:android::TouchInputMapper::CurrentVirtualKeyState
down	services/inputflinger/InputReader.h	/^        bool down;$/;"	m	struct:android::TouchInputMapper::PointerSimple
downTime	include/input/InputTransport.h	/^            nsecs_t downTime __attribute__((aligned(8)));$/;"	m	struct:android::InputMessage::Body::Key
downTime	include/input/InputTransport.h	/^            nsecs_t downTime __attribute__((aligned(8)));$/;"	m	struct:android::InputMessage::Body::Motion
downTime	services/inputflinger/InputDispatcher.h	/^            nsecs_t downTime;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
downTime	services/inputflinger/InputDispatcher.h	/^            nsecs_t downTime;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
downTime	services/inputflinger/InputDispatcher.h	/^        nsecs_t downTime;$/;"	m	struct:android::InputDispatcher::KeyEntry
downTime	services/inputflinger/InputDispatcher.h	/^        nsecs_t downTime;$/;"	m	struct:android::InputDispatcher::MotionEntry
downTime	services/inputflinger/InputListener.h	/^    nsecs_t downTime;$/;"	m	struct:android::NotifyKeyArgs
downTime	services/inputflinger/InputListener.h	/^    nsecs_t downTime;$/;"	m	struct:android::NotifyMotionArgs
downTime	services/inputflinger/InputReader.h	/^        nsecs_t downTime;$/;"	m	struct:android::TouchInputMapper::CurrentVirtualKeyState
downTime	services/inputflinger/InputReader.h	/^        nsecs_t downTime;$/;"	m	struct:android::TouchInputMapper::PointerGesture
downTime	services/inputflinger/InputReader.h	/^        nsecs_t downTime;$/;"	m	struct:android::TouchInputMapper::PointerSimple
dpy	opengl/libagl/egl.cpp	/^    EGLDisplay          dpy;$/;"	m	struct:android::egl_context_t	file:
dpy	opengl/libagl/egl.cpp	/^    EGLDisplay          dpy;$/;"	m	struct:android::egl_surface_t	file:
dpy	opengl/libs/EGL/egl_display.h	/^        EGLDisplay  dpy;$/;"	m	struct:android::egl_display_t::DisplayImpl
dpy	opengl/libs/EGL/egl_object.h	/^    EGLDisplay dpy;$/;"	m	class:android::egl_context_t
dpy	opengl/tests/gl_perf/gl2_perf.cpp	/^static EGLDisplay dpy;$/;"	v	file:
dpy	opengl/tests/hwc/hwcColorEquiv.cpp	/^static EGLDisplay dpy;$/;"	v	file:
dpy	opengl/tests/hwc/hwcCommit.cpp	/^static EGLDisplay dpy;$/;"	v	file:
dpy	opengl/tests/hwc/hwcRects.cpp	/^static EGLDisplay dpy;$/;"	v	file:
dpy	opengl/tests/hwc/hwcStress.cpp	/^static EGLDisplay dpy;$/;"	v	file:
drainDispatchQueueLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::drainDispatchQueueLocked(Queue<DispatchEntry>* queue) {$/;"	f	class:android::InputDispatcher
drainInboundQueueLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::drainInboundQueueLocked() {$/;"	f	class:android::InputDispatcher
draw	opengl/libagl/egl.cpp	/^    EGLSurface          draw;$/;"	m	struct:android::egl_context_t	file:
draw	opengl/libs/EGL/egl_object.h	/^    EGLSurface draw;$/;"	m	class:android::egl_context_t
draw	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^    public void draw(GL10 gl) {$/;"	m	class:Triangle
draw	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       public void draw(GL10 gl) {$/;"	m	class:TestView.Grid
draw	services/surfaceflinger/Layer.cpp	/^void Layer::draw(const sp<const DisplayDevice>& hw) {$/;"	f	class:android::Layer
draw	services/surfaceflinger/Layer.cpp	/^void Layer::draw(const sp<const DisplayDevice>& hw, const Region& clip) {$/;"	f	class:android::Layer
draw	services/surfaceflinger/Layer.cpp	/^void Layer::draw(const sp<const DisplayDevice>& hw,$/;"	f	class:android::Layer
drawArraysPrims	opengl/libagl/array.cpp	/^static const arrays_prims_fct_t drawArraysPrims[] = {$/;"	m	namespace:android	file:
drawElementsPrims	opengl/libagl/array.cpp	/^static const elements_prims_fct_t drawElementsPrims[] = {$/;"	m	namespace:android	file:
drawFadeQuad	opengl/tests/angeles/demo.c	/^static void drawFadeQuad()$/;"	f	file:
drawGLObject	opengl/tests/angeles/demo.c	/^static void drawGLObject(GLOBJECT *object)$/;"	f	file:
drawGradient	cmds/flatland/Renderers.cpp	/^    bool drawGradient() {$/;"	f	class:android::GradientRenderer
drawGroundPlane	opengl/tests/angeles/demo.c	/^static void drawGroundPlane()$/;"	f	file:
drawIndexedPrimitivesLineLoop	opengl/libagl/array.cpp	/^void drawIndexedPrimitivesLineLoop(ogles_context_t* c,$/;"	f	namespace:android
drawIndexedPrimitivesLineStrip	opengl/libagl/array.cpp	/^void drawIndexedPrimitivesLineStrip(ogles_context_t* c,$/;"	f	namespace:android
drawIndexedPrimitivesLines	opengl/libagl/array.cpp	/^void drawIndexedPrimitivesLines(ogles_context_t* c,$/;"	f	namespace:android
drawIndexedPrimitivesPoints	opengl/libagl/array.cpp	/^void drawIndexedPrimitivesPoints(ogles_context_t* c,$/;"	f	namespace:android
drawIndexedPrimitivesTriangleFan	opengl/libagl/array.cpp	/^void drawIndexedPrimitivesTriangleFan(ogles_context_t* c,$/;"	f	namespace:android
drawIndexedPrimitivesTriangleFanOrStrip	opengl/libagl/array.cpp	/^static void drawIndexedPrimitivesTriangleFanOrStrip(ogles_context_t* c,$/;"	f	namespace:android
drawIndexedPrimitivesTriangleStrip	opengl/libagl/array.cpp	/^void drawIndexedPrimitivesTriangleStrip(ogles_context_t* c,$/;"	f	namespace:android
drawIndexedPrimitivesTriangles	opengl/libagl/array.cpp	/^void drawIndexedPrimitivesTriangles(ogles_context_t* c,$/;"	f	namespace:android
drawMaskLayer	services/surfaceflinger/LayerBlur.cpp	/^bool LayerBlur::drawMaskLayer(sp<Layer>& maskLayer, const sp<const DisplayDevice>& hw,$/;"	f	class:android::LayerBlur
drawMesh	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::drawMesh(const Mesh& mesh) {$/;"	f	class:android::GLES11RenderEngine
drawMesh	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::drawMesh(const Mesh& mesh) {$/;"	f	class:android::GLES20RenderEngine
drawModels	opengl/tests/angeles/demo.c	/^static void drawModels(float zScale)$/;"	f	file:
drawPrimitivesLineLoop	opengl/libagl/array.cpp	/^void drawPrimitivesLineLoop(ogles_context_t* c, GLint first, GLsizei count)$/;"	f	namespace:android
drawPrimitivesLineStrip	opengl/libagl/array.cpp	/^void drawPrimitivesLineStrip(ogles_context_t* c, GLint first, GLsizei count)$/;"	f	namespace:android
drawPrimitivesLines	opengl/libagl/array.cpp	/^void drawPrimitivesLines(ogles_context_t* c, GLint first, GLsizei count)$/;"	f	namespace:android
drawPrimitivesPoints	opengl/libagl/array.cpp	/^void drawPrimitivesPoints(ogles_context_t* c, GLint first, GLsizei count)$/;"	f	namespace:android
drawPrimitivesTriangleFan	opengl/libagl/array.cpp	/^void drawPrimitivesTriangleFan(ogles_context_t* c,$/;"	f	namespace:android
drawPrimitivesTriangleFanOrStrip	opengl/libagl/array.cpp	/^static void drawPrimitivesTriangleFanOrStrip(ogles_context_t* c,$/;"	f	namespace:android
drawPrimitivesTriangleStrip	opengl/libagl/array.cpp	/^void drawPrimitivesTriangleStrip(ogles_context_t* c,$/;"	f	namespace:android
drawPrimitivesTriangles	opengl/libagl/array.cpp	/^void drawPrimitivesTriangles(ogles_context_t* c, GLint first, GLsizei count)$/;"	f	namespace:android
drawTexiOES	opengl/libagl/texture.cpp	/^static void drawTexiOES(GLint x, GLint y, GLint z, GLint w, GLint h, ogles_context_t* c)$/;"	f	namespace:android
drawTexture	libs/gui/tests/SRGB_test.cpp	/^    void drawTexture(bool asSRGB, GLint x, GLint y, GLsizei width,$/;"	f	class:android::SRGBTest
drawTexture	libs/gui/tests/SurfaceTextureGL.h	/^    void drawTexture() {$/;"	f	class:android::SurfaceTextureGLTest
drawTexture	libs/gui/tests/TextureRenderer.cpp	/^void TextureRenderer::drawTexture() {$/;"	f	class:android::TextureRenderer
drawTexxOES	opengl/libagl/texture.cpp	/^static void drawTexxOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w, GLfixed h,$/;"	f	namespace:android
drawTexxOESImp	opengl/libagl/texture.cpp	/^static void drawTexxOESImp(GLfixed x, GLfixed y, GLfixed z, GLfixed w, GLfixed h,$/;"	f	namespace:android
drawWithOpenGL	services/surfaceflinger/Layer.cpp	/^void Layer::drawWithOpenGL(const sp<const DisplayDevice>& hw,$/;"	f	class:android::Layer
drawWormhole	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::drawWormhole(const sp<const DisplayDevice>& hw, const Region& region) const {$/;"	f	class:android::SurfaceFlinger
driver_t	opengl/libs/EGL/Loader.cpp	/^Loader::driver_t::driver_t(void* gles)$/;"	f	class:android::Loader::driver_t
driver_t	opengl/libs/EGL/Loader.h	/^    struct driver_t {$/;"	s	class:android::Loader
dropInboundEventLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::dropInboundEventLocked(EventEntry* entry, DropReason dropReason) {$/;"	f	class:android::InputDispatcher
drop_privileges	cmds/installd/installd.c	/^static void drop_privileges() {$/;"	f	file:
dsdx	include/private/gui/LayerState.h	/^                float   dsdx;$/;"	m	struct:android::layer_state_t::matrix22_t
dsdy	include/private/gui/LayerState.h	/^                float   dsdy;$/;"	m	struct:android::layer_state_t::matrix22_t
dso	opengl/libs/EGL/Loader.h	/^        void* dso[3];$/;"	m	struct:android::Loader::driver_t
dso	opengl/libs/EGL/egldefs.h	/^    void *              dso;$/;"	m	struct:android::egl_connection_t
dtdx	include/private/gui/LayerState.h	/^                float   dtdx;$/;"	m	struct:android::layer_state_t::matrix22_t
dtdy	include/private/gui/LayerState.h	/^                float   dtdy;$/;"	m	struct:android::layer_state_t::matrix22_t
dummy	libs/input/tests/StructLayout_test.cpp	/^  uint32_t dummy;$/;"	m	struct:android::Foo	file:
dump	libs/binder/Binder.cpp	/^    status_t BBinder::dump(int \/*fd*\/, const Vector<String16>& \/*args*\/)$/;"	f	class:android::BBinder
dump	libs/binder/BpBinder.cpp	/^status_t BpBinder::dump(int fd, const Vector<String16>& args)$/;"	f	class:android::BpBinder
dump	libs/binder/MemoryDealer.cpp	/^void MemoryDealer::dump(const char* what) const$/;"	f	class:android::MemoryDealer
dump	libs/binder/MemoryDealer.cpp	/^void SimpleBestFitAllocator::dump(String8& result,$/;"	f	class:android::SimpleBestFitAllocator
dump	libs/binder/MemoryDealer.cpp	/^void SimpleBestFitAllocator::dump(const char* what) const$/;"	f	class:android::SimpleBestFitAllocator
dump	libs/gui/BufferQueueConsumer.cpp	/^void BufferQueueConsumer::dump(String8& result, const char* prefix) const {$/;"	f	class:android::BufferQueueConsumer
dump	libs/gui/BufferQueueCore.cpp	/^void BufferQueueCore::dump(String8& result, const char* prefix) const {$/;"	f	class:android::BufferQueueCore
dump	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::dump(String8& result) const {$/;"	f	class:android::ConsumerBase
dump	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::dump(String8& result, const char* prefix) const {$/;"	f	class:android::ConsumerBase
dump	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual void dump(String8& result, const char* prefix) const {$/;"	f	class:android::BpGraphicBufferConsumer
dump	libs/ui/FramebufferNativeWindow.cpp	/^void FramebufferNativeWindow::dump(String8& result) {$/;"	f	class:android::FramebufferNativeWindow
dump	libs/ui/GraphicBufferAllocator.cpp	/^void GraphicBufferAllocator::dump(String8& result) const$/;"	f	class:android::GraphicBufferAllocator
dump	libs/ui/Region.cpp	/^void Region::dump(String8& out, const char* what, uint32_t flags) const$/;"	f	class:android::Region
dump	libs/ui/Region.cpp	/^void Region::dump(const char* what, uint32_t flags) const$/;"	f	class:android::Region
dump	opengl/libagl/Tokenizer.cpp	/^void Tokenizer::dump() const$/;"	f	class:android::Tokenizer
dump	opengl/libagl/egl.cpp	/^        void dump(char const* what) {$/;"	f	struct:android::egl_window_surface_v2_t::Rect
dump	opengl/libagl/matrix.cpp	/^void matrixf_t::dump(const char* what) {$/;"	f	class:android::matrixf_t
dump	opengl/libagl/matrix.cpp	/^void transform_t::dump(const char* what)$/;"	f	class:android::transform_t
dump	opengl/tools/glgen2/registry/genheaders.py	/^            dump = True$/;"	v
dump	opengl/tools/glgen2/registry/genheaders.py	/^dump    = False$/;"	v
dump	services/inputflinger/EventHub.cpp	/^void EventHub::dump(String8& dump) {$/;"	f	class:android::EventHub
dump	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::dump(String8& dump) {$/;"	f	class:android::InputDispatcher
dump	services/inputflinger/InputReader.cpp	/^void CursorInputMapper::dump(String8& dump) {$/;"	f	class:android::CursorInputMapper
dump	services/inputflinger/InputReader.cpp	/^void InputDevice::dump(String8& dump) {$/;"	f	class:android::InputDevice
dump	services/inputflinger/InputReader.cpp	/^void InputMapper::dump(String8& dump) {$/;"	f	class:android::InputMapper
dump	services/inputflinger/InputReader.cpp	/^void InputReader::dump(String8& dump) {$/;"	f	class:android::InputReader
dump	services/inputflinger/InputReader.cpp	/^void JoystickInputMapper::dump(String8& dump) {$/;"	f	class:android::JoystickInputMapper
dump	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::dump(String8& dump) {$/;"	f	class:android::KeyboardInputMapper
dump	services/inputflinger/InputReader.cpp	/^void SwitchInputMapper::dump(String8& dump) {$/;"	f	class:android::SwitchInputMapper
dump	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dump(String8& dump) {$/;"	f	class:android::TouchInputMapper
dump	services/inputflinger/InputReader.cpp	/^void VibratorInputMapper::dump(String8& dump) {$/;"	f	class:android::VibratorInputMapper
dump	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void dump(String8& dump) {$/;"	f	class:android::FakeEventHub	file:
dump	services/sensorservice/SensorDevice.cpp	/^void SensorDevice::dump(String8& result)$/;"	f	class:android::SensorDevice
dump	services/sensorservice/SensorFusion.cpp	/^void SensorFusion::dump(String8& result) {$/;"	f	class:android::SensorFusion
dump	services/sensorservice/SensorService.cpp	/^status_t SensorService::dump(int fd, const Vector<String16>& \/*args*\/)$/;"	f	class:android::SensorService
dump	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::dump(String8& result) {$/;"	f	class:android::SensorService::SensorEventConnection
dump	services/surfaceflinger/DispSync.cpp	/^void DispSync::dump(String8& result) const {$/;"	f	class:android::DispSync
dump	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::dump(String8& result) const {$/;"	f	class:DisplayDevice
dump	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^void FramebufferSurface::dump(String8& result) const {$/;"	f	class:android::FramebufferSurface
dump	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::dump(String8& result) const {$/;"	f	class:android::HWComposer
dump	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^void VirtualDisplaySurface::dump(String8& \/* result *\/) const {$/;"	f	class:android::VirtualDisplaySurface
dump	services/surfaceflinger/EventThread.cpp	/^void EventThread::dump(String8& result) const {$/;"	f	class:android::EventThread
dump	services/surfaceflinger/Layer.cpp	/^void Layer::dump(String8& result, Colorizer& colorizer) const$/;"	f	class:android::Layer
dump	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::dump(String8& result) {$/;"	f	class:android::GLES11RenderEngine
dump	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::dump(String8& result) {$/;"	f	class:android::GLES20RenderEngine
dump	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::dump(String8& result) {$/;"	f	class:android::RenderEngine
dump	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::dump(int fd, const Vector<String16>& args)$/;"	f	class:android::SurfaceFlinger
dump	services/surfaceflinger/Transform.cpp	/^void Transform::dump(const char* name) const$/;"	f	class:android::Transform
dumpAffineTransformation	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dumpAffineTransformation(String8& dump) {$/;"	f	class:android::TouchInputMapper
dumpAllLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::dumpAllLocked(const Vector<String16>& args, size_t& index,$/;"	f	class:android::SurfaceFlinger
dumpAllocationsToSystemLog	libs/ui/GraphicBuffer.cpp	/^void GraphicBuffer::dumpAllocationsToSystemLog()$/;"	f	class:android::GraphicBuffer
dumpCalibration	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dumpCalibration(String8& dump) {$/;"	f	class:android::TouchInputMapper
dumpDispatchStateLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::dumpDispatchStateLocked(String8& dump) {$/;"	f	class:android::InputDispatcher
dumpFrameStats	services/surfaceflinger/Layer.cpp	/^void Layer::dumpFrameStats(String8& result) const {$/;"	f	class:android::Layer
dumpLocked	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::dumpLocked(String8& result, const char* prefix) const {$/;"	f	class:android::ConsumerBase
dumpLocked	libs/gui/GLConsumer.cpp	/^void GLConsumer::dumpLocked(String8& result, const char* prefix) const$/;"	f	class:android::GLConsumer
dumpLocked	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^void FramebufferSurface::dumpLocked(String8& result, const char* prefix) const$/;"	f	class:android::FramebufferSurface
dumpParameters	services/inputflinger/InputReader.cpp	/^void CursorInputMapper::dumpParameters(String8& dump) {$/;"	f	class:android::CursorInputMapper
dumpParameters	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::dumpParameters(String8& dump) {$/;"	f	class:android::KeyboardInputMapper
dumpParameters	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dumpParameters(String8& dump) {$/;"	f	class:android::TouchInputMapper
dumpRawAbsoluteAxisInfo	services/inputflinger/InputReader.cpp	/^void InputMapper::dumpRawAbsoluteAxisInfo(String8& dump,$/;"	f	class:android::InputMapper
dumpRawPointerAxes	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dumpRawPointerAxes(String8& dump) {$/;"	f	class:android::TouchInputMapper
dumpReg	opengl/tools/glgen2/registry/reg.py	/^    def dumpReg(self, maxlen = 40, filehandle = sys.stdout):$/;"	m	class:Registry
dumpRegion	services/inputflinger/InputDispatcher.cpp	/^static void dumpRegion(String8& dump, const Region& region) {$/;"	f	namespace:android
dumpShader	services/surfaceflinger/RenderEngine/Program.cpp	/^String8& Program::dumpShader(String8& result, GLenum \/*type*\/) {$/;"	f	class:android::Program
dumpStats	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::dumpStats(String8& result) const {$/;"	f	class:android::FrameTracker
dumpStatsLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::dumpStatsLocked(const Vector<String16>& args, size_t& index,$/;"	f	class:android::SurfaceFlinger
dumpSurface	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dumpSurface(String8& dump) {$/;"	f	class:android::TouchInputMapper
dumpToSystemLog	libs/ui/GraphicBufferAllocator.cpp	/^void GraphicBufferAllocator::dumpToSystemLog()$/;"	f	class:android::GraphicBufferAllocator
dumpTrace	cmds/atrace/atrace.cpp	/^static void dumpTrace()$/;"	f	file:
dumpVirtualKeys	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::dumpVirtualKeys(String8& dump) {$/;"	f	class:android::TouchInputMapper
dump_dev_files	cmds/dumpstate/dumpstate.c	/^static void dump_dev_files(const char *title, const char *driverpath, const char *filename)$/;"	f	file:
dump_file	cmds/dumpstate/utils.c	/^int dump_file(const char *title, const char *path) {$/;"	f
dump_file_from_fd	cmds/dumpstate/utils.c	/^int dump_file_from_fd(const char *title, const char *path, int fd) {$/;"	f
dump_heaps	libs/binder/IMemory.cpp	/^    static inline void dump_heaps() {$/;"	f	class:android::BpMemoryHeap	file:
dump_heaps	libs/binder/IMemory.cpp	/^void HeapCache::dump_heaps()$/;"	f	class:android::HeapCache
dump_l	libs/binder/MemoryDealer.cpp	/^void SimpleBestFitAllocator::dump_l(String8& result,$/;"	f	class:android::SimpleBestFitAllocator
dump_l	libs/binder/MemoryDealer.cpp	/^void SimpleBestFitAllocator::dump_l(const char* what) const$/;"	f	class:android::SimpleBestFitAllocator
dump_route_tables	cmds/dumpstate/utils.c	/^void dump_route_tables() {$/;"	f
dump_stats	opengl/libagl/array.cpp	/^void vertex_cache_t::dump_stats(GLenum \/*mode*\/)$/;"	f	class:android::vertex_cache_t
dump_stats	opengl/libagl/array.cpp	/^void vertex_cache_t::dump_stats(GLenum mode)$/;"	f	class:android::vertex_cache_t
dump_traces	cmds/dumpstate/utils.c	/^const char *dump_traces() {$/;"	f
dump_traces_path	cmds/dumpstate/dumpstate.c	/^static const char *dump_traces_path = NULL;$/;"	v	file:
dumpstate	cmds/dumpstate/dumpstate.c	/^static void dumpstate() {$/;"	f	file:
dumpstate_board	cmds/dumpstate/libdumpstate_default.c	/^void dumpstate_board(void)$/;"	f
dup	libs/input/InputTransport.cpp	/^sp<InputChannel> InputChannel::dup() const {$/;"	f	class:android::InputChannel
dup	libs/ui/Fence.cpp	/^int Fence::dup() const {$/;"	f	class:android::Fence
dup	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual HWComposer::HWCLayer* dup() {$/;"	f	class:android::Iterable	file:
duration	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::google::protobuf::int32 GLMessage::duration() const {$/;"	f	class:android::gltrace::GLMessage
duration	opengl/tests/hwc/hwcStress.cpp	/^static float duration = defaultDuration;$/;"	v	file:
duration_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::int32 duration_;$/;"	m	class:android::gltrace::GLMessage
dx	include/private/ui/RegionHelper.h	/^        TYPE dx;$/;"	m	struct:android::region_operator::region
dx	services/inputflinger/InputReader.h	/^            float dx, dy;$/;"	m	struct:android::TouchInputMapper::PointerGesture::Delta
dy	include/private/ui/RegionHelper.h	/^        TYPE dy;$/;"	m	struct:android::region_operator::region
dy	services/inputflinger/InputReader.h	/^            float dx, dy;$/;"	m	struct:android::TouchInputMapper::PointerGesture::Delta
e	opengl/libs/EGL/trace.cpp	/^    GLuint64 e;$/;"	m	struct:android::GLenumString	file:
eAACProfile	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACPROFILETYPE eAACProfile;   \/**< AAC profile enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
eAACStreamFormat	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AACSTREAMFORMATTYPE eAACStreamFormat; \/**< AAC stream format enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
eAMRBandMode	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRBANDMODETYPE eAMRBandMode; \/**< AMR Band Mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
eAMRDTXMode	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRDTXMODETYPE  eAMRDTXMode;  \/**< AMR DTX Mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
eAMRFrameFormat	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_AMRFRAMEFORMATTYPE eAMRFrameFormat; \/**< AMR frame format enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
eAccuracy	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MOTIONVECTORTYPE eAccuracy;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
eAlphaChanged	include/private/gui/LayerState.h	/^        eAlphaChanged               = 0x00000008,$/;"	e	enum:android::layer_state_t::__anon106
eAnimation	include/gui/ISurfaceComposer.h	/^        eAnimation   = 0x02,$/;"	e	enum:android::ISurfaceComposer::__anon135
eBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G723RATE eBitRate;  \/**< todo: Should this be moved to a config? *\/$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
eBitType	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_G729TYPE eBitType;$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
eBlurChanged	include/private/gui/LayerState.h	/^        eBlurChanged                = 0x00400000,$/;"	e	enum:android::layer_state_t::__anon106
eBlurMaskAlphaThresholdChanged	include/private/gui/LayerState.h	/^        eBlurMaskAlphaThresholdChanged = 0x02000000,$/;"	e	enum:android::layer_state_t::__anon106
eBlurMaskSamplingChanged	include/private/gui/LayerState.h	/^        eBlurMaskSamplingChanged    = 0x01000000,$/;"	e	enum:android::layer_state_t::__anon106
eBlurMaskSurfaceChanged	include/private/gui/LayerState.h	/^        eBlurMaskSurfaceChanged     = 0x00800000,$/;"	e	enum:android::layer_state_t::__anon106
eBufferSupplier	include/media/openmax/OMX_Core.h	/^    OMX_BUFFERSUPPLIERTYPE eBufferSupplier; \/**< buffer supplier *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE
eCDMARate	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
eCDMARate	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
eCDMARate	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
eCDMARate	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CDMARATETYPE eCDMARate; \/**< actual Frame rate *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
eChannelMapping	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELTYPE eChannelMapping[OMX_AUDIO_MAXCHANNELS]; \/**< Slot i contains channel defined by eChannelMap[i] *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
eChannelMode	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode;   \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
eChannelMode	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode;   \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
eChannelMode	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CHANNELMODETYPE eChannelMode; \/**< Channel mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
eClock	include/media/openmax/OMX_Other.h	/^    OMX_TIME_REFCLOCKTYPE eClock;   \/**< Reference clock used to compute media time *\/$/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE
eColorBlend	include/media/openmax/OMX_IVCommon.h	/^    OMX_COLORBLENDTYPE  eColorBlend;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE
eColorFormat	include/media/hardware/HardwareAPI.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:android::DescribeColorFormatParams
eColorFormat	include/media/openmax/OMX_Image.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
eColorFormat	include/media/openmax/OMX_Image.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
eColorFormat	include/media/openmax/OMX_Video.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
eColorFormat	include/media/openmax/OMX_Video.h	/^    OMX_COLOR_FORMATTYPE eColorFormat;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
eCompressionFormat	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
eCompressionFormat	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
eCompressionFormat	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
eCompressionFormat	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CODINGTYPE eCompressionFormat;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
eControlRate	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_CONTROLRATETYPE eControlRate;$/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE
eCropChanged	include/private/gui/LayerState.h	/^        eCropChanged                = 0x00000100,$/;"	e	enum:android::layer_state_t::__anon106
eCursorWindow	include/gui/ISurfaceComposerClient.h	/^        eCursorWindow       = 0x00002000,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eDestroyBackbuffer	include/gui/ISurfaceComposerClient.h	/^        eDestroyBackbuffer  = 0x00000020,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eDir	include/media/openmax/OMX_Component.h	/^    OMX_DIRTYPE eDir;              \/**< Direction (input or output) of this port *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
eDisplayIdHdmi	include/gui/ISurfaceComposer.h	/^        eDisplayIdHdmi = 1$/;"	e	enum:android::ISurfaceComposer::__anon136
eDisplayIdMain	include/gui/ISurfaceComposer.h	/^        eDisplayIdMain = 0,$/;"	e	enum:android::ISurfaceComposer::__anon136
eDisplayProjectionChanged	include/private/gui/LayerState.h	/^        eDisplayProjectionChanged   = 0x04,$/;"	e	enum:android::DisplayState::__anon108
eDisplaySizeChanged	include/private/gui/LayerState.h	/^        eDisplaySizeChanged         = 0x08$/;"	e	enum:android::DisplayState::__anon108
eDisplayTransactionNeeded	services/surfaceflinger/SurfaceFlinger.h	/^    eDisplayTransactionNeeded = 0x04,$/;"	e	enum:android::__anon19
eDither	include/media/openmax/OMX_IVCommon.h	/^    OMX_DITHERTYPE eDither;   \/**< Type of dithering to use *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE
eDomain	include/media/openmax/OMX_Component.h	/^    OMX_PORTDOMAINTYPE eDomain;    \/**< Domain of the port. Determines the contents of metadata below. *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
eDontUpdateGeometryState	services/surfaceflinger/Layer.h	/^        eDontUpdateGeometryState = 0x00000001,$/;"	e	enum:android::Layer::__anon29
eEchoCancelation	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_ECHOCANTYPE eEchoCancelation; \/**< Echo cancelation settings *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
eEffect	include/media/openmax/OMX_IVCommon.h	/^    OMX_TRANSITIONEFFECTTYPE eEffect;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
eEncapsulationType	include/media/openmax/OMX_IVCommon.h	/^    OMX_DATAUNITENCAPSULATIONTYPE eEncapsulationType;$/;"	m	struct:OMX_PARAM_DATAUNITTYPE
eEncoding	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CODINGTYPE eEncoding;  \/**< Type of data expected for this$/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE
eEncoding	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_CODINGTYPE eEncoding; \/**< Type of data expected for this port (e.g. PCM, AMR, MP3, etc) *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
eEndian	include/media/openmax/OMX_Audio.h	/^    OMX_ENDIANTYPE eEndian;           \/**< indicates PCM data as little or big endian *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
eExposureControl	include/media/openmax/OMX_IVCommon.h	/^    OMX_EXPOSURECONTROLTYPE eExposureControl;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE
eFXSurfaceBlur	include/gui/ISurfaceComposerClient.h	/^        eFXSurfaceBlur      = 0x00010000,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eFXSurfaceDim	include/gui/ISurfaceComposerClient.h	/^        eFXSurfaceDim       = 0x00020000,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eFXSurfaceMask	include/gui/ISurfaceComposerClient.h	/^        eFXSurfaceMask      = 0x000F0000,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eFXSurfaceNormal	include/gui/ISurfaceComposerClient.h	/^        eFXSurfaceNormal    = 0x00000000,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eFlag	opengl/tests/hwc/hwcStress.cpp	/^bool eFlag, sFlag, pFlag;$/;"	v
eFlashControl	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FLASHCONTROLTYPE eFlashControl;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
eFocusControl	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_FOCUSCONTROLTYPE eFocusControl;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
eFocusStatus	include/media/openmax/OMX_IVCommon.h	/^    OMX_FOCUSSTATUSTYPE eFocusStatus;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
eFormat	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MP3STREAMFORMATTYPE eFormat;  \/**< MP3 stream format *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
eFormat	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_RAFORMATTYPE eFormat; \/**< is the RealAudio audio format *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
eFormat	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_WMAFORMATTYPE eFormat; \/**< Version of WMA stream \/ data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
eFormat	include/media/openmax/OMX_Other.h	/^    OMX_OTHER_FORMATTYPE eFormat;  \/**< Type of data expected for this channel *\/$/;"	m	struct:OMX_OTHER_PORTDEFINITIONTYPE
eFormat	include/media/openmax/OMX_Other.h	/^    OMX_OTHER_FORMATTYPE eFormat; \/**< Type of data expected for this channel *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE
eFormat	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_RVFORMATTYPE eFormat;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
eFormat	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_WMVFORMATTYPE eFormat;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE
eG726Mode	include/media/openmax/OMX_Audio.h	/^     OMX_AUDIO_G726MODE eG726Mode;$/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE
eHidden	include/gui/ISurfaceComposerClient.h	/^        eHidden             = 0x00000004,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eHuffmanTable	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_HUFFMANTABLETYPE eHuffmanTable;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
eImageFilter	include/media/openmax/OMX_IVCommon.h	/^    OMX_IMAGEFILTERTYPE eImageFilter;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE
eKeyCharset	include/media/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eKeyCharset;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
eKeyCharset	include/media/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eKeyCharset;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
eLayerChanged	include/private/gui/LayerState.h	/^        eLayerChanged               = 0x00000002,$/;"	e	enum:android::layer_state_t::__anon106
eLayerHidden	include/private/gui/LayerState.h	/^        eLayerHidden        = 0x01,     \/\/ SURFACE_HIDDEN in SurfaceControl.java$/;"	e	enum:android::layer_state_t::__anon105
eLayerOpaque	include/private/gui/LayerState.h	/^        eLayerOpaque        = 0x02,     \/\/ SURFACE_OPAQUE$/;"	e	enum:android::layer_state_t::__anon105
eLayerStackChanged	include/private/gui/LayerState.h	/^        eLayerStackChanged          = 0x00000080,$/;"	e	enum:android::layer_state_t::__anon106
eLayerStackChanged	include/private/gui/LayerState.h	/^        eLayerStackChanged          = 0x02,$/;"	e	enum:android::DisplayState::__anon108
eLayerTransparent	include/private/gui/LayerState.h	/^        eLayerTransparent   = 0x80,     \/\/ SURFACE_TRANSPARENT$/;"	e	enum:android::layer_state_t::__anon105
eLevel	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
eLevel	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263LEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
eLevel	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2LEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
eLevel	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4LEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
eLevel	include/media/openmax/OMX_Video.h	/^   OMX_U32 eLevel;        \/**< type is OMX_VIDEO_AVCLEVELTYPE, OMX_VIDEO_H263LEVELTYPE,$/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
eLevel	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCLEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_HEVCTYPE
eLevel	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8LEVELTYPE eLevel;$/;"	m	struct:OMX_VIDEO_PARAM_VP8TYPE
eLoopFilterMode	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCLOOPFILTERTYPE eLoopFilterMode;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
eMIDIPlayBackState	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIPLAYBACKSTATETYPE eMIDIPlayBackState;  \/**< MIDI playback state enumeration, read only field *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
eMatrixChanged	include/private/gui/LayerState.h	/^        eMatrixChanged              = 0x00000010,$/;"	e	enum:android::layer_state_t::__anon106
eMetering	include/media/openmax/OMX_IVCommon.h	/^    OMX_METERINGTYPE eMetering;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
eMidiFormat	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDIFORMATTYPE eMidiFormat; \/**< Version of the MIDI file *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
eMidiSoundBank	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISOUNDBANKTYPE eMidiSoundBank;   \/**< Midi sound bank type enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
eMidiSoundBankLayout	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_MIDISOUNDBANKLAYOUTTYPE eMidiSoundBankLayout; \/**< Midi sound bank layout enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
eMirror	include/media/openmax/OMX_IVCommon.h	/^    OMX_MIRRORTYPE  eMirror;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE
eNaluFormat	include/media/openmax/OMX_VideoExt.h	/^    OMX_NALUFORMATSTYPE eNaluFormat;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE
eNonPremultiplied	include/gui/ISurfaceComposerClient.h	/^        eNonPremultiplied   = 0x00000100,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eNumData	include/media/openmax/OMX_Audio.h	/^    OMX_NUMERICALDATATYPE eNumData;   \/**< indicates PCM data as signed or unsigned *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
eOpacityChanged	include/private/gui/LayerState.h	/^        eOpacityChanged             = 0x00000200,$/;"	e	enum:android::layer_state_t::__anon106
eOpaque	include/gui/ISurfaceComposerClient.h	/^        eOpaque             = 0x00000400,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eOrientation180	include/private/gui/LayerState.h	/^        eOrientation180         = 2,$/;"	e	enum:android::DisplayState::__anon107
eOrientation270	include/private/gui/LayerState.h	/^        eOrientation270         = 3,$/;"	e	enum:android::DisplayState::__anon107
eOrientation90	include/private/gui/LayerState.h	/^        eOrientation90          = 1,$/;"	e	enum:android::DisplayState::__anon107
eOrientationDefault	include/private/gui/LayerState.h	/^        eOrientationDefault     = 0,$/;"	e	enum:android::DisplayState::__anon107
eOrientationSwapMask	include/private/gui/LayerState.h	/^        eOrientationSwapMask    = 0x01$/;"	e	enum:android::DisplayState::__anon107
eOrientationUnchanged	include/private/gui/LayerState.h	/^        eOrientationUnchanged   = 4,$/;"	e	enum:android::DisplayState::__anon107
ePCMMode	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_PCMMODETYPE ePCMMode;   \/**< PCM mode enumeration *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
ePolicy	include/media/openmax/OMX_Component.h	/^    OMX_SUSPENSIONPOLICYTYPE ePolicy;$/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE
ePositionChanged	include/private/gui/LayerState.h	/^        ePositionChanged            = 0x00000001,$/;"	e	enum:android::layer_state_t::__anon106
eProfile	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_WMAPROFILETYPE eProfile;  \/**< Profile of WMA stream \/ data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
eProfile	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCPROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
eProfile	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_H263PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
eProfile	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG2PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
eProfile	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_MPEG4PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
eProfile	include/media/openmax/OMX_Video.h	/^   OMX_U32 eProfile;      \/**< type is OMX_VIDEO_AVCPROFILETYPE, OMX_VIDEO_H263PROFILETYPE,$/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
eProfile	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_HEVCPROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_HEVCTYPE
eProfile	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_VP8PROFILETYPE eProfile;$/;"	m	struct:OMX_VIDEO_PARAM_VP8TYPE
eProtectedByApp	include/gui/ISurfaceComposerClient.h	/^        eProtectedByApp     = 0x00000800,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eProtectedByDRM	include/gui/ISurfaceComposerClient.h	/^        eProtectedByDRM     = 0x00001000,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eQuantizationTable	include/media/openmax/OMX_Image.h	/^    OMX_IMAGE_QUANTIZATIONTABLETYPE eQuantizationTable;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
eRefreshMode	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_INTRAREFRESHTYPE eRefreshMode;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
eRotate180	include/gui/ISurfaceComposer.h	/^        eRotate180  = 2,$/;"	e	enum:android::ISurfaceComposer::Rotation
eRotate270	include/gui/ISurfaceComposer.h	/^        eRotate270  = 3$/;"	e	enum:android::ISurfaceComposer::Rotation
eRotate90	include/gui/ISurfaceComposer.h	/^        eRotate90   = 1,$/;"	e	enum:android::ISurfaceComposer::Rotation
eRotateNone	include/gui/ISurfaceComposer.h	/^        eRotateNone = 0,$/;"	e	enum:android::ISurfaceComposer::Rotation
eSBCAllocType	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_SBCALLOCMETHODTYPE eSBCAllocType;   \/**< SBC Allocation method type *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
eScopeMode	include/media/openmax/OMX_Component.h	/^    OMX_METADATASCOPETYPE eScopeMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
eScopeMode	include/media/openmax/OMX_Component.h	/^    OMX_METADATASCOPETYPE eScopeMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
eSearchMode	include/media/openmax/OMX_Component.h	/^    OMX_METADATASEARCHMODETYPE eSearchMode;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
eSecure	include/gui/ISurfaceComposerClient.h	/^        eSecure             = 0x00000080,$/;"	e	enum:android::ISurfaceComposerClient::__anon134
eSizeChanged	include/private/gui/LayerState.h	/^        eSizeChanged                = 0x00000004,$/;"	e	enum:android::layer_state_t::__anon106
eSliceMode	include/media/openmax/OMX_Video.h	/^    OMX_VIDEO_AVCSLICEMODETYPE eSliceMode;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
eState	include/media/openmax/OMX_Other.h	/^    OMX_TIME_CLOCKSTATE eState;     \/* Seeking Change. Added 7\/12.*\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
eState	include/media/openmax/OMX_Other.h	/^    OMX_TIME_CLOCKSTATE eState; \/**< State of the media time. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
eSupplier	include/media/openmax/OMX_Core.h	/^    OMX_BUFFERSUPPLIERTYPE eSupplier; \/**< supplier preference *\/$/;"	m	struct:OMX_TUNNELSETUPTYPE
eSurfaceChanged	include/private/gui/LayerState.h	/^        eSurfaceChanged             = 0x01,$/;"	e	enum:android::DisplayState::__anon108
eSynchronous	include/gui/ISurfaceComposer.h	/^        eSynchronous = 0x01,$/;"	e	enum:android::ISurfaceComposer::__anon135
eTemporalPattern	include/media/openmax/OMX_VideoExt.h	/^    OMX_VIDEO_ANDROID_VPXTEMPORALLAYERPATTERNTYPE eTemporalPattern;$/;"	m	struct:OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE
eTransactionMask	services/surfaceflinger/SurfaceFlinger.h	/^    eTransactionMask          = 0x07$/;"	e	enum:android::__anon19
eTransactionNeeded	services/surfaceflinger/SurfaceFlinger.h	/^    eTransactionNeeded        = 0x01,$/;"	e	enum:android::__anon19
eTransparencyChanged	include/private/gui/LayerState.h	/^        eTransparencyChanged        = 0x80000000,$/;"	e	enum:android::layer_state_t::__anon106
eTransparentRegionChanged	include/private/gui/LayerState.h	/^        eTransparentRegionChanged   = 0x00000020,$/;"	e	enum:android::layer_state_t::__anon106
eTraversalNeeded	services/surfaceflinger/SurfaceFlinger.h	/^    eTraversalNeeded          = 0x02,$/;"	e	enum:android::__anon19
eType	include/media/hardware/HardwareAPI.h	/^  MetadataBufferType eType;$/;"	m	struct:android::VideoDecoderOutputMetaData
eType	include/media/openmax/OMX_Component.h	/^    OMX_SUSPENSIONTYPE eType;$/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE
eType	include/media/openmax/OMX_Core.h	/^    OMX_EXTRADATATYPE eType;       \/* Extra Data type *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
eType	include/media/openmax/OMX_Other.h	/^    OMX_TIME_SEEKMODETYPE eType;    \/**< The seek mode *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE
eUnitType	include/media/openmax/OMX_IVCommon.h	/^    OMX_DATAUNITTYPE eUnitType;$/;"	m	struct:OMX_PARAM_DATAUNITTYPE
eUpdateType	include/media/openmax/OMX_Other.h	/^    OMX_TIME_UPDATETYPE eUpdateType; \/**< Reason for the update *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
eValueCharset	include/media/openmax/OMX_Component.h	/^    OMX_METADATACHARSETTYPE eValueCharset;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
eVisibilityChanged	include/private/gui/LayerState.h	/^        eVisibilityChanged          = 0x00000040,$/;"	e	enum:android::layer_state_t::__anon106
eVisibleRegion	services/surfaceflinger/Layer.h	/^        eVisibleRegion = 0x00000002,$/;"	e	enum:android::Layer::__anon29
eWhiteBalControl	include/media/openmax/OMX_IVCommon.h	/^    OMX_WHITEBALCONTROLTYPE eWhiteBalControl;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE
eWideningType	include/media/openmax/OMX_Audio.h	/^    OMX_AUDIO_STEREOWIDENINGTYPE eWideningType; \/**< Stereo widening algorithm type *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
early_egl_init	opengl/libs/EGL/egl.cpp	/^static void early_egl_init(void)$/;"	f	namespace:android
edgeFlags	include/input/InputTransport.h	/^            int32_t edgeFlags;$/;"	m	struct:android::InputMessage::Body::Motion
edgeFlags	services/inputflinger/InputDispatcher.h	/^        int32_t edgeFlags;$/;"	m	struct:android::InputDispatcher::MotionEntry
edgeFlags	services/inputflinger/InputListener.h	/^    int32_t edgeFlags;$/;"	m	struct:android::NotifyMotionArgs
editElements	opengl/libagl/context.h	/^    inline GLfloat* editElements() { return m; }$/;"	f	struct:android::gl::matrixf_t
editMip	opengl/libagl/TextureObjectManager.cpp	/^GGLSurface& EGLTextureObject::editMip(int lod)$/;"	f	class:android::EGLTextureObject
egl	opengl/libs/EGL/egldefs.h	/^    egl_t               egl;$/;"	m	struct:android::egl_connection_t
egl.cfg_config_module	opengl/libs/Android.mk	/^egl.cfg_config_module := $(LOCAL_MODULE)$/;"	m
egl.cfg_config_module	opengl/libs/Android.mk	/^egl.cfg_config_module :=$/;"	m
eglBeginFrame	opengl/libs/EGL/eglApi.cpp	/^void EGLAPI eglBeginFrame(EGLDisplay dpy, EGLSurface surface) {$/;"	f
eglBindAPI	opengl/libagl/egl.cpp	/^EGLBoolean eglBindAPI(EGLenum api)$/;"	f
eglBindAPI	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglBindAPI(EGLenum api)$/;"	f
eglBindAPI	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglBindAPI;$/;"	m	class:android::gltrace::GLMessage	file:
eglBindAPI	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglBindAPI = GLMessage_Function_eglBindAPI;$/;"	m	class:android::gltrace::GLMessage
eglBindTexImage	opengl/libagl/egl.cpp	/^EGLBoolean eglBindTexImage($/;"	f
eglBindTexImage	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglBindTexImage($/;"	f
eglBindTexImage	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglBindTexImage;$/;"	m	class:android::gltrace::GLMessage	file:
eglBindTexImage	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglBindTexImage = GLMessage_Function_eglBindTexImage;$/;"	m	class:android::gltrace::GLMessage
eglChooseConfig	opengl/libagl/egl.cpp	/^EGLBoolean eglChooseConfig( EGLDisplay dpy, const EGLint *attrib_list,$/;"	f
eglChooseConfig	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglChooseConfig( EGLDisplay dpy, const EGLint *attrib_list,$/;"	f
eglChooseConfig	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglChooseConfig;$/;"	m	class:android::gltrace::GLMessage	file:
eglChooseConfig	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglChooseConfig = GLMessage_Function_eglChooseConfig;$/;"	m	class:android::gltrace::GLMessage
eglClientWaitSyncKHR	opengl/libagl/egl.cpp	/^EGLint eglClientWaitSyncKHR(EGLDisplay \/*dpy*\/, EGLSyncKHR sync, EGLint \/*flags*\/,$/;"	f
eglClientWaitSyncKHR	opengl/libs/EGL/eglApi.cpp	/^EGLint eglClientWaitSyncKHR(EGLDisplay dpy, EGLSyncKHR sync,$/;"	f
eglClientWaitSyncKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglClientWaitSyncKHR;$/;"	m	class:android::gltrace::GLMessage	file:
eglClientWaitSyncKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglClientWaitSyncKHR = GLMessage_Function_eglClientWaitSyncKHR;$/;"	m	class:android::gltrace::GLMessage
eglContext	opengl/tests/gl_basic/gl_basic.cpp	/^EGLContext eglContext;$/;"	v
eglContext	opengl/tests/tritex/tritex.cpp	/^EGLContext eglContext;$/;"	v
eglCopyBuffers	opengl/libagl/egl.cpp	/^EGLBoolean eglCopyBuffers(  EGLDisplay dpy, EGLSurface \/*surface*\/,$/;"	f
eglCopyBuffers	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglCopyBuffers(  EGLDisplay dpy, EGLSurface surface,$/;"	f
eglCopyBuffers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglCopyBuffers;$/;"	m	class:android::gltrace::GLMessage	file:
eglCopyBuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglCopyBuffers = GLMessage_Function_eglCopyBuffers;$/;"	m	class:android::gltrace::GLMessage
eglCreateContext	opengl/libagl/egl.cpp	/^EGLContext eglCreateContext(EGLDisplay dpy, EGLConfig config,$/;"	f
eglCreateContext	opengl/libs/EGL/eglApi.cpp	/^EGLContext eglCreateContext(EGLDisplay dpy, EGLConfig config,$/;"	f
eglCreateContext	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglCreateContext;$/;"	m	class:android::gltrace::GLMessage	file:
eglCreateContext	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglCreateContext = GLMessage_Function_eglCreateContext;$/;"	m	class:android::gltrace::GLMessage
eglCreateImageKHR	opengl/libagl/egl.cpp	/^EGLImageKHR eglCreateImageKHR(EGLDisplay dpy, EGLContext ctx, EGLenum target,$/;"	f
eglCreateImageKHR	opengl/libs/EGL/eglApi.cpp	/^EGLImageKHR eglCreateImageKHR(EGLDisplay dpy, EGLContext ctx, EGLenum target,$/;"	f
eglCreateImageKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglCreateImageKHR;$/;"	m	class:android::gltrace::GLMessage	file:
eglCreateImageKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglCreateImageKHR = GLMessage_Function_eglCreateImageKHR;$/;"	m	class:android::gltrace::GLMessage
eglCreatePbufferFromClientBuffer	opengl/libagl/egl.cpp	/^EGLSurface eglCreatePbufferFromClientBuffer($/;"	f
eglCreatePbufferFromClientBuffer	opengl/libs/EGL/eglApi.cpp	/^EGLSurface eglCreatePbufferFromClientBuffer($/;"	f
eglCreatePbufferFromClientBuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglCreatePbufferFromClientBuffer;$/;"	m	class:android::gltrace::GLMessage	file:
eglCreatePbufferFromClientBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglCreatePbufferFromClientBuffer = GLMessage_Function_eglCreatePbufferFromClientBuffer;$/;"	m	class:android::gltrace::GLMessage
eglCreatePbufferFromClientBuffer	opengl/tools/glgen/stubs/egl/eglCreatePbufferFromClientBuffer.java	/^    public static native EGLSurface eglCreatePbufferFromClientBuffer($/;"	m
eglCreatePbufferSurface	opengl/libagl/egl.cpp	/^EGLSurface eglCreatePbufferSurface( EGLDisplay dpy, EGLConfig config,$/;"	f
eglCreatePbufferSurface	opengl/libs/EGL/eglApi.cpp	/^EGLSurface eglCreatePbufferSurface( EGLDisplay dpy, EGLConfig config,$/;"	f
eglCreatePbufferSurface	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglCreatePbufferSurface;$/;"	m	class:android::gltrace::GLMessage	file:
eglCreatePbufferSurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglCreatePbufferSurface = GLMessage_Function_eglCreatePbufferSurface;$/;"	m	class:android::gltrace::GLMessage
eglCreatePixmapSurface	opengl/libagl/egl.cpp	/^EGLSurface eglCreatePixmapSurface(  EGLDisplay dpy, EGLConfig config,$/;"	f
eglCreatePixmapSurface	opengl/libs/EGL/eglApi.cpp	/^EGLSurface eglCreatePixmapSurface(  EGLDisplay dpy, EGLConfig config,$/;"	f
eglCreatePixmapSurface	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglCreatePixmapSurface;$/;"	m	class:android::gltrace::GLMessage	file:
eglCreatePixmapSurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglCreatePixmapSurface = GLMessage_Function_eglCreatePixmapSurface;$/;"	m	class:android::gltrace::GLMessage
eglCreateSyncKHR	opengl/libagl/egl.cpp	/^EGLSyncKHR eglCreateSyncKHR(EGLDisplay dpy, EGLenum type,$/;"	f
eglCreateSyncKHR	opengl/libs/EGL/eglApi.cpp	/^EGLSyncKHR eglCreateSyncKHR(EGLDisplay dpy, EGLenum type, const EGLint *attrib_list)$/;"	f
eglCreateSyncKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglCreateSyncKHR;$/;"	m	class:android::gltrace::GLMessage	file:
eglCreateSyncKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglCreateSyncKHR = GLMessage_Function_eglCreateSyncKHR;$/;"	m	class:android::gltrace::GLMessage
eglCreateWindowSurface	opengl/libagl/egl.cpp	/^EGLSurface eglCreateWindowSurface(  EGLDisplay dpy, EGLConfig config,$/;"	f
eglCreateWindowSurface	opengl/libs/EGL/eglApi.cpp	/^EGLSurface eglCreateWindowSurface(  EGLDisplay dpy, EGLConfig config,$/;"	f
eglCreateWindowSurface	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglCreateWindowSurface;$/;"	m	class:android::gltrace::GLMessage	file:
eglCreateWindowSurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglCreateWindowSurface = GLMessage_Function_eglCreateWindowSurface;$/;"	m	class:android::gltrace::GLMessage
eglCreateWindowSurface	opengl/tools/glgen/stubs/egl/eglCreateWindowSurface.java	/^    public static EGLSurface eglCreateWindowSurface(EGLDisplay dpy,$/;"	m
eglDestroyContext	opengl/libagl/egl.cpp	/^EGLBoolean eglDestroyContext(EGLDisplay dpy, EGLContext ctx)$/;"	f
eglDestroyContext	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglDestroyContext(EGLDisplay dpy, EGLContext ctx)$/;"	f
eglDestroyContext	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglDestroyContext;$/;"	m	class:android::gltrace::GLMessage	file:
eglDestroyContext	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglDestroyContext = GLMessage_Function_eglDestroyContext;$/;"	m	class:android::gltrace::GLMessage
eglDestroyImageKHR	opengl/libagl/egl.cpp	/^EGLBoolean eglDestroyImageKHR(EGLDisplay dpy, EGLImageKHR img)$/;"	f
eglDestroyImageKHR	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglDestroyImageKHR(EGLDisplay dpy, EGLImageKHR img)$/;"	f
eglDestroyImageKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglDestroyImageKHR;$/;"	m	class:android::gltrace::GLMessage	file:
eglDestroyImageKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglDestroyImageKHR = GLMessage_Function_eglDestroyImageKHR;$/;"	m	class:android::gltrace::GLMessage
eglDestroySurface	opengl/libagl/egl.cpp	/^EGLBoolean eglDestroySurface(EGLDisplay dpy, EGLSurface eglSurface)$/;"	f
eglDestroySurface	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglDestroySurface(EGLDisplay dpy, EGLSurface surface)$/;"	f
eglDestroySurface	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglDestroySurface;$/;"	m	class:android::gltrace::GLMessage	file:
eglDestroySurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglDestroySurface = GLMessage_Function_eglDestroySurface;$/;"	m	class:android::gltrace::GLMessage
eglDestroySyncKHR	opengl/libagl/egl.cpp	/^EGLBoolean eglDestroySyncKHR(EGLDisplay \/*dpy*\/, EGLSyncKHR sync)$/;"	f
eglDestroySyncKHR	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglDestroySyncKHR(EGLDisplay dpy, EGLSyncKHR sync)$/;"	f
eglDestroySyncKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglDestroySyncKHR;$/;"	m	class:android::gltrace::GLMessage	file:
eglDestroySyncKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglDestroySyncKHR = GLMessage_Function_eglDestroySyncKHR;$/;"	m	class:android::gltrace::GLMessage
eglDupNativeFenceFDANDROID	opengl/libs/EGL/eglApi.cpp	/^EGLint eglDupNativeFenceFDANDROID(EGLDisplay dpy, EGLSyncKHR sync)$/;"	f
eglGetConfigAttrib	opengl/libagl/egl.cpp	/^EGLBoolean eglGetConfigAttrib(EGLDisplay dpy, EGLConfig config,$/;"	f
eglGetConfigAttrib	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglGetConfigAttrib(EGLDisplay dpy, EGLConfig config,$/;"	f
eglGetConfigAttrib	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetConfigAttrib;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetConfigAttrib	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetConfigAttrib = GLMessage_Function_eglGetConfigAttrib;$/;"	m	class:android::gltrace::GLMessage
eglGetConfigs	opengl/libagl/egl.cpp	/^EGLBoolean eglGetConfigs(   EGLDisplay dpy,$/;"	f
eglGetConfigs	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglGetConfigs(   EGLDisplay dpy,$/;"	f
eglGetConfigs	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetConfigs;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetConfigs	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetConfigs = GLMessage_Function_eglGetConfigs;$/;"	m	class:android::gltrace::GLMessage
eglGetCurrentContext	opengl/libagl/egl.cpp	/^EGLContext eglGetCurrentContext(void)$/;"	f
eglGetCurrentContext	opengl/libs/EGL/eglApi.cpp	/^EGLContext eglGetCurrentContext(void)$/;"	f
eglGetCurrentContext	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetCurrentContext;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetCurrentContext	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetCurrentContext = GLMessage_Function_eglGetCurrentContext;$/;"	m	class:android::gltrace::GLMessage
eglGetCurrentDisplay	opengl/libagl/egl.cpp	/^EGLDisplay eglGetCurrentDisplay(void)$/;"	f
eglGetCurrentDisplay	opengl/libs/EGL/eglApi.cpp	/^EGLDisplay eglGetCurrentDisplay(void)$/;"	f
eglGetCurrentDisplay	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetCurrentDisplay;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetCurrentDisplay	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetCurrentDisplay = GLMessage_Function_eglGetCurrentDisplay;$/;"	m	class:android::gltrace::GLMessage
eglGetCurrentSurface	opengl/libagl/egl.cpp	/^EGLSurface eglGetCurrentSurface(EGLint readdraw)$/;"	f
eglGetCurrentSurface	opengl/libs/EGL/eglApi.cpp	/^EGLSurface eglGetCurrentSurface(EGLint readdraw)$/;"	f
eglGetCurrentSurface	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetCurrentSurface;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetCurrentSurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetCurrentSurface = GLMessage_Function_eglGetCurrentSurface;$/;"	m	class:android::gltrace::GLMessage
eglGetDisplay	opengl/libagl/egl.cpp	/^EGLDisplay eglGetDisplay(NativeDisplayType display)$/;"	f
eglGetDisplay	opengl/libs/EGL/eglApi.cpp	/^EGLDisplay eglGetDisplay(EGLNativeDisplayType display)$/;"	f
eglGetDisplay	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetDisplay;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetDisplay	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetDisplay = GLMessage_Function_eglGetDisplay;$/;"	m	class:android::gltrace::GLMessage
eglGetDisplay	opengl/tools/glgen/stubs/egl/eglGetDisplay.java	/^    public static native EGLDisplay eglGetDisplay($/;"	m
eglGetError	opengl/libagl/egl.cpp	/^EGLint eglGetError(void)$/;"	f
eglGetError	opengl/libs/EGL/eglApi.cpp	/^EGLint eglGetError(void)$/;"	f
eglGetError	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetError;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetError	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetError = GLMessage_Function_eglGetError;$/;"	m	class:android::gltrace::GLMessage
eglGetProcAddress	opengl/libagl/egl.cpp	/^void (*eglGetProcAddress (const char *procname))()$/;"	f
eglGetProcAddress	opengl/libs/EGL/eglApi.cpp	/^__eglMustCastToProperFunctionPointerType eglGetProcAddress(const char *procname)$/;"	f
eglGetProcAddress	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetProcAddress;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetProcAddress	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetProcAddress = GLMessage_Function_eglGetProcAddress;$/;"	m	class:android::gltrace::GLMessage
eglGetRenderBufferANDROID	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetRenderBufferANDROID;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetRenderBufferANDROID	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetRenderBufferANDROID = GLMessage_Function_eglGetRenderBufferANDROID;$/;"	m	class:android::gltrace::GLMessage
eglGetSyncAttribKHR	opengl/libagl/egl.cpp	/^EGLBoolean eglGetSyncAttribKHR(EGLDisplay \/*dpy*\/, EGLSyncKHR sync,$/;"	f
eglGetSyncAttribKHR	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglGetSyncAttribKHR(EGLDisplay dpy, EGLSyncKHR sync,$/;"	f
eglGetSyncAttribKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetSyncAttribKHR;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetSyncAttribKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetSyncAttribKHR = GLMessage_Function_eglGetSyncAttribKHR;$/;"	m	class:android::gltrace::GLMessage
eglGetSystemTimeFrequencyNV	opengl/libs/EGL/eglApi.cpp	/^EGLuint64NV eglGetSystemTimeFrequencyNV()$/;"	f
eglGetSystemTimeFrequencyNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetSystemTimeFrequencyNV;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetSystemTimeFrequencyNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetSystemTimeFrequencyNV = GLMessage_Function_eglGetSystemTimeFrequencyNV;$/;"	m	class:android::gltrace::GLMessage
eglGetSystemTimeNV	opengl/libs/EGL/eglApi.cpp	/^EGLuint64NV eglGetSystemTimeNV()$/;"	f
eglGetSystemTimeNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglGetSystemTimeNV;$/;"	m	class:android::gltrace::GLMessage	file:
eglGetSystemTimeNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglGetSystemTimeNV = GLMessage_Function_eglGetSystemTimeNV;$/;"	m	class:android::gltrace::GLMessage
eglGpuPerfHintQCOM	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglGpuPerfHintQCOM(EGLDisplay dpy, EGLContext ctx, EGLint *attrib_list)$/;"	f
eglInitialize	opengl/libagl/egl.cpp	/^EGLBoolean eglInitialize(EGLDisplay dpy, EGLint *major, EGLint *minor)$/;"	f
eglInitialize	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglInitialize(EGLDisplay dpy, EGLint *major, EGLint *minor)$/;"	f
eglInitialize	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglInitialize;$/;"	m	class:android::gltrace::GLMessage	file:
eglInitialize	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglInitialize = GLMessage_Function_eglInitialize;$/;"	m	class:android::gltrace::GLMessage
eglIsInitialized	opengl/libs/EGL/egl_display.h	/^            bool                        eglIsInitialized;$/;"	m	class:android::egl_display_t
eglLockSurfaceKHR	opengl/libagl/egl.cpp	/^EGLBoolean eglLockSurfaceKHR(EGLDisplay \/*dpy*\/, EGLSurface \/*surface*\/,$/;"	f
eglLockSurfaceKHR	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglLockSurfaceKHR(EGLDisplay dpy, EGLSurface surface,$/;"	f
eglLockSurfaceKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglLockSurfaceKHR;$/;"	m	class:android::gltrace::GLMessage	file:
eglLockSurfaceKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglLockSurfaceKHR = GLMessage_Function_eglLockSurfaceKHR;$/;"	m	class:android::gltrace::GLMessage
eglMakeCurrent	opengl/libagl/egl.cpp	/^EGLBoolean eglMakeCurrent(  EGLDisplay dpy, EGLSurface draw,$/;"	f
eglMakeCurrent	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglMakeCurrent(  EGLDisplay dpy, EGLSurface draw,$/;"	f
eglMakeCurrent	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglMakeCurrent;$/;"	m	class:android::gltrace::GLMessage	file:
eglMakeCurrent	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglMakeCurrent = GLMessage_Function_eglMakeCurrent;$/;"	m	class:android::gltrace::GLMessage
eglNoContextObject	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jobject eglNoContextObject;$/;"	v	file:
eglNoContextObject	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jobject eglNoContextObject;$/;"	v	file:
eglNoDisplayObject	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jobject eglNoDisplayObject;$/;"	v	file:
eglNoDisplayObject	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jobject eglNoDisplayObject;$/;"	v	file:
eglNoSurfaceObject	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jobject eglNoSurfaceObject;$/;"	v	file:
eglNoSurfaceObject	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jobject eglNoSurfaceObject;$/;"	v	file:
eglPlatformStrings	opengl/tools/glgen2/registry/genheaders.py	/^eglPlatformStrings   = [ '#include <EGL\/eglplatform.h>', '' ]$/;"	v
eglPresentationTimeANDROID	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglPresentationTimeANDROID(EGLDisplay dpy, EGLSurface surface,$/;"	f
eglQueryAPI	opengl/libagl/egl.cpp	/^EGLenum eglQueryAPI(void)$/;"	f
eglQueryAPI	opengl/libs/EGL/eglApi.cpp	/^EGLenum eglQueryAPI(void)$/;"	f
eglQueryAPI	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglQueryAPI;$/;"	m	class:android::gltrace::GLMessage	file:
eglQueryAPI	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglQueryAPI = GLMessage_Function_eglQueryAPI;$/;"	m	class:android::gltrace::GLMessage
eglQueryContext	opengl/libagl/egl.cpp	/^EGLBoolean eglQueryContext( EGLDisplay dpy, EGLContext ctx,$/;"	f
eglQueryContext	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglQueryContext( EGLDisplay dpy, EGLContext ctx,$/;"	f
eglQueryContext	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglQueryContext;$/;"	m	class:android::gltrace::GLMessage	file:
eglQueryContext	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglQueryContext = GLMessage_Function_eglQueryContext;$/;"	m	class:android::gltrace::GLMessage
eglQueryString	opengl/libagl/egl.cpp	/^const char* eglQueryString(EGLDisplay dpy, EGLint name)$/;"	f
eglQueryString	opengl/libs/EGL/eglApi.cpp	/^const char* eglQueryString(EGLDisplay dpy, EGLint name)$/;"	f
eglQueryString	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglQueryString;$/;"	m	class:android::gltrace::GLMessage	file:
eglQueryString	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglQueryString = GLMessage_Function_eglQueryString;$/;"	m	class:android::gltrace::GLMessage
eglQueryString	opengl/tools/glgen/stubs/egl/eglQueryString.java	/^    public static native String eglQueryString($/;"	m
eglQueryStringImplementationANDROID	opengl/libs/EGL/eglApi.cpp	/^EGLAPI const char* eglQueryStringImplementationANDROID(EGLDisplay dpy, EGLint name)$/;"	f
eglQuerySurface	opengl/libagl/egl.cpp	/^EGLBoolean eglQuerySurface( EGLDisplay dpy, EGLSurface eglSurface,$/;"	f
eglQuerySurface	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglQuerySurface( EGLDisplay dpy, EGLSurface surface,$/;"	f
eglQuerySurface	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglQuerySurface;$/;"	m	class:android::gltrace::GLMessage	file:
eglQuerySurface	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglQuerySurface = GLMessage_Function_eglQuerySurface;$/;"	m	class:android::gltrace::GLMessage
eglReleaseTexImage	opengl/libagl/egl.cpp	/^EGLBoolean eglReleaseTexImage($/;"	f
eglReleaseTexImage	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglReleaseTexImage($/;"	f
eglReleaseTexImage	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglReleaseTexImage;$/;"	m	class:android::gltrace::GLMessage	file:
eglReleaseTexImage	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglReleaseTexImage = GLMessage_Function_eglReleaseTexImage;$/;"	m	class:android::gltrace::GLMessage
eglReleaseThread	opengl/libagl/egl.cpp	/^EGLBoolean eglReleaseThread(void)$/;"	f
eglReleaseThread	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglReleaseThread(void)$/;"	f
eglReleaseThread	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglReleaseThread;$/;"	m	class:android::gltrace::GLMessage	file:
eglReleaseThread	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglReleaseThread = GLMessage_Function_eglReleaseThread;$/;"	m	class:android::gltrace::GLMessage
eglSetSwapRectangleANDROID	opengl/libagl/egl.cpp	/^EGLBoolean eglSetSwapRectangleANDROID(EGLDisplay dpy, EGLSurface draw,$/;"	f
eglSetSwapRectangleANDROID	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglSetSwapRectangleANDROID;$/;"	m	class:android::gltrace::GLMessage	file:
eglSetSwapRectangleANDROID	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglSetSwapRectangleANDROID = GLMessage_Function_eglSetSwapRectangleANDROID;$/;"	m	class:android::gltrace::GLMessage
eglSignalSyncKHR	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglSignalSyncKHR(EGLDisplay dpy, EGLSyncKHR sync, EGLenum mode) {$/;"	f
eglSurface	opengl/tests/gl_basic/gl_basic.cpp	/^EGLSurface eglSurface;$/;"	v
eglSurface	opengl/tests/tritex/tritex.cpp	/^EGLSurface eglSurface;$/;"	v
eglSurfaceAttrib	opengl/libagl/egl.cpp	/^EGLBoolean eglSurfaceAttrib($/;"	f
eglSurfaceAttrib	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglSurfaceAttrib($/;"	f
eglSurfaceAttrib	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglSurfaceAttrib;$/;"	m	class:android::gltrace::GLMessage	file:
eglSurfaceAttrib	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglSurfaceAttrib = GLMessage_Function_eglSurfaceAttrib;$/;"	m	class:android::gltrace::GLMessage
eglSwapBuffers	opengl/libagl/egl.cpp	/^EGLBoolean eglSwapBuffers(EGLDisplay dpy, EGLSurface draw)$/;"	f
eglSwapBuffers	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglSwapBuffers(EGLDisplay dpy, EGLSurface draw)$/;"	f
eglSwapBuffers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglSwapBuffers;$/;"	m	class:android::gltrace::GLMessage	file:
eglSwapBuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglSwapBuffers = GLMessage_Function_eglSwapBuffers;$/;"	m	class:android::gltrace::GLMessage
eglSwapInterval	opengl/libagl/egl.cpp	/^EGLBoolean eglSwapInterval(EGLDisplay dpy, EGLint \/*interval*\/)$/;"	f
eglSwapInterval	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglSwapInterval(EGLDisplay dpy, EGLint interval)$/;"	f
eglSwapInterval	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglSwapInterval;$/;"	m	class:android::gltrace::GLMessage	file:
eglSwapInterval	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglSwapInterval = GLMessage_Function_eglSwapInterval;$/;"	m	class:android::gltrace::GLMessage
eglSwapPreserved	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::eglSwapPreserved(bool enable) const {$/;"	f	class:DisplayDevice
eglTerminate	opengl/libagl/egl.cpp	/^EGLBoolean eglTerminate(EGLDisplay dpy)$/;"	f
eglTerminate	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglTerminate(EGLDisplay dpy)$/;"	f
eglTerminate	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglTerminate;$/;"	m	class:android::gltrace::GLMessage	file:
eglTerminate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglTerminate = GLMessage_Function_eglTerminate;$/;"	m	class:android::gltrace::GLMessage
eglUnlockSurfaceKHR	opengl/libagl/egl.cpp	/^EGLBoolean eglUnlockSurfaceKHR(EGLDisplay \/*dpy*\/, EGLSurface \/*surface*\/)$/;"	f
eglUnlockSurfaceKHR	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglUnlockSurfaceKHR(EGLDisplay dpy, EGLSurface surface)$/;"	f
eglUnlockSurfaceKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglUnlockSurfaceKHR;$/;"	m	class:android::gltrace::GLMessage	file:
eglUnlockSurfaceKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglUnlockSurfaceKHR = GLMessage_Function_eglUnlockSurfaceKHR;$/;"	m	class:android::gltrace::GLMessage
eglWaitClient	opengl/libagl/egl.cpp	/^EGLBoolean eglWaitClient(void)$/;"	f
eglWaitClient	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglWaitClient(void)$/;"	f
eglWaitClient	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglWaitClient;$/;"	m	class:android::gltrace::GLMessage	file:
eglWaitClient	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglWaitClient = GLMessage_Function_eglWaitClient;$/;"	m	class:android::gltrace::GLMessage
eglWaitGL	opengl/libagl/egl.cpp	/^EGLBoolean eglWaitGL(void)$/;"	f
eglWaitGL	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglWaitGL(void)$/;"	f
eglWaitGL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglWaitGL;$/;"	m	class:android::gltrace::GLMessage	file:
eglWaitGL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglWaitGL = GLMessage_Function_eglWaitGL;$/;"	m	class:android::gltrace::GLMessage
eglWaitNative	opengl/libagl/egl.cpp	/^EGLBoolean eglWaitNative(EGLint \/*engine*\/)$/;"	f
eglWaitNative	opengl/libs/EGL/eglApi.cpp	/^EGLBoolean eglWaitNative(EGLint engine)$/;"	f
eglWaitNative	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::eglWaitNative;$/;"	m	class:android::gltrace::GLMessage	file:
eglWaitNative	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function eglWaitNative = GLMessage_Function_eglWaitNative;$/;"	m	class:android::gltrace::GLMessage
eglWaitSyncKHR	opengl/libs/EGL/eglApi.cpp	/^EGLint eglWaitSyncKHR(EGLDisplay dpy, EGLSyncKHR sync, EGLint flags) {$/;"	f
egl_cache_t	opengl/libs/EGL/egl_cache.cpp	/^egl_cache_t::egl_cache_t() :$/;"	f	class:android::egl_cache_t
egl_cache_t	opengl/libs/EGL/egl_cache.h	/^class EGLAPI egl_cache_t {$/;"	c	namespace:android
egl_connection_t	opengl/libs/EGL/egldefs.h	/^    inline egl_connection_t() : dso(0) { }$/;"	f	struct:android::egl_connection_t
egl_connection_t	opengl/libs/EGL/egldefs.h	/^struct egl_connection_t {$/;"	s	namespace:android
egl_context_t	opengl/libagl/egl.cpp	/^struct egl_context_t {$/;"	s	namespace:android	file:
egl_context_t	opengl/libs/EGL/egl_object.cpp	/^egl_context_t::egl_context_t(EGLDisplay dpy, EGLContext context, EGLConfig config,$/;"	f	class:android::egl_context_t
egl_context_t	opengl/libs/EGL/egl_object.h	/^class egl_context_t: public egl_object_t {$/;"	c	namespace:android
egl_display_ptr	opengl/libs/EGL/egl_display.h	/^    egl_display_ptr(const egl_display_ptr& other): mDpy(other.mDpy) {$/;"	f	class:android::egl_display_ptr
egl_display_ptr	opengl/libs/EGL/egl_display.h	/^    explicit egl_display_ptr(egl_display_t* dpy): mDpy(dpy) {$/;"	f	class:android::egl_display_ptr
egl_display_ptr	opengl/libs/EGL/egl_display.h	/^class egl_display_ptr {$/;"	c	namespace:android
egl_display_t	opengl/libagl/egl.cpp	/^    egl_display_t() : type(0), initialized(0) { }$/;"	f	struct:android::egl_display_t
egl_display_t	opengl/libagl/egl.cpp	/^struct egl_display_t$/;"	s	namespace:android	file:
egl_display_t	opengl/libs/EGL/egl_display.cpp	/^egl_display_t::egl_display_t() :$/;"	f	class:android::egl_display_t
egl_display_t	opengl/libs/EGL/egl_display.h	/^class EGLAPI egl_display_t { \/\/ marked as EGLAPI for testing purposes$/;"	c	namespace:android
egl_error	opengl/tests/angeles/app-linux.cpp	/^void egl_error(const char *name)$/;"	f
egl_get_string_for_current_context	opengl/libs/EGL/egl.cpp	/^const GLubyte * egl_get_string_for_current_context(GLenum name) {$/;"	f	namespace:android
egl_init_drivers	opengl/libs/EGL/egl.cpp	/^EGLBoolean egl_init_drivers() {$/;"	f	namespace:android
egl_init_drivers_locked	opengl/libs/EGL/egl.cpp	/^static EGLBoolean egl_init_drivers_locked() {$/;"	f	namespace:android
egl_names	opengl/libs/EGL/egl.cpp	/^char const * const egl_names[] = {$/;"	m	namespace:android	file:
egl_native_pixmap_t	include/ui/ANativeObjectBase.h	/^typedef struct egl_native_pixmap_t$/;"	s
egl_native_pixmap_t	include/ui/ANativeObjectBase.h	/^} egl_native_pixmap_t;$/;"	t	typeref:struct:egl_native_pixmap_t
egl_object_t	opengl/libs/EGL/egl_object.cpp	/^egl_object_t::egl_object_t(egl_display_t* disp) :$/;"	f	class:android::egl_object_t
egl_object_t	opengl/libs/EGL/egl_object.h	/^class egl_object_t {$/;"	c	namespace:android
egl_pbuffer_surface_t	opengl/libagl/egl.cpp	/^egl_pbuffer_surface_t::egl_pbuffer_surface_t(EGLDisplay dpy,$/;"	f	class:android::egl_pbuffer_surface_t
egl_pbuffer_surface_t	opengl/libagl/egl.cpp	/^struct egl_pbuffer_surface_t : public egl_surface_t$/;"	s	namespace:android	file:
egl_pixmap_surface_t	opengl/libagl/egl.cpp	/^egl_pixmap_surface_t::egl_pixmap_surface_t(EGLDisplay dpy,$/;"	f	class:android::egl_pixmap_surface_t
egl_pixmap_surface_t	opengl/libagl/egl.cpp	/^struct egl_pixmap_surface_t : public egl_surface_t$/;"	s	namespace:android	file:
egl_strerror	opengl/libs/EGL/egl_tls.cpp	/^const char *egl_tls_t::egl_strerror(EGLint err) {$/;"	f	class:android::egl_tls_t
egl_strerror	opengl/tests/angeles/app-linux.cpp	/^const char *egl_strerror(unsigned err)$/;"	f
egl_surface_t	opengl/libagl/egl.cpp	/^egl_surface_t::egl_surface_t(EGLDisplay dpy,$/;"	f	class:android::egl_surface_t
egl_surface_t	opengl/libagl/egl.cpp	/^struct egl_surface_t$/;"	s	namespace:android	file:
egl_surface_t	opengl/libs/EGL/egl_object.cpp	/^egl_surface_t::egl_surface_t(egl_display_t* dpy, EGLConfig config,$/;"	f	class:android::egl_surface_t
egl_surface_t	opengl/libs/EGL/egl_object.h	/^class egl_surface_t : public egl_object_t {$/;"	c	namespace:android
egl_t	opengl/libs/hooks.h	/^struct egl_t {$/;"	s	namespace:android
egl_tls_t	opengl/libs/EGL/egl_tls.cpp	/^egl_tls_t::egl_tls_t()$/;"	f	class:android::egl_tls_t
egl_tls_t	opengl/libs/EGL/egl_tls.h	/^class egl_tls_t {$/;"	c	namespace:android
egl_to_native_cast	opengl/libs/EGL/egl_object.h	/^static inline NATIVE* egl_to_native_cast(EGL arg) {$/;"	f	namespace:android
egl_window_surface_v2_t	opengl/libagl/egl.cpp	/^egl_window_surface_v2_t::egl_window_surface_v2_t(EGLDisplay dpy,$/;"	f	class:android::egl_window_surface_v2_t
egl_window_surface_v2_t	opengl/libagl/egl.cpp	/^struct egl_window_surface_v2_t : public egl_surface_t$/;"	s	namespace:android	file:
eglconfigClass	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jclass eglconfigClass;$/;"	v	file:
eglconfigClass	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jclass eglconfigClass;$/;"	v	file:
eglconfigConstructor	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jmethodID eglconfigConstructor;$/;"	v	file:
eglconfigConstructor	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jmethodID eglconfigConstructor;$/;"	v	file:
eglconfigGetHandleID	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jmethodID eglconfigGetHandleID;$/;"	v	file:
eglconfigGetHandleID	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jmethodID eglconfigGetHandleID;$/;"	v	file:
eglcontextClass	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jclass eglcontextClass;$/;"	v	file:
eglcontextClass	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jclass eglcontextClass;$/;"	v	file:
eglcontextConstructor	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jmethodID eglcontextConstructor;$/;"	v	file:
eglcontextConstructor	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jmethodID eglcontextConstructor;$/;"	v	file:
eglcontextGetHandleID	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jmethodID eglcontextGetHandleID;$/;"	v	file:
eglcontextGetHandleID	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jmethodID eglcontextGetHandleID;$/;"	v	file:
egldisplayClass	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jclass egldisplayClass;$/;"	v	file:
egldisplayClass	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jclass egldisplayClass;$/;"	v	file:
egldisplayConstructor	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jmethodID egldisplayConstructor;$/;"	v	file:
egldisplayConstructor	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jmethodID egldisplayConstructor;$/;"	v	file:
egldisplayGetHandleID	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jmethodID egldisplayGetHandleID;$/;"	v	file:
egldisplayGetHandleID	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jmethodID egldisplayGetHandleID;$/;"	v	file:
eglextVersionStrings	opengl/tools/glgen2/registry/genheaders.py	/^eglextVersionStrings = [$/;"	v
eglsurfaceClass	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jclass eglsurfaceClass;$/;"	v	file:
eglsurfaceClass	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jclass eglsurfaceClass;$/;"	v	file:
eglsurfaceConstructor	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jmethodID eglsurfaceConstructor;$/;"	v	file:
eglsurfaceConstructor	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jmethodID eglsurfaceConstructor;$/;"	v	file:
eglsurfaceGetHandleID	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static jmethodID eglsurfaceGetHandleID;$/;"	v	file:
eglsurfaceGetHandleID	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static jmethodID eglsurfaceGetHandleID;$/;"	v	file:
element	opengl/libagl/context.h	/^    inline const GLubyte* element(GLint i) const {$/;"	f	struct:android::gl::array_t
elementSizeShiftID	opengl/tools/glgen/stubs/gles11/common.cpp	/^static jfieldID elementSizeShiftID;$/;"	v	file:
elementSizeShiftID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jfieldID elementSizeShiftID;$/;"	v	file:
element_array_buffer	opengl/libagl/context.h	/^    buffer_t const* element_array_buffer;$/;"	m	struct:android::gl::array_machine_t
elements	opengl/libagl/context.h	/^    inline GLfloat const* elements() const { return m; }$/;"	f	struct:android::gl::matrixf_t
elements_prims_fct_t	opengl/libagl/array.cpp	/^typedef void (*elements_prims_fct_t)(ogles_context_t*, GLsizei, const GLvoid*);$/;"	t	namespace:android	file:
emission	opengl/libagl/context.h	/^    vec4_t      emission;$/;"	m	struct:android::gl::material_t
emit	opengl/tools/glgen/src/GenerateEGL.java	/^    private static void emit(EGLCodeEmitter emitter,$/;"	m	class:GenerateEGL	file:
emit	opengl/tools/glgen/src/GenerateGL.java	/^    private static void emit(int version, boolean ext, boolean pack,$/;"	m	class:GenerateGL	file:
emit	opengl/tools/glgen/src/GenerateGLES.java	/^    private static void emit(GLESCodeEmitter emitter,$/;"	m	class:GenerateGLES	file:
emitCode	opengl/tools/glgen/src/CodeEmitter.java	/^    void emitCode(CFunc cfunc, String original);$/;"	m	interface:CodeEmitter
emitCode	opengl/tools/glgen/src/EGLCodeEmitter.java	/^    public void emitCode(CFunc cfunc, String original) {$/;"	m	class:EGLCodeEmitter
emitCode	opengl/tools/glgen/src/GLESCodeEmitter.java	/^    public void emitCode(CFunc cfunc, String original) {$/;"	m	class:GLESCodeEmitter
emitCode	opengl/tools/glgen/src/JniCodeEmitter.java	/^    public void emitCode(CFunc cfunc, String original,$/;"	m	class:JniCodeEmitter
emitCode	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    public void emitCode(CFunc cfunc, String original) {$/;"	m	class:Jsr239CodeEmitter
emitFunction	opengl/tools/glgen/src/JniCodeEmitter.java	/^    void emitFunction(JFunc jfunc, PrintStream out, boolean nativeDecl, boolean interfaceDecl) {$/;"	m	class:JniCodeEmitter
emitFunctionCall	opengl/tools/glgen/src/JniCodeEmitter.java	/^    void emitFunctionCall(JFunc jfunc, PrintStream out, String iii, boolean grabArray) {$/;"	m	class:JniCodeEmitter
emitJavaCode	opengl/tools/glgen/src/JniCodeEmitter.java	/^    public void emitJavaCode(JFunc jfunc, PrintStream out) {$/;"	m	class:JniCodeEmitter
emitJavaInterfaceCode	opengl/tools/glgen/src/JniCodeEmitter.java	/^    public void emitJavaInterfaceCode(JFunc jfunc, PrintStream out) {$/;"	m	class:JniCodeEmitter
emitJniCode	opengl/tools/glgen/src/JniCodeEmitter.java	/^    public void emitJniCode(JFunc jfunc, PrintStream out) {$/;"	m	class:JniCodeEmitter
emitLocalVariablesForSentinel	opengl/tools/glgen/src/JniCodeEmitter.java	/^    void emitLocalVariablesForSentinel(CFunc cfunc, PrintStream out) {$/;"	m	class:JniCodeEmitter
emitNativeBoundsChecks	opengl/tools/glgen/src/JniCodeEmitter.java	/^    void emitNativeBoundsChecks(CFunc cfunc, String cname, PrintStream out,$/;"	m	class:JniCodeEmitter
emitNativeDeclaration	opengl/tools/glgen/src/JniCodeEmitter.java	/^    public void emitNativeDeclaration(JFunc jfunc, PrintStream out) {$/;"	m	class:JniCodeEmitter
emitNativeRegistration	opengl/tools/glgen/src/CodeEmitter.java	/^    void emitNativeRegistration();$/;"	m	interface:CodeEmitter
emitNativeRegistration	opengl/tools/glgen/src/EGLCodeEmitter.java	/^    public void emitNativeRegistration(String nativeRegistrationName) {$/;"	m	class:EGLCodeEmitter
emitNativeRegistration	opengl/tools/glgen/src/GLESCodeEmitter.java	/^    public void emitNativeRegistration(String nativeRegistrationName) {$/;"	m	class:GLESCodeEmitter
emitNativeRegistration	opengl/tools/glgen/src/JniCodeEmitter.java	/^    public void emitNativeRegistration(String registrationFunctionName,$/;"	m	class:JniCodeEmitter
emitNativeRegistration	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    public void emitNativeRegistration() {$/;"	m	class:Jsr239CodeEmitter
emitSentinelCheck	opengl/tools/glgen/src/JniCodeEmitter.java	/^    void emitSentinelCheck(CFunc cfunc, String cname, PrintStream out,$/;"	m	class:JniCodeEmitter
empty	libs/input/KeyCharacterMap.cpp	/^sp<KeyCharacterMap> KeyCharacterMap::empty() {$/;"	f	class:android::KeyCharacterMap
emptyRegex	opengl/tools/glgen2/registry/reg.py	/^    def emptyRegex(self,pat):$/;"	m	class:GeneratorOptions
enable	include/media/hardware/HardwareAPI.h	/^    OMX_BOOL enable;$/;"	m	struct:android::EnableAndroidNativeBuffersParams
enable	opengl/libagl/context.h	/^    GLboolean           enable;$/;"	m	struct:android::gl::lighting_t
enable	opengl/libagl/context.h	/^    GLboolean       enable;$/;"	m	struct:android::gl::array_t
enable	opengl/libagl/context.h	/^    GLboolean   enable;$/;"	m	struct:android::gl::color_material_t
enable	opengl/libagl/context.h	/^    GLboolean   enable;$/;"	m	struct:android::gl::culling_t
enable	opengl/libagl/context.h	/^    GLboolean   enable;$/;"	m	struct:android::gl::light_t
enable	opengl/libagl/context.h	/^    GLboolean   enable;$/;"	m	struct:android::gl::polygon_offset_t
enable	opengl/libagl/context.h	/^    uint32_t        enable;$/;"	m	struct:android::gl::user_clip_planes_t
enable	services/sensorservice/SensorService.cpp	/^status_t SensorService::enable(const sp<SensorEventConnection>& connection,$/;"	f	class:android::SensorService
enableDisable	libs/gui/ISensorEventConnection.cpp	/^    virtual status_t enableDisable(int handle, bool enabled, nsecs_t samplingPeriodNs,$/;"	f	class:android::BpSensorEventConnection
enableDisable	services/sensorservice/SensorService.cpp	/^status_t SensorService::SensorEventConnection::enableDisable($/;"	f	class:android::SensorService::SensorEventConnection
enableDisableClientState	opengl/libagl/array.cpp	/^void enableDisableClientState(ogles_context_t* c, GLenum array, bool enable)$/;"	f	namespace:android
enableHardwareVsync	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::enableHardwareVsync() {$/;"	f	class:android::SurfaceFlinger
enableSensor	libs/gui/SensorEventQueue.cpp	/^status_t SensorEventQueue::enableSensor(Sensor const* sensor) const {$/;"	f	class:android::SensorEventQueue
enableSensor	libs/gui/SensorEventQueue.cpp	/^status_t SensorEventQueue::enableSensor(int32_t handle, int32_t samplingPeriodUs,$/;"	f	class:android::SensorEventQueue
enableSensor	services/sensorservice/BatteryService.h	/^    static void enableSensor(uid_t uid, int handle) {$/;"	f	class:android::BatteryService
enableSensorImpl	services/sensorservice/BatteryService.cpp	/^void BatteryService::enableSensorImpl(uid_t uid, int handle) {$/;"	f	class:android::BatteryService
enableVSyncLocked	services/surfaceflinger/EventThread.cpp	/^void EventThread::enableVSyncLocked() {$/;"	f	class:android::EventThread
enable_disable	opengl/libagl/state.cpp	/^static void enable_disable(ogles_context_t* c, GLenum cap, int enabled)$/;"	f	namespace:android
enabledLights	opengl/libagl/context.h	/^    uint32_t            enabledLights;$/;"	m	struct:android::gl::lighting_t
encrypt	include/media/hardware/HDCPAPI.h	/^    virtual status_t encrypt($/;"	f	struct:android::HDCPModule
encryptNative	include/media/hardware/HDCPAPI.h	/^    virtual status_t encryptNative($/;"	f	struct:android::HDCPModule
end	libs/ui/Region.cpp	/^Region::const_iterator Region::end() const {$/;"	f	class:android::Region
end	opengl/libagl/context.h	/^    GLfixed     end;$/;"	m	struct:android::gl::fog_t
end	opengl/libagl/egl.cpp	/^        const_iterator end() const { return storage+count; }$/;"	f	struct:android::egl_window_surface_v2_t::Region
end	services/sensorservice/vec.h	/^    const_iterator end() const { return base::v + SIZE; }$/;"	f	class:android::vec
end	services/sensorservice/vec.h	/^    iterator end() { return base::v + SIZE; }$/;"	f	class:android::vec
end	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^HWComposer::LayerListIterator HWComposer::end(int32_t id) {$/;"	f	class:android::HWComposer
endDelay	opengl/tests/hwc/hwcColorEquiv.cpp	/^static float endDelay = defaultEndDelay;$/;"	v	file:
endDelay	opengl/tests/hwc/hwcRects.cpp	/^static float endDelay = defaultEndDelay;$/;"	v	file:
endDelay	opengl/tests/hwc/hwcStress.cpp	/^static float endDelay = defaultEndDelay;$/;"	v	file:
endFeature	opengl/tools/glgen2/registry/reg.py	/^    def endFeature(self):$/;"	m	class:COutputGenerator
endFeature	opengl/tools/glgen2/registry/reg.py	/^    def endFeature(self):$/;"	m	class:OutputGenerator
endFile	opengl/tools/glgen2/registry/reg.py	/^    def endFile(self):$/;"	m	class:COutputGenerator
endFile	opengl/tools/glgen2/registry/reg.py	/^    def endFile(self):$/;"	m	class:OutputGenerator
endGroup	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::endGroup() {$/;"	f	class:android::GLES20RenderEngine
endList	services/surfaceflinger/EventLog/EventLog.cpp	/^void EventLog::TagBuffer::endList() {$/;"	f	class:android::EventLog::TagBuffer
endPass	opengl/tests/hwc/hwcStress.cpp	/^static unsigned int endPass = defaultEndPass;$/;"	v	file:
endRefColor	opengl/tests/hwc/hwcColorEquiv.cpp	/^static ColorFract endRefColor = defaultEndColor;$/;"	v	file:
endResync	services/surfaceflinger/DispSync.cpp	/^void DispSync::endResync() {$/;"	f	class:android::DispSync
endTileComposition	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::endTileComposition(unsigned int preserveMask) {$/;"	f	class:android::GLES20RenderEngine
endTileComposition	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    virtual void endTileComposition(unsigned int) {}$/;"	f	class:android::RenderEngine
endTimer	opengl/tests/gl_perf/fill_common.cpp	/^static void endTimer(int count) {$/;"	f	file:
endTimer	opengl/tools/glgen2/registry/genheaders.py	/^def endTimer(msg):$/;"	f
endl	include/binder/TextOutput.h	/^inline TextOutput& endl(TextOutput& to)$/;"	f	namespace:android
enforceInterface	libs/binder/Parcel.cpp	/^bool Parcel::enforceInterface(const String16& interface,$/;"	f	class:android::Parcel
enqueueAtHead	services/inputflinger/InputDispatcher.h	/^        inline void enqueueAtHead(T* entry) {$/;"	f	struct:android::InputDispatcher::Queue
enqueueAtTail	services/inputflinger/InputDispatcher.h	/^        inline void enqueueAtTail(T* entry) {$/;"	f	struct:android::InputDispatcher::Queue
enqueueDispatchEntriesLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::enqueueDispatchEntriesLocked(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher
enqueueDispatchEntryLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::enqueueDispatchEntryLocked($/;"	f	class:android::InputDispatcher
enqueueEvent	services/inputflinger/tests/InputReader_test.cpp	/^    void enqueueEvent(nsecs_t when, int32_t deviceId, int32_t type,$/;"	f	class:android::FakeEventHub
enqueueInboundEventLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::enqueueInboundEventLocked(EventEntry* entry) {$/;"	f	class:android::InputDispatcher
enqueueMessage	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^void BufferedOutputStream::enqueueMessage(GLMessage *msg) {$/;"	f	class:android::gltrace::BufferedOutputStream
ensureFbo	services/surfaceflinger/LayerBlur.cpp	/^void LayerBlur::ensureFbo(FBO& fbo, int width, int height, int textureName) {$/;"	f	class:android::LayerBlur
ensure_config_user_dirs	cmds/installd/utils.c	/^int ensure_config_user_dirs(userid_t userid) {$/;"	f
ensure_media_user_dirs	cmds/installd/utils.c	/^int ensure_media_user_dirs(userid_t userid) {$/;"	f
enter	opengl/libs/EGL/egl_display.h	/^    bool enter() { return mHibernation.incWakeCount(HibernationMachine::WEAK); }$/;"	f	class:android::egl_display_t
entryCount	services/inputflinger/InputDispatcher.h	/^        uint32_t entryCount;$/;"	m	struct:android::InputDispatcher::Queue
entry_t	include/binder/BpBinder.h	/^        struct entry_t$/;"	s	class:android::BpBinder::ObjectManager
env	cmds/ip-up-vpn/ip-up-vpn.c	/^static const char *env(const char *name) {$/;"	f	file:
env	include/android/native_activity.h	/^    JNIEnv* env;$/;"	m	struct:ANativeActivity
equals	opengl/tools/glgen/src/CType.java	/^    public boolean equals(Object o) {$/;"	m	class:CType
equals	opengl/tools/glgen/static/egl/EGLConfig.java	/^    public boolean equals(Object o) {$/;"	m	class:EGLConfig
equals	opengl/tools/glgen/static/egl/EGLContext.java	/^    public boolean equals(Object o) {$/;"	m	class:EGLContext
equals	opengl/tools/glgen/static/egl/EGLDisplay.java	/^    public boolean equals(Object o) {$/;"	m	class:EGLDisplay
equals	opengl/tools/glgen/static/egl/EGLSurface.java	/^    public boolean equals(Object o) {$/;"	m	class:EGLSurface
equation	opengl/libagl/context.h	/^    vec4_t      equation;$/;"	m	struct:android::gl::clip_plane_t
equivFormat	opengl/tests/hwc/hwcColorEquiv.cpp	/^static const struct hwcTestGraphicFormat *equivFormat;$/;"	v	typeref:struct:hwcTestGraphicFormat	file:
errFilename	opengl/tools/glgen2/registry/genheaders.py	/^errFilename = None$/;"	v
errWarn	opengl/tools/glgen2/registry/genheaders.py	/^    errWarn = open(errFilename,'w')$/;"	v
errWarn	opengl/tools/glgen2/registry/genheaders.py	/^    errWarn = sys.stderr$/;"	v
error	opengl/libagl/context.h	/^    GLenum                  error;$/;"	m	struct:android::gl::ogles_context_t
error	opengl/libs/EGL/egl_tls.h	/^    EGLint      error;$/;"	m	class:android::egl_tls_t
errorCheck	libs/binder/Parcel.cpp	/^status_t Parcel::errorCheck() const$/;"	f	class:android::Parcel
es1CoreList	opengl/tools/glgen2/registry/genheaders.py	/^es1CoreList = [$/;"	v
es1CorePat	opengl/tools/glgen2/registry/genheaders.py	/^es1CorePat      = makeREstring(es1CoreList)$/;"	v
etc1_bool	opengl/include/ETC1/etc1.h	/^typedef int etc1_bool;$/;"	t
etc1_byte	opengl/include/ETC1/etc1.h	/^typedef unsigned char etc1_byte;$/;"	t
etc1_decode_block	opengl/libs/ETC1/etc1.cpp	/^void etc1_decode_block(const etc1_byte* pIn, etc1_byte* pOut) {$/;"	f
etc1_decode_image	opengl/libs/ETC1/etc1.cpp	/^int etc1_decode_image(const etc1_byte* pIn, etc1_byte* pOut,$/;"	f
etc1_encode_block	opengl/libs/ETC1/etc1.cpp	/^void etc1_encode_block(const etc1_byte* pIn, etc1_uint32 inMask,$/;"	f
etc1_encode_image	opengl/libs/ETC1/etc1.cpp	/^int etc1_encode_image(const etc1_byte* pIn, etc1_uint32 width, etc1_uint32 height,$/;"	f
etc1_get_encoded_data_size	opengl/libs/ETC1/etc1.cpp	/^etc1_uint32 etc1_get_encoded_data_size(etc1_uint32 width, etc1_uint32 height) {$/;"	f
etc1_pkm_format_header	opengl/libs/ETC1/etc1.cpp	/^void etc1_pkm_format_header(etc1_byte* pHeader, etc1_uint32 width, etc1_uint32 height) {$/;"	f
etc1_pkm_get_height	opengl/libs/ETC1/etc1.cpp	/^etc1_uint32 etc1_pkm_get_height(const etc1_byte* pHeader){$/;"	f
etc1_pkm_get_width	opengl/libs/ETC1/etc1.cpp	/^etc1_uint32 etc1_pkm_get_width(const etc1_byte* pHeader) {$/;"	f
etc1_pkm_is_valid	opengl/libs/ETC1/etc1.cpp	/^etc1_bool etc1_pkm_is_valid(const etc1_byte* pHeader) {$/;"	f
etc1_uint32	opengl/include/ETC1/etc1.h	/^typedef unsigned int etc1_uint32;$/;"	t
etc_average_colors_subblock	opengl/libs/ETC1/etc1.cpp	/^void etc_average_colors_subblock(const etc1_byte* pIn, etc1_uint32 inMask,$/;"	f	file:
etc_compressed	opengl/libs/ETC1/etc1.cpp	/^} etc_compressed;$/;"	t	typeref:struct:__anon238	file:
etc_encodeBaseColors	opengl/libs/ETC1/etc1.cpp	/^static void etc_encodeBaseColors(etc1_byte* pBaseColors,$/;"	f	file:
etc_encode_block_helper	opengl/libs/ETC1/etc1.cpp	/^void etc_encode_block_helper(const etc1_byte* pIn, etc1_uint32 inMask,$/;"	f	file:
etc_encode_subblock_helper	opengl/libs/ETC1/etc1.cpp	/^void etc_encode_subblock_helper(const etc1_byte* pIn, etc1_uint32 inMask,$/;"	f	file:
eventControl	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::eventControl(int disp, int event, int enabled) {$/;"	f	class:android::HWComposer
eventControl	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::eventControl(int disp, int event, int enabled) {$/;"	f	class:android::SurfaceFlinger
eventEntry	services/inputflinger/InputDispatcher.h	/^        EventEntry* eventEntry; \/\/ the event to dispatch$/;"	m	struct:android::InputDispatcher::DispatchEntry
eventMaskInvalidate	services/surfaceflinger/MessageQueue.h	/^            eventMaskInvalidate     = 0x1,$/;"	e	enum:android::MessageQueue::Handler::__anon25
eventMaskRefresh	services/surfaceflinger/MessageQueue.h	/^            eventMaskRefresh        = 0x2,$/;"	e	enum:android::MessageQueue::Handler::__anon25
eventMaskTransaction	services/surfaceflinger/MessageQueue.h	/^            eventMaskTransaction    = 0x4$/;"	e	enum:android::MessageQueue::Handler::__anon25
eventReceiver	services/surfaceflinger/MessageQueue.cpp	/^int MessageQueue::eventReceiver(int \/*fd*\/, int \/*events*\/) {$/;"	f	class:android::MessageQueue
eventTime	include/input/InputTransport.h	/^            nsecs_t eventTime __attribute__((aligned(8)));$/;"	m	struct:android::InputMessage::Body::Key
eventTime	include/input/InputTransport.h	/^            nsecs_t eventTime __attribute__((aligned(8)));$/;"	m	struct:android::InputMessage::Body::Motion
eventTime	include/input/InputTransport.h	/^        nsecs_t eventTime;$/;"	m	struct:android::InputConsumer::History
eventTime	include/input/VelocityTracker.h	/^        nsecs_t eventTime;$/;"	m	struct:android::LeastSquaresVelocityTrackerStrategy::Movement
eventTime	include/input/VelocityTracker.h	/^        nsecs_t eventTime;$/;"	m	struct:android::LegacyVelocityTrackerStrategy::Movement
eventTime	services/inputflinger/InputDispatcher.h	/^        nsecs_t eventTime;$/;"	m	struct:android::InputDispatcher::CommandEntry
eventTime	services/inputflinger/InputDispatcher.h	/^        nsecs_t eventTime;$/;"	m	struct:android::InputDispatcher::EventEntry
eventTime	services/inputflinger/InputDispatcher.h	/^        nsecs_t eventTime;$/;"	m	struct:android::InputDispatcher::MotionEntry
eventTime	services/inputflinger/InputListener.h	/^    nsecs_t eventTime;$/;"	m	struct:android::NotifyConfigurationChangedArgs
eventTime	services/inputflinger/InputListener.h	/^    nsecs_t eventTime;$/;"	m	struct:android::NotifyDeviceResetArgs
eventTime	services/inputflinger/InputListener.h	/^    nsecs_t eventTime;$/;"	m	struct:android::NotifyKeyArgs
eventTime	services/inputflinger/InputListener.h	/^    nsecs_t eventTime;$/;"	m	struct:android::NotifyMotionArgs
eventTime	services/inputflinger/InputListener.h	/^    nsecs_t eventTime;$/;"	m	struct:android::NotifySwitchArgs
events	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        int32_t events;$/;"	m	struct:android::HWComposer::DisplayData
exact	opengl/libagl/egl.cpp	/^    static bool exact(GLint reqValue, GLint confValue) {$/;"	f	struct:android::config_management_t
excludedDeviceNames	services/inputflinger/InputReader.h	/^    Vector<String8> excludedDeviceNames;$/;"	m	struct:android::InputReaderConfiguration
execute	cmds/installd/installd.c	/^static int execute(int s, char cmd[BUFFER_MAX])$/;"	f	file:
executeCommand	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::executeCommand(int32_t cmd)$/;"	f	class:android::IPCThreadState
exit	services/surfaceflinger/SurfaceFlinger.cpp	/^    void exit(status_t result) {$/;"	f	class:android::GraphicProducerWrapper
exitPending	services/surfaceflinger/SurfaceFlinger.cpp	/^    bool exitPending;$/;"	m	class:android::GraphicProducerWrapper	file:
exitRequested	services/surfaceflinger/SurfaceFlinger.cpp	/^    bool exitRequested;$/;"	m	class:android::GraphicProducerWrapper	file:
explicitlyMapped	services/inputflinger/InputReader.h	/^        bool explicitlyMapped; \/\/ true if the axis was explicitly assigned an axis id$/;"	m	struct:android::JoystickInputMapper::Axis
exponent	opengl/libagl/fp.h	/^int exponent(GLfloat v) {$/;"	f	namespace:android::gl
expungeHandle	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::expungeHandle(int32_t handle, IBinder* binder)$/;"	f	class:android::IPCThreadState
expungeHandle	libs/binder/ProcessState.cpp	/^void ProcessState::expungeHandle(int32_t handle, IBinder* binder)$/;"	f	class:android::ProcessState
ext	opengl/libs/hooks.h	/^    } ext;$/;"	m	struct:android::gl_hooks_t	typeref:struct:android::gl_hooks_t::gl_ext_t
extensionEqual	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^extensionEqual(const GLubyte* pExtensions, const GLubyte* pExtension) {$/;"	f	file:
extensions	opengl/libs/EGL/egl_display.h	/^        char const * extensions;$/;"	m	struct:android::egl_display_t::strings_t
extensions	opengl/libs/hooks.h	/^        __eglMustCastToProperFunctionPointerType extensions[MAX_NUMBER_OF_GL_EXTENSIONS];$/;"	m	struct:android::gl_hooks_t::gl_ext_t
extention_map_t	opengl/libagl/egl.cpp	/^struct extention_map_t {$/;"	s	namespace:android	file:
extention_map_t	opengl/libs/EGL/eglApi.cpp	/^struct extention_map_t {$/;"	s	namespace:android	file:
externalDataPath	include/android/native_activity.h	/^    const char* externalDataPath;$/;"	m	struct:ANativeActivity
eye	opengl/libagl/context.h	/^    vec4_t          eye;$/;"	m	union:android::gl::vertex_t::__anon221
fOut	opengl/tests/gl_perf/fill_common.cpp	/^FILE * fOut = NULL;$/;"	v
face	opengl/libagl/context.h	/^    GLenum      face;$/;"	m	struct:android::gl::color_material_t
factor	opengl/libagl/context.h	/^    GLfixed     factor;$/;"	m	struct:android::gl::polygon_offset_t
fade	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void fade(Transition transition) {$/;"	f	class:android::FakePointerController	file:
fadePointer	services/inputflinger/InputReader.cpp	/^void CursorInputMapper::fadePointer() {$/;"	f	class:android::CursorInputMapper
fadePointer	services/inputflinger/InputReader.cpp	/^void InputDevice::fadePointer() {$/;"	f	class:android::InputDevice
fadePointer	services/inputflinger/InputReader.cpp	/^void InputMapper::fadePointer() {$/;"	f	class:android::InputMapper
fadePointer	services/inputflinger/InputReader.cpp	/^void InputReader::ContextImpl::fadePointer() {$/;"	f	class:android::InputReader::ContextImpl
fadePointer	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::fadePointer() {$/;"	f	class:android::TouchInputMapper
fadePointer	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void fadePointer() {$/;"	f	class:android::FakeInputMapper	file:
fadePointer	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void fadePointer() {$/;"	f	class:android::FakeInputReaderContext	file:
fadePointerLocked	services/inputflinger/InputReader.cpp	/^void InputReader::fadePointerLocked() {$/;"	f	class:android::InputReader
fallbackKeyCode	include/input/KeyCharacterMap.h	/^        int32_t fallbackKeyCode;$/;"	m	struct:android::KeyCharacterMap::Behavior
fastPointer	libs/binder/IMemory.cpp	/^void* IMemory::fastPointer(const sp<IBinder>& binder, ssize_t offset) const$/;"	f	class:android::IMemory
fastexpf	opengl/libagl/fp.h	/^inline float fastexpf(float y)$/;"	f	namespace:android::gl
fb	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline const ::android::gltrace::GLMessage_FrameBuffer& GLMessage::fb() const {$/;"	f	class:android::gltrace::GLMessage
fbCompositionComplete	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^int HWComposer::fbCompositionComplete() {$/;"	f	class:android::HWComposer
fbDev	include/ui/FramebufferNativeWindow.h	/^    framebuffer_device_t* fbDev;$/;"	m	class:android::FramebufferNativeWindow
fbDump	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::fbDump(String8& result) {$/;"	f	class:android::HWComposer
fbPost	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^int HWComposer::fbPost(int32_t id,$/;"	f	class:android::HWComposer
fbSourceForCompositionType	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^VirtualDisplaySurface::fbSourceForCompositionType(CompositionType type) {$/;"	f	class:android::VirtualDisplaySurface
fbTargetHandle	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        buffer_handle_t fbTargetHandle;$/;"	m	struct:android::HWComposer::DisplayData
fb_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::android::gltrace::GLMessage_FrameBuffer* fb_;$/;"	m	class:android::gltrace::GLMessage
fbcompressed	opengl/libs/GLES_trace/src/gltrace_context.h	/^    void *fbcompressed;         \/* destination for lzf compressed framebuffer *\/$/;"	m	class:android::gltrace::GLTraceContext
fbcontents	opengl/libs/GLES_trace/src/gltrace_context.h	/^    void *fbcontents;           \/* memory area to read framebuffer contents *\/$/;"	m	class:android::gltrace::GLTraceContext
fbcontentsSize	opengl/libs/GLES_trace/src/gltrace_context.h	/^    unsigned fbcontentsSize;    \/* size of fbcontents & fbcompressed buffers *\/$/;"	m	class:android::gltrace::GLTraceContext
fbo	services/surfaceflinger/LayerBlur.h	/^        int fbo;$/;"	m	class:android::LayerBlur::FBO
fbo	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        GLuint fbo;$/;"	m	struct:android::GLES20RenderEngine::Group
fd	cmds/dumpstate/dumpstate.c	/^  int fd;$/;"	m	struct:__anon8	file:
fd	cmds/servicemanager/binder.c	/^    int fd;$/;"	m	struct:binder_state	file:
fd	services/inputflinger/EventHub.h	/^        int fd; \/\/ may be -1 if device is virtual$/;"	m	struct:android::EventHub::Device
fence	include/gui/IGraphicBufferProducer.h	/^        sp<Fence> fence;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferInput
fence	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        sp<Fence> fence;$/;"	m	struct:android::IGraphicBufferProducerTest::DequeueBufferResult	file:
fence	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        sp<Fence> fence;$/;"	m	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder	file:
fetch	opengl/libagl/context.h	/^    fetcher_t       fetch;$/;"	m	struct:android::gl::array_t
fetch2b	opengl/libagl/array.cpp	/^static void fetch2b(ogles_context_t*, GLfixed* v, const GLbyte* p) {$/;"	f	namespace:android
fetch2f	opengl/libagl/array.cpp	/^static void fetch2f(ogles_context_t*, GLfixed* v, const GLfloat* p) {$/;"	f	namespace:android
fetch2s	opengl/libagl/array.cpp	/^static void fetch2s(ogles_context_t*, GLfixed* v, const GLshort* p) {$/;"	f	namespace:android
fetch2x	opengl/libagl/array.cpp	/^static void fetch2x(ogles_context_t*, GLfixed* v, const GLfixed* p) {$/;"	f	namespace:android
fetch3b	opengl/libagl/array.cpp	/^static void fetch3b(ogles_context_t*, GLfixed* v, const GLbyte* p) {$/;"	f	namespace:android
fetch3f	opengl/libagl/array.cpp	/^static void fetch3f(ogles_context_t*, GLfixed* v, const GLfloat* p) {$/;"	f	namespace:android
fetch3s	opengl/libagl/array.cpp	/^static void fetch3s(ogles_context_t*, GLfixed* v, const GLshort* p) {$/;"	f	namespace:android
fetch3x	opengl/libagl/array.cpp	/^static void fetch3x(ogles_context_t*, GLfixed* v, const GLfixed* p) {$/;"	f	namespace:android
fetch4b	opengl/libagl/array.cpp	/^static void fetch4b(ogles_context_t*, GLfixed* v, const GLbyte* p) {$/;"	f	namespace:android
fetch4f	opengl/libagl/array.cpp	/^static void fetch4f(ogles_context_t*, GLfixed* v, const GLfloat* p) {$/;"	f	namespace:android
fetch4s	opengl/libagl/array.cpp	/^static void fetch4s(ogles_context_t*, GLfixed* v, const GLshort* p) {$/;"	f	namespace:android
fetch4x	opengl/libagl/array.cpp	/^static void fetch4x(ogles_context_t*, GLfixed* v, const GLfixed* p) {$/;"	f	namespace:android
fetchClamp3f	opengl/libagl/array.cpp	/^static void fetchClamp3f(ogles_context_t*, GLfixed* v, const GLfloat* p) {$/;"	f	namespace:android
fetchClamp3x	opengl/libagl/array.cpp	/^static void fetchClamp3x(ogles_context_t*, GLfixed* v, const GLfixed* p) {$/;"	f	namespace:android
fetchClamp4f	opengl/libagl/array.cpp	/^static void fetchClamp4f(ogles_context_t*, GLfixed* v, const GLfloat* p) {$/;"	f	namespace:android
fetchClamp4x	opengl/libagl/array.cpp	/^static void fetchClamp4x(ogles_context_t*, GLfixed* v, const GLfixed* p) {$/;"	f	namespace:android
fetchExpand3b	opengl/libagl/array.cpp	/^static void fetchExpand3b(ogles_context_t*, GLfixed* v, const GLbyte* p) {$/;"	f	namespace:android
fetchExpand3s	opengl/libagl/array.cpp	/^static void fetchExpand3s(ogles_context_t*, GLfixed* v, const GLshort* p) {$/;"	f	namespace:android
fetchExpand3ub	opengl/libagl/array.cpp	/^static void fetchExpand3ub(ogles_context_t*, GLfixed* v, const GLubyte* p) {$/;"	f	namespace:android
fetchExpand4ub	opengl/libagl/array.cpp	/^static void fetchExpand4ub(ogles_context_t*, GLfixed* v, const GLubyte* p) {$/;"	f	namespace:android
fetchNop	opengl/libagl/array.cpp	/^static void fetchNop(ogles_context_t*, GLfixed*, const GLvoid*) {$/;"	f	namespace:android
fetch_texcoord	opengl/libagl/primitives.cpp	/^inline void fetch_texcoord(ogles_context_t* c,$/;"	f	namespace:android
fetch_texcoord_impl	opengl/libagl/primitives.cpp	/^void fetch_texcoord_impl(ogles_context_t* c,$/;"	f	namespace:android
fetch_vertex	opengl/libagl/array.cpp	/^vertex_t* fetch_vertex(ogles_context_t* c, size_t index)$/;"	f	namespace:android
fetcher_t	opengl/libagl/context.h	/^    typedef void (*fetcher_t)(ogles_context_t*, GLfixed*, const GLvoid*);$/;"	t	struct:android::gl::array_t
ffBitmask	services/inputflinger/EventHub.h	/^        uint8_t ffBitmask[(FF_MAX + 1) \/ 8];$/;"	m	struct:android::EventHub::Device
ffEffectId	services/inputflinger/EventHub.h	/^        int16_t ffEffectId; \/\/ initially -1$/;"	m	struct:android::EventHub::Device
ffEffectPlaying	services/inputflinger/EventHub.h	/^        bool ffEffectPlaying;$/;"	m	struct:android::EventHub::Device
fileExists	cmds/atrace/atrace.cpp	/^static bool fileExists(const char* filename) {$/;"	f	file:
fileIsWritable	cmds/atrace/atrace.cpp	/^static bool fileIsWritable(const char* filename) {$/;"	f	file:
files	cmds/installd/installd.h	/^    cache_file_t** files;$/;"	m	struct:__anon12
fillBayerRawBuffer	libs/gui/tests/CpuConsumer_test.cpp	/^void fillBayerRawBuffer(uint8_t* buf, int w, int h, int stride) {$/;"	f	namespace:android
fillGreyscaleBuffer	libs/gui/tests/CpuConsumer_test.cpp	/^void fillGreyscaleBuffer(T* buf, int w, int h, int stride, int bpp) {$/;"	f	namespace:android
fillRGBA8Buffer	libs/gui/tests/FillBuffer.cpp	/^void fillRGBA8Buffer(uint8_t* buf, int w, int h, int stride) {$/;"	f	namespace:android
fillRGBA8BufferSolid	libs/gui/tests/SurfaceTextureFBO.h	/^void fillRGBA8BufferSolid(uint8_t* buf, int w, int h, int stride,$/;"	f	namespace:android
fillRegionWithColor	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::fillRegionWithColor(const Region& region, uint32_t height,$/;"	f	class:android::RenderEngine
fillRgba8888Buffer	libs/gui/tests/CpuConsumer_test.cpp	/^void fillRgba8888Buffer(uint8_t* buf, int w, int h, int stride)$/;"	f	namespace:android
fillSurfaceRGBA8	services/surfaceflinger/tests/Transaction_test.cpp	/^static void fillSurfaceRGBA8(const sp<SurfaceControl>& sc,$/;"	f	namespace:android
fillTexture	libs/gui/tests/SRGB_test.cpp	/^    void fillTexture(bool writeAsSRGB) {$/;"	f	class:android::SRGBTest
fillYV12Buffer	libs/gui/tests/FillBuffer.cpp	/^void fillYV12Buffer(uint8_t* buf, int w, int h, int stride) {$/;"	f	namespace:android
fillYV12BufferRect	libs/gui/tests/FillBuffer.cpp	/^void fillYV12BufferRect(uint8_t* buf, int w, int h, int stride,$/;"	f	namespace:android
filter	services/inputflinger/InputReader.h	/^        float filter;  \/\/ filter out small variations of this size$/;"	m	struct:android::JoystickInputMapper::Axis
filterAxes	services/inputflinger/InputReader.cpp	/^bool JoystickInputMapper::filterAxes(bool force) {$/;"	f	class:android::JoystickInputMapper
filterInputEvent	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual bool filterInputEvent(const InputEvent* inputEvent, uint32_t policyFlags) {$/;"	f	class:android::FakeInputDispatcherPolicy	file:
filterNonAsIsTouchWindows	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::TouchState::filterNonAsIsTouchWindows() {$/;"	f	class:android::InputDispatcher::TouchState
find	libs/binder/BpBinder.cpp	/^void* BpBinder::ObjectManager::find(const void* objectID) const$/;"	f	class:android::BpBinder::ObjectManager
findBatch	libs/input/InputTransport.cpp	/^ssize_t InputConsumer::findBatch(int32_t deviceId, int32_t source) const {$/;"	f	class:android::InputConsumer
findBuiltinWrapper	opengl/libs/EGL/eglApi.cpp	/^static __eglMustCastToProperFunctionPointerType findBuiltinWrapper($/;"	f	file:
findConfigAttrib	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        private int findConfigAttrib(EGL10 egl, EGLDisplay display,$/;"	m	class:GL2JNIView.ConfigChooser	file:
findConfigAttrib	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        private int findConfigAttrib(EGL10 egl, EGLDisplay display,$/;"	m	class:GLPerfView.ConfigChooser	file:
findConfigAttrib	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        private int findConfigAttrib(EGL10 egl, EGLDisplay display,$/;"	m	class:GLDualGL2View.ConfigChooser	file:
findExtension	opengl/libs/EGL/egl_display.cpp	/^static bool findExtension(const char* exts, const char* name, size_t nameLen) {$/;"	f	namespace:android
findExtension	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^static bool findExtension(const char* exts, const char* name) {$/;"	f	namespace:android
findFocusedWindowTargetsLocked	services/inputflinger/InputDispatcher.cpp	/^int32_t InputDispatcher::findFocusedWindowTargetsLocked(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher
findKey	libs/input/KeyCharacterMap.cpp	/^bool KeyCharacterMap::findKey(char16_t ch, int32_t* outKeyCode, int32_t* outMetaState) const {$/;"	f	class:android::KeyCharacterMap
findKeyDown	services/inputflinger/InputReader.cpp	/^ssize_t KeyboardInputMapper::findKeyDown(int32_t scanCode) {$/;"	f	class:android::KeyboardInputMapper
findKeyMemento	services/inputflinger/InputDispatcher.cpp	/^ssize_t InputDispatcher::InputState::findKeyMemento(const KeyEntry* entry) const {$/;"	f	class:android::InputDispatcher::InputState
findMinAndMaxIndices	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void findMinAndMaxIndices(GLvoid *indices, GLsizei count, GLenum type,$/;"	f	namespace:android::gltrace
findMotionMemento	services/inputflinger/InputDispatcher.cpp	/^ssize_t InputDispatcher::InputState::findMotionMemento(const MotionEntry* entry,$/;"	f	class:android::InputDispatcher::InputState
findObject	libs/binder/Binder.cpp	/^void* BBinder::findObject(const void* objectID) const$/;"	f	class:android::BBinder
findObject	libs/binder/BpBinder.cpp	/^void* BpBinder::findObject(const void* objectID) const$/;"	f	class:android::BpBinder
findPointerIndex	libs/input/Input.cpp	/^ssize_t MotionEvent::findPointerIndex(int32_t pointerId) const {$/;"	f	class:android::MotionEvent
findProcAddress	opengl/libs/EGL/eglApi.cpp	/^static void(*findProcAddress(const char* name,$/;"	f	namespace:android
findSampleNoLaterThan	libs/input/InputTransport.cpp	/^ssize_t InputConsumer::findSampleNoLaterThan(const Batch& batch, nsecs_t time) {$/;"	f	class:android::InputConsumer
findScanCodeForLed	libs/input/KeyLayoutMap.cpp	/^status_t KeyLayoutMap::findScanCodeForLed(int32_t ledCode, int32_t* outScanCode) const {$/;"	f	class:android::KeyLayoutMap
findScanCodesForKey	libs/input/KeyLayoutMap.cpp	/^status_t KeyLayoutMap::findScanCodesForKey(int32_t keyCode, Vector<int32_t>* outScanCodes) const {$/;"	f	class:android::KeyLayoutMap
findTouchState	libs/input/InputTransport.cpp	/^ssize_t InputConsumer::findTouchState(int32_t deviceId, int32_t source) const {$/;"	f	class:android::InputConsumer
findTouchedWindowAtLocked	services/inputflinger/InputDispatcher.cpp	/^sp<InputWindowHandle> InputDispatcher::findTouchedWindowAtLocked(int32_t displayId,$/;"	f	class:android::InputDispatcher
findTouchedWindowTargetsLocked	services/inputflinger/InputDispatcher.cpp	/^int32_t InputDispatcher::findTouchedWindowTargetsLocked(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher
findUsageCodeForLed	libs/input/KeyLayoutMap.cpp	/^status_t KeyLayoutMap::findUsageCodeForLed(int32_t ledCode, int32_t* outUsageCode) const {$/;"	f	class:android::KeyLayoutMap
findVirtualKeyHit	services/inputflinger/InputReader.cpp	/^const TouchInputMapper::VirtualKey* TouchInputMapper::findVirtualKeyHit($/;"	f	class:android::TouchInputMapper
findWaitQueueEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::DispatchEntry* InputDispatcher::Connection::findWaitQueueEntry(uint32_t seq) {$/;"	f	class:android::InputDispatcher::Connection
findWakeUpSensorEventLocked	services/sensorservice/SensorService.cpp	/^int SensorService::SensorEventConnection::findWakeUpSensorEventLocked($/;"	f	class:android::SensorService::SensorEventConnection
find_heap	libs/binder/IMemory.cpp	/^    static inline sp<IMemoryHeap> find_heap(const sp<IBinder>& binder) {$/;"	f	class:android::BpMemoryHeap	file:
find_heap	libs/binder/IMemory.cpp	/^sp<IMemoryHeap> HeapCache::find_heap(const sp<IBinder>& binder)$/;"	f	class:android::HeapCache
find_svc	cmds/servicemanager/service_manager.c	/^struct svcinfo *find_svc(const uint16_t *s16, size_t len)$/;"	f
finish	opengl/tools/glgen2/glgen.py	/^    def finish(self):$/;"	m	class:ApiGenerator
finishDeviceScan	services/inputflinger/tests/InputReader_test.cpp	/^    void finishDeviceScan() {$/;"	f	class:android::FakeEventHub
finishDisconnect	libs/gui/tests/CpuConsumer_test.cpp	/^        void finishDisconnect() {$/;"	f	class:android::CpuConsumerTest::DisconnectWaiter
finishDisconnect	libs/gui/tests/DisconnectWaiter.h	/^    void finishDisconnect() {$/;"	f	class:android::DisconnectWaiter
finishDispatchCycleLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::finishDispatchCycleLocked(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher
finishFrame	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        void finishFrame() {$/;"	f	class:android::SurfaceTextureGLThreadToGLTest::FrameCondition
finishKey	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::Parser::finishKey(Key* key) {$/;"	f	class:android::KeyCharacterMap::Parser
finishOnSwap	opengl/libs/EGL/egl_display.h	/^    bool    finishOnSwap;       \/\/ property: debug.egl.finish$/;"	m	class:android::egl_display_t
finishOp	libs/binder/AppOpsManager.cpp	/^void AppOpsManager::finishOp(int32_t op, int32_t uid, const String16& callingPackage) {$/;"	f	class:android::AppOpsManager
finishOperation	libs/binder/IAppOpsService.cpp	/^    virtual void finishOperation(const sp<IBinder>& token, int32_t code, int32_t uid,$/;"	f	class:android::BpAppOpsService
finishSync	services/inputflinger/InputReader.cpp	/^void CursorMotionAccumulator::finishSync() {$/;"	f	class:android::CursorMotionAccumulator
finishSync	services/inputflinger/InputReader.cpp	/^void CursorScrollAccumulator::finishSync() {$/;"	f	class:android::CursorScrollAccumulator
finishSync	services/inputflinger/InputReader.cpp	/^void MultiTouchMotionAccumulator::finishSync() {$/;"	f	class:android::MultiTouchMotionAccumulator
finishWrite	libs/binder/Parcel.cpp	/^status_t Parcel::finishWrite(size_t len)$/;"	f	class:android::Parcel
finish_cache_collection	cmds/installd/utils.c	/^void finish_cache_collection(cache_t* cache)$/;"	f
finish_flatten_binder	libs/binder/Parcel.cpp	/^inline static status_t finish_flatten_binder($/;"	f	namespace:android
finish_unflatten_binder	libs/binder/Parcel.cpp	/^inline static status_t finish_unflatten_binder($/;"	f	namespace:android
finished	include/input/InputTransport.h	/^        } finished;$/;"	m	union:android::InputMessage::Body	typeref:struct:android::InputMessage::Body::Finished
fireCallbackInvocations	services/surfaceflinger/DispSync.cpp	/^    void fireCallbackInvocations(const Vector<CallbackInvocation>& callbacks) {$/;"	f	class:android::DispSyncThread	file:
first	opengl/libagl/Tokenizer.h	/^        uint32_t    first;$/;"	m	struct:android::Tokenizer::run_t
firstBehavior	include/input/KeyCharacterMap.h	/^        Behavior* firstBehavior;$/;"	m	struct:android::KeyCharacterMap::Key
firstTouchTime	services/inputflinger/InputReader.h	/^        nsecs_t firstTouchTime;$/;"	m	struct:android::TouchInputMapper::PointerGesture
fix_uid	cmds/installd/commands.c	/^int fix_uid(const char *pkgname, uid_t uid, gid_t gid)$/;"	f
fixedToFloat	opengl/libagl/fp.cpp	/^GLfloat fixedToFloat(GLfixed x)$/;"	f	namespace:android::gl
fixupGLMessage	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixupGLMessage(GLTraceContext *context, nsecs_t wallStart, nsecs_t wallEnd,$/;"	f	namespace:android::gltrace
fixup_CStringPtr	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_CStringPtr(int argIndex, GLMessage *glmsg, void *src) {$/;"	f	namespace:android::gltrace
fixup_GenericEnumArray	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_GenericEnumArray(int argIndex, int nEnums, GLMessage *glmsg, void *src) {$/;"	f	namespace:android::gltrace
fixup_GenericFloatArray	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_GenericFloatArray(int argIndex, int nFloats, GLMessage *glmsg, void *src) {$/;"	f	namespace:android::gltrace
fixup_GenericIntArray	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_GenericIntArray(int argIndex, int nInts, GLMessage *glmsg, void *src) {$/;"	f	namespace:android::gltrace
fixup_addFBContents	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_addFBContents(GLTraceContext *context, GLMessage *glmsg, FBBinding fbToRead) {$/;"	f	namespace:android::gltrace
fixup_glBufferData	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glBufferData(GLTraceContext *context, GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glBufferSubData	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glBufferSubData(GLTraceContext *context, GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glCompressedTexImage2D	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glCompressedTexImage2D(GLTraceContext *context, GLMessage *glmsg,$/;"	f	namespace:android::gltrace
fixup_glCompressedTexSubImage2D	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glCompressedTexSubImage2D(GLTraceContext *context, GLMessage *glmsg,$/;"	f	namespace:android::gltrace
fixup_glDeleteGeneric	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glDeleteGeneric(GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glDrawArrays	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glDrawArrays(GLTraceContext *context, GLMessage *glmsg) {$/;"	f	namespace:android::gltrace
fixup_glDrawElements	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glDrawElements(GLTraceContext *context, GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glGenGeneric	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glGenGeneric(GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glGetActiveAttribOrUniform	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glGetActiveAttribOrUniform(GLTraceContext *context, GLMessage *glmsg,$/;"	f	namespace:android::gltrace
fixup_glGetBooleanv	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glGetBooleanv(GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glGetFloatv	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glGetFloatv(GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glGetString	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glGetString(GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glLinkProgram	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glLinkProgram(GLMessage *glmsg) {$/;"	f	namespace:android::gltrace
fixup_glShaderSource	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glShaderSource(GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glTexImage	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glTexImage(GLTraceContext *context, int widthIndex, int heightIndex, GLMessage *glmsg,$/;"	f	namespace:android::gltrace
fixup_glTexImage2D	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glTexImage2D(GLTraceContext *context, GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glTexSubImage2D	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glTexSubImage2D(GLTraceContext *context, GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
fixup_glUniformGeneric	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glUniformGeneric(int argIndex, int nElemsPerVector, GLMessage *glmsg, void *src) {$/;"	f	namespace:android::gltrace
fixup_glUniformGenericInteger	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glUniformGenericInteger(int argIndex, int nElemsPerVector, GLMessage *glmsg,$/;"	f	namespace:android::gltrace
fixup_glUniformMatrixGeneric	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void fixup_glUniformMatrixGeneric(int matrixSize, GLMessage *glmsg, void *pointersToFixup[]) {$/;"	f	namespace:android::gltrace
flags	cmds/flatland/Flatland.h	/^    uint32_t flags;$/;"	m	struct:android::LayerDesc
flags	cmds/servicemanager/binder.h	/^    uint32_t flags;$/;"	m	struct:binder_io
flags	include/android/bitmap.h	/^    uint32_t    flags;      \/\/ 0 for now$/;"	m	struct:__anon161
flags	include/android/sensor.h	/^    uint32_t flags;$/;"	m	struct:ASensorEvent
flags	include/binder/BpBinder.h	/^        uint32_t flags;$/;"	m	struct:android::BpBinder::Obituary
flags	include/input/InputTransport.h	/^            int32_t flags;$/;"	m	struct:android::InputMessage::Body::Key
flags	include/input/InputTransport.h	/^            int32_t flags;$/;"	m	struct:android::InputMessage::Body::Motion
flags	include/input/KeyLayoutMap.h	/^        uint32_t flags;$/;"	m	struct:android::KeyLayoutMap::Key
flags	include/private/gui/LayerState.h	/^            uint8_t         flags;$/;"	m	struct:android::layer_state_t
flags	opengl/libagl/context.h	/^    uint32_t        flags;$/;"	m	struct:android::gl::array_machine_t
flags	opengl/libagl/context.h	/^    uint32_t        flags;$/;"	m	struct:android::gl::transform_t
flags	opengl/libagl/context.h	/^    uint32_t        flags;$/;"	m	struct:android::gl::vertex_t
flags	opengl/libagl/egl.cpp	/^    uint32_t            flags;$/;"	m	struct:android::egl_context_t	file:
flags	services/inputflinger/InputDispatcher.h	/^            int32_t flags;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
flags	services/inputflinger/InputDispatcher.h	/^            int32_t flags;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
flags	services/inputflinger/InputDispatcher.h	/^        int32_t flags;$/;"	m	struct:android::InputDispatcher::KeyEntry
flags	services/inputflinger/InputDispatcher.h	/^        int32_t flags;$/;"	m	struct:android::InputDispatcher::MotionEntry
flags	services/inputflinger/InputDispatcher.h	/^    int32_t flags;$/;"	m	struct:android::InputTarget
flags	services/inputflinger/InputListener.h	/^    int32_t flags;$/;"	m	struct:android::NotifyKeyArgs
flags	services/inputflinger/InputListener.h	/^    int32_t flags;$/;"	m	struct:android::NotifyMotionArgs
flags	services/inputflinger/InputReader.h	/^        uint32_t flags;$/;"	m	struct:android::TouchInputMapper::VirtualKey
flags	services/inputflinger/tests/InputReader_test.cpp	/^        uint32_t flags;$/;"	m	struct:android::FakeEventHub::KeyInfo	file:
flags	services/sensorservice/SensorDevice.h	/^      int flags;$/;"	m	struct:android::SensorDevice::BatchParams
flags	services/surfaceflinger/Layer.h	/^        uint8_t flags;$/;"	m	struct:android::Layer::State
flat	include/input/InputDevice.h	/^        float flat;$/;"	m	struct:android::InputDeviceInfo::MotionRange
flat	services/inputflinger/EventHub.h	/^    int32_t flat;      \/\/ center flat position, eg. flat == 8 means center is between -8 and 8$/;"	m	struct:android::RawAbsoluteAxisInfo
flat	services/inputflinger/InputReader.h	/^        float flat;       \/\/ normalized flat region size$/;"	m	struct:android::JoystickInputMapper::Axis
flatOverride	include/input/KeyLayoutMap.h	/^    int32_t flatOverride;$/;"	m	struct:android::AxisInfo
flatten	include/binder/Parcel.h	/^        virtual status_t flatten(void* buffer, size_t size, int* fds, size_t count) const {$/;"	f	class:android::Parcel::FlattenableHelper
flatten	libs/gui/BufferItem.cpp	/^status_t BufferItem::flatten($/;"	f	class:android::BufferItem
flatten	libs/gui/IGraphicBufferConsumer.cpp	/^status_t IGraphicBufferConsumer::BufferItem::flatten($/;"	f	class:android::IGraphicBufferConsumer::BufferItem
flatten	libs/gui/IGraphicBufferProducer.cpp	/^status_t IGraphicBufferProducer::QueueBufferInput::flatten($/;"	f	class:android::IGraphicBufferProducer::QueueBufferInput
flatten	libs/gui/Sensor.cpp	/^status_t Sensor::flatten(void* buffer, size_t size) const {$/;"	f	class:android::Sensor
flatten	libs/ui/Fence.cpp	/^status_t Fence::flatten(void*& buffer, size_t& size, int*& fds, size_t& count) const {$/;"	f	class:android::Fence
flatten	libs/ui/FrameStats.cpp	/^status_t FrameStats::flatten(void* buffer, size_t size) const {$/;"	f	class:android::FrameStats
flatten	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::flatten(void*& buffer, size_t& size, int*& fds, size_t& count) const {$/;"	f	class:android::GraphicBuffer
flatten	libs/ui/Region.cpp	/^status_t Region::flatten(void* buffer, size_t size) const {$/;"	f	class:android::Region
flattenString8	libs/gui/Sensor.cpp	/^void Sensor::flattenString8(void*& buffer, size_t& size,$/;"	f	class:android::Sensor
flatten_binder	libs/binder/Parcel.cpp	/^status_t flatten_binder(const sp<ProcessState>& \/*proc*\/,$/;"	f	namespace:android
flexFormat	include/gui/CpuConsumer.h	/^        PixelFormat flexFormat;$/;"	m	struct:android::CpuConsumer::LockedBuffer
flip	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::flip(const Region& dirty) const$/;"	f	class:DisplayDevice
floatToFixed	opengl/tests/angeles/demo.c	/^static long floatToFixed(float value)$/;"	f	file:
floatvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::floatvalue() const {$/;"	f	class:android::gltrace::GLMessage_DataType
floatvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline float GLMessage_DataType::floatvalue(int index) const {$/;"	f	class:android::gltrace::GLMessage_DataType
floatvalue_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::RepeatedField< float > floatvalue_;$/;"	m	class:android::gltrace::GLMessage_DataType
floatvalue_size	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline int GLMessage_DataType::floatvalue_size() const {$/;"	f	class:android::gltrace::GLMessage_DataType
flush	libs/gui/ISensorEventConnection.cpp	/^    virtual status_t flush() {$/;"	f	class:android::BpSensorEventConnection
flush	libs/gui/SensorEventQueue.cpp	/^status_t SensorEventQueue::flush() const {$/;"	f	class:android::SensorEventQueue
flush	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^int BufferedOutputStream::flush() {$/;"	f	class:android::gltrace::BufferedOutputStream
flush	services/inputflinger/InputListener.cpp	/^void QueuedInputListener::flush() {$/;"	f	class:android::QueuedInputListener
flush	services/sensorservice/SensorDevice.cpp	/^status_t SensorDevice::flush(void* ident, int handle) {$/;"	f	class:android::SensorDevice
flush	services/sensorservice/SensorInterface.cpp	/^status_t HardwareSensor::flush(void* ident, int handle) {$/;"	f	class:android::HardwareSensor
flush	services/sensorservice/SensorInterface.h	/^    virtual status_t flush(void* \/*ident*\/, int \/*handle*\/) {$/;"	f	class:android::SensorInterface
flush	services/sensorservice/SensorService.cpp	/^status_t  SensorService::SensorEventConnection::flush() {$/;"	f	class:android::SensorService::SensorEventConnection
flush	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::flush() {$/;"	f	class:android::RenderEngine
flushCommands	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::flushCommands()$/;"	f	class:android::IPCThreadState
flushSensor	services/sensorservice/SensorService.cpp	/^status_t SensorService::flushSensor(const sp<SensorEventConnection>& connection) {$/;"	f	class:android::SensorService
flushSpan	libs/ui/Region.cpp	/^    void flushSpan() {$/;"	f	class:android::Region::rasterizer	file:
fmtArgs	opengl/tools/glgen2/glgen.py	/^def fmtArgs(params):$/;"	f
fmtParams	opengl/tools/glgen2/glgen.py	/^def fmtParams(params):$/;"	f
fmtTypeNameList	opengl/tools/glgen2/glgen.py	/^def fmtTypeNameList(params):$/;"	f
fn_t	opengl/libagl/array.cpp	/^typedef array_t::fetcher_t fn_t;$/;"	t	namespace:android	file:
fname	opengl/tools/glgen/src/CFunc.java	/^    String fname;$/;"	f	class:CFunc
fname	opengl/tools/glgen/src/JFunc.java	/^    String fname;$/;"	f	class:JFunc
fog	opengl/libagl/context.h	/^    GLfixed         fog;$/;"	m	struct:android::gl::vertex_t
fog	opengl/libagl/context.h	/^    GLfixed     (*fog)(ogles_context_t* c, GLfixed z);$/;"	m	struct:android::gl::fog_t
fog	opengl/libagl/context.h	/^    fog_t                   fog;$/;"	m	struct:android::gl::ogles_context_t
fog_exp	opengl/libagl/light.cpp	/^static GLfixed fog_exp(ogles_context_t* c, GLfixed z) {$/;"	f	namespace:android
fog_exp2	opengl/libagl/light.cpp	/^static GLfixed fog_exp2(ogles_context_t* c, GLfixed z) {$/;"	f	namespace:android
fog_linear	opengl/libagl/light.cpp	/^static GLfixed fog_linear(ogles_context_t* c, GLfixed z) {$/;"	f	namespace:android
fog_t	opengl/libagl/context.h	/^struct fog_t {$/;"	s	namespace:android::gl
fogx	opengl/libagl/light.cpp	/^static void fogx(GLenum pname, GLfixed param, ogles_context_t* c)$/;"	f	namespace:android
for_each_pid	cmds/dumpstate/utils.c	/^void for_each_pid(for_each_pid_func func, const char *header) {$/;"	f
for_each_pid_func	cmds/dumpstate/dumpstate.h	/^typedef void (for_each_pid_func)(int, const char *);$/;"	t
for_each_pid_helper	cmds/dumpstate/utils.c	/^static void for_each_pid_helper(int pid, const char *cmdline, void *arg) {$/;"	f	file:
for_each_tid	cmds/dumpstate/utils.c	/^void for_each_tid(for_each_tid_func func, const char *header) {$/;"	f
for_each_tid_func	cmds/dumpstate/dumpstate.h	/^typedef void (for_each_tid_func)(int, int, const char *);$/;"	t
for_each_tid_helper	cmds/dumpstate/utils.c	/^static void for_each_tid_helper(int pid, const char *cmdline, void *arg) {$/;"	f	file:
for_each_userid	cmds/dumpstate/utils.c	/^void for_each_userid(void (*func)(int), const char *header) {$/;"	f
for_each_userid_func	cmds/dumpstate/dumpstate.h	/^typedef void (for_each_userid_func)(int);$/;"	t
format	include/android/bitmap.h	/^    int32_t     format;$/;"	m	struct:__anon161
format	include/android/native_window.h	/^    int32_t format;$/;"	m	struct:ANativeWindow_Buffer
format	include/gui/CpuConsumer.h	/^        PixelFormat format;$/;"	m	struct:android::CpuConsumer::LockedBuffer
format	include/media/openmax/OMX_Component.h	/^    } format;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE	typeref:union:OMX_PARAM_PORTDEFINITIONTYPE::__anon129
format	include/ui/ANativeObjectBase.h	/^    uint8_t     format;$/;"	m	struct:egl_native_pixmap_t
format	include/ui/GraphicBufferAllocator.h	/^        PixelFormat format;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
format	include/ui/PixelFormat.h	/^    PixelFormat format;$/;"	m	struct:android::PixelFormatInfo
format	libs/gui/tests/CpuConsumer_test.cpp	/^    PixelFormat format;$/;"	m	struct:android::CpuConsumerTestParams	file:
format	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t     format;$/;"	m	class:Rectangle	file:
format	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t format;$/;"	m	struct:meas	file:
format	opengl/tests/hwc/hwcRects.cpp	/^    uint32_t     format;$/;"	m	class:Rectangle	file:
format	opengl/tests/hwc/hwcTestLib.h	/^    uint32_t format;$/;"	m	struct:hwcTestGraphicFormat
format	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        uint32_t format;    \/\/ pixel format from FB hal, for pre-hwc-1.1$/;"	m	struct:android::HWComposer::DisplayData
formats	opengl/tests/hwc/hwcCommit.cpp	/^static vector<string> formats;$/;"	v	file:
fpCopyTex	opengl/tests/gl_perf/fragment_shaders.cpp	/^static FragmentTest fpCopyTex = {$/;"	v	file:
fpCopyTexGamma	opengl/tests/gl_perf/fragment_shaders.cpp	/^static FragmentTest fpCopyTexGamma = {$/;"	v	file:
fpDepTex	opengl/tests/gl_perf/fragment_shaders.cpp	/^static FragmentTest fpDepTex = {$/;"	v	file:
fpFill	opengl/tests/gl_perf/fragment_shaders.cpp	/^static FragmentTest fpFill = {$/;"	v	file:
fpGradient	opengl/tests/gl_perf/fragment_shaders.cpp	/^static FragmentTest fpGradient = {$/;"	v	file:
fpModulateConstantTex	opengl/tests/gl_perf/fragment_shaders.cpp	/^static FragmentTest fpModulateConstantTex = {$/;"	v	file:
fpModulateVaryingConstantTex	opengl/tests/gl_perf/fragment_shaders.cpp	/^static FragmentTest fpModulateVaryingConstantTex = {$/;"	v	file:
fpModulateVaryingTex	opengl/tests/gl_perf/fragment_shaders.cpp	/^static FragmentTest fpModulateVaryingTex = {$/;"	v	file:
fpTexSpec	opengl/tests/gl_perf/fragment_shaders.cpp	/^static FragmentTest fpTexSpec = {$/;"	v	file:
fps	include/ui/DisplayInfo.h	/^    float fps;$/;"	m	struct:android::DisplayInfo
fragmentShader	cmds/flatland/GLHelper.h	/^    const char* fragmentShader[MAX_SHADER_LINES];$/;"	m	struct:android::ShaderDesc
frame	include/private/gui/LayerState.h	/^    Rect frame;$/;"	m	struct:android::DisplayState
frame	services/surfaceflinger/SurfaceFlinger.h	/^        Rect frame;$/;"	m	struct:android::SurfaceFlinger::DisplayDeviceState
frameBottom	services/inputflinger/InputWindow.h	/^    int32_t frameBottom;$/;"	m	struct:android::InputWindowInfo
frameContainsPoint	services/inputflinger/InputWindow.cpp	/^bool InputWindowInfo::frameContainsPoint(int32_t x, int32_t y) const {$/;"	f	class:android::InputWindowInfo
frameLeft	services/inputflinger/InputWindow.h	/^    int32_t frameLeft;$/;"	m	struct:android::InputWindowInfo
frameNumber	include/gui/CpuConsumer.h	/^        uint64_t    frameNumber;$/;"	m	struct:android::CpuConsumer::LockedBuffer
frameReadyFence	services/surfaceflinger/FrameTracker.h	/^        sp<Fence> frameReadyFence;$/;"	m	struct:android::FrameTracker::FrameRecord
frameReadyTime	services/surfaceflinger/FrameTracker.h	/^        nsecs_t frameReadyTime;$/;"	m	struct:android::FrameTracker::FrameRecord
frameReadyTimesNano	include/ui/FrameStats.h	/^    Vector<nsecs_t> frameReadyTimesNano;$/;"	m	class:android::FrameStats
frameRight	services/inputflinger/InputWindow.h	/^    int32_t frameRight;$/;"	m	struct:android::InputWindowInfo
frameTop	services/inputflinger/InputWindow.h	/^    int32_t frameTop;$/;"	m	struct:android::InputWindowInfo
framebufferTarget	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        hwc_layer_1* framebufferTarget;$/;"	m	struct:android::HWComposer::DisplayData
frames	opengl/tests/hwc/hwcStress.cpp	/^static vector <vector <sp<GraphicBuffer> > > frames;$/;"	v	file:
free	libs/binder/MemoryDealer.cpp	/^        int                 free : 4;$/;"	m	struct:android::SimpleBestFitAllocator::chunk_t	file:
free	libs/ui/GraphicBufferAllocator.cpp	/^status_t GraphicBufferAllocator::free(buffer_handle_t handle)$/;"	f	class:android::GraphicBufferAllocator
freeAllBuffers	libs/gui/Surface.cpp	/^void Surface::freeAllBuffers() {$/;"	f	class:android::Surface
freeAllBuffersLocked	libs/gui/BufferQueueCore.cpp	/^void BufferQueueCore::freeAllBuffersLocked() {$/;"	f	class:android::BufferQueueCore
freeBuffer	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::freeBuffer(Parcel* parcel, const uint8_t* data,$/;"	f	class:android::IPCThreadState
freeBufferIndex	libs/binder/BufferedTextOutput.cpp	/^static void freeBufferIndex(int32_t idx)$/;"	f	namespace:android
freeBufferLocked	libs/gui/BufferQueueCore.cpp	/^void BufferQueueCore::freeBufferLocked(int slot) {$/;"	f	class:android::BufferQueueCore
freeBufferLocked	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::freeBufferLocked(int slotIndex) {$/;"	f	class:android::ConsumerBase
freeBufferLocked	libs/gui/CpuConsumer.cpp	/^void CpuConsumer::freeBufferLocked(int slotIndex) {$/;"	f	class:android::CpuConsumer
freeBufferLocked	libs/gui/GLConsumer.cpp	/^void GLConsumer::freeBufferLocked(int slotIndex) {$/;"	f	class:android::GLConsumer
freeBufferLocked	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^void FramebufferSurface::freeBufferLocked(int slotIndex) {$/;"	f	class:android::FramebufferSurface
freeData	libs/binder/Parcel.cpp	/^void Parcel::freeData()$/;"	f	class:android::Parcel
freeDataNoInit	libs/binder/Parcel.cpp	/^void Parcel::freeDataNoInit()$/;"	f	class:android::Parcel
freeDisplayId	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::freeDisplayId(int32_t id) {$/;"	f	class:android::HWComposer
freeGLObject	opengl/tests/angeles/demo.c	/^static void freeGLObject(GLOBJECT *object)$/;"	f	file:
freeMipmaps	opengl/libagl/TextureObjectManager.cpp	/^void EGLTextureObject::freeMipmaps()$/;"	f	class:android::EGLTextureObject
free_cache	cmds/installd/commands.c	/^int free_cache(int64_t free_size)$/;"	f
free_gl_surface	opengl/tests/gl_basic/gl_basic.cpp	/^void free_gl_surface(void)$/;"	f
free_gl_surface	opengl/tests/tritex/tritex.cpp	/^void free_gl_surface(void)$/;"	f
free_globals	cmds/installd/installd.c	/^void free_globals() {$/;"	f
free_handle	libs/ui/GraphicBuffer.cpp	/^void GraphicBuffer::free_handle()$/;"	f	class:android::GraphicBuffer
free_heap	libs/binder/IMemory.cpp	/^    static inline void free_heap(const sp<IBinder>& binder) {$/;"	f	class:android::BpMemoryHeap	file:
free_heap	libs/binder/IMemory.cpp	/^void HeapCache::free_heap(const sp<IBinder>& binder)  {$/;"	f	class:android::HeapCache
free_heap	libs/binder/IMemory.cpp	/^void HeapCache::free_heap(const wp<IBinder>& binder)$/;"	f	class:android::HeapCache
freeformTouchToGestureIdMap	services/inputflinger/InputReader.h	/^        uint32_t freeformTouchToGestureIdMap[MAX_POINTER_ID + 1];$/;"	m	struct:android::TouchInputMapper::PointerGesture
freqRatio	opengl/tests/hwc/hwcStress.cpp	/^const float freqRatio = 0.9;$/;"	v
fromEGLHandle	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^fromEGLHandle(JNIEnv *_env, jmethodID mid, jobject obj) {$/;"	f	file:
fromEGLHandle	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^fromEGLHandle(JNIEnv *_env, jmethodID mid, jobject obj) {$/;"	f	file:
front	include/ui/FramebufferNativeWindow.h	/^    sp<NativeBuffer> front;$/;"	m	class:android::FramebufferNativeWindow
front	opengl/libagl/context.h	/^    material_t          front;$/;"	m	struct:android::gl::lighting_t
frontFace	opengl/libagl/context.h	/^    GLenum      frontFace;$/;"	m	struct:android::gl::culling_t
frustum	include/ui/mat4.h	/^tmat44<T> tmat44<T>::frustum(T left, T right, T bottom, T top, T near, T far) {$/;"	f	class:android::tmat44
frustumPlaneDist	opengl/libagl/primitives.cpp	/^GLfixed frustumPlaneDist(int plane, const vec4_t& s)$/;"	f	namespace:android
frustumf	opengl/libagl/matrix.cpp	/^static void frustumf($/;"	f	namespace:android
ftype	opengl/tools/glgen/src/CFunc.java	/^    CType ftype;$/;"	f	class:CFunc
ftype	opengl/tools/glgen/src/JFunc.java	/^    JType ftype;$/;"	f	class:JFunc
func	cmds/installd/installd.c	/^    int (*func)(char **arg, char reply[REPLY_MAX]);$/;"	m	struct:cmdinfo	file:
func	cmds/servicemanager/binder.h	/^    void (*func)(struct binder_state *bs, void *ptr);$/;"	m	struct:binder_death
func	include/binder/BpBinder.h	/^            IBinder::object_cleanup_func func;$/;"	m	struct:android::BpBinder::ObjectManager::entry_t
function	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::android::gltrace::GLMessage_Function GLMessage::function() const {$/;"	f	class:android::gltrace::GLMessage
function_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  int function_;$/;"	m	class:android::gltrace::GLMessage
fuzz	include/input/InputDevice.h	/^        float fuzz;$/;"	m	struct:android::InputDeviceInfo::MotionRange
fuzz	services/inputflinger/EventHub.h	/^    int32_t fuzz;      \/\/ error tolerance, eg. fuzz == 4 means value is +\/- 4 due to noise$/;"	m	struct:android::RawAbsoluteAxisInfo
fuzz	services/inputflinger/InputReader.h	/^        float fuzz;       \/\/ normalized error tolerance$/;"	m	struct:android::JoystickInputMapper::Axis
g	include/ui/vec2.h	/^        struct { T r, g; };$/;"	m	struct:android::tvec2::__anon82::__anon85
g	include/ui/vec3.h	/^        struct { T r, g, b; };$/;"	m	struct:android::tvec3::__anon89::__anon92
g	include/ui/vec4.h	/^        struct { T r, g, b, a; };$/;"	m	struct:android::tvec4::__anon96::__anon99
g	opengl/libagl/context.h	/^        struct { GLfixed r, g, b, a; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon218
g	opengl/libagl/context.h	/^        struct { GLfixed r, g, b; };$/;"	m	struct:android::gl::vec3_t::__anon212::__anon214
g	opengl/tests/hwc/hwcTestLib.h	/^    float g(void) const { return _g; }$/;"	f	class:ColorRGB
gAppAlive	opengl/tests/angeles/app-linux.cpp	/^int gAppAlive = 1;$/;"	v
gBufferTexture	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint gBufferTexture;$/;"	v
gBuiltinExtensionString	opengl/libs/EGL/eglApi.cpp	/^extern char const * const gBuiltinExtensionString =$/;"	m	namespace:android	file:
gClientApiString	opengl/libagl/egl.cpp	/^static char const * const gClientApiString  = "OpenGL_ES";$/;"	m	namespace:android	file:
gConfigManagement	opengl/libagl/egl.cpp	/^static config_management_t const gConfigManagement[] = {$/;"	m	namespace:android	file:
gConfigs	opengl/libagl/egl.cpp	/^static configs_t const gConfigs[] = {$/;"	m	namespace:android	file:
gCurrentTestName	opengl/tests/gl_perf/fill_common.cpp	/^static char gCurrentTestName[1024];$/;"	v	file:
gDefaultServiceManager	libs/binder/Static.cpp	/^sp<IServiceManager> gDefaultServiceManager;$/;"	m	namespace:android	file:
gDefaultServiceManagerLock	libs/binder/Static.cpp	/^Mutex gDefaultServiceManagerLock;$/;"	m	namespace:android	file:
gDisableBackgroundScheduling	libs/binder/IPCThreadState.cpp	/^static bool gDisableBackgroundScheduling = false;$/;"	m	namespace:android	file:
gDisplays	opengl/libagl/egl.cpp	/^static egl_display_t gDisplays[NUM_DISPLAYS];$/;"	m	namespace:android	file:
gEGLErrorKey	opengl/libagl/egl.cpp	/^static pthread_key_t gEGLErrorKey = -1;$/;"	m	namespace:android	file:
gEGLImpl	opengl/libs/EGL/egl.cpp	/^egl_connection_t gEGLImpl;$/;"	m	namespace:android	file:
gErrorKeyMutex	opengl/libagl/egl.cpp	/^static pthread_mutex_t gErrorKeyMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:android	file:
gExtensionForwarders	opengl/libs/EGL/getProcAddress.cpp	/^extern const __eglMustCastToProperFunctionPointerType gExtensionForwarders[MAX_NUMBER_OF_GL_EXTENSIONS] = {$/;"	m	namespace:android	file:
gExtensionString	opengl/libs/EGL/eglApi.cpp	/^extern char const * const gExtensionString  =$/;"	m	namespace:android	file:
gExtensionsString	opengl/libagl/egl.cpp	/^static char const * const gExtensionsString =$/;"	m	namespace:android	file:
gExtensionsString	opengl/libagl/state.cpp	/^static char const * const gExtensionsString =$/;"	m	namespace:android	file:
gExtentionMap	opengl/libagl/egl.cpp	/^static const extention_map_t gExtentionMap[] = {$/;"	m	namespace:android	file:
gFbo	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint gFbo;$/;"	v
gFragmentShader	opengl/tests/gl2_basic/gl2_basic.cpp	/^static const char gFragmentShader[] = "precision mediump float;\\n"$/;"	v	file:
gFragmentShader	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^static const char gFragmentShader[] = "precision mediump float;\\n"$/;"	v	file:
gFragmentShader	opengl/tests/gl2_jni/jni/gl_code.cpp	/^static const char gFragmentShader[] = "precision mediump float;\\n"$/;"	v	file:
gFragmentShader	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^static const char gFragmentShader[] = "#extension GL_OES_EGL_image_external : require\\n"$/;"	v	file:
gFragmentShader	opengl/tests/gldual/jni/gl_code.cpp	/^static const char gFragmentShader[] = "precision mediump float;\\n"$/;"	v	file:
gFragmentTestCount	opengl/tests/gl_perf/fragment_shaders.cpp	/^static const size_t gFragmentTestCount = sizeof(gFragmentTests) \/ sizeof(gFragmentTests[0]);$/;"	v	file:
gFragmentTests	opengl/tests/gl_perf/fragment_shaders.cpp	/^static FragmentTest *gFragmentTests[] = {$/;"	v	file:
gFreeBufferIndex	libs/binder/BufferedTextOutput.cpp	/^static volatile int32_t gFreeBufferIndex = -1;$/;"	m	namespace:android	file:
gGLKey	opengl/libagl/egl.cpp	/^pthread_key_t gGLKey = -1;$/;"	m	namespace:android::gl	file:
gGLTraceKey	opengl/libs/EGL/egl.cpp	/^EGLAPI pthread_key_t gGLTraceKey = -1;$/;"	m	namespace:android	file:
gGLWrapperKey	opengl/libs/EGL/egl.cpp	/^pthread_key_t gGLWrapperKey = -1;$/;"	m	namespace:android	file:
gGetPixelFormatTable	libs/ui/PixelFormat.cpp	/^static const Info* gGetPixelFormatTable(size_t* numEntries) {$/;"	f	namespace:android
gHaveTLS	libs/binder/IPCThreadState.cpp	/^static bool gHaveTLS = false;$/;"	m	namespace:android	file:
gHeapCache	libs/binder/IMemory.cpp	/^static sp<HeapCache> gHeapCache = new HeapCache();$/;"	m	namespace:android	file:
gHeight	opengl/tests/gl_perf/fill_common.cpp	/^static uint32_t gHeight = 0;$/;"	v	file:
gHooks	opengl/libs/EGL/egl.cpp	/^gl_hooks_t gHooks[2];$/;"	m	namespace:android	file:
gHooksDebug	opengl/libs/GLES_trace/src/gltrace_hooks.cpp	/^EGLAPI gl_hooks_t gHooksDebug = {$/;"	m	namespace:android::gltrace	file:
gHooksErrorTrace	opengl/libs/EGL/trace.cpp	/^EGLAPI gl_hooks_t gHooksErrorTrace = {$/;"	m	namespace:android	file:
gHooksNoContext	opengl/libs/EGL/egl.cpp	/^gl_hooks_t gHooksNoContext;$/;"	m	namespace:android	file:
gHooksSystrace	opengl/libs/EGL/trace.cpp	/^EGLAPI gl_hooks_t gHooksSystrace = {$/;"	m	namespace:android	file:
gHooksTrace	opengl/libs/EGL/trace.cpp	/^EGLAPI gl_hooks_t gHooksTrace = {$/;"	m	namespace:android	file:
gIPCStatics	libs/binder/Static.cpp	/^static LibBinderIPCtStatics gIPCStatics;$/;"	m	namespace:android	file:
gIdentityf	opengl/libagl/matrix.cpp	/^static const GLfloat gIdentityf[16] = { 1,0,0,0,$/;"	m	namespace:android	file:
gIdentityx	opengl/libagl/matrix.cpp	/^static const matrixx_t gIdentityx = { $/;"	m	namespace:android	file:
gInitMutex	opengl/libagl/egl.cpp	/^static pthread_mutex_t gInitMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:android	file:
gLogTextOutput	libs/binder/Static.cpp	/^static LogTextOutput gLogTextOutput;$/;"	m	namespace:android	file:
gMutex	libs/binder/BufferedTextOutput.cpp	/^static mutex_t          gMutex;$/;"	m	namespace:android	file:
gParcelGlobalAllocCount	libs/binder/Parcel.cpp	/^static size_t gParcelGlobalAllocCount = 0;$/;"	m	namespace:android	file:
gParcelGlobalAllocSize	libs/binder/Parcel.cpp	/^static size_t gParcelGlobalAllocSize = 0;$/;"	m	namespace:android	file:
gParcelGlobalAllocSizeLock	libs/binder/Parcel.cpp	/^static pthread_mutex_t gParcelGlobalAllocSizeLock = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:android	file:
gPermissionController	libs/binder/Static.cpp	/^sp<IPermissionController> gPermissionController;$/;"	m	namespace:android	file:
gProcess	libs/binder/Static.cpp	/^sp<ProcessState> gProcess;$/;"	m	namespace:android	file:
gProcessMutex	libs/binder/Static.cpp	/^Mutex gProcessMutex;$/;"	m	namespace:android	file:
gProgram	opengl/tests/gl2_basic/gl2_basic.cpp	/^GLuint gProgram;$/;"	v
gProgram	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint gProgram;$/;"	v
gProgram	opengl/tests/gl2_jni/jni/gl_code.cpp	/^GLuint gProgram;$/;"	v
gProgram	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^GLuint gProgram;$/;"	v
gProgram	opengl/tests/gldual/jni/gl_code.cpp	/^GLuint gProgram;$/;"	v
gRendererString	opengl/libagl/state.cpp	/^static char const * const gRendererString   = "Android PixelFlinger 1.4";$/;"	m	namespace:android	file:
gSequence	libs/binder/BufferedTextOutput.cpp	/^static volatile int32_t gSequence = 0;$/;"	m	namespace:android	file:
gShutdown	libs/binder/IPCThreadState.cpp	/^static bool gShutdown = false;$/;"	m	namespace:android	file:
gSimpleFS	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^static const char gSimpleFS[] =$/;"	v	file:
gSimpleVS	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^static const char gSimpleVS[] =$/;"	v	file:
gTLS	libs/binder/IPCThreadState.cpp	/^static pthread_key_t gTLS = 0;$/;"	m	namespace:android	file:
gTLSMutex	libs/binder/IPCThreadState.cpp	/^static pthread_mutex_t gTLSMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:android	file:
gTextBuffers	libs/binder/Static.cpp	/^Vector<int32_t> gTextBuffers;$/;"	m	namespace:android	file:
gTexture	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint gTexture;$/;"	v
gTextureProgram	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint gTextureProgram;$/;"	v
gTime	opengl/tests/gl_perf/fill_common.cpp	/^uint64_t gTime;$/;"	v
gToken	libs/binder/AppOpsManager.cpp	/^static sp<IBinder> gToken;$/;"	m	namespace:android	file:
gTokenMutex	libs/binder/AppOpsManager.cpp	/^static pthread_mutex_t gTokenMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:android	file:
gTriangleVertices	opengl/tests/gl2_basic/gl2_basic.cpp	/^const GLfloat gTriangleVertices[] = { 0.0f, 0.5f, -0.5f, -0.5f,$/;"	v
gTriangleVertices	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^const GLfloat gTriangleVertices[] = { 0.0f, 0.5f, -0.5f, -0.5f,$/;"	v
gTriangleVertices	opengl/tests/gl2_jni/jni/gl_code.cpp	/^const GLfloat gTriangleVertices[] = { 0.0f, 0.5f, -0.5f, -0.5f,$/;"	v
gTriangleVertices	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^const GLfloat gTriangleVertices[] = {$/;"	v
gTriangleVertices	opengl/tests/gldual/jni/gl_code.cpp	/^const GLfloat gTriangleVertices[] = { 0.0f, 0.5f, -0.5f, -0.5f,$/;"	v
gTriangleVerticesData	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^const GLfloat gTriangleVerticesData[] = {$/;"	v
gVendorString	opengl/libagl/egl.cpp	/^static char const * const gVendorString     = "Google Inc.";$/;"	m	namespace:android	file:
gVendorString	opengl/libagl/state.cpp	/^static char const * const gVendorString     = "Android";$/;"	m	namespace:android	file:
gVersionString	opengl/libagl/egl.cpp	/^static char const * const gVersionString    = "1.2 Android Driver 1.2.0";$/;"	m	namespace:android	file:
gVersionString	opengl/libagl/state.cpp	/^static char const * const gVersionString    = "OpenGL ES-CM 1.0";$/;"	m	namespace:android	file:
gVertexShader	opengl/tests/gl2_basic/gl2_basic.cpp	/^static const char gVertexShader[] = "attribute vec4 vPosition;\\n"$/;"	v	file:
gVertexShader	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^static const char gVertexShader[] = "attribute vec4 vPosition;\\n"$/;"	v	file:
gVertexShader	opengl/tests/gl2_jni/jni/gl_code.cpp	/^static const char gVertexShader[] = "attribute vec4 vPosition;\\n"$/;"	v	file:
gVertexShader	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^static const char gVertexShader[] = "attribute vec4 vPosition;\\n"$/;"	v	file:
gVertexShader	opengl/tests/gl_perf/fill_common.cpp	/^static const char gVertexShader[] =$/;"	v	file:
gVertexShader	opengl/tests/gldual/jni/gl_code.cpp	/^static const char gVertexShader[] = "attribute vec4 vPosition;\\n"$/;"	v	file:
gWidth	opengl/tests/gl_perf/fill_common.cpp	/^static uint32_t gWidth = 0;$/;"	v	file:
gYuvTexSamplerHandle	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^GLint gYuvTexSamplerHandle;$/;"	v
g_BenchmarkNameLen	cmds/flatland/Main.cpp	/^static size_t   g_BenchmarkNameLen      = 0;$/;"	v	file:
g_PresentToWindow	cmds/flatland/Main.cpp	/^static bool     g_PresentToWindow       = false;$/;"	v	file:
g_SleepBetweenSamplesMs	cmds/flatland/Main.cpp	/^static uint32_t g_SleepBetweenSamplesMs = 0;$/;"	v	file:
g_bitfieldNames	opengl/libs/EGL/trace.cpp	/^static GLenumString g_bitfieldNames[] = {$/;"	m	namespace:android	file:
g_categoryEnables	cmds/atrace/atrace.cpp	/^static bool g_categoryEnables[NELEM(k_categories)] = {};$/;"	v	file:
g_colorIndex	cmds/flatland/Renderers.cpp	/^static size_t g_colorIndex;$/;"	m	namespace:android	file:
g_compress	cmds/atrace/atrace.cpp	/^static bool g_compress = false;$/;"	v	file:
g_debugAppCmdLine	cmds/atrace/atrace.cpp	/^static const char* g_debugAppCmdLine = "";$/;"	v	file:
g_enumnames	opengl/libs/EGL/trace.cpp	/^static GLenumString g_enumnames[] = {$/;"	m	namespace:android	file:
g_initialSleepSecs	cmds/atrace/atrace.cpp	/^static int g_initialSleepSecs = 0;$/;"	v	file:
g_kernelTraceFuncs	cmds/atrace/atrace.cpp	/^static const char* g_kernelTraceFuncs = NULL;$/;"	v	file:
g_nohup	cmds/atrace/atrace.cpp	/^static bool g_nohup = false;$/;"	v	file:
g_traceAborted	cmds/atrace/atrace.cpp	/^static bool g_traceAborted = false;$/;"	v	file:
g_traceBufferSizeKB	cmds/atrace/atrace.cpp	/^static int g_traceBufferSizeKB = 2048;$/;"	v	file:
g_traceDurationSeconds	cmds/atrace/atrace.cpp	/^static int g_traceDurationSeconds = 5;$/;"	v	file:
g_traceOverwrite	cmds/atrace/atrace.cpp	/^static bool g_traceOverwrite = false;$/;"	v	file:
gatherCallbackInvocationsLocked	services/surfaceflinger/DispSync.cpp	/^    Vector<CallbackInvocation> gatherCallbackInvocationsLocked(nsecs_t now) {$/;"	f	class:android::DispSyncThread	file:
genCmd	opengl/tools/glgen2/glgen.py	/^    def genCmd(self, cmd, name):$/;"	m	class:ApiGenerator
genCmd	opengl/tools/glgen2/glgen.py	/^    def genCmd(self, cmd, name):$/;"	m	class:SpecGenerator
genCmd	opengl/tools/glgen2/glgen.py	/^    def genCmd(self, cmd, name):$/;"	m	class:TrampolineGen
genCmd	opengl/tools/glgen2/registry/reg.py	/^    def genCmd(self, cmd, name):$/;"	m	class:OutputGenerator
genCmd	opengl/tools/glgen2/registry/reg.py	/^    def genCmd(self, cmdinfo, name):$/;"	m	class:COutputGenerator
genCode	opengl/libs/GLES_trace/tools/genapi.py	/^    def genCode(self):$/;"	m	class:ApiCall
genColor	cmds/flatland/Renderers.cpp	/^const float* genColor() {$/;"	f	namespace:android
genDateCommentString	opengl/tools/glgen2/registry/genheaders.py	/^genDateCommentString = [$/;"	v
genDeclaration	opengl/libs/GLES_trace/tools/genapi.py	/^    def genDeclaration(self):$/;"	m	class:ApiCall
genEnum	opengl/tools/glgen2/glgen.py	/^    def genEnum(self, enuminfo, name):$/;"	m	class:ApiGenerator
genEnum	opengl/tools/glgen2/registry/reg.py	/^    def genEnum(self, enuminfo, name):$/;"	m	class:COutputGenerator
genEnum	opengl/tools/glgen2/registry/reg.py	/^    def genEnum(self, enuminfo, name):$/;"	m	class:OutputGenerator
genHeaders	opengl/libs/GLES_trace/tools/genapi.py	/^def genHeaders(apis, fname):$/;"	f
genHeaders	opengl/tools/glgen2/registry/genheaders.py	/^def genHeaders():$/;"	f
genSrcs	opengl/libs/GLES_trace/tools/genapi.py	/^def genSrcs(apis, fname):$/;"	f
genTextures	opengl/tests/gl_perf/fill_common.cpp	/^void genTextures() {$/;"	f
genTextures	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::genTextures(size_t count, uint32_t* names) {$/;"	f	class:android::RenderEngine
genType	opengl/tools/glgen2/registry/reg.py	/^    def genType(self, typeinfo, name):$/;"	m	class:COutputGenerator
genType	opengl/tools/glgen2/registry/reg.py	/^    def genType(self, typeinfo, name):$/;"	m	class:OutputGenerator
generateDescriptor	services/inputflinger/EventHub.cpp	/^static String8 generateDescriptor(InputDeviceIdentifier& identifier) {$/;"	f	namespace:android
generateFeature	opengl/tools/glgen2/registry/reg.py	/^    def generateFeature(self, fname, ftype, dictionary, genProc):$/;"	m	class:Registry
generateFragmentShader	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^String8 ProgramCache::generateFragmentShader(const Key& needs) {$/;"	f	class:android::ProgramCache
generateMipmap	opengl/libagl/texture.cpp	/^void generateMipmap(ogles_context_t* c, GLint level)$/;"	f	namespace:android
generateProgram	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^Program* ProgramCache::generateProgram(const Key& needs) {$/;"	f	class:android::ProgramCache
generateRequiredInterface	opengl/tools/glgen2/registry/reg.py	/^    def generateRequiredInterface(self, interface):$/;"	m	class:Registry
generateVertexShader	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^String8 ProgramCache::generateVertexShader(const Key& needs) {$/;"	f	class:android::ProgramCache
generate_mipmap	opengl/libagl/TextureObjectManager.h	/^    GLint               generate_mipmap;$/;"	m	class:android::EGLTextureObject
gestureMode	services/inputflinger/InputReader.h	/^        GestureMode gestureMode;$/;"	m	struct:android::TouchInputMapper::Parameters
get	include/ui/GraphicBufferAllocator.h	/^    static inline GraphicBufferAllocator& get() { return getInstance(); }$/;"	f	class:android::GraphicBufferAllocator
get	include/ui/GraphicBufferMapper.h	/^    static inline GraphicBufferMapper& get() { return getInstance(); }$/;"	f	class:android::GraphicBufferMapper
get	opengl/libagl/context.h	/^    static inline ogles_context_t* get() {$/;"	f	struct:android::gl::ogles_context_t
get	opengl/libs/EGL/egl_cache.cpp	/^egl_cache_t* egl_cache_t::get() {$/;"	f	class:android::egl_cache_t
get	opengl/libs/EGL/egl_display.cpp	/^egl_display_t* egl_display_t::get(EGLDisplay dpy) {$/;"	f	class:android::egl_display_t
get	opengl/libs/EGL/egl_display.h	/^          egl_display_t* get()       { return mDpy; }$/;"	f	class:android::egl_display_ptr
get	opengl/libs/EGL/egl_display.h	/^    const egl_display_t* get() const { return mDpy; }$/;"	f	class:android::egl_display_ptr
get	opengl/libs/EGL/egl_object.cpp	/^bool egl_object_t::get(egl_display_t const* display, egl_object_t* object) {$/;"	f	class:android::egl_object_t
get	opengl/libs/EGL/egl_object.h	/^        inline N* get() {$/;"	f	class:android::egl_object_t::LocalRef
get	opengl/tools/glgen/stubs/gles11/common.cpp	/^get$/;"	f	file:
get	services/surfaceflinger/FrameRateHelper.h	/^    unsigned int get() const {$/;"	f	class:android::FrameRateHelper
getAbsAxisUsage	services/inputflinger/EventHub.cpp	/^uint32_t getAbsAxisUsage(int32_t axis, uint32_t deviceClasses) {$/;"	f	namespace:android
getAbsoluteAxisInfo	services/inputflinger/EventHub.cpp	/^status_t EventHub::getAbsoluteAxisInfo(int32_t deviceId, int axis,$/;"	f	class:android::EventHub
getAbsoluteAxisInfo	services/inputflinger/InputReader.cpp	/^status_t InputMapper::getAbsoluteAxisInfo(int32_t axis, RawAbsoluteAxisInfo* axisInfo) {$/;"	f	class:android::InputMapper
getAbsoluteAxisInfo	services/inputflinger/tests/InputReader_test.cpp	/^    virtual status_t getAbsoluteAxisInfo(int32_t deviceId, int axis,$/;"	f	class:android::FakeEventHub	file:
getAbsoluteAxisValue	services/inputflinger/EventHub.cpp	/^status_t EventHub::getAbsoluteAxisValue(int32_t deviceId, int32_t axis, int32_t* outValue) const {$/;"	f	class:android::EventHub
getAbsoluteAxisValue	services/inputflinger/InputReader.h	/^    int32_t getAbsoluteAxisValue(int32_t code) {$/;"	f	class:android::InputDevice
getAbsoluteAxisValue	services/inputflinger/tests/InputReader_test.cpp	/^    virtual status_t getAbsoluteAxisValue(int32_t deviceId, int32_t axis,$/;"	f	class:android::FakeEventHub	file:
getAbsoluteDistance	services/inputflinger/InputReader.h	/^    inline int32_t getAbsoluteDistance() const { return mAbsDistance; }$/;"	f	class:android::SingleTouchMotionAccumulator
getAbsolutePressure	services/inputflinger/InputReader.h	/^    inline int32_t getAbsolutePressure() const { return mAbsPressure; }$/;"	f	class:android::SingleTouchMotionAccumulator
getAbsoluteTiltX	services/inputflinger/InputReader.h	/^    inline int32_t getAbsoluteTiltX() const { return mAbsTiltX; }$/;"	f	class:android::SingleTouchMotionAccumulator
getAbsoluteTiltY	services/inputflinger/InputReader.h	/^    inline int32_t getAbsoluteTiltY() const { return mAbsTiltY; }$/;"	f	class:android::SingleTouchMotionAccumulator
getAbsoluteToolWidth	services/inputflinger/InputReader.h	/^    inline int32_t getAbsoluteToolWidth() const { return mAbsToolWidth; }$/;"	f	class:android::SingleTouchMotionAccumulator
getAbsoluteX	services/inputflinger/InputReader.h	/^    inline int32_t getAbsoluteX() const { return mAbsX; }$/;"	f	class:android::SingleTouchMotionAccumulator
getAbsoluteY	services/inputflinger/InputReader.h	/^    inline int32_t getAbsoluteY() const { return mAbsY; }$/;"	f	class:android::SingleTouchMotionAccumulator
getAction	include/input/Input.h	/^    inline int32_t getAction() const { return mAction; }$/;"	f	class:android::KeyEvent
getAction	include/input/Input.h	/^    inline int32_t getAction() const { return mAction; }$/;"	f	class:android::MotionEvent
getActionId	include/input/InputTransport.h	/^            int32_t getActionId() const {$/;"	f	struct:android::InputMessage::Body::Motion
getActionIndex	include/input/Input.h	/^    inline int32_t getActionIndex() const {$/;"	f	class:android::MotionEvent
getActionMasked	include/input/Input.h	/^    inline int32_t getActionMasked() const { return mAction & AMOTION_EVENT_ACTION_MASK; }$/;"	f	class:android::MotionEvent
getActiveBuffer	services/surfaceflinger/Layer.h	/^    inline const sp<GraphicBuffer>& getActiveBuffer() const { return mActiveBuffer; }$/;"	f	class:android::Layer
getActiveConfig	libs/gui/ISurfaceComposer.cpp	/^    virtual int getActiveConfig(const sp<IBinder>& display)$/;"	f	class:android::BpSurfaceComposer
getActiveConfig	libs/gui/SurfaceComposerClient.cpp	/^int SurfaceComposerClient::getActiveConfig(const sp<IBinder>& display) {$/;"	f	class:android::SurfaceComposerClient
getActiveConfig	services/surfaceflinger/DisplayDevice.cpp	/^int DisplayDevice::getActiveConfig()  const {$/;"	f	class:DisplayDevice
getActiveConfig	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^int HWComposer::getActiveConfig(int disp) const {$/;"	f	class:android::HWComposer
getActiveConfig	services/surfaceflinger/SurfaceFlinger.cpp	/^int SurfaceFlinger::getActiveConfig(const sp<IBinder>& display) {$/;"	f	class:android::SurfaceFlinger
getActivePointerId	include/input/VelocityTracker.h	/^    inline int32_t getActivePointerId() const { return mActivePointerId; }$/;"	f	class:android::VelocityTracker
getAlias	include/input/InputDevice.h	/^    inline const String8& getAlias() const { return mAlias; }$/;"	f	class:android::InputDeviceInfo
getAllocCount	libs/gui/tests/StreamSplitter_test.cpp	/^    int getAllocCount() const { return mAllocCount; }$/;"	f	class:android::CountedAllocator
getAndBindActiveTextureObject	opengl/libagl/texture.cpp	/^sp<EGLTextureObject> getAndBindActiveTextureObject(ogles_context_t* c)$/;"	f	namespace:android
getAndExecuteCommand	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::getAndExecuteCommand()$/;"	f	class:android::IPCThreadState
getAndResetReleaseFence	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual sp<Fence> getAndResetReleaseFence() {$/;"	f	class:android::HWCLayerVersion1
getAndResetReleaseFence	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^sp<Fence> HWComposer::getAndResetReleaseFence(int32_t id) {$/;"	f	class:android::HWComposer
getAnimationFrameStats	libs/gui/ISurfaceComposer.cpp	/^    virtual status_t getAnimationFrameStats(FrameStats* outStats) const {$/;"	f	class:android::BpSurfaceComposer
getAnimationFrameStats	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::getAnimationFrameStats(FrameStats* outStats) {$/;"	f	class:android::SurfaceComposerClient
getAnimationFrameStats	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::getAnimationFrameStats(FrameStats* outStats) const {$/;"	f	class:android::SurfaceFlinger
getApis	opengl/libs/GLES_trace/tools/genapi.py	/^def getApis(apiEntryFile, prefix):$/;"	f
getApplicationWindowLabelLocked	services/inputflinger/InputDispatcher.cpp	/^String8 InputDispatcher::getApplicationWindowLabelLocked($/;"	f	class:android::InputDispatcher
getArgCIndex	opengl/tools/glgen/src/JFunc.java	/^    public int getArgCIndex(int index) {$/;"	m	class:JFunc
getArgIndex	opengl/tools/glgen/src/CFunc.java	/^    public int getArgIndex(String name) {$/;"	m	class:CFunc
getArgIndex	opengl/tools/glgen/src/JFunc.java	/^    public int getArgIndex(String name) {$/;"	m	class:JFunc
getArgList	opengl/libs/GLES_trace/tools/genapi.py	/^    def getArgList(self, apientry):$/;"	m	class:ApiCall
getArgName	opengl/tools/glgen/src/CFunc.java	/^    public String getArgName(int index) {$/;"	m	class:CFunc
getArgName	opengl/tools/glgen/src/JFunc.java	/^    public String getArgName(int index) {$/;"	m	class:JFunc
getArgType	opengl/tools/glgen/src/CFunc.java	/^    public CType getArgType(int index) {$/;"	m	class:CFunc
getArgType	opengl/tools/glgen/src/JFunc.java	/^    public JType getArgType(int index) {$/;"	m	class:JFunc
getArray	libs/ui/Region.cpp	/^Rect const* Region::getArray(size_t* count) const {$/;"	f	class:android::Region
getAspectRatio	services/surfaceflinger/Layer.cpp	/^static Rect getAspectRatio(const sp<const DisplayDevice>& hw,$/;"	f	namespace:android
getAttitude	services/sensorservice/Fusion.cpp	/^vec4_t Fusion::getAttitude() const {$/;"	f	class:android::Fusion
getAttitude	services/sensorservice/SensorFusion.h	/^    vec4_t getAttitude() const { return mAttitude; }$/;"	f	class:android::SensorFusion
getAttrib	services/surfaceflinger/RenderEngine/Program.cpp	/^GLuint Program::getAttrib(const char* name) const {$/;"	f	class:android::Program
getAxisByLabel	include/input/InputEventLabels.h	/^static int32_t getAxisByLabel(const char* label) {$/;"	f	namespace:android
getAxisFromLabel	libs/input/Input.cpp	/^int32_t MotionEvent::getAxisFromLabel(const char* label) {$/;"	f	class:android::MotionEvent
getAxisLabel	include/input/InputEventLabels.h	/^static const char* getAxisLabel(int32_t axisId) {$/;"	f	namespace:android
getAxisValue	libs/input/Input.cpp	/^float MotionEvent::getAxisValue(int32_t axis, size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getAxisValue	libs/input/Input.cpp	/^float PointerCoords::getAxisValue(int32_t axis) const {$/;"	f	class:android::PointerCoords
getBase	libs/binder/IMemory.cpp	/^void* BpMemoryHeap::getBase() const {$/;"	f	class:android::BpMemoryHeap
getBase	libs/binder/MemoryHeapBase.cpp	/^void* MemoryHeapBase::getBase() const {$/;"	f	class:android::MemoryHeapBase
getBaseArrayID	opengl/tools/glgen/stubs/gles11/common.cpp	/^static jmethodID getBaseArrayID;$/;"	v	file:
getBaseArrayID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jmethodID getBaseArrayID;$/;"	v	file:
getBaseArrayOffsetID	opengl/tools/glgen/stubs/gles11/common.cpp	/^static jmethodID getBaseArrayOffsetID;$/;"	v	file:
getBaseArrayOffsetID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jmethodID getBaseArrayOffsetID;$/;"	v	file:
getBasePointerID	opengl/tools/glgen/stubs/gles11/common.cpp	/^static jmethodID getBasePointerID;$/;"	v	file:
getBasePointerID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jmethodID getBasePointerID;$/;"	v	file:
getBaseType	opengl/tools/glgen/src/CType.java	/^    public String getBaseType() {$/;"	m	class:CType
getBaseType	opengl/tools/glgen/src/JType.java	/^    public String getBaseType() {$/;"	m	class:JType
getBias	services/sensorservice/Fusion.cpp	/^vec3_t Fusion::getBias() const {$/;"	f	class:android::Fusion
getBlob	opengl/libs/EGL/egl_cache.cpp	/^EGLsizeiANDROID egl_cache_t::getBlob(const void* key, EGLsizeiANDROID keySize,$/;"	f	class:android::egl_cache_t
getBlob	opengl/libs/EGL/egl_cache.cpp	/^static EGLsizeiANDROID getBlob(const void* key, EGLsizeiANDROID keySize,$/;"	f	namespace:android
getBlobCacheLocked	opengl/libs/EGL/egl_cache.cpp	/^sp<BlobCache> egl_cache_t::getBlobCacheLocked() {$/;"	f	class:android::egl_cache_t
getBounds	include/ui/GraphicBuffer.h	/^    Rect getBounds() const              { return Rect(width, height); }$/;"	f	class:android::GraphicBuffer
getBounds	include/ui/Rect.h	/^    inline Rect getBounds() const {$/;"	f	class:android::Rect
getBounds	include/ui/Region.h	/^    inline  Rect        getBounds() const   { return mStorage[mStorage.size() - 1]; }$/;"	f	class:android::Region
getBounds	services/inputflinger/tests/InputReader_test.cpp	/^    virtual bool getBounds(float* outMinX, float* outMinY, float* outMaxX, float* outMaxY) const {$/;"	f	class:android::FakePointerController	file:
getBounds	services/surfaceflinger/DisplayDevice.h	/^    Rect getBounds() const {$/;"	f	class:android::DisplayDevice
getBuffer	include/gui/StreamSplitter.h	/^        const sp<GraphicBuffer>& getBuffer() const { return mBuffer; }$/;"	f	class:android::StreamSplitter::BufferTracker
getBuffer	libs/binder/BufferedTextOutput.cpp	/^BufferedTextOutput::BufferState* BufferedTextOutput::getBuffer() const$/;"	f	class:android::BufferedTextOutput
getBuffer	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^GLvoid *ElementArrayBuffer::getBuffer() {$/;"	f	class:android::gltrace::ElementArrayBuffer
getBuffer	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceContext::getBuffer(GLuint bufferId, GLvoid **data, GLsizeiptr *size) {$/;"	f	class:android::gltrace::GLTraceContext
getBufferArgName	opengl/tools/glgen/src/JFunc.java	/^    public String getBufferArgName(int index) {$/;"	m	class:JFunc
getBufferMapper	include/ui/GraphicBuffer.h	/^    inline GraphicBufferMapper& getBufferMapper() {$/;"	f	class:android::GraphicBuffer
getBufferMapper	include/ui/GraphicBuffer.h	/^    inline const GraphicBufferMapper& getBufferMapper() const {$/;"	f	class:android::GraphicBuffer
getBuiltInDisplay	libs/gui/ISurfaceComposer.cpp	/^    virtual sp<IBinder> getBuiltInDisplay(int32_t id)$/;"	f	class:android::BpSurfaceComposer
getBuiltInDisplay	libs/gui/SurfaceComposerClient.cpp	/^sp<IBinder> Composer::getBuiltInDisplay(int32_t id) {$/;"	f	class:android::Composer
getBuiltInDisplay	libs/gui/SurfaceComposerClient.cpp	/^sp<IBinder> SurfaceComposerClient::getBuiltInDisplay(int32_t id) {$/;"	f	class:android::SurfaceComposerClient
getBuiltInDisplay	services/surfaceflinger/SurfaceFlinger.cpp	/^sp<IBinder> SurfaceFlinger::getBuiltInDisplay(int32_t id) {$/;"	f	class:android::SurfaceFlinger
getButtonState	include/input/Input.h	/^    inline int32_t getButtonState() const { return mButtonState; }$/;"	f	class:android::MotionEvent
getButtonState	services/inputflinger/InputReader.cpp	/^uint32_t CursorButtonAccumulator::getButtonState() const {$/;"	f	class:android::CursorButtonAccumulator
getButtonState	services/inputflinger/InputReader.cpp	/^uint32_t TouchButtonAccumulator::getButtonState() const {$/;"	f	class:android::TouchButtonAccumulator
getButtonState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t getButtonState() const {$/;"	f	class:android::FakePointerController
getByteStride	services/surfaceflinger/RenderEngine/Mesh.cpp	/^size_t Mesh::getByteStride() const {$/;"	f	class:android::Mesh
getBytesPerTexel	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^unsigned getBytesPerTexel(const GLenum format, const GLenum type) {$/;"	f	namespace:android::gltrace
getCFunc	opengl/tools/glgen/src/JFunc.java	/^    public CFunc getCFunc() {$/;"	m	class:JFunc
getCallSite	opengl/libs/GLES_trace/tools/genapi.py	/^    def getCallSite(self, callsite):$/;"	m	class:ApiCall
getCallingPid	libs/binder/IPCThreadState.cpp	/^int IPCThreadState::getCallingPid() const$/;"	f	class:android::IPCThreadState
getCallingUid	libs/binder/IPCThreadState.cpp	/^int IPCThreadState::getCallingUid() const$/;"	f	class:android::IPCThreadState
getCaps	include/media/hardware/HDCPAPI.h	/^    virtual uint32_t getCaps() {$/;"	f	struct:android::HDCPModule
getCentroidOfTouchingPointers	services/inputflinger/InputReader.cpp	/^void RawPointerData::getCentroidOfTouchingPointers(float* outX, float* outY) const {$/;"	f	class:android::RawPointerData
getChannel	include/input/InputTransport.h	/^    inline sp<InputChannel> getChannel() { return mChannel; }$/;"	f	class:android::InputConsumer
getChannel	include/input/InputTransport.h	/^    inline sp<InputChannel> getChannel() { return mChannel; }$/;"	f	class:android::InputPublisher
getCharacter	libs/input/KeyCharacterMap.cpp	/^char16_t KeyCharacterMap::getCharacter(int32_t keyCode, int32_t metaState) const {$/;"	f	class:android::KeyCharacterMap
getChecks	opengl/tools/glgen/src/ParameterChecker.java	/^    public String[] getChecks(String functionName) {$/;"	m	class:ParameterChecker
getClassName	opengl/tools/glgen/src/JFunc.java	/^    public String getClassName() {$/;"	m	class:JFunc
getClasses	services/inputflinger/InputReader.h	/^    inline uint32_t getClasses() const { return mClasses; }$/;"	f	class:android::InputDevice
getClientApiString	opengl/libs/EGL/egl_display.h	/^    char const * getClientApiString() const { return mClientApiString.string(); }$/;"	f	class:android::egl_display_t
getColorMatrix	services/surfaceflinger/RenderEngine/Description.cpp	/^const mat4& Description::getColorMatrix() const {$/;"	f	class:android::Description
getCommandString	libs/binder/IPCThreadState.cpp	/^static const char* getCommandString(size_t idx)$/;"	f	namespace:android
getCompatAxis	services/inputflinger/InputReader.cpp	/^int32_t JoystickInputMapper::getCompatAxis(int32_t axis) {$/;"	f	class:android::JoystickInputMapper
getComposer	libs/gui/SurfaceComposerClient.cpp	/^inline Composer& SurfaceComposerClient::getComposer() {$/;"	f	class:android::SurfaceComposerClient
getComposerService	libs/gui/SurfaceComposerClient.cpp	/^\/*static*\/ sp<ISurfaceComposer> ComposerService::getComposerService() {$/;"	f	class:android::ComposerService
getCompositionType	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual int32_t getCompositionType() const {$/;"	f	class:android::HWCLayerVersion1
getCompressedFB	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceContext::getCompressedFB(void **fb, unsigned *fbsize, unsigned *fbwidth, $/;"	f	class:android::gltrace::GLTraceContext
getConfigAttrib	opengl/libagl/egl.cpp	/^static EGLBoolean getConfigAttrib(EGLDisplay \/*dpy*\/, EGLConfig config,$/;"	f	namespace:android
getConfigAttribs	libs/gui/tests/GLTest.cpp	/^EGLint const* GLTest::getConfigAttribs() {$/;"	f	class:android::GLTest
getConfigAttribs	libs/gui/tests/MultiTextureConsumer_test.cpp	/^    virtual EGLint const* getConfigAttribs() {$/;"	f	class:android::MultiTextureConsumerTest
getConfigAttribs	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    virtual EGLint const* getConfigAttribs() {$/;"	f	class:android::SurfaceTextureClientTest
getConfigFormatInfo	opengl/libagl/egl.cpp	/^static status_t getConfigFormatInfo(EGLint configID,$/;"	f	namespace:android
getConfigSpec	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    public int[] getConfigSpec() {$/;"	m	class:ClearRenderer
getConfigs	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^const Vector<HWComposer::DisplayConfig>& HWComposer::getConfigs(int disp) const {$/;"	f	class:android::HWComposer
getConfiguration	services/inputflinger/EventHub.cpp	/^void EventHub::getConfiguration(int32_t deviceId, PropertyMap* outConfiguration) const {$/;"	f	class:android::EventHub
getConfiguration	services/inputflinger/InputReader.h	/^    inline const PropertyMap& getConfiguration() { return mConfiguration; }$/;"	f	class:android::InputDevice
getConfiguration	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void getConfiguration(int32_t deviceId, PropertyMap* outConfiguration) const {$/;"	f	class:android::FakeEventHub	file:
getConnectionIndexLocked	services/inputflinger/InputDispatcher.cpp	/^ssize_t InputDispatcher::getConnectionIndexLocked(const sp<InputChannel>& inputChannel) {$/;"	f	class:android::InputDispatcher
getContentCrop	services/surfaceflinger/Layer.cpp	/^Rect Layer::getContentCrop() const {$/;"	f	class:android::Layer
getContext	opengl/libs/EGL/eglApi.cpp	/^static inline EGLContext getContext() { return egl_tls_t::getContext(); }$/;"	f	file:
getContext	opengl/libs/EGL/egl_tls.cpp	/^EGLContext egl_tls_t::getContext() {$/;"	f	class:android::egl_tls_t
getContext	services/inputflinger/InputReader.h	/^    inline InputReaderContext* getContext() { return mContext; }$/;"	f	class:android::InputDevice
getContext	services/inputflinger/InputReader.h	/^    inline InputReaderContext* getContext() { return mContext; }$/;"	f	class:android::InputMapper
getContextAttribs	libs/gui/tests/GLTest.cpp	/^EGLint const* GLTest::getContextAttribs() {$/;"	f	class:android::GLTest
getContextAttribs	libs/gui/tests/MultiTextureConsumer_test.cpp	/^    virtual EGLint const* getContextAttribs() {$/;"	f	class:android::MultiTextureConsumerTest
getContextObject	libs/binder/ProcessState.cpp	/^sp<IBinder> ProcessState::getContextObject(const String16& name, const sp<IBinder>& caller)$/;"	f	class:android::ProcessState
getContextObject	libs/binder/ProcessState.cpp	/^sp<IBinder> ProcessState::getContextObject(const sp<IBinder>& \/*caller*\/)$/;"	f	class:android::ProcessState
getControllerNumber	include/input/InputDevice.h	/^    inline int32_t getControllerNumber() const { return mControllerNumber; }$/;"	f	class:android::InputDeviceInfo
getControllerNumber	services/inputflinger/InputReader.h	/^    inline int32_t getControllerNumber() const { return mControllerNumber; }$/;"	f	class:android::InputDevice
getCount	services/sensorservice/Fusion.cpp	/^    size_t getCount() const {$/;"	f	class:android::Covariance
getCpuConsumer	libs/gui/SurfaceComposerClient.cpp	/^sp<CpuConsumer> ScreenshotClient::getCpuConsumer() const {$/;"	f	class:android::ScreenshotClient
getCurrentBuffer	libs/gui/GLConsumer.cpp	/^sp<GraphicBuffer> GLConsumer::getCurrentBuffer() const {$/;"	f	class:android::GLConsumer
getCurrentBufferIndex	libs/ui/FramebufferNativeWindow.cpp	/^int FramebufferNativeWindow::getCurrentBufferIndex() const$/;"	f	class:android::FramebufferNativeWindow
getCurrentConfig	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^size_t HWComposer::getCurrentConfig(int disp) const {$/;"	f	class:android::HWComposer
getCurrentCrop	libs/gui/GLConsumer.cpp	/^Rect GLConsumer::getCurrentCrop() const {$/;"	f	class:android::GLConsumer
getCurrentDirtyRect	libs/gui/GLConsumer.cpp	/^Rect GLConsumer::getCurrentDirtyRect() const {$/;"	f	class:android::GLConsumer
getCurrentFence	libs/gui/GLConsumer.cpp	/^sp<Fence> GLConsumer::getCurrentFence() const {$/;"	f	class:android::GLConsumer
getCurrentPointerIdBits	include/input/VelocityTracker.h	/^    inline BitSet32 getCurrentPointerIdBits() const { return mCurrentPointerIdBits; }$/;"	f	class:android::VelocityTracker
getCurrentScalingMode	libs/gui/GLConsumer.cpp	/^uint32_t GLConsumer::getCurrentScalingMode() const {$/;"	f	class:android::GLConsumer
getCurrentState	services/surfaceflinger/Layer.h	/^    inline  State&          getCurrentState()       { return mCurrentState; }$/;"	f	class:android::Layer
getCurrentState	services/surfaceflinger/Layer.h	/^    inline  const State&    getCurrentState() const { return mCurrentState; }$/;"	f	class:android::Layer
getCurrentTextureTarget	libs/gui/GLConsumer.cpp	/^uint32_t GLConsumer::getCurrentTextureTarget() const {$/;"	f	class:android::GLConsumer
getCurrentTransform	libs/gui/GLConsumer.cpp	/^uint32_t GLConsumer::getCurrentTransform() const {$/;"	f	class:android::GLConsumer
getDataChannel	libs/gui/IDisplayEventConnection.cpp	/^    virtual sp<BitTube> getDataChannel() const$/;"	f	class:android::BpDisplayEventConnection
getDataChannel	services/surfaceflinger/EventThread.cpp	/^sp<BitTube> EventThread::Connection::getDataChannel() const {$/;"	f	class:android::EventThread::Connection
getDataTypeFromKw	opengl/libs/GLES_trace/tools/genapi.py	/^def getDataTypeFromKw(kw):$/;"	f
getDebugTexImageBuffer	libs/gui/GLConsumer.cpp	/^sp<GraphicBuffer> GLConsumer::getDebugTexImageBuffer() {$/;"	f	class:android::GLConsumer
getDeclaration	opengl/tools/glgen/src/CType.java	/^    public String getDeclaration() {$/;"	m	class:CType
getDecoderOutputFormat	include/media/editor/II420ColorConverter.h	/^    int (*getDecoderOutputFormat)();$/;"	m	struct:II420ColorConverter
getDefaultDensity	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^static float getDefaultDensity(uint32_t width, uint32_t height) {$/;"	f	namespace:android
getDefaultDisplayDevice	services/surfaceflinger/SurfaceFlinger.h	/^    sp<const DisplayDevice> getDefaultDisplayDevice() const {$/;"	f	class:android::SurfaceFlinger
getDefaultSensor	libs/gui/SensorManager.cpp	/^Sensor const* SensorManager::getDefaultSensor(int type)$/;"	f	class:android::SensorManager
getDescriptor	services/inputflinger/InputReader.h	/^    inline const String8& getDescriptor() { return mIdentifier.descriptor; }$/;"	f	class:android::InputDevice
getDevice	include/ui/FramebufferNativeWindow.h	/^    framebuffer_device_t const * getDevice() const { return fbDev; } $/;"	f	class:android::FramebufferNativeWindow
getDevice	libs/binder/MemoryHeapBase.cpp	/^const char* MemoryHeapBase::getDevice() const {$/;"	f	class:android::MemoryHeapBase
getDevice	services/inputflinger/InputReader.h	/^    inline InputDevice* getDevice() { return mDevice; }$/;"	f	class:android::InputMapper
getDevice	services/inputflinger/tests/InputReader_test.cpp	/^    Device* getDevice(int32_t deviceId) const {$/;"	f	class:android::FakeEventHub	file:
getDeviceAlias	services/inputflinger/tests/InputReader_test.cpp	/^    virtual String8 getDeviceAlias(const InputDeviceIdentifier& identifier) {$/;"	f	class:android::FakeInputReaderPolicy	file:
getDeviceByDescriptorLocked	services/inputflinger/EventHub.cpp	/^EventHub::Device* EventHub::getDeviceByDescriptorLocked(String8& descriptor) const {$/;"	f	class:android::EventHub
getDeviceByPathLocked	services/inputflinger/EventHub.cpp	/^EventHub::Device* EventHub::getDeviceByPathLocked(const char* devicePath) const {$/;"	f	class:android::EventHub
getDeviceClasses	services/inputflinger/EventHub.cpp	/^uint32_t EventHub::getDeviceClasses(int32_t deviceId) const {$/;"	f	class:android::EventHub
getDeviceClasses	services/inputflinger/tests/InputReader_test.cpp	/^    virtual uint32_t getDeviceClasses(int32_t deviceId) const {$/;"	f	class:android::FakeEventHub	file:
getDeviceControllerNumber	services/inputflinger/EventHub.cpp	/^int32_t EventHub::getDeviceControllerNumber(int32_t deviceId) const {$/;"	f	class:android::EventHub
getDeviceControllerNumber	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t getDeviceControllerNumber(int32_t deviceId) const {$/;"	f	class:android::FakeEventHub	file:
getDeviceId	include/input/Input.h	/^    inline int32_t getDeviceId() const { return mDeviceId; }$/;"	f	class:android::InputEvent
getDeviceId	services/inputflinger/InputReader.h	/^    inline int32_t getDeviceId() { return mDevice->getId(); }$/;"	f	class:android::InputMapper
getDeviceIdentifier	services/inputflinger/EventHub.cpp	/^InputDeviceIdentifier EventHub::getDeviceIdentifier(int32_t deviceId) const {$/;"	f	class:android::EventHub
getDeviceIdentifier	services/inputflinger/tests/InputReader_test.cpp	/^    virtual InputDeviceIdentifier getDeviceIdentifier(int32_t deviceId) const {$/;"	f	class:android::FakeEventHub	file:
getDeviceInfo	services/inputflinger/InputReader.cpp	/^void InputDevice::getDeviceInfo(InputDeviceInfo* outDeviceInfo) {$/;"	f	class:android::InputDevice
getDeviceLocked	services/inputflinger/EventHub.cpp	/^EventHub::Device* EventHub::getDeviceLocked(int32_t deviceId) const {$/;"	f	class:android::EventHub
getDeviceName	services/inputflinger/InputReader.h	/^    inline const String8 getDeviceName() { return mDevice->getName(); }$/;"	f	class:android::InputMapper
getDirectBufferPointer	opengl/tools/glgen/stubs/gles11/common.cpp	/^getDirectBufferPointer(JNIEnv *_env, jobject buffer) {$/;"	f	file:
getDirectBufferPointer	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^getDirectBufferPointer(JNIEnv *_env, jobject buffer) {$/;"	f	file:
getDirtyRegion	services/surfaceflinger/DisplayDevice.cpp	/^Region DisplayDevice::getDirtyRegion(bool repaintEverything) const {$/;"	f	class:DisplayDevice
getDispatcher	services/inputflinger/InputManager.cpp	/^sp<InputDispatcherInterface> InputManager::getDispatcher() {$/;"	f	class:android::InputManager
getDispatcherConfiguration	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual void getDispatcherConfiguration(InputDispatcherConfiguration* outConfig) {$/;"	f	class:android::FakeInputDispatcherPolicy	file:
getDispatchingTimeout	services/inputflinger/InputApplication.h	/^    inline nsecs_t getDispatchingTimeout(nsecs_t defaultValue) const {$/;"	f	class:android::InputApplicationHandle
getDispatchingTimeout	services/inputflinger/InputWindow.h	/^    inline nsecs_t getDispatchingTimeout(nsecs_t defaultValue) const {$/;"	f	class:android::InputWindowHandle
getDisplay	opengl/libs/EGL/egl_display.cpp	/^EGLDisplay egl_display_t::getDisplay(EGLNativeDisplayType display) {$/;"	f	class:android::egl_display_t
getDisplay	opengl/libs/EGL/egl_object.h	/^    inline egl_display_t* getDisplay() const { return display; }$/;"	f	class:android::egl_object_t
getDisplayConfigs	libs/gui/ISurfaceComposer.cpp	/^    virtual status_t getDisplayConfigs(const sp<IBinder>& display,$/;"	f	class:android::BpSurfaceComposer
getDisplayConfigs	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::getDisplayConfigs($/;"	f	class:android::SurfaceComposerClient
getDisplayConfigs	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::getDisplayConfigs(const sp<IBinder>& display,$/;"	f	class:android::SurfaceFlinger
getDisplayDevice	services/surfaceflinger/SurfaceFlinger.h	/^    sp<DisplayDevice> getDisplayDevice(const wp<IBinder>& dpy) {$/;"	f	class:android::SurfaceFlinger
getDisplayDevice	services/surfaceflinger/SurfaceFlinger.h	/^    sp<const DisplayDevice> getDisplayDevice(const wp<IBinder>& dpy) const {$/;"	f	class:android::SurfaceFlinger
getDisplayFence	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^sp<Fence> HWComposer::getDisplayFence(int disp) const {$/;"	f	class:android::HWComposer
getDisplayHeight	libs/gui/SurfaceComposerClient.cpp	/^ssize_t SurfaceComposerClient::getDisplayHeight(int32_t displayId) {$/;"	f	class:android::SurfaceComposerClient
getDisplayInfo	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::getDisplayInfo($/;"	f	class:android::SurfaceComposerClient
getDisplayInfo	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::getDisplayInfo(const sp<IBinder>& display,$/;"	f	class:android::SurfaceComposerClient
getDisplayInfo	services/inputflinger/InputReader.cpp	/^bool InputReaderConfiguration::getDisplayInfo(bool external, DisplayViewport* outViewport) const {$/;"	f	class:android::InputReaderConfiguration
getDisplayLabel	libs/input/KeyCharacterMap.cpp	/^char16_t KeyCharacterMap::getDisplayLabel(int32_t keyCode) const {$/;"	f	class:android::KeyCharacterMap
getDisplayName	include/input/InputDevice.h	/^    inline const String8& getDisplayName() const {$/;"	f	class:android::InputDeviceInfo
getDisplayName	services/surfaceflinger/DisplayDevice.h	/^    const String8& getDisplayName() const { return mDisplayName; }$/;"	f	class:android::DisplayDevice
getDisplayOrientation	libs/gui/SurfaceComposerClient.cpp	/^ssize_t SurfaceComposerClient::getDisplayOrientation(int32_t displayId) {$/;"	f	class:android::SurfaceComposerClient
getDisplayStateLocked	libs/gui/SurfaceComposerClient.cpp	/^DisplayState& Composer::getDisplayStateLocked(const sp<IBinder>& token) {$/;"	f	class:android::Composer
getDisplayStats	libs/gui/ISurfaceComposer.cpp	/^    virtual status_t getDisplayStats(const sp<IBinder>& display,$/;"	f	class:android::BpSurfaceComposer
getDisplayStats	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::getDisplayStats(const sp<IBinder>& display,$/;"	f	class:android::SurfaceFlinger
getDisplayToken	services/surfaceflinger/DisplayDevice.h	/^    const wp<IBinder>&      getDisplayToken() const { return mDisplayToken; }$/;"	f	class:android::DisplayDevice
getDisplayType	services/surfaceflinger/DisplayDevice.h	/^    int32_t                 getDisplayType() const { return mType; }$/;"	f	class:android::DisplayDevice
getDisplayWidth	libs/gui/SurfaceComposerClient.cpp	/^ssize_t SurfaceComposerClient::getDisplayWidth(int32_t displayId) {$/;"	f	class:android::SurfaceComposerClient
getDistance	services/inputflinger/InputReader.h	/^        inline int32_t getDistance() const { return mAbsMTDistance; }$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getDitherTexture	cmds/flatland/GLHelper.cpp	/^bool GLHelper::getDitherTexture(GLuint* outTexName) {$/;"	f	class:android::GLHelper
getDockProperty	services/batteryservice/IBatteryPropertiesRegistrar.cpp	/^        status_t getDockProperty(int id, struct BatteryProperty *val) {$/;"	f	class:android::BpBatteryPropertiesRegistrar
getDownTime	include/input/Input.h	/^    inline nsecs_t getDownTime() const { return mDownTime; }$/;"	f	class:android::KeyEvent
getDownTime	include/input/Input.h	/^    inline nsecs_t getDownTime() const { return mDownTime; }$/;"	f	class:android::MotionEvent
getDpiX	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^float HWComposer::getDpiX(int disp) const {$/;"	f	class:android::HWComposer
getDpiY	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^float HWComposer::getDpiY(int disp) const {$/;"	f	class:android::HWComposer
getDrawingState	services/surfaceflinger/Layer.h	/^    inline  const State&    getDrawingState() const { return mDrawingState; }$/;"	f	class:android::Layer
getEGLConfig	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^EGLContext RenderEngine::getEGLConfig() const {$/;"	f	class:android::RenderEngine
getEGLContext	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^EGLContext RenderEngine::getEGLContext() const {$/;"	f	class:android::RenderEngine
getEGLDebugLevel	opengl/libs/EGL/egl.cpp	/^int getEGLDebugLevel() {$/;"	f	namespace:android
getEGLSurface	services/surfaceflinger/DisplayDevice.cpp	/^EGLSurface DisplayDevice::getEGLSurface() const {$/;"	f	class:DisplayDevice
getEdgeFlags	include/input/Input.h	/^    inline int32_t getEdgeFlags() const { return mEdgeFlags; }$/;"	f	class:android::MotionEvent
getEffectiveUsage	services/surfaceflinger/Layer.cpp	/^uint32_t Layer::getEffectiveUsage(uint32_t usage) const$/;"	f	class:android::Layer
getEncoderInputBufferInfo	include/media/editor/II420ColorConverter.h	/^    int (*getEncoderInputBufferInfo)($/;"	m	struct:II420ColorConverter
getEncoderInputFormat	include/media/editor/II420ColorConverter.h	/^    int (*getEncoderInputFormat)();$/;"	m	struct:II420ColorConverter
getError	opengl/libagl/egl.cpp	/^static GLint getError() {$/;"	f	namespace:android
getError	opengl/libs/EGL/egl_tls.cpp	/^EGLint egl_tls_t::getError() {$/;"	f	class:android::egl_tls_t
getErrorReturnValue	opengl/tools/glgen/src/JniCodeEmitter.java	/^    String getErrorReturnValue(CFunc cfunc) {$/;"	m	class:JniCodeEmitter
getEstimatedRate	services/sensorservice/SensorFusion.h	/^    float getEstimatedRate() const { return mEstimatedGyroRate; }$/;"	f	class:android::SensorFusion
getEstimator	libs/input/VelocityTracker.cpp	/^bool IntegratingVelocityTrackerStrategy::getEstimator(uint32_t id,$/;"	f	class:android::IntegratingVelocityTrackerStrategy
getEstimator	libs/input/VelocityTracker.cpp	/^bool LeastSquaresVelocityTrackerStrategy::getEstimator(uint32_t id,$/;"	f	class:android::LeastSquaresVelocityTrackerStrategy
getEstimator	libs/input/VelocityTracker.cpp	/^bool LegacyVelocityTrackerStrategy::getEstimator(uint32_t id,$/;"	f	class:android::LegacyVelocityTrackerStrategy
getEstimator	libs/input/VelocityTracker.cpp	/^bool VelocityTracker::getEstimator(uint32_t id, Estimator* outEstimator) const {$/;"	f	class:android::VelocityTracker
getEventHub	services/inputflinger/InputReader.cpp	/^EventHubInterface* InputReader::ContextImpl::getEventHub() {$/;"	f	class:android::InputReader::ContextImpl
getEventHub	services/inputflinger/InputReader.h	/^    inline EventHubInterface* getEventHub() { return mContext->getEventHub(); }$/;"	f	class:android::InputDevice
getEventHub	services/inputflinger/InputReader.h	/^    inline EventHubInterface* getEventHub() { return mContext->getEventHub(); }$/;"	f	class:android::InputMapper
getEventHub	services/inputflinger/tests/InputReader_test.cpp	/^    virtual EventHubInterface* getEventHub() {$/;"	f	class:android::FakeInputReaderContext	file:
getEventTime	include/input/Input.h	/^    inline nsecs_t getEventTime() const { return mEventTime; }$/;"	f	class:android::KeyEvent
getEventTime	include/input/Input.h	/^    inline nsecs_t getEventTime() const { return mSampleEventTimes[getHistorySize()]; }$/;"	f	class:android::MotionEvent
getEvents	libs/gui/DisplayEventReceiver.cpp	/^ssize_t DisplayEventReceiver::getEvents(DisplayEventReceiver::Event* events,$/;"	f	class:android::DisplayEventReceiver
getEvents	libs/gui/DisplayEventReceiver.cpp	/^ssize_t DisplayEventReceiver::getEvents(const sp<BitTube>& dataChannel,$/;"	f	class:android::DisplayEventReceiver
getEvents	libs/input/KeyCharacterMap.cpp	/^bool KeyCharacterMap::getEvents(int32_t deviceId, const char16_t* chars, size_t numChars,$/;"	f	class:android::KeyCharacterMap
getEvents	services/inputflinger/EventHub.cpp	/^size_t EventHub::getEvents(int timeoutMillis, RawEvent* buffer, size_t bufferSize) {$/;"	f	class:android::EventHub
getEvents	services/inputflinger/tests/InputReader_test.cpp	/^    virtual size_t getEvents(int timeoutMillis, RawEvent* buffer, size_t bufferSize) {$/;"	f	class:android::FakeEventHub	file:
getExcludedDevices	services/inputflinger/tests/InputReader_test.cpp	/^    Vector<String8>& getExcludedDevices() {$/;"	f	class:android::FakeEventHub
getExtension	services/surfaceflinger/RenderEngine/GLExtensions.cpp	/^char const* GLExtensions::getExtension() const {$/;"	f	class:android::GLExtensions
getExtensionString	opengl/libs/EGL/egl_display.h	/^    char const * getExtensionString() const { return mExtensionString.string(); }$/;"	f	class:android::egl_display_t
getF	services/sensorservice/Fusion.cpp	/^mat34_t Fusion::getF(const vec4_t& q) {$/;"	f	class:android::Fusion
getFallbackAction	libs/input/KeyCharacterMap.cpp	/^bool KeyCharacterMap::getFallbackAction(int32_t keyCode, int32_t metaState,$/;"	f	class:android::KeyCharacterMap
getFallbackKey	services/inputflinger/InputDispatcher.cpp	/^int32_t InputDispatcher::InputState::getFallbackKey(int32_t originalKeyCode) {$/;"	f	class:android::InputDispatcher::InputState
getFallbackKeys	services/inputflinger/InputDispatcher.h	/^        inline const KeyedVector<int32_t, int32_t>& getFallbackKeys() const {$/;"	f	class:android::InputDispatcher::InputState
getFd	include/input/InputTransport.h	/^    inline int getFd() const { return mFd; }$/;"	f	class:android::InputChannel
getFd	libs/gui/BitTube.cpp	/^int BitTube::getFd() const$/;"	f	class:android::BitTube
getFd	libs/gui/DisplayEventReceiver.cpp	/^int DisplayEventReceiver::getFd() const {$/;"	f	class:android::DisplayEventReceiver
getFd	libs/gui/SensorEventQueue.cpp	/^int SensorEventQueue::getFd() const$/;"	f	class:android::SensorEventQueue
getFdCount	include/binder/Parcel.h	/^        virtual size_t getFdCount() const {$/;"	f	class:android::Parcel::FlattenableHelper
getFdCount	libs/gui/BufferItem.cpp	/^size_t BufferItem::getFdCount() const {$/;"	f	class:android::BufferItem
getFdCount	libs/gui/IGraphicBufferConsumer.cpp	/^size_t IGraphicBufferConsumer::BufferItem::getFdCount() const {$/;"	f	class:android::IGraphicBufferConsumer::BufferItem
getFdCount	libs/gui/IGraphicBufferProducer.cpp	/^size_t IGraphicBufferProducer::QueueBufferInput::getFdCount() const {$/;"	f	class:android::IGraphicBufferProducer::QueueBufferInput
getFdCount	libs/ui/Fence.cpp	/^size_t Fence::getFdCount() const {$/;"	f	class:android::Fence
getFdCount	libs/ui/GraphicBuffer.cpp	/^size_t GraphicBuffer::getFdCount() const {$/;"	f	class:android::GraphicBuffer
getFifoMaxEventCount	libs/gui/Sensor.cpp	/^int32_t Sensor::getFifoMaxEventCount() const {$/;"	f	class:android::Sensor
getFifoReservedEventCount	libs/gui/Sensor.cpp	/^int32_t Sensor::getFifoReservedEventCount() const {$/;"	f	class:android::Sensor
getFiltering	services/surfaceflinger/Layer.cpp	/^bool Layer::getFiltering() const {$/;"	f	class:android::Layer
getFiltering	services/surfaceflinger/RenderEngine/Texture.cpp	/^bool Texture::getFiltering() const {$/;"	f	class:android::Texture
getFirstForegroundWindowHandle	services/inputflinger/InputDispatcher.cpp	/^sp<InputWindowHandle> InputDispatcher::TouchState::getFirstForegroundWindowHandle() const {$/;"	f	class:android::InputDispatcher::TouchState
getFirstPendingFlushConnection	services/sensorservice/SensorService.cpp	/^SensorService::SensorRecord::getFirstPendingFlushConnection() {$/;"	f	class:android::SensorService::SensorRecord
getFlags	include/input/Input.h	/^    inline int32_t getFlags() const { return mFlags; }$/;"	f	class:android::KeyEvent
getFlags	include/input/Input.h	/^    inline int32_t getFlags() const { return mFlags; }$/;"	f	class:android::MotionEvent
getFlags	libs/binder/IMemory.cpp	/^uint32_t BpMemoryHeap::getFlags() const {$/;"	f	class:android::BpMemoryHeap
getFlags	libs/binder/MemoryHeapBase.cpp	/^uint32_t MemoryHeapBase::getFlags() const {$/;"	f	class:android::MemoryHeapBase
getFlags	libs/gui/Sensor.cpp	/^int32_t Sensor::getFlags() const {$/;"	f	class:android::Sensor
getFlags	services/surfaceflinger/DisplayDevice.cpp	/^uint32_t DisplayDevice::getFlags() const$/;"	f	class:DisplayDevice
getFlattenedSize	include/binder/Parcel.h	/^        virtual size_t getFlattenedSize() const {$/;"	f	class:android::Parcel::FlattenableHelper
getFlattenedSize	libs/gui/BufferItem.cpp	/^size_t BufferItem::getFlattenedSize() const {$/;"	f	class:android::BufferItem
getFlattenedSize	libs/gui/IGraphicBufferConsumer.cpp	/^size_t IGraphicBufferConsumer::BufferItem::getFlattenedSize() const {$/;"	f	class:android::IGraphicBufferConsumer::BufferItem
getFlattenedSize	libs/gui/IGraphicBufferProducer.cpp	/^size_t IGraphicBufferProducer::QueueBufferInput::getFlattenedSize() const {$/;"	f	class:android::IGraphicBufferProducer::QueueBufferInput
getFlattenedSize	libs/gui/Sensor.cpp	/^size_t Sensor::getFlattenedSize() const$/;"	f	class:android::Sensor
getFlattenedSize	libs/ui/Fence.cpp	/^size_t Fence::getFlattenedSize() const {$/;"	f	class:android::Fence
getFlattenedSize	libs/ui/FrameStats.cpp	/^size_t FrameStats::getFlattenedSize() const {$/;"	f	class:android::FrameStats
getFlattenedSize	libs/ui/GraphicBuffer.cpp	/^size_t GraphicBuffer::getFlattenedSize() const {$/;"	f	class:android::GraphicBuffer
getFlattenedSize	libs/ui/Region.cpp	/^size_t Region::getFlattenedSize() const {$/;"	f	class:android::Region
getFormat	libs/gui/SurfaceComposerClient.cpp	/^PixelFormat ScreenshotClient::getFormat() const {$/;"	f	class:android::ScreenshotClient
getFormat	services/surfaceflinger/DisplayDevice.cpp	/^PixelFormat DisplayDevice::getFormat() const {$/;"	f	class:DisplayDevice
getFormat	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^uint32_t HWComposer::getFormat(int disp) const {$/;"	f	class:android::HWComposer
getFormatStr	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^static String8 getFormatStr(PixelFormat format) {$/;"	f	namespace:android
getFrame	services/surfaceflinger/DisplayDevice.h	/^    const Rect              getFrame() const { return mFrame; }$/;"	f	class:android::DisplayDevice
getFrameNumber	libs/gui/GLConsumer.cpp	/^nsecs_t GLConsumer::getFrameNumber() {$/;"	f	class:android::GLConsumer
getFrameStats	services/surfaceflinger/Layer.cpp	/^void Layer::getFrameStats(FrameStats* outStats) const {$/;"	f	class:android::Layer
getFromNativeDisplay	opengl/libs/EGL/egl_display.cpp	/^EGLDisplay egl_display_t::getFromNativeDisplay(EGLNativeDisplayType disp) {$/;"	f	class:android::egl_display_t
getFunc	opengl/libs/GLES_trace/tools/genapi.py	/^    def getFunc(self, callsite):$/;"	m	class:ApiCall
getGLHooks	opengl/libs/GLES_trace/src/gltrace_hooks.cpp	/^gl_hooks_t *getGLHooks() {$/;"	f	namespace:android::gltrace
getGLTraceContext	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^GLTraceContext *getGLTraceContext() {$/;"	f	namespace:android::gltrace
getGLTraceThreadSpecific	opengl/libs/EGL/egl.cpp	/^gl_hooks_t const* getGLTraceThreadSpecific() {$/;"	f	namespace:android
getGeneration	include/input/InputDevice.h	/^    inline int32_t getGeneration() const { return mGeneration; }$/;"	f	class:android::InputDeviceInfo
getGeneration	services/inputflinger/InputReader.h	/^    inline int32_t getGeneration() const { return mGeneration; }$/;"	f	class:android::InputDevice
getGlThreadSpecific	opengl/libagl/context.h	/^    inline ogles_context_t* getGlThreadSpecific() {$/;"	f	namespace:android::gl
getGlThreadSpecific	opengl/libs/hooks.h	/^inline EGLAPI gl_hooks_t const* getGlThreadSpecific() {$/;"	f	namespace:android
getGlobalAllocCount	libs/binder/Parcel.cpp	/^size_t Parcel::getGlobalAllocCount() {$/;"	f	class:android::Parcel
getGlobalAllocSize	libs/binder/Parcel.cpp	/^size_t Parcel::getGlobalAllocSize() {$/;"	f	class:android::Parcel
getGlobalMetaState	services/inputflinger/InputReader.cpp	/^int32_t InputReader::ContextImpl::getGlobalMetaState() {$/;"	f	class:android::InputReader::ContextImpl
getGlobalMetaState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t getGlobalMetaState() {$/;"	f	class:android::FakeInputReaderContext	file:
getGlobalMetaStateLocked	services/inputflinger/InputReader.cpp	/^int32_t InputReader::getGlobalMetaStateLocked() {$/;"	f	class:android::InputReader
getGlobalTraceState	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^GLTraceState *GLTraceContext::getGlobalTraceState() {$/;"	f	class:android::gltrace::GLTraceContext
getGroup	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::getGroup(Group& group) {$/;"	f	class:android::GLES20RenderEngine
getGyroBias	services/sensorservice/SensorFusion.h	/^    vec3_t getGyroBias() const { return mFusion.getBias(); }$/;"	f	class:android::SensorFusion
getHalDeviceVersion	services/sensorservice/SensorDevice.cpp	/^int SensorDevice::getHalDeviceVersion() const {$/;"	f	class:android::SensorDevice
getHandle	libs/gui/Sensor.cpp	/^int32_t Sensor::getHandle() const {$/;"	f	class:android::Sensor
getHandle	opengl/tools/glgen/static/egl/EGLObjectHandle.java	/^    public int getHandle() {$/;"	m	class:EGLObjectHandle
getHandle	services/surfaceflinger/Layer.cpp	/^sp<IBinder> Layer::getHandle() {$/;"	f	class:android::Layer
getHardwareOrientation	services/surfaceflinger/DisplayDevice.cpp	/^int DisplayDevice::getHardwareOrientation() {$/;"	f	class:DisplayDevice
getHeap	include/binder/MemoryBase.h	/^    const sp<IMemoryHeap>& getHeap() const { return mHeap; }$/;"	f	class:android::MemoryBase
getHeap	include/binder/MemoryHeapPmem.h	/^        const sp<MemoryHeapPmem>&  getHeap() const { return mClientHeap; }$/;"	f	class:android::MemoryHeapPmem::MemoryPmem
getHeapID	libs/binder/IMemory.cpp	/^int BpMemoryHeap::getHeapID() const {$/;"	f	class:android::BpMemoryHeap
getHeapID	libs/binder/MemoryHeapBase.cpp	/^int MemoryHeapBase::getHeapID() const {$/;"	f	class:android::MemoryHeapBase
getHeight	include/ui/GraphicBuffer.h	/^    uint32_t getHeight() const          { return height; }$/;"	f	class:android::GraphicBuffer
getHeight	include/ui/Rect.h	/^    inline int32_t getHeight() const {$/;"	f	class:android::Rect
getHeight	libs/gui/SurfaceComposerClient.cpp	/^uint32_t ScreenshotClient::getHeight() const {$/;"	f	class:android::ScreenshotClient
getHeight	opengl/libagl/egl.cpp	/^    virtual     EGLint      getHeight() const   { return height; }$/;"	f	struct:android::egl_window_surface_v2_t
getHeight	opengl/libagl/egl.cpp	/^    virtual     EGLint      getHeight() const   { return nativePixmap.height; }$/;"	f	struct:android::egl_pixmap_surface_t
getHeight	opengl/libagl/egl.cpp	/^    virtual     EGLint      getHeight() const   { return pbuffer.height; }$/;"	f	struct:android::egl_pbuffer_surface_t
getHeight	services/surfaceflinger/DisplayDevice.cpp	/^int DisplayDevice::getHeight() const {$/;"	f	class:DisplayDevice
getHeight	services/surfaceflinger/DisplayHardware/FloatRect.h	/^    inline float getHeight() const { return bottom - top; }$/;"	f	class:android::FloatRect
getHeight	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^uint32_t HWComposer::getHeight(int disp) const {$/;"	f	class:android::HWComposer
getHeight	services/surfaceflinger/RenderEngine/Texture.cpp	/^size_t Texture::getHeight() const {$/;"	f	class:android::Texture
getHints	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual uint32_t getHints() const {$/;"	f	class:android::HWCLayerVersion1
getHistoricalAxisValue	libs/input/Input.cpp	/^float MotionEvent::getHistoricalAxisValue(int32_t axis, size_t pointerIndex,$/;"	f	class:android::MotionEvent
getHistoricalEventTime	include/input/Input.h	/^    inline nsecs_t getHistoricalEventTime(size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalOrientation	include/input/Input.h	/^    inline float getHistoricalOrientation(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalPressure	include/input/Input.h	/^    inline float getHistoricalPressure(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalRawAxisValue	libs/input/Input.cpp	/^float MotionEvent::getHistoricalRawAxisValue(int32_t axis, size_t pointerIndex,$/;"	f	class:android::MotionEvent
getHistoricalRawPointerCoords	libs/input/Input.cpp	/^const PointerCoords* MotionEvent::getHistoricalRawPointerCoords($/;"	f	class:android::MotionEvent
getHistoricalRawX	include/input/Input.h	/^    inline float getHistoricalRawX(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalRawY	include/input/Input.h	/^    inline float getHistoricalRawY(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalSize	include/input/Input.h	/^    inline float getHistoricalSize(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalToolMajor	include/input/Input.h	/^    inline float getHistoricalToolMajor(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalToolMinor	include/input/Input.h	/^    inline float getHistoricalToolMinor(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalTouchMajor	include/input/Input.h	/^    inline float getHistoricalTouchMajor(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalTouchMinor	include/input/Input.h	/^    inline float getHistoricalTouchMinor(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalX	include/input/Input.h	/^    inline float getHistoricalX(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistoricalY	include/input/Input.h	/^    inline float getHistoricalY(size_t pointerIndex, size_t historicalIndex) const {$/;"	f	class:android::MotionEvent
getHistory	include/input/InputTransport.h	/^        const History* getHistory(size_t index) const {$/;"	f	struct:android::InputConsumer::TouchState
getHistorySize	include/input/Input.h	/^    inline size_t getHistorySize() const { return mSampleEventTimes.size() - 1; }$/;"	f	class:android::MotionEvent
getHorizontalResolution	opengl/libagl/egl.cpp	/^EGLint egl_surface_t::getHorizontalResolution() const {$/;"	f	class:android::egl_surface_t
getHorizontalResolution	opengl/libagl/egl.cpp	/^EGLint egl_window_surface_v2_t::getHorizontalResolution() const {$/;"	f	class:android::egl_window_surface_v2_t
getHwComposer	services/surfaceflinger/SurfaceFlinger.h	/^    HWComposer& getHwComposer() const { return *mHwc; }$/;"	f	class:android::SurfaceFlinger
getHwcDisplayId	services/surfaceflinger/DisplayDevice.h	/^    int32_t                 getHwcDisplayId() const { return mHwcDisplayId; }$/;"	f	class:android::DisplayDevice
getIGraphicBufferProducer	libs/gui/Surface.cpp	/^sp<IGraphicBufferProducer> Surface::getIGraphicBufferProducer() const {$/;"	f	class:android::Surface
getId	include/input/InputDevice.h	/^    inline int32_t getId() const { return mId; }$/;"	f	class:android::InputDeviceInfo
getId	include/ui/GraphicBuffer.h	/^    uint64_t getId() const              { return mId; }$/;"	f	class:android::GraphicBuffer
getId	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^int GLTraceContext::getId() {$/;"	f	class:android::gltrace::GLTraceContext
getId	services/inputflinger/InputReader.h	/^    inline int32_t getId() const { return mId; }$/;"	f	class:android::InputDevice
getIdentifier	include/input/InputDevice.h	/^    inline const InputDeviceIdentifier& getIdentifier() const { return mIdentifier; }$/;"	f	class:android::InputDeviceInfo
getInfo	services/inputflinger/InputApplication.h	/^    inline const InputApplicationInfo* getInfo() const {$/;"	f	class:android::InputApplicationHandle
getInfo	services/inputflinger/InputWindow.h	/^    inline const InputWindowInfo* getInfo() const {$/;"	f	class:android::InputWindowHandle
getInputChannel	services/inputflinger/InputWindow.h	/^    inline sp<InputChannel> getInputChannel() const {$/;"	f	class:android::InputWindowHandle
getInputChannelName	services/inputflinger/InputDispatcher.h	/^        inline const char* getInputChannelName() const { return inputChannel->getName().string(); }$/;"	f	class:android::InputDispatcher::Connection
getInputDeviceConfigurationFilePathByDeviceIdentifier	libs/input/InputDevice.cpp	/^String8 getInputDeviceConfigurationFilePathByDeviceIdentifier($/;"	f	namespace:android
getInputDeviceConfigurationFilePathByName	libs/input/InputDevice.cpp	/^String8 getInputDeviceConfigurationFilePathByName($/;"	f	namespace:android
getInputDevices	services/inputflinger/InputReader.cpp	/^void InputReader::getInputDevices(Vector<InputDeviceInfo>& outInputDevices) {$/;"	f	class:android::InputReader
getInputDevices	services/inputflinger/tests/InputReader_test.cpp	/^    const Vector<InputDeviceInfo>& getInputDevices() const {$/;"	f	class:android::FakeInputReaderPolicy
getInputDevicesLocked	services/inputflinger/InputReader.cpp	/^void InputReader::getInputDevicesLocked(Vector<InputDeviceInfo>& outInputDevices) {$/;"	f	class:android::InputReader
getInterfaceDescriptor	include/binder/IInterface.h	/^inline const String16& BnInterface<INTERFACE>::getInterfaceDescriptor() const$/;"	f	class:android::BnInterface
getInterfaceDescriptor	libs/binder/Binder.cpp	/^const String16& BBinder::getInterfaceDescriptor() const$/;"	f	class:android::BBinder
getInterfaceDescriptor	libs/binder/BpBinder.cpp	/^const String16& BpBinder::getInterfaceDescriptor() const$/;"	f	class:android::BpBinder
getJniMangledName	opengl/tools/glgen/src/JniCodeEmitter.java	/^    String getJniMangledName(String name) {$/;"	m	class:JniCodeEmitter
getJniName	opengl/tools/glgen/src/JniCodeEmitter.java	/^    public static String getJniName(JType jType) {$/;"	m	class:JniCodeEmitter
getJniType	opengl/tools/glgen/src/JniCodeEmitter.java	/^    String getJniType(JType jType) {$/;"	m	class:JniCodeEmitter
getKey	libs/input/KeyCharacterMap.cpp	/^bool KeyCharacterMap::getKey(int32_t keyCode, const Key** outKey) const {$/;"	f	class:android::KeyCharacterMap
getKey	libs/input/KeyLayoutMap.cpp	/^const KeyLayoutMap::Key* KeyLayoutMap::getKey(int32_t scanCode, int32_t usageCode) const {$/;"	f	class:android::KeyLayoutMap
getKey	services/inputflinger/tests/InputReader_test.cpp	/^    const KeyInfo* getKey(Device* device, int32_t scanCode, int32_t usageCode) const {$/;"	f	class:android::FakeEventHub	file:
getKeyBehavior	libs/input/KeyCharacterMap.cpp	/^bool KeyCharacterMap::getKeyBehavior(int32_t keyCode, int32_t metaState,$/;"	f	class:android::KeyCharacterMap
getKeyCharacterMap	include/input/InputDevice.h	/^    inline sp<KeyCharacterMap> getKeyCharacterMap() const {$/;"	f	class:android::InputDeviceInfo
getKeyCharacterMap	services/inputflinger/EventHub.cpp	/^sp<KeyCharacterMap> EventHub::getKeyCharacterMap(int32_t deviceId) const {$/;"	f	class:android::EventHub
getKeyCharacterMap	services/inputflinger/EventHub.h	/^        const sp<KeyCharacterMap>& getKeyCharacterMap() const {$/;"	f	struct:android::EventHub::Device
getKeyCharacterMap	services/inputflinger/tests/InputReader_test.cpp	/^    virtual sp<KeyCharacterMap> getKeyCharacterMap(int32_t deviceId) const {$/;"	f	class:android::FakeEventHub	file:
getKeyCode	include/input/Input.h	/^    inline int32_t getKeyCode() const { return mKeyCode; }$/;"	f	class:android::KeyEvent
getKeyCodeByLabel	include/input/InputEventLabels.h	/^static int32_t getKeyCodeByLabel(const char* label) {$/;"	f	namespace:android
getKeyCodeFromLabel	libs/input/Input.cpp	/^int32_t KeyEvent::getKeyCodeFromLabel(const char* label) {$/;"	f	class:android::KeyEvent
getKeyCodeState	services/inputflinger/EventHub.cpp	/^int32_t EventHub::getKeyCodeState(int32_t deviceId, int32_t keyCode) const {$/;"	f	class:android::EventHub
getKeyCodeState	services/inputflinger/InputReader.cpp	/^int32_t InputDevice::getKeyCodeState(uint32_t sourceMask, int32_t keyCode) {$/;"	f	class:android::InputDevice
getKeyCodeState	services/inputflinger/InputReader.cpp	/^int32_t InputMapper::getKeyCodeState(uint32_t sourceMask, int32_t keyCode) {$/;"	f	class:android::InputMapper
getKeyCodeState	services/inputflinger/InputReader.cpp	/^int32_t InputReader::getKeyCodeState(int32_t deviceId, uint32_t sourceMask,$/;"	f	class:android::InputReader
getKeyCodeState	services/inputflinger/InputReader.cpp	/^int32_t KeyboardInputMapper::getKeyCodeState(uint32_t sourceMask, int32_t keyCode) {$/;"	f	class:android::KeyboardInputMapper
getKeyCodeState	services/inputflinger/InputReader.cpp	/^int32_t TouchInputMapper::getKeyCodeState(uint32_t sourceMask, int32_t keyCode) {$/;"	f	class:android::TouchInputMapper
getKeyCodeState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t getKeyCodeState(int32_t deviceId, int32_t keyCode) const {$/;"	f	class:android::FakeEventHub	file:
getKeyCodeState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t getKeyCodeState(uint32_t sourceMask, int32_t keyCode) {$/;"	f	class:android::FakeInputMapper	file:
getKeyFlagByLabel	include/input/InputEventLabels.h	/^static uint32_t getKeyFlagByLabel(const char* label) {$/;"	f	namespace:android
getKeyboardLayoutOverlay	services/inputflinger/tests/InputReader_test.cpp	/^    virtual sp<KeyCharacterMap> getKeyboardLayoutOverlay(const InputDeviceIdentifier& identifier) {$/;"	f	class:android::FakeInputReaderPolicy	file:
getKeyboardType	include/input/InputDevice.h	/^    inline int32_t getKeyboardType() const { return mKeyboardType; }$/;"	f	class:android::InputDeviceInfo
getKeyboardType	libs/input/KeyCharacterMap.cpp	/^int32_t KeyCharacterMap::getKeyboardType() const {$/;"	f	class:android::KeyCharacterMap
getLabel	libs/input/Input.cpp	/^const char* KeyEvent::getLabel(int32_t keyCode) {$/;"	f	class:android::KeyEvent
getLabel	libs/input/Input.cpp	/^const char* MotionEvent::getLabel(int32_t axis) {$/;"	f	class:android::MotionEvent
getLabelByKeyCode	include/input/InputEventLabels.h	/^static const char* getLabelByKeyCode(int32_t keyCode) {$/;"	f	namespace:android
getLastRetireFence	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^sp<Fence> HWComposer::getLastRetireFence(int32_t id) const {$/;"	f	class:android::HWComposer
getLastTransactionBinderFlags	libs/binder/IPCThreadState.cpp	/^int32_t IPCThreadState::getLastTransactionBinderFlags() const$/;"	f	class:android::IPCThreadState
getLayer	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    inline HWCTYPE const * getLayer() const { return mCurrentLayer; }$/;"	f	class:android::Iterable
getLayer	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    inline HWCTYPE* getLayer() { return mCurrentLayer; }$/;"	f	class:android::Iterable
getLayerFrameStats	libs/gui/ISurfaceComposerClient.cpp	/^    virtual status_t getLayerFrameStats(const sp<IBinder>& handle, FrameStats* outStats) const {$/;"	f	class:android::BpSurfaceComposerClient
getLayerFrameStats	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::getLayerFrameStats(const sp<IBinder>& token,$/;"	f	class:android::SurfaceComposerClient
getLayerFrameStats	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::getLayerFrameStats(FrameStats* outStats) const {$/;"	f	class:android::SurfaceControl
getLayerFrameStats	services/surfaceflinger/Client.cpp	/^status_t Client::getLayerFrameStats(const sp<IBinder>& handle, FrameStats* outStats) const {$/;"	f	class:android::Client
getLayerIterator	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^HWComposer::LayerListIterator HWComposer::getLayerIterator(int32_t id, size_t index) {$/;"	f	class:android::HWComposer
getLayerSortedByZForHwcDisplay	services/surfaceflinger/SurfaceFlinger.cpp	/^SurfaceFlinger::getLayerSortedByZForHwcDisplay(int id) {$/;"	f	class:android::SurfaceFlinger
getLayerStack	services/surfaceflinger/DisplayDevice.h	/^    uint32_t                getLayerStack() const { return mLayerStack; }$/;"	f	class:android::DisplayDevice
getLayerStateLocked	libs/gui/SurfaceComposerClient.cpp	/^layer_state_t* Composer::getLayerStateLocked($/;"	f	class:android::Composer
getLayerUser	services/surfaceflinger/Client.cpp	/^sp<Layer> Client::getLayerUser(const sp<IBinder>& handle) const$/;"	f	class:android::Client
getLedByLabel	include/input/InputEventLabels.h	/^static int32_t getLedByLabel(const char* label) {$/;"	f	namespace:android
getLedState	services/inputflinger/tests/InputReader_test.cpp	/^    bool getLedState(int32_t deviceId, int32_t led) {$/;"	f	class:android::FakeEventHub
getLinuxRelease	services/inputflinger/EventHub.cpp	/^static void getLinuxRelease(int* major, int* minor) {$/;"	f	namespace:android
getListener	services/inputflinger/InputReader.cpp	/^InputListenerInterface* InputReader::ContextImpl::getListener() {$/;"	f	class:android::InputReader::ContextImpl
getListener	services/inputflinger/InputReader.h	/^    inline InputListenerInterface* getListener() { return mContext->getListener(); }$/;"	f	class:android::InputMapper
getListener	services/inputflinger/tests/InputReader_test.cpp	/^    virtual InputListenerInterface* getListener() {$/;"	f	class:android::FakeInputReaderContext	file:
getLooper	libs/gui/SensorEventQueue.cpp	/^sp<Looper> SensorEventQueue::getLooper() const$/;"	f	class:android::SensorEventQueue
getLooper	services/sensorservice/SensorService.cpp	/^sp<Looper> SensorService::getLooper() const {$/;"	f	class:android::SensorService
getMatch	libs/input/KeyCharacterMap.cpp	/^char16_t KeyCharacterMap::getMatch(int32_t keyCode, const char16_t* chars, size_t numChars,$/;"	f	class:android::KeyCharacterMap
getMatrix	services/surfaceflinger/RenderEngine/Texture.cpp	/^const mat4& Texture::getMatrix() const {$/;"	f	class:android::Texture
getMaxBufferCountLocked	libs/gui/BufferQueueCore.cpp	/^int BufferQueueCore::getMaxBufferCountLocked(bool async) const {$/;"	f	class:android::BufferQueueCore
getMaxDelay	libs/gui/Sensor.cpp	/^int32_t Sensor::getMaxDelay() const {$/;"	f	class:android::Sensor
getMaxTextureSize	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^size_t GLES11RenderEngine::getMaxTextureSize() const {$/;"	f	class:android::GLES11RenderEngine
getMaxTextureSize	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^size_t GLES20RenderEngine::getMaxTextureSize() const {$/;"	f	class:android::GLES20RenderEngine
getMaxTextureSize	services/surfaceflinger/SurfaceFlinger.cpp	/^size_t SurfaceFlinger::getMaxTextureSize() const {$/;"	f	class:android::SurfaceFlinger
getMaxValue	libs/gui/Sensor.cpp	/^float Sensor::getMaxValue() const {$/;"	f	class:android::Sensor
getMaxViewportDims	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^size_t GLES11RenderEngine::getMaxViewportDims() const {$/;"	f	class:android::GLES11RenderEngine
getMaxViewportDims	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^size_t GLES20RenderEngine::getMaxViewportDims() const {$/;"	f	class:android::GLES20RenderEngine
getMaxViewportDims	services/surfaceflinger/SurfaceFlinger.cpp	/^size_t SurfaceFlinger::getMaxViewportDims() const {$/;"	f	class:android::SurfaceFlinger
getMemory	libs/binder/IMemory.cpp	/^sp<IMemoryHeap> BpMemory::getMemory(ssize_t* offset, size_t* size) const$/;"	f	class:android::BpMemory
getMemory	libs/binder/MemoryBase.cpp	/^sp<IMemoryHeap> MemoryBase::getMemory(ssize_t* offset, size_t* size) const$/;"	f	class:android::MemoryBase
getMemory	libs/binder/MemoryHeapPmem.cpp	/^sp<IMemoryHeap> SubRegionMemory::getMemory(ssize_t* offset, size_t* size) const$/;"	f	class:android::SubRegionMemory
getMemoryHeap	include/binder/MemoryDealer.h	/^    sp<IMemoryHeap> getMemoryHeap() const { return heap(); }$/;"	f	class:android::MemoryDealer
getMergedFence	include/gui/StreamSplitter.h	/^        const sp<Fence>& getMergedFence() const { return mMergedFence; }$/;"	f	class:android::StreamSplitter::BufferTracker
getMetaState	include/input/Input.h	/^    inline int32_t getMetaState() const { return mMetaState; }$/;"	f	class:android::KeyEvent
getMetaState	include/input/Input.h	/^    inline int32_t getMetaState() const { return mMetaState; }$/;"	f	class:android::MotionEvent
getMetaState	services/inputflinger/InputReader.cpp	/^int32_t InputDevice::getMetaState() {$/;"	f	class:android::InputDevice
getMetaState	services/inputflinger/InputReader.cpp	/^int32_t InputMapper::getMetaState() {$/;"	f	class:android::InputMapper
getMetaState	services/inputflinger/InputReader.cpp	/^int32_t KeyboardInputMapper::getMetaState() {$/;"	f	class:android::KeyboardInputMapper
getMetaState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t getMetaState() {$/;"	f	class:android::FakeInputMapper	file:
getMinDelay	libs/gui/Sensor.cpp	/^int32_t Sensor::getMinDelay() const {$/;"	f	class:android::Sensor
getMinDelay	services/sensorservice/SensorFusion.cpp	/^int32_t SensorFusion::getMinDelay() const {$/;"	f	class:android::SensorFusion
getMinDelayNs	libs/gui/Sensor.cpp	/^nsecs_t Sensor::getMinDelayNs() const {$/;"	f	class:android::Sensor
getMinMaxBufferCountLocked	libs/gui/BufferQueueCore.cpp	/^int BufferQueueCore::getMinMaxBufferCountLocked(bool async) const {$/;"	f	class:android::BufferQueueCore
getMinUndequeuedBufferCountLocked	libs/gui/BufferQueueCore.cpp	/^int BufferQueueCore::getMinUndequeuedBufferCountLocked(bool async) const {$/;"	f	class:android::BufferQueueCore
getMinValue	libs/gui/Sensor.cpp	/^float Sensor::getMinValue() const {$/;"	f	class:android::Sensor
getMotionEventActionPointerIndex	services/inputflinger/InputDispatcher.cpp	/^static inline int32_t getMotionEventActionPointerIndex(int32_t action) {$/;"	f	namespace:android
getMotionRange	libs/input/InputDevice.cpp	/^const InputDeviceInfo::MotionRange* InputDeviceInfo::getMotionRange($/;"	f	class:android::InputDeviceInfo
getMotionRanges	include/input/InputDevice.h	/^    inline const Vector<MotionRange>& getMotionRanges() const {$/;"	f	class:android::InputDeviceInfo
getName	include/input/InputTransport.h	/^    inline String8 getName() const { return mName; }$/;"	f	class:android::InputChannel
getName	libs/gui/Sensor.cpp	/^const String8& Sensor::getName() const {$/;"	f	class:android::Sensor
getName	opengl/tools/glgen/src/CFunc.java	/^    public String getName() {$/;"	m	class:CFunc
getName	opengl/tools/glgen/src/JFunc.java	/^    public String getName() {$/;"	m	class:JFunc
getName	services/inputflinger/InputApplication.h	/^    inline String8 getName() const {$/;"	f	class:android::InputApplicationHandle
getName	services/inputflinger/InputReader.h	/^    inline const String8& getName() const { return mIdentifier.name; }$/;"	f	class:android::InputDevice
getName	services/inputflinger/InputWindow.h	/^    inline String8 getName() const {$/;"	f	class:android::InputWindowHandle
getName	services/surfaceflinger/Layer.cpp	/^const String8& Layer::getName() const {$/;"	f	class:android::Layer
getNameTypePair	opengl/libs/GLES_trace/tools/genapi.py	/^def getNameTypePair(decl):$/;"	f
getNativeBuffer	libs/ui/GraphicBuffer.cpp	/^ANativeWindowBuffer* GraphicBuffer::getNativeBuffer() const$/;"	f	class:android::GraphicBuffer
getNativeHandle	opengl/tools/glgen/static/egl/EGLObjectHandle.java	/^    public long getNativeHandle() {$/;"	m	class:EGLObjectHandle
getNeededCount	opengl/tools/glgen/stubs/gles11/common.cpp	/^static int getNeededCount(GLint pname) {$/;"	f	file:
getNextControllerNumberLocked	services/inputflinger/EventHub.cpp	/^int32_t EventHub::getNextControllerNumberLocked(Device* device) {$/;"	f	class:android::EventHub
getNumArgs	opengl/tools/glgen/src/CFunc.java	/^    public int getNumArgs() {$/;"	m	class:CFunc
getNumArgs	opengl/tools/glgen/src/JFunc.java	/^    public int getNumArgs() {$/;"	m	class:JFunc
getNumCompressedTextureFormats	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^getNumCompressedTextureFormats() {$/;"	f	file:
getNumConnections	services/sensorservice/SensorService.h	/^        size_t getNumConnections() const { return mConnections.size(); }$/;"	f	class:android::SensorService::SensorRecord
getNumber	libs/input/KeyCharacterMap.cpp	/^char16_t KeyCharacterMap::getNumber(int32_t keyCode) const {$/;"	f	class:android::KeyCharacterMap
getObject	opengl/libs/EGL/egl_display.cpp	/^bool egl_display_t::getObject(egl_object_t* object) const {$/;"	f	class:android::egl_display_t
getOffset	include/binder/MemoryBase.h	/^    ssize_t getOffset() const { return mOffset; }$/;"	f	class:android::MemoryBase
getOffset	libs/binder/IMemory.cpp	/^uint32_t BpMemoryHeap::getOffset() const {$/;"	f	class:android::BpMemoryHeap
getOffset	libs/binder/MemoryHeapBase.cpp	/^uint32_t MemoryHeapBase::getOffset() const {$/;"	f	class:android::MemoryHeapBase
getOpacityForFormat	services/surfaceflinger/Layer.cpp	/^bool Layer::getOpacityForFormat(uint32_t format) {$/;"	f	class:android::Layer
getOrientation	include/input/Input.h	/^    inline float getOrientation(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getOrientation	services/inputflinger/InputReader.h	/^        inline int32_t getOrientation() const { return mAbsMTOrientation; }$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getOrientation	services/surfaceflinger/DisplayDevice.h	/^    int                     getOrientation() const { return mOrientation; }$/;"	f	class:android::DisplayDevice
getOrientation	services/surfaceflinger/Transform.cpp	/^uint32_t Transform::getOrientation() const$/;"	f	class:android::Transform
getOrientationTransform	services/surfaceflinger/DisplayDevice.cpp	/^uint32_t DisplayDevice::getOrientationTransform() const {$/;"	f	class:DisplayDevice
getOriginal	opengl/tools/glgen/src/CFunc.java	/^    public String getOriginal() {$/;"	m	class:CFunc
getPageFlipCount	services/surfaceflinger/DisplayDevice.cpp	/^uint32_t DisplayDevice::getPageFlipCount() const {$/;"	f	class:DisplayDevice
getPath	libs/input/Keyboard.cpp	/^String8 KeyMap::getPath(const InputDeviceIdentifier& deviceIdentifier,$/;"	f	class:android::KeyMap
getPeriod	services/surfaceflinger/DispSync.cpp	/^nsecs_t DispSync::getPeriod() {$/;"	f	class:android::DispSync
getPixelFormat	include/ui/GraphicBuffer.h	/^    PixelFormat getPixelFormat() const  { return format; }$/;"	f	class:android::GraphicBuffer
getPixelFormatInfo	libs/ui/PixelFormat.cpp	/^status_t getPixelFormatInfo(PixelFormat format, PixelFormatInfo* info)$/;"	f	namespace:android
getPixels	libs/gui/SurfaceComposerClient.cpp	/^void const* ScreenshotClient::getPixels() const {$/;"	f	class:android::ScreenshotClient
getPodSize	libs/gui/BufferItem.cpp	/^size_t BufferItem::getPodSize() const {$/;"	f	class:android::BufferItem
getPodSize	libs/gui/IGraphicBufferConsumer.cpp	/^size_t IGraphicBufferConsumer::BufferItem::getPodSize() const {$/;"	f	class:android::IGraphicBufferConsumer::BufferItem
getPointer	opengl/tools/glgen/stubs/gles11/common.cpp	/^getPointer(JNIEnv *_env, jobject buffer, jarray *array, jint *remaining, jint *offset)$/;"	f	file:
getPointer	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^getPointer(JNIEnv *_env, jobject buffer, jarray *array, jint *remaining, jint *offset)$/;"	f	file:
getPointerById	include/input/InputTransport.h	/^        const PointerCoords& getPointerById(uint32_t id) const {$/;"	f	struct:android::InputConsumer::History
getPointerCount	include/input/Input.h	/^    inline size_t getPointerCount() const { return mPointerProperties.size(); }$/;"	f	class:android::MotionEvent
getPointerId	include/input/Input.h	/^    inline int32_t getPointerId(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getPointerProperties	include/input/Input.h	/^    inline const PointerProperties* getPointerProperties() const {$/;"	f	class:android::MotionEvent
getPointerProperties	include/input/Input.h	/^    inline const PointerProperties* getPointerProperties(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getPolicy	services/inputflinger/InputReader.cpp	/^InputReaderPolicyInterface* InputReader::ContextImpl::getPolicy() {$/;"	f	class:android::InputReader::ContextImpl
getPolicy	services/inputflinger/InputReader.h	/^    inline InputReaderPolicyInterface* getPolicy() { return mContext->getPolicy(); }$/;"	f	class:android::InputMapper
getPolicy	services/inputflinger/tests/InputReader_test.cpp	/^    virtual InputReaderPolicyInterface* getPolicy() {$/;"	f	class:android::FakeInputReaderContext	file:
getPosition	include/input/VelocityTracker.h	/^        inline const VelocityTracker::Position& getPosition(uint32_t id) const {$/;"	f	struct:android::LeastSquaresVelocityTrackerStrategy::Movement
getPosition	include/input/VelocityTracker.h	/^        inline const VelocityTracker::Position& getPosition(uint32_t id) const {$/;"	f	struct:android::LegacyVelocityTrackerStrategy::Movement
getPosition	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void getPosition(float* outX, float* outY) const {$/;"	f	class:android::FakePointerController
getPosition	services/surfaceflinger/Layer.cpp	/^Rect Layer::getPosition($/;"	f	class:android::Layer
getPositionArray	services/surfaceflinger/RenderEngine/Mesh.h	/^    VertexArray<TYPE> getPositionArray() { return VertexArray<TYPE>(getPositions(), mStride); }$/;"	f	class:android::Mesh
getPositions	services/surfaceflinger/RenderEngine/Mesh.cpp	/^float const* Mesh::getPositions() const {$/;"	f	class:android::Mesh
getPositions	services/surfaceflinger/RenderEngine/Mesh.cpp	/^float* Mesh::getPositions() {$/;"	f	class:android::Mesh
getPowerMode	services/surfaceflinger/DisplayDevice.cpp	/^int DisplayDevice::getPowerMode()  const {$/;"	f	class:DisplayDevice
getPowerUsage	libs/gui/Sensor.cpp	/^float Sensor::getPowerUsage() const {$/;"	f	class:android::Sensor
getPowerUsage	services/sensorservice/SensorFusion.cpp	/^float SensorFusion::getPowerUsage() const {$/;"	f	class:android::SensorFusion
getPressure	include/input/Input.h	/^    inline float getPressure(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getPressure	services/inputflinger/InputReader.h	/^        inline int32_t getPressure() const { return mAbsMTPressure; }$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getPrimitive	services/surfaceflinger/RenderEngine/Mesh.cpp	/^Mesh::Primitive Mesh::getPrimitive() const {$/;"	f	class:android::Mesh
getProcAddress	opengl/libs/EGL/Loader.h	/^    getProcAddressType getProcAddress;$/;"	m	class:android::Loader
getProcAddressType	opengl/libs/EGL/Loader.h	/^    typedef __eglMustCastToProperFunctionPointerType (*getProcAddressType)($/;"	t	class:android::Loader
getProcessCmdline	opengl/libs/EGL/Loader.cpp	/^static char const * getProcessCmdline() {$/;"	f	namespace:android
getProducer	services/surfaceflinger/Layer.cpp	/^sp<IGraphicBufferProducer> Layer::getProducer() const {$/;"	f	class:android::Layer
getProducerStickyTransform	services/surfaceflinger/Layer.cpp	/^uint32_t Layer::getProducerStickyTransform() const {$/;"	f	class:android::Layer
getProjectionRotation	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    virtual Transform::orientation_flags getProjectionRotation() const { return mProjectionRotation; }$/;"	f	class:android::GLES20RenderEngine
getProjectionRotation	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    virtual Transform::orientation_flags getProjectionRotation() const { return Transform::ROT_0; }$/;"	f	class:android::RenderEngine
getProjectionSourceCrop	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    virtual Rect getProjectionSourceCrop() const { return mProjectionSourceCrop; }$/;"	f	class:android::GLES20RenderEngine
getProjectionSourceCrop	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    virtual Rect getProjectionSourceCrop() const { return Rect(0, 0, 1, 1); }$/;"	f	class:android::RenderEngine
getProjectionYSwap	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    virtual bool getProjectionYSwap() { return mProjectionYSwap; }$/;"	f	class:android::GLES20RenderEngine
getProjectionYSwap	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    virtual bool getProjectionYSwap() { return 0; }$/;"	f	class:android::RenderEngine
getProperty	services/batteryservice/IBatteryPropertiesRegistrar.cpp	/^        status_t getProperty(int id, struct BatteryProperty *val) {$/;"	f	class:android::BpBatteryPropertiesRegistrar
getProtobufCall	opengl/libs/GLES_trace/tools/genapi.py	/^    def getProtobufCall(self):$/;"	m	class:DataType
getRasterizer	opengl/libagl/texture.cpp	/^GGLContext* getRasterizer(ogles_context_t* c)$/;"	f	namespace:android
getRawAxisValue	libs/input/Input.cpp	/^float MotionEvent::getRawAxisValue(int32_t axis, size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getRawPointerCoords	libs/input/Input.cpp	/^const PointerCoords* MotionEvent::getRawPointerCoords(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getRawX	include/input/Input.h	/^    inline float getRawX(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getRawY	include/input/Input.h	/^    inline float getRawY(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getReader	services/inputflinger/InputManager.cpp	/^sp<InputReaderInterface> InputManager::getReader() {$/;"	f	class:android::InputManager
getReaderConfiguration	services/inputflinger/tests/InputReader_test.cpp	/^    const InputReaderConfiguration* getReaderConfiguration() const {$/;"	f	class:android::FakeInputReaderPolicy
getReaderConfiguration	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void getReaderConfiguration(InputReaderConfiguration* outConfig) {$/;"	f	class:android::FakeInputReaderPolicy	file:
getRefreshPeriod	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^nsecs_t HWComposer::getRefreshPeriod(int disp) const {$/;"	f	class:android::HWComposer
getRefreshRate	opengl/libagl/egl.cpp	/^EGLint egl_surface_t::getRefreshRate() const {$/;"	f	class:android::egl_surface_t
getRefreshRate	opengl/libagl/egl.cpp	/^EGLint egl_window_surface_v2_t::getRefreshRate() const {$/;"	f	class:android::egl_window_surface_v2_t
getRefreshTimestamp	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^nsecs_t HWComposer::getRefreshTimestamp(int disp) const {$/;"	f	class:android::HWComposer
getRefsCount	opengl/libs/EGL/egl_display.h	/^    inline uint32_t getRefsCount() const { return refs; }$/;"	f	class:android::egl_display_t
getRelativeHWheel	services/inputflinger/InputReader.h	/^    inline int32_t getRelativeHWheel() const { return mRelHWheel; }$/;"	f	class:android::CursorScrollAccumulator
getRelativeVWheel	services/inputflinger/InputReader.h	/^    inline int32_t getRelativeVWheel() const { return mRelWheel; }$/;"	f	class:android::CursorScrollAccumulator
getRelativeX	services/inputflinger/InputReader.h	/^    inline int32_t getRelativeX() const { return mRelX; }$/;"	f	class:android::CursorMotionAccumulator
getRelativeX	services/inputflinger/InputReader.h	/^    inline int32_t getRelativeX() const { return mRelX; }$/;"	f	class:android::CursorScrollAccumulator
getRelativeY	services/inputflinger/InputReader.h	/^    inline int32_t getRelativeY() const { return mRelY; }$/;"	f	class:android::CursorMotionAccumulator
getRelativeY	services/inputflinger/InputReader.h	/^    inline int32_t getRelativeY() const { return mRelY; }$/;"	f	class:android::CursorScrollAccumulator
getReleasedBuffers	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::getReleasedBuffers(uint64_t *outSlotMask) {$/;"	f	class:android::BufferQueueConsumer
getReleasedBuffers	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t getReleasedBuffers(uint64_t* slotMask) {$/;"	f	class:android::BpGraphicBufferConsumer
getRenderEngine	services/surfaceflinger/SurfaceFlinger.h	/^    RenderEngine& getRenderEngine() const {$/;"	f	class:android::SurfaceFlinger
getRenderer	services/surfaceflinger/RenderEngine/GLExtensions.cpp	/^char const* GLExtensions::getRenderer() const {$/;"	f	class:android::GLExtensions
getRepeatCount	include/input/Input.h	/^    inline int32_t getRepeatCount() const { return mRepeatCount; }$/;"	f	class:android::KeyEvent
getReportingMode	libs/gui/Sensor.cpp	/^int32_t Sensor::getReportingMode() const {$/;"	f	class:android::Sensor
getRequiredPermission	libs/gui/Sensor.cpp	/^const String8& Sensor::getRequiredPermission() const {$/;"	f	class:android::Sensor
getResolution	libs/gui/Sensor.cpp	/^float Sensor::getResolution() const {$/;"	f	class:android::Sensor
getReturnString	libs/binder/IPCThreadState.cpp	/^static const char* getReturnString(size_t idx)$/;"	f	namespace:android
getReturnType	opengl/libs/GLES_trace/tools/genapi.py	/^    def getReturnType(self, apientry):$/;"	m	class:ApiCall
getRotationMatrix	services/sensorservice/Fusion.cpp	/^mat33_t Fusion::getRotationMatrix() const {$/;"	f	class:android::Fusion
getRotationMatrix	services/sensorservice/SensorFusion.h	/^    mat33_t getRotationMatrix() const { return mFusion.getRotationMatrix(); }$/;"	f	class:android::SensorFusion
getSampleEventTimes	include/input/Input.h	/^    inline const nsecs_t* getSampleEventTimes() const { return mSampleEventTimes.array(); }$/;"	f	class:android::MotionEvent
getSamplePointerCoords	include/input/Input.h	/^    inline const PointerCoords* getSamplePointerCoords() const {$/;"	f	class:android::MotionEvent
getScanCode	include/input/Input.h	/^    inline int32_t getScanCode() const { return mScanCode; }$/;"	f	class:android::KeyEvent
getScanCodeState	services/inputflinger/EventHub.cpp	/^int32_t EventHub::getScanCodeState(int32_t deviceId, int32_t scanCode) const {$/;"	f	class:android::EventHub
getScanCodeState	services/inputflinger/InputReader.cpp	/^int32_t CursorInputMapper::getScanCodeState(uint32_t sourceMask, int32_t scanCode) {$/;"	f	class:android::CursorInputMapper
getScanCodeState	services/inputflinger/InputReader.cpp	/^int32_t InputDevice::getScanCodeState(uint32_t sourceMask, int32_t scanCode) {$/;"	f	class:android::InputDevice
getScanCodeState	services/inputflinger/InputReader.cpp	/^int32_t InputMapper::getScanCodeState(uint32_t sourceMask, int32_t scanCode) {$/;"	f	class:android::InputMapper
getScanCodeState	services/inputflinger/InputReader.cpp	/^int32_t InputReader::getScanCodeState(int32_t deviceId, uint32_t sourceMask,$/;"	f	class:android::InputReader
getScanCodeState	services/inputflinger/InputReader.cpp	/^int32_t KeyboardInputMapper::getScanCodeState(uint32_t sourceMask, int32_t scanCode) {$/;"	f	class:android::KeyboardInputMapper
getScanCodeState	services/inputflinger/InputReader.cpp	/^int32_t TouchInputMapper::getScanCodeState(uint32_t sourceMask, int32_t scanCode) {$/;"	f	class:android::TouchInputMapper
getScanCodeState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t getScanCodeState(int32_t deviceId, int32_t scanCode) const {$/;"	f	class:android::FakeEventHub	file:
getScanCodeState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t getScanCodeState(uint32_t sourceMask, int32_t scanCode) {$/;"	f	class:android::FakeInputMapper	file:
getScanlineSize	libs/ui/PixelFormat.cpp	/^size_t PixelFormatInfo::getScanlineSize(unsigned int width) const$/;"	f	class:android::PixelFormatInfo
getScissor	services/surfaceflinger/DisplayDevice.h	/^    const Rect&             getScissor() const { return mScissor; }$/;"	f	class:android::DisplayDevice
getSecureLayerVisible	services/surfaceflinger/DisplayDevice.cpp	/^bool DisplayDevice::getSecureLayerVisible() const {$/;"	f	class:DisplayDevice
getSelf	include/ui/ANativeObjectBase.h	/^    static inline TYPE const * getSelf(android_native_base_t const* base) {$/;"	f	class:android::ANativeObjectBase
getSelf	include/ui/ANativeObjectBase.h	/^    static inline TYPE const* getSelf(NATIVE_TYPE const* self) {$/;"	f	class:android::ANativeObjectBase
getSelf	include/ui/ANativeObjectBase.h	/^    static inline TYPE* getSelf(NATIVE_TYPE* self) {$/;"	f	class:android::ANativeObjectBase
getSelf	include/ui/ANativeObjectBase.h	/^    static inline TYPE* getSelf(android_native_base_t* base) {$/;"	f	class:android::ANativeObjectBase
getSendFd	libs/gui/BitTube.cpp	/^int BitTube::getSendFd() const$/;"	f	class:android::BitTube
getSensor	services/sensorservice/CorrectedGyroSensor.cpp	/^Sensor CorrectedGyroSensor::getSensor() const {$/;"	f	class:android::CorrectedGyroSensor
getSensor	services/sensorservice/GravitySensor.cpp	/^Sensor GravitySensor::getSensor() const {$/;"	f	class:android::GravitySensor
getSensor	services/sensorservice/LinearAccelerationSensor.cpp	/^Sensor LinearAccelerationSensor::getSensor() const {$/;"	f	class:android::LinearAccelerationSensor
getSensor	services/sensorservice/OrientationSensor.cpp	/^Sensor OrientationSensor::getSensor() const {$/;"	f	class:android::OrientationSensor
getSensor	services/sensorservice/RotationVectorSensor.cpp	/^Sensor GyroDriftSensor::getSensor() const {$/;"	f	class:android::GyroDriftSensor
getSensor	services/sensorservice/RotationVectorSensor.cpp	/^Sensor RotationVectorSensor::getSensor() const {$/;"	f	class:android::RotationVectorSensor
getSensor	services/sensorservice/SensorInterface.cpp	/^Sensor HardwareSensor::getSensor() const {$/;"	f	class:android::HardwareSensor
getSensorChannel	libs/gui/ISensorEventConnection.cpp	/^    virtual sp<BitTube> getSensorChannel() const$/;"	f	class:android::BpSensorEventConnection
getSensorChannel	services/sensorservice/SensorService.cpp	/^sp<BitTube> SensorService::SensorEventConnection::getSensorChannel() const$/;"	f	class:android::SensorService::SensorEventConnection
getSensorFromHandle	services/sensorservice/SensorService.cpp	/^Sensor SensorService::getSensorFromHandle(int handle) const {$/;"	f	class:android::SensorService
getSensorList	libs/gui/ISensorServer.cpp	/^    virtual Vector<Sensor> getSensorList()$/;"	f	class:android::BpSensorServer
getSensorList	libs/gui/SensorManager.cpp	/^ssize_t SensorManager::getSensorList(Sensor const* const** list) const$/;"	f	class:android::SensorManager
getSensorList	services/sensorservice/SensorDevice.cpp	/^ssize_t SensorDevice::getSensorList(sensor_t const** list) {$/;"	f	class:android::SensorDevice
getSensorList	services/sensorservice/SensorService.cpp	/^Vector<Sensor> SensorService::getSensorList()$/;"	f	class:android::SensorService
getSensorName	services/sensorservice/SensorService.cpp	/^String8 SensorService::getSensorName(int handle) const {$/;"	f	class:android::SensorService
getSensorRecord	services/sensorservice/SensorService.cpp	/^SensorService::SensorRecord * SensorService::getSensorRecord(int handle) {$/;"	f	class:android::SensorService
getService	include/binder/IServiceManager.h	/^status_t getService(const String16& name, sp<INTERFACE>* outService)$/;"	f	namespace:android
getService	libs/binder/AppOpsManager.cpp	/^sp<IAppOpsService> AppOpsManager::getService()$/;"	f	class:android::AppOpsManager
getService	libs/binder/IServiceManager.cpp	/^    virtual sp<IBinder> getService(const String16& name) const$/;"	f	class:android::BpServiceManager
getShaderProgram	cmds/flatland/GLHelper.cpp	/^bool GLHelper::getShaderProgram(const char* name, GLuint* outPgm) {$/;"	f	class:android::GLHelper
getShaderVariableLocation	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^GLint getShaderVariableLocation(GLTraceContext *context, GLMessage *glmsg, GLchar *name) {$/;"	f	namespace:android::gltrace
getSharedBuffer	libs/ui/Region.cpp	/^SharedBuffer const* Region::getSharedBuffer(size_t* count) const {$/;"	f	class:android::Region
getSidebandStream	libs/gui/BufferQueueConsumer.cpp	/^sp<NativeHandle> BufferQueueConsumer::getSidebandStream() const {$/;"	f	class:android::BufferQueueConsumer
getSidebandStream	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual sp<NativeHandle> getSidebandStream() const {$/;"	f	class:android::BpGraphicBufferConsumer
getSidebandStream	services/surfaceflinger/SurfaceFlingerConsumer.cpp	/^sp<NativeHandle> SurfaceFlingerConsumer::getSidebandStream() const {$/;"	f	class:android::SurfaceFlingerConsumer
getSignalTime	libs/ui/Fence.cpp	/^nsecs_t Fence::getSignalTime() const {$/;"	f	class:android::Fence
getSize	include/binder/MemoryBase.h	/^    size_t getSize() const { return mSize; }$/;"	f	class:android::MemoryBase
getSize	include/input/Input.h	/^    inline float getSize(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getSize	include/ui/PixelFormat.h	/^    size_t getSize(size_t ci) const {$/;"	f	struct:android::PixelFormatInfo
getSize	libs/binder/IMemory.cpp	/^size_t BpMemoryHeap::getSize() const {$/;"	f	class:android::BpMemoryHeap
getSize	libs/binder/MemoryHeapBase.cpp	/^size_t MemoryHeapBase::getSize() const {$/;"	f	class:android::MemoryHeapBase
getSize	libs/gui/SurfaceComposerClient.cpp	/^size_t ScreenshotClient::getSize() const {$/;"	f	class:android::ScreenshotClient
getSize	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^GLsizeiptr ElementArrayBuffer::getSize() {$/;"	f	class:android::gltrace::ElementArrayBuffer
getSlot	services/inputflinger/InputReader.h	/^    inline const Slot* getSlot(size_t index) const { return &mSlots[index]; }$/;"	f	class:android::MultiTouchMotionAccumulator
getSlotCount	services/inputflinger/InputReader.h	/^    inline size_t getSlotCount() const { return mSlotCount; }$/;"	f	class:android::MultiTouchMotionAccumulator
getSlotFromBufferLocked	libs/gui/Surface.cpp	/^int Surface::getSlotFromBufferLocked($/;"	f	class:android::Surface
getSource	include/input/Input.h	/^    inline int32_t getSource() const { return mSource; }$/;"	f	class:android::InputEvent
getSources	include/input/InputDevice.h	/^    inline uint32_t getSources() const { return mSources; }$/;"	f	class:android::InputDeviceInfo
getSources	services/inputflinger/InputReader.cpp	/^uint32_t CursorInputMapper::getSources() {$/;"	f	class:android::CursorInputMapper
getSources	services/inputflinger/InputReader.cpp	/^uint32_t JoystickInputMapper::getSources() {$/;"	f	class:android::JoystickInputMapper
getSources	services/inputflinger/InputReader.cpp	/^uint32_t KeyboardInputMapper::getSources() {$/;"	f	class:android::KeyboardInputMapper
getSources	services/inputflinger/InputReader.cpp	/^uint32_t SwitchInputMapper::getSources() {$/;"	f	class:android::SwitchInputMapper
getSources	services/inputflinger/InputReader.cpp	/^uint32_t TouchInputMapper::getSources() {$/;"	f	class:android::TouchInputMapper
getSources	services/inputflinger/InputReader.cpp	/^uint32_t VibratorInputMapper::getSources() {$/;"	f	class:android::VibratorInputMapper
getSources	services/inputflinger/InputReader.h	/^    inline uint32_t getSources() const { return mSources; }$/;"	f	class:android::InputDevice
getSources	services/inputflinger/tests/InputReader_test.cpp	/^    virtual uint32_t getSources() {$/;"	f	class:android::FakeInputMapper	file:
getState	services/inputflinger/InputReader.cpp	/^int32_t InputDevice::getState(uint32_t sourceMask, int32_t code, GetStateFunc getStateFunc) {$/;"	f	class:android::InputDevice
getStateLocked	services/inputflinger/InputReader.cpp	/^int32_t InputReader::getStateLocked(int32_t deviceId, uint32_t sourceMask, int32_t code,$/;"	f	class:android::InputReader
getStats	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::getStats(FrameStats* outStats) const {$/;"	f	class:android::FrameTracker
getStatus	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^status_t RenderEngine::BindImageAsFramebuffer::getStatus() const {$/;"	f	class:android::RenderEngine::BindImageAsFramebuffer
getStatusLabel	services/inputflinger/InputDispatcher.cpp	/^const char* InputDispatcher::Connection::getStatusLabel() const {$/;"	f	class:android::InputDispatcher::Connection
getStream	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^TCPStream *GLTraceState::getStream() {$/;"	f	class:android::gltrace::GLTraceState
getStrictModePolicy	libs/binder/IPCThreadState.cpp	/^int32_t IPCThreadState::getStrictModePolicy() const$/;"	f	class:android::IPCThreadState
getStride	include/ui/GraphicBuffer.h	/^    uint32_t getStride() const          { return stride; }$/;"	f	class:android::GraphicBuffer
getStride	libs/gui/SurfaceComposerClient.cpp	/^uint32_t ScreenshotClient::getStride() const {$/;"	f	class:android::ScreenshotClient
getStride	services/surfaceflinger/RenderEngine/Mesh.cpp	/^size_t Mesh::getStride() const {$/;"	f	class:android::Mesh
getString	opengl/libs/EGL/trace.cpp	/^    const char* getString() {$/;"	f	class:android::StringBuilder
getString	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^    String8 getString() const {$/;"	f	class:android::Formatter
getStringType	libs/gui/Sensor.cpp	/^const String8& Sensor::getStringType() const {$/;"	f	class:android::Sensor
getStrongProxyForHandle	libs/binder/ProcessState.cpp	/^sp<IBinder> ProcessState::getStrongProxyForHandle(int32_t handle)$/;"	f	class:android::ProcessState
getSurface	libs/gui/SurfaceControl.cpp	/^sp<Surface> SurfaceControl::getSurface() const$/;"	f	class:android::SurfaceControl
getSurface	opengl/tests/lib/WindowSurface.cpp	/^EGLNativeWindowType WindowSurface::getSurface() const {$/;"	f	class:WindowSurface
getSurfaceHeight	libs/gui/tests/GLTest.cpp	/^EGLint GLTest::getSurfaceHeight() {$/;"	f	class:android::GLTest
getSurfaceWidth	libs/gui/tests/GLTest.cpp	/^EGLint GLTest::getSurfaceWidth() {$/;"	f	class:android::GLTest
getSwapBehavior	opengl/libagl/egl.cpp	/^EGLint egl_surface_t::getSwapBehavior() const {$/;"	f	class:android::egl_surface_t
getSwapBehavior	opengl/libagl/egl.cpp	/^EGLint egl_window_surface_v2_t::getSwapBehavior() const $/;"	f	class:android::egl_window_surface_v2_t
getSwitchState	services/inputflinger/EventHub.cpp	/^int32_t EventHub::getSwitchState(int32_t deviceId, int32_t sw) const {$/;"	f	class:android::EventHub
getSwitchState	services/inputflinger/InputReader.cpp	/^int32_t InputDevice::getSwitchState(uint32_t sourceMask, int32_t switchCode) {$/;"	f	class:android::InputDevice
getSwitchState	services/inputflinger/InputReader.cpp	/^int32_t InputMapper::getSwitchState(uint32_t sourceMask, int32_t switchCode) {$/;"	f	class:android::InputMapper
getSwitchState	services/inputflinger/InputReader.cpp	/^int32_t InputReader::getSwitchState(int32_t deviceId, uint32_t sourceMask, int32_t switchCode) {$/;"	f	class:android::InputReader
getSwitchState	services/inputflinger/InputReader.cpp	/^int32_t SwitchInputMapper::getSwitchState(uint32_t sourceMask, int32_t switchCode) {$/;"	f	class:android::SwitchInputMapper
getSwitchState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t getSwitchState(int32_t deviceId, int32_t sw) const {$/;"	f	class:android::FakeEventHub	file:
getSwitchState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual int32_t getSwitchState(uint32_t sourceMask, int32_t switchCode) {$/;"	f	class:android::FakeInputMapper	file:
getTLS	opengl/libs/EGL/egl_tls.cpp	/^egl_tls_t* egl_tls_t::getTLS() {$/;"	f	class:android::egl_tls_t
getTexCoordArray	services/surfaceflinger/RenderEngine/Mesh.h	/^    VertexArray<TYPE> getTexCoordArray() { return VertexArray<TYPE>(getTexCoords(), mStride); }$/;"	f	class:android::Mesh
getTexCoords	services/surfaceflinger/RenderEngine/Mesh.cpp	/^float const* Mesh::getTexCoords() const {$/;"	f	class:android::Mesh
getTexCoords	services/surfaceflinger/RenderEngine/Mesh.cpp	/^float* Mesh::getTexCoords() {$/;"	f	class:android::Mesh
getTexCoordsSize	services/surfaceflinger/RenderEngine/Mesh.cpp	/^size_t Mesh::getTexCoordsSize() const {$/;"	f	class:android::Mesh
getTextureMaskingTarget	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline int getTextureMaskingTarget() const {$/;"	f	class:android::ProgramCache::Key
getTextureName	services/surfaceflinger/RenderEngine/Texture.cpp	/^uint32_t Texture::getTextureName() const {$/;"	f	class:android::Texture
getTextureTarget	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline int getTextureTarget() const {$/;"	f	class:android::ProgramCache::Key
getTextureTarget	services/surfaceflinger/RenderEngine/Texture.cpp	/^uint32_t Texture::getTextureTarget() const {$/;"	f	class:android::Texture
getThreadState	libs/binder/BufferedTextOutput.cpp	/^BufferedTextOutput::ThreadState* BufferedTextOutput::getThreadState()$/;"	f	class:android::BufferedTextOutput
getTime	opengl/tests/gl_perf/fill_common.cpp	/^uint64_t getTime() {$/;"	f
getTimeSpentWaitingForApplicationLocked	services/inputflinger/InputDispatcher.cpp	/^nsecs_t InputDispatcher::getTimeSpentWaitingForApplicationLocked($/;"	f	class:android::InputDispatcher
getTimestamp	libs/gui/GLConsumer.cpp	/^nsecs_t GLConsumer::getTimestamp() {$/;"	f	class:android::GLConsumer
getToken	libs/binder/AppOpsManager.cpp	/^static const sp<IBinder>& getToken(const sp<IAppOpsService>& service) {$/;"	f	namespace:android
getToken	libs/binder/IAppOpsService.cpp	/^    virtual sp<IBinder> getToken(const sp<IBinder>& clientToken) {$/;"	f	class:android::BpAppOpsService
getToken	opengl/libagl/TokenManager.cpp	/^status_t TokenManager::getToken(GLsizei n, GLuint *tokens)$/;"	f	class:android::TokenManager
getToolMajor	include/input/Input.h	/^    inline float getToolMajor(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getToolMajor	services/inputflinger/InputReader.h	/^        inline int32_t getToolMajor() const { return mAbsMTWidthMajor; }$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getToolMinor	include/input/Input.h	/^    inline float getToolMinor(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getToolMinor	services/inputflinger/InputReader.h	/^        inline int32_t getToolMinor() const {$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getToolType	include/input/Input.h	/^    inline int32_t getToolType(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getToolType	services/inputflinger/InputReader.cpp	/^int32_t MultiTouchMotionAccumulator::Slot::getToolType() const {$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getToolType	services/inputflinger/InputReader.cpp	/^int32_t TouchButtonAccumulator::getToolType() const {$/;"	f	class:android::TouchButtonAccumulator
getTouchAffineTransformation	services/inputflinger/tests/InputReader_test.cpp	/^    TouchAffineTransformation getTouchAffineTransformation(const String8& inputDeviceDescriptor,$/;"	f	class:android::FakeInputReaderPolicy
getTouchMajor	include/input/Input.h	/^    inline float getTouchMajor(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getTouchMajor	services/inputflinger/InputReader.h	/^        inline int32_t getTouchMajor() const { return mAbsMTTouchMajor; }$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getTouchMinor	include/input/Input.h	/^    inline float getTouchMinor(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getTouchMinor	services/inputflinger/InputReader.h	/^        inline int32_t getTouchMinor() const {$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getTraceContext	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^GLTraceContext *GLTraceState::getTraceContext(EGLContext c) {$/;"	f	class:android::gltrace::GLTraceState
getTrackingId	services/inputflinger/InputReader.h	/^        inline int32_t getTrackingId() const { return mAbsMTTrackingId; }$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getTransactionFlags	services/surfaceflinger/Layer.cpp	/^uint32_t Layer::getTransactionFlags(uint32_t flags) {$/;"	f	class:android::Layer
getTransactionFlags	services/surfaceflinger/SurfaceFlinger.cpp	/^uint32_t SurfaceFlinger::getTransactionFlags(uint32_t flags) {$/;"	f	class:android::SurfaceFlinger
getTransform	services/surfaceflinger/DisplayDevice.h	/^    const Transform&        getTransform() const { return mGlobalTransform; }$/;"	f	class:android::DisplayDevice
getTransformMatrix	libs/gui/GLConsumer.cpp	/^void GLConsumer::getTransformMatrix(float mtx[16]) {$/;"	f	class:android::GLConsumer
getTransformToDisplayInverse	services/surfaceflinger/SurfaceFlingerConsumer.cpp	/^bool SurfaceFlingerConsumer::getTransformToDisplayInverse() const {$/;"	f	class:android::SurfaceFlingerConsumer
getType	include/input/Input.h	/^    virtual int32_t getType() const { return AINPUT_EVENT_TYPE_KEY; }$/;"	f	class:android::KeyEvent
getType	include/input/Input.h	/^    virtual int32_t getType() const { return AINPUT_EVENT_TYPE_MOTION; }$/;"	f	class:android::MotionEvent
getType	libs/gui/Sensor.cpp	/^int32_t Sensor::getType() const {$/;"	f	class:android::Sensor
getType	opengl/tools/glgen/src/CFunc.java	/^    public CType getType() {$/;"	m	class:CFunc
getType	opengl/tools/glgen/src/JFunc.java	/^    public JType getType() {$/;"	m	class:JFunc
getType	services/surfaceflinger/Transform.cpp	/^uint32_t Transform::getType() const {$/;"	f	class:android::Transform
getTypeId	services/surfaceflinger/Layer.h	/^    virtual const char* getTypeId() const { return "Layer"; }$/;"	f	class:android::Layer
getTypeId	services/surfaceflinger/LayerBlur.h	/^    virtual const char* getTypeId() const { return "LayerBlur"; }$/;"	f	class:android::LayerBlur
getTypeId	services/surfaceflinger/LayerDim.h	/^    virtual const char* getTypeId() const { return "LayerDim"; }$/;"	f	class:android::LayerDim
getUid	services/sensorservice/SensorService.h	/^        uid_t getUid() const { return mUid; }$/;"	f	class:android::SensorService::SensorEventConnection
getUniform	services/surfaceflinger/RenderEngine/Program.cpp	/^GLint Program::getUniform(const char* name) const {$/;"	f	class:android::Program
getUniqueId	libs/ui/GraphicBuffer.cpp	/^static uint64_t getUniqueId() {$/;"	f	namespace:android
getUniqueName	libs/gui/BufferQueueCore.cpp	/^static String8 getUniqueName() {$/;"	f	namespace:android
getUsage	include/ui/GraphicBuffer.h	/^    uint32_t getUsage() const           { return usage; }$/;"	f	class:android::GraphicBuffer
getVelocity	libs/input/VelocityTracker.cpp	/^bool VelocityTracker::getVelocity(uint32_t id, float* outVx, float* outVy) const {$/;"	f	class:android::VelocityTracker
getVendor	libs/gui/Sensor.cpp	/^const String8& Sensor::getVendor() const {$/;"	f	class:android::Sensor
getVendor	services/surfaceflinger/RenderEngine/GLExtensions.cpp	/^char const* GLExtensions::getVendor() const {$/;"	f	class:android::GLExtensions
getVendorString	opengl/libs/EGL/egl_display.h	/^    char const * getVendorString() const { return mVendorString.string(); }$/;"	f	class:android::egl_display_t
getVersion	libs/gui/Sensor.cpp	/^int32_t Sensor::getVersion() const {$/;"	f	class:android::Sensor
getVersion	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^int GLTraceContext::getVersion() {$/;"	f	class:android::gltrace::GLTraceContext
getVersion	services/surfaceflinger/RenderEngine/GLExtensions.cpp	/^char const* GLExtensions::getVersion() const {$/;"	f	class:android::GLExtensions
getVersionMajor	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^int GLTraceContext::getVersionMajor() {$/;"	f	class:android::gltrace::GLTraceContext
getVersionMinor	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^int GLTraceContext::getVersionMinor() {$/;"	f	class:android::gltrace::GLTraceContext
getVersionString	opengl/libs/EGL/egl_display.h	/^    char const * getVersionString() const { return mVersionString.string(); }$/;"	f	class:android::egl_display_t
getVertexCount	services/surfaceflinger/RenderEngine/Mesh.cpp	/^size_t Mesh::getVertexCount() const {$/;"	f	class:android::Mesh
getVertexSize	services/surfaceflinger/RenderEngine/Mesh.cpp	/^size_t Mesh::getVertexSize() const {$/;"	f	class:android::Mesh
getVerticalResolution	opengl/libagl/egl.cpp	/^EGLint egl_surface_t::getVerticalResolution() const {$/;"	f	class:android::egl_surface_t
getVerticalResolution	opengl/libagl/egl.cpp	/^EGLint egl_window_surface_v2_t::getVerticalResolution() const {$/;"	f	class:android::egl_window_surface_v2_t
getViewport	services/surfaceflinger/DisplayDevice.h	/^    const Rect              getViewport() const { return mViewport; }$/;"	f	class:android::DisplayDevice
getViewportHeight	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    virtual size_t getViewportHeight() const { return mVpHeight; }$/;"	f	class:android::GLES20RenderEngine
getViewportHeight	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    virtual size_t getViewportHeight() const { return 1; }$/;"	f	class:android::RenderEngine
getViewportWidth	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    virtual size_t getViewportWidth() const { return mVpWidth; }$/;"	f	class:android::GLES20RenderEngine
getViewportWidth	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    virtual size_t getViewportWidth() const { return 1; }$/;"	f	class:android::RenderEngine
getVirtualKeyDefinitions	services/inputflinger/EventHub.cpp	/^void EventHub::getVirtualKeyDefinitions(int32_t deviceId,$/;"	f	class:android::EventHub
getVirtualKeyDefinitions	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void getVirtualKeyDefinitions(int32_t deviceId,$/;"	f	class:android::FakeEventHub	file:
getVirtualKeys	include/input/VirtualKeyMap.h	/^    inline const Vector<VirtualKeyDefinition>& getVirtualKeys() const {$/;"	f	class:android::VirtualKeyMap
getVisibleLayersSortedByZ	services/surfaceflinger/DisplayDevice.cpp	/^const Vector< sp<Layer> >& DisplayDevice::getVisibleLayersSortedByZ() const {$/;"	f	class:DisplayDevice
getVisualID	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^int HWComposer::getVisualID() const {$/;"	f	class:android::HWComposer
getWeakProxyForHandle	libs/binder/ProcessState.cpp	/^wp<IBinder> ProcessState::getWeakProxyForHandle(int32_t handle)$/;"	f	class:android::ProcessState
getWidth	include/ui/GraphicBuffer.h	/^    uint32_t getWidth() const           { return width; }$/;"	f	class:android::GraphicBuffer
getWidth	include/ui/Rect.h	/^    inline int32_t getWidth() const {$/;"	f	class:android::Rect
getWidth	libs/gui/SurfaceComposerClient.cpp	/^uint32_t ScreenshotClient::getWidth() const {$/;"	f	class:android::ScreenshotClient
getWidth	opengl/libagl/egl.cpp	/^    virtual     EGLint      getWidth() const    { return nativePixmap.width;  }$/;"	f	struct:android::egl_pixmap_surface_t
getWidth	opengl/libagl/egl.cpp	/^    virtual     EGLint      getWidth() const    { return pbuffer.width;  }$/;"	f	struct:android::egl_pbuffer_surface_t
getWidth	opengl/libagl/egl.cpp	/^    virtual     EGLint      getWidth() const    { return width;  }$/;"	f	struct:android::egl_window_surface_v2_t
getWidth	services/surfaceflinger/DisplayDevice.cpp	/^int DisplayDevice::getWidth() const {$/;"	f	class:DisplayDevice
getWidth	services/surfaceflinger/DisplayHardware/FloatRect.h	/^    inline float getWidth() const { return right - left; }$/;"	f	class:android::FloatRect
getWidth	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^uint32_t HWComposer::getWidth(int disp) const {$/;"	f	class:android::HWComposer
getWidth	services/surfaceflinger/RenderEngine/Texture.cpp	/^size_t Texture::getWidth() const {$/;"	f	class:android::Texture
getWindowHandleLocked	services/inputflinger/InputDispatcher.cpp	/^sp<InputWindowHandle> InputDispatcher::getWindowHandleLocked($/;"	f	class:android::InputDispatcher
getWindowName	services/inputflinger/InputDispatcher.cpp	/^const char* InputDispatcher::Connection::getWindowName() const {$/;"	f	class:android::InputDispatcher::Connection
getX	include/input/Input.h	/^    inline float getX() const {$/;"	f	struct:android::PointerCoords
getX	include/input/Input.h	/^    inline float getX(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getX	services/inputflinger/InputReader.h	/^        inline int32_t getX() const { return mAbsMTPositionX; }$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getXOffset	include/input/Input.h	/^    inline float getXOffset() const { return mXOffset; }$/;"	f	class:android::MotionEvent
getXPrecision	include/input/Input.h	/^    inline float getXPrecision() const { return mXPrecision; }$/;"	f	class:android::MotionEvent
getY	include/input/Input.h	/^    inline float getY() const {$/;"	f	struct:android::PointerCoords
getY	include/input/Input.h	/^    inline float getY(size_t pointerIndex) const {$/;"	f	class:android::MotionEvent
getY	services/inputflinger/InputReader.h	/^        inline int32_t getY() const { return mAbsMTPositionY; }$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
getYOffset	include/input/Input.h	/^    inline float getYOffset() const { return mYOffset; }$/;"	f	class:android::MotionEvent
getYPrecision	include/input/Input.h	/^    inline float getYPrecision() const { return mYPrecision; }$/;"	f	class:android::MotionEvent
get_context	opengl/libs/EGL/egl_object.h	/^egl_context_t* get_context(EGLContext context) {$/;"	f	namespace:android
get_display	opengl/libagl/egl.cpp	/^egl_display_t& egl_display_t::get_display(EGLDisplay dpy) {$/;"	f	class:android::egl_display_t
get_display	opengl/libs/EGL/egl_display.h	/^inline egl_display_ptr get_display(EGLDisplay dpy) {$/;"	f	namespace:android
get_display_nowake	opengl/libs/EGL/egl_display.h	/^inline egl_display_t* get_display_nowake(EGLDisplay dpy) {$/;"	f	namespace:android
get_heap	libs/binder/IMemory.cpp	/^    static inline sp<IMemoryHeap> get_heap(const sp<IBinder>& binder) {$/;"	f	class:android::BpMemoryHeap	file:
get_heap	libs/binder/IMemory.cpp	/^sp<IMemoryHeap> HeapCache::get_heap(const sp<IBinder>& binder)$/;"	f	class:android::HeapCache
get_idmap_path	cmds/installd/commands.c	/^static int get_idmap_path(const char *prefix, const char *suffix, char *idmap_path, size_t N)$/;"	f	file:
get_interface_name	cmds/service/service.cpp	/^static String16 get_interface_name(sp<IBinder> service)$/;"	f	file:
get_path_from_env	cmds/installd/utils.c	/^int get_path_from_env(dir_rec_t* rec, const char* var) {$/;"	f
get_path_from_string	cmds/installd/utils.c	/^int get_path_from_string(dir_rec_t* rec, const char* path) {$/;"	f
get_size	cmds/installd/commands.c	/^int get_size(const char *pkgname, userid_t userid, const char *apkpath,$/;"	f
get_surface	opengl/libs/EGL/egl_object.h	/^egl_surface_t* get_surface(EGLSurface surface) {$/;"	f	namespace:android
get_tls_hooks	opengl/libs/hooks.h	/^inline gl_hooks_t const * volatile * get_tls_hooks() {$/;"	f	namespace:android
get_tombstone_fds	cmds/dumpstate/dumpstate.c	/^static void get_tombstone_fds(tombstone_data_t data[NUM_TOMBSTONES]) {$/;"	f	file:
getarray	opengl/tools/glgen/stubs/gles11/common.cpp	/^getarray$/;"	f	file:
getphys	libs/ui/GraphicBufferMapper.cpp	/^status_t GraphicBufferMapper::getphys(buffer_handle_t handle, void** paddr)$/;"	f	class:android::GraphicBufferMapper
ggl	opengl/libagl/context.h	/^    GGLContext*         ggl;$/;"	m	struct:android::gl::texture_state_t
gglFloatToFixed	opengl/libagl/arch-mips/fixed_asm.S	/^gglFloatToFixed:$/;"	l
gglFloatToFixed	opengl/libagl/fixed_asm.S	/^gglFloatToFixed:$/;"	l
gglFloatToFixed	opengl/libagl/fp.cpp	/^GGLfixed gglFloatToFixed(float v) {   $/;"	f
gglFloatToFixedFast	opengl/libagl/fixed_asm.S	/^gglFloatToFixedFast:$/;"	l
gh	libs/ui/PixelFormat.cpp	/^        uint8_t     gh;$/;"	m	struct:android::Info::__anon243	file:
giveThreadPoolName	libs/binder/ProcessState.cpp	/^void ProcessState::giveThreadPoolName() {$/;"	f	class:android::ProcessState
gl	libs/ui/PixelFormat.cpp	/^        uint8_t     gl;$/;"	m	struct:android::Info::__anon243	file:
gl	opengl/libagl/BufferObjectManager.h	/^namespace gl {$/;"	n	namespace:android
gl	opengl/libagl/array.h	/^namespace gl {$/;"	n	namespace:android
gl	opengl/libagl/context.h	/^namespace gl {$/;"	n	namespace:android
gl	opengl/libagl/egl.cpp	/^namespace gl {$/;"	n	namespace:android	file:
gl	opengl/libagl/fp.cpp	/^namespace gl {$/;"	n	namespace:android	file:
gl	opengl/libagl/fp.h	/^namespace gl {$/;"	n	namespace:android
gl	opengl/libagl/light.h	/^namespace gl {$/;"	n	namespace:android
gl	opengl/libagl/primitives.h	/^namespace gl {$/;"	n	namespace:android
gl	opengl/libagl/vertex.h	/^namespace gl {$/;"	n	namespace:android
gl	opengl/libs/hooks.h	/^    } gl;$/;"	m	struct:android::gl_hooks_t	typeref:struct:android::gl_hooks_t::gl_t
gl12andLaterPat	opengl/tools/glgen2/registry/genheaders.py	/^gl12andLaterPat = '1\\.[2-9]|[234]\\.[0-9]'$/;"	v
gl2format_table	opengl/libagl/texture.cpp	/^static uint32_t gl2format_table[6][4] = {$/;"	m	namespace:android	file:
glActiveShaderProgram	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glActiveShaderProgram;$/;"	m	class:android::gltrace::GLMessage	file:
glActiveShaderProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glActiveShaderProgram = GLMessage_Function_glActiveShaderProgram;$/;"	m	class:android::gltrace::GLMessage
glActiveShaderProgramEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glActiveShaderProgramEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glActiveShaderProgramEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glActiveShaderProgramEXT = GLMessage_Function_glActiveShaderProgramEXT;$/;"	m	class:android::gltrace::GLMessage
glActiveTexture	opengl/libagl/texture.cpp	/^void glActiveTexture(GLenum texture)$/;"	f
glActiveTexture	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glActiveTexture;$/;"	m	class:android::gltrace::GLMessage	file:
glActiveTexture	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glActiveTexture = GLMessage_Function_glActiveTexture;$/;"	m	class:android::gltrace::GLMessage
glAlphaFunc	opengl/libagl/state.cpp	/^void glAlphaFunc(GLenum func, GLclampf ref)$/;"	f
glAlphaFunc	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glAlphaFunc;$/;"	m	class:android::gltrace::GLMessage	file:
glAlphaFunc	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glAlphaFunc = GLMessage_Function_glAlphaFunc;$/;"	m	class:android::gltrace::GLMessage
glAlphaFuncQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glAlphaFuncQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glAlphaFuncQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glAlphaFuncQCOM = GLMessage_Function_glAlphaFuncQCOM;$/;"	m	class:android::gltrace::GLMessage
glAlphaFuncx	opengl/libagl/state.cpp	/^void glAlphaFuncx(GLenum func, GLclampx ref) {$/;"	f
glAlphaFuncx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glAlphaFuncx;$/;"	m	class:android::gltrace::GLMessage	file:
glAlphaFuncx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glAlphaFuncx = GLMessage_Function_glAlphaFuncx;$/;"	m	class:android::gltrace::GLMessage
glAlphaFuncxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glAlphaFuncxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glAlphaFuncxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glAlphaFuncxOES = GLMessage_Function_glAlphaFuncxOES;$/;"	m	class:android::gltrace::GLMessage
glAttachShader	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glAttachShader;$/;"	m	class:android::gltrace::GLMessage	file:
glAttachShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glAttachShader = GLMessage_Function_glAttachShader;$/;"	m	class:android::gltrace::GLMessage
glBeginPerfMonitorAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBeginPerfMonitorAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glBeginPerfMonitorAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBeginPerfMonitorAMD = GLMessage_Function_glBeginPerfMonitorAMD;$/;"	m	class:android::gltrace::GLMessage
glBeginPerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBeginPerfQueryINTEL;$/;"	m	class:android::gltrace::GLMessage	file:
glBeginPerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBeginPerfQueryINTEL = GLMessage_Function_glBeginPerfQueryINTEL;$/;"	m	class:android::gltrace::GLMessage
glBeginQuery	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBeginQuery;$/;"	m	class:android::gltrace::GLMessage	file:
glBeginQuery	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBeginQuery = GLMessage_Function_glBeginQuery;$/;"	m	class:android::gltrace::GLMessage
glBeginQueryEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBeginQueryEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glBeginQueryEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBeginQueryEXT = GLMessage_Function_glBeginQueryEXT;$/;"	m	class:android::gltrace::GLMessage
glBeginTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBeginTransformFeedback;$/;"	m	class:android::gltrace::GLMessage	file:
glBeginTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBeginTransformFeedback = GLMessage_Function_glBeginTransformFeedback;$/;"	m	class:android::gltrace::GLMessage
glBindAttribLocation	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindAttribLocation;$/;"	m	class:android::gltrace::GLMessage	file:
glBindAttribLocation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindAttribLocation = GLMessage_Function_glBindAttribLocation;$/;"	m	class:android::gltrace::GLMessage
glBindBuffer	opengl/libagl/array.cpp	/^void glBindBuffer(GLenum target, GLuint buffer)$/;"	f
glBindBuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindBuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glBindBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindBuffer = GLMessage_Function_glBindBuffer;$/;"	m	class:android::gltrace::GLMessage
glBindBufferBase	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindBufferBase;$/;"	m	class:android::gltrace::GLMessage	file:
glBindBufferBase	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindBufferBase = GLMessage_Function_glBindBufferBase;$/;"	m	class:android::gltrace::GLMessage
glBindBufferRange	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindBufferRange;$/;"	m	class:android::gltrace::GLMessage	file:
glBindBufferRange	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindBufferRange = GLMessage_Function_glBindBufferRange;$/;"	m	class:android::gltrace::GLMessage
glBindFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindFramebuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glBindFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindFramebuffer = GLMessage_Function_glBindFramebuffer;$/;"	m	class:android::gltrace::GLMessage
glBindFramebufferOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindFramebufferOES;$/;"	m	class:android::gltrace::GLMessage	file:
glBindFramebufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindFramebufferOES = GLMessage_Function_glBindFramebufferOES;$/;"	m	class:android::gltrace::GLMessage
glBindImageTexture	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindImageTexture;$/;"	m	class:android::gltrace::GLMessage	file:
glBindImageTexture	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindImageTexture = GLMessage_Function_glBindImageTexture;$/;"	m	class:android::gltrace::GLMessage
glBindProgramPipeline	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindProgramPipeline;$/;"	m	class:android::gltrace::GLMessage	file:
glBindProgramPipeline	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindProgramPipeline = GLMessage_Function_glBindProgramPipeline;$/;"	m	class:android::gltrace::GLMessage
glBindProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindProgramPipelineEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glBindProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindProgramPipelineEXT = GLMessage_Function_glBindProgramPipelineEXT;$/;"	m	class:android::gltrace::GLMessage
glBindRenderbuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindRenderbuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glBindRenderbuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindRenderbuffer = GLMessage_Function_glBindRenderbuffer;$/;"	m	class:android::gltrace::GLMessage
glBindRenderbufferOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindRenderbufferOES;$/;"	m	class:android::gltrace::GLMessage	file:
glBindRenderbufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindRenderbufferOES = GLMessage_Function_glBindRenderbufferOES;$/;"	m	class:android::gltrace::GLMessage
glBindSampler	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindSampler;$/;"	m	class:android::gltrace::GLMessage	file:
glBindSampler	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindSampler = GLMessage_Function_glBindSampler;$/;"	m	class:android::gltrace::GLMessage
glBindTexture	opengl/libagl/texture.cpp	/^void glBindTexture(GLenum target, GLuint texture)$/;"	f
glBindTexture	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindTexture;$/;"	m	class:android::gltrace::GLMessage	file:
glBindTexture	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindTexture = GLMessage_Function_glBindTexture;$/;"	m	class:android::gltrace::GLMessage
glBindTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindTransformFeedback;$/;"	m	class:android::gltrace::GLMessage	file:
glBindTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindTransformFeedback = GLMessage_Function_glBindTransformFeedback;$/;"	m	class:android::gltrace::GLMessage
glBindVertexArray	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindVertexArray;$/;"	m	class:android::gltrace::GLMessage	file:
glBindVertexArray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindVertexArray = GLMessage_Function_glBindVertexArray;$/;"	m	class:android::gltrace::GLMessage
glBindVertexArrayOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindVertexArrayOES;$/;"	m	class:android::gltrace::GLMessage	file:
glBindVertexArrayOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindVertexArrayOES = GLMessage_Function_glBindVertexArrayOES;$/;"	m	class:android::gltrace::GLMessage
glBindVertexBuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBindVertexBuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glBindVertexBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBindVertexBuffer = GLMessage_Function_glBindVertexBuffer;$/;"	m	class:android::gltrace::GLMessage
glBindVertexBuffer	opengl/tools/glgen/stubs/gles11/glBindVertexBuffer.java	/^    public static native void glBindVertexBuffer($/;"	m
glBlendBarrierKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendBarrierKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendBarrierKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendBarrierKHR = GLMessage_Function_glBlendBarrierKHR;$/;"	m	class:android::gltrace::GLMessage
glBlendBarrierNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendBarrierNV;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendBarrierNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendBarrierNV = GLMessage_Function_glBlendBarrierNV;$/;"	m	class:android::gltrace::GLMessage
glBlendColor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendColor;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendColor	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendColor = GLMessage_Function_glBlendColor;$/;"	m	class:android::gltrace::GLMessage
glBlendEquation	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendEquation;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendEquation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendEquation = GLMessage_Function_glBlendEquation;$/;"	m	class:android::gltrace::GLMessage
glBlendEquation	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	30;"	d	file:
glBlendEquationOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendEquationOES;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendEquationOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendEquationOES = GLMessage_Function_glBlendEquationOES;$/;"	m	class:android::gltrace::GLMessage
glBlendEquationSeparate	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendEquationSeparate;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendEquationSeparate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendEquationSeparate = GLMessage_Function_glBlendEquationSeparate;$/;"	m	class:android::gltrace::GLMessage
glBlendEquationSeparate	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	31;"	d	file:
glBlendEquationSeparateOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendEquationSeparateOES;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendEquationSeparateOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendEquationSeparateOES = GLMessage_Function_glBlendEquationSeparateOES;$/;"	m	class:android::gltrace::GLMessage
glBlendEquationSeparateiEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendEquationSeparateiEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendEquationSeparateiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendEquationSeparateiEXT = GLMessage_Function_glBlendEquationSeparateiEXT;$/;"	m	class:android::gltrace::GLMessage
glBlendEquationiEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendEquationiEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendEquationiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendEquationiEXT = GLMessage_Function_glBlendEquationiEXT;$/;"	m	class:android::gltrace::GLMessage
glBlendFunc	opengl/libagl/state.cpp	/^void glBlendFunc(GLenum sfactor, GLenum dfactor) {$/;"	f
glBlendFunc	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendFunc;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendFunc	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendFunc = GLMessage_Function_glBlendFunc;$/;"	m	class:android::gltrace::GLMessage
glBlendFuncSeparate	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendFuncSeparate;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendFuncSeparate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendFuncSeparate = GLMessage_Function_glBlendFuncSeparate;$/;"	m	class:android::gltrace::GLMessage
glBlendFuncSeparate	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	32;"	d	file:
glBlendFuncSeparateOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendFuncSeparateOES;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendFuncSeparateOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendFuncSeparateOES = GLMessage_Function_glBlendFuncSeparateOES;$/;"	m	class:android::gltrace::GLMessage
glBlendFuncSeparateiEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendFuncSeparateiEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendFuncSeparateiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendFuncSeparateiEXT = GLMessage_Function_glBlendFuncSeparateiEXT;$/;"	m	class:android::gltrace::GLMessage
glBlendFunciEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendFunciEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendFunciEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendFunciEXT = GLMessage_Function_glBlendFunciEXT;$/;"	m	class:android::gltrace::GLMessage
glBlendParameteriNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlendParameteriNV;$/;"	m	class:android::gltrace::GLMessage	file:
glBlendParameteriNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlendParameteriNV = GLMessage_Function_glBlendParameteriNV;$/;"	m	class:android::gltrace::GLMessage
glBlitFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlitFramebuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glBlitFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlitFramebuffer = GLMessage_Function_glBlitFramebuffer;$/;"	m	class:android::gltrace::GLMessage
glBlitFramebufferANGLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlitFramebufferANGLE;$/;"	m	class:android::gltrace::GLMessage	file:
glBlitFramebufferANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlitFramebufferANGLE = GLMessage_Function_glBlitFramebufferANGLE;$/;"	m	class:android::gltrace::GLMessage
glBlitFramebufferNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBlitFramebufferNV;$/;"	m	class:android::gltrace::GLMessage	file:
glBlitFramebufferNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBlitFramebufferNV = GLMessage_Function_glBlitFramebufferNV;$/;"	m	class:android::gltrace::GLMessage
glBufferData	opengl/libagl/array.cpp	/^void glBufferData(GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage)$/;"	f
glBufferData	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBufferData;$/;"	m	class:android::gltrace::GLMessage	file:
glBufferData	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBufferData = GLMessage_Function_glBufferData;$/;"	m	class:android::gltrace::GLMessage
glBufferSubData	opengl/libagl/array.cpp	/^void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data)$/;"	f
glBufferSubData	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glBufferSubData;$/;"	m	class:android::gltrace::GLMessage	file:
glBufferSubData	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glBufferSubData = GLMessage_Function_glBufferSubData;$/;"	m	class:android::gltrace::GLMessage
glCheckFramebufferStatus	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCheckFramebufferStatus;$/;"	m	class:android::gltrace::GLMessage	file:
glCheckFramebufferStatus	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCheckFramebufferStatus = GLMessage_Function_glCheckFramebufferStatus;$/;"	m	class:android::gltrace::GLMessage
glCheckFramebufferStatusOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCheckFramebufferStatusOES;$/;"	m	class:android::gltrace::GLMessage	file:
glCheckFramebufferStatusOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCheckFramebufferStatusOES = GLMessage_Function_glCheckFramebufferStatusOES;$/;"	m	class:android::gltrace::GLMessage
glClear	opengl/libagl/state.cpp	/^void glClear(GLbitfield mask) {$/;"	f
glClear	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClear;$/;"	m	class:android::gltrace::GLMessage	file:
glClear	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClear = GLMessage_Function_glClear;$/;"	m	class:android::gltrace::GLMessage
glClearBufferfi	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearBufferfi;$/;"	m	class:android::gltrace::GLMessage	file:
glClearBufferfi	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearBufferfi = GLMessage_Function_glClearBufferfi;$/;"	m	class:android::gltrace::GLMessage
glClearBufferfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearBufferfv;$/;"	m	class:android::gltrace::GLMessage	file:
glClearBufferfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearBufferfv = GLMessage_Function_glClearBufferfv;$/;"	m	class:android::gltrace::GLMessage
glClearBufferiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearBufferiv;$/;"	m	class:android::gltrace::GLMessage	file:
glClearBufferiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearBufferiv = GLMessage_Function_glClearBufferiv;$/;"	m	class:android::gltrace::GLMessage
glClearBufferuiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearBufferuiv;$/;"	m	class:android::gltrace::GLMessage	file:
glClearBufferuiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearBufferuiv = GLMessage_Function_glClearBufferuiv;$/;"	m	class:android::gltrace::GLMessage
glClearColor	opengl/libagl/state.cpp	/^void glClearColor(GLclampf r, GLclampf g, GLclampf b, GLclampf a)$/;"	f
glClearColor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearColor;$/;"	m	class:android::gltrace::GLMessage	file:
glClearColor	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearColor = GLMessage_Function_glClearColor;$/;"	m	class:android::gltrace::GLMessage
glClearColorx	opengl/libagl/state.cpp	/^void glClearColorx(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha) {$/;"	f
glClearColorx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearColorx;$/;"	m	class:android::gltrace::GLMessage	file:
glClearColorx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearColorx = GLMessage_Function_glClearColorx;$/;"	m	class:android::gltrace::GLMessage
glClearColorxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearColorxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glClearColorxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearColorxOES = GLMessage_Function_glClearColorxOES;$/;"	m	class:android::gltrace::GLMessage
glClearDepthf	opengl/libagl/state.cpp	/^void glClearDepthf(GLclampf depth)$/;"	f
glClearDepthf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearDepthf;$/;"	m	class:android::gltrace::GLMessage	file:
glClearDepthf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearDepthf = GLMessage_Function_glClearDepthf;$/;"	m	class:android::gltrace::GLMessage
glClearDepthfOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearDepthfOES;$/;"	m	class:android::gltrace::GLMessage	file:
glClearDepthfOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearDepthfOES = GLMessage_Function_glClearDepthfOES;$/;"	m	class:android::gltrace::GLMessage
glClearDepthx	opengl/libagl/state.cpp	/^void glClearDepthx(GLclampx depth) {$/;"	f
glClearDepthx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearDepthx;$/;"	m	class:android::gltrace::GLMessage	file:
glClearDepthx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearDepthx = GLMessage_Function_glClearDepthx;$/;"	m	class:android::gltrace::GLMessage
glClearDepthxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearDepthxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glClearDepthxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearDepthxOES = GLMessage_Function_glClearDepthxOES;$/;"	m	class:android::gltrace::GLMessage
glClearStencil	opengl/libagl/state.cpp	/^void glClearStencil(GLint s) {$/;"	f
glClearStencil	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClearStencil;$/;"	m	class:android::gltrace::GLMessage	file:
glClearStencil	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClearStencil = GLMessage_Function_glClearStencil;$/;"	m	class:android::gltrace::GLMessage
glClientActiveTexture	opengl/libagl/array.cpp	/^void glClientActiveTexture(GLenum texture)$/;"	f
glClientActiveTexture	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClientActiveTexture;$/;"	m	class:android::gltrace::GLMessage	file:
glClientActiveTexture	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClientActiveTexture = GLMessage_Function_glClientActiveTexture;$/;"	m	class:android::gltrace::GLMessage
glClientWaitSync	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClientWaitSync;$/;"	m	class:android::gltrace::GLMessage	file:
glClientWaitSync	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClientWaitSync = GLMessage_Function_glClientWaitSync;$/;"	m	class:android::gltrace::GLMessage
glClientWaitSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClientWaitSyncAPPLE;$/;"	m	class:android::gltrace::GLMessage	file:
glClientWaitSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClientWaitSyncAPPLE = GLMessage_Function_glClientWaitSyncAPPLE;$/;"	m	class:android::gltrace::GLMessage
glClipPlanef	opengl/libagl/vertex.cpp	/^void glClipPlanef(GLenum plane, const GLfloat* equ)$/;"	f
glClipPlanef	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClipPlanef;$/;"	m	class:android::gltrace::GLMessage	file:
glClipPlanef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClipPlanef = GLMessage_Function_glClipPlanef;$/;"	m	class:android::gltrace::GLMessage
glClipPlanefIMG	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClipPlanefIMG;$/;"	m	class:android::gltrace::GLMessage	file:
glClipPlanefIMG	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClipPlanefIMG = GLMessage_Function_glClipPlanefIMG;$/;"	m	class:android::gltrace::GLMessage
glClipPlanefOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClipPlanefOES;$/;"	m	class:android::gltrace::GLMessage	file:
glClipPlanefOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClipPlanefOES = GLMessage_Function_glClipPlanefOES;$/;"	m	class:android::gltrace::GLMessage
glClipPlanex	opengl/libagl/vertex.cpp	/^void glClipPlanex(GLenum plane, const GLfixed* equ)$/;"	f
glClipPlanex	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClipPlanex;$/;"	m	class:android::gltrace::GLMessage	file:
glClipPlanex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClipPlanex = GLMessage_Function_glClipPlanex;$/;"	m	class:android::gltrace::GLMessage
glClipPlanexIMG	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClipPlanexIMG;$/;"	m	class:android::gltrace::GLMessage	file:
glClipPlanexIMG	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClipPlanexIMG = GLMessage_Function_glClipPlanexIMG;$/;"	m	class:android::gltrace::GLMessage
glClipPlanexOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glClipPlanexOES;$/;"	m	class:android::gltrace::GLMessage	file:
glClipPlanexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glClipPlanexOES = GLMessage_Function_glClipPlanexOES;$/;"	m	class:android::gltrace::GLMessage
glColor4f	opengl/libagl/vertex.cpp	/^void glColor4f(GLfloat r, GLfloat g, GLfloat b, GLfloat a)$/;"	f
glColor4f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glColor4f;$/;"	m	class:android::gltrace::GLMessage	file:
glColor4f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glColor4f = GLMessage_Function_glColor4f;$/;"	m	class:android::gltrace::GLMessage
glColor4ub	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glColor4ub;$/;"	m	class:android::gltrace::GLMessage	file:
glColor4ub	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glColor4ub = GLMessage_Function_glColor4ub;$/;"	m	class:android::gltrace::GLMessage
glColor4x	opengl/libagl/vertex.cpp	/^void glColor4x(GLfixed r, GLfixed g, GLfixed b, GLfixed a)$/;"	f
glColor4x	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glColor4x;$/;"	m	class:android::gltrace::GLMessage	file:
glColor4x	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glColor4x = GLMessage_Function_glColor4x;$/;"	m	class:android::gltrace::GLMessage
glColor4xOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glColor4xOES;$/;"	m	class:android::gltrace::GLMessage	file:
glColor4xOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glColor4xOES = GLMessage_Function_glColor4xOES;$/;"	m	class:android::gltrace::GLMessage
glColorMask	opengl/libagl/state.cpp	/^void glColorMask(GLboolean r, GLboolean g, GLboolean b, GLboolean a) {$/;"	f
glColorMask	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glColorMask;$/;"	m	class:android::gltrace::GLMessage	file:
glColorMask	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glColorMask = GLMessage_Function_glColorMask;$/;"	m	class:android::gltrace::GLMessage
glColorMaskiEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glColorMaskiEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glColorMaskiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glColorMaskiEXT = GLMessage_Function_glColorMaskiEXT;$/;"	m	class:android::gltrace::GLMessage
glColorPointer	opengl/libagl/array.cpp	/^void glColorPointer($/;"	f
glColorPointer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glColorPointer;$/;"	m	class:android::gltrace::GLMessage	file:
glColorPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glColorPointer = GLMessage_Function_glColorPointer;$/;"	m	class:android::gltrace::GLMessage
glColorPointerBounds	opengl/libs/GLES_CM/gl.cpp	/^void glColorPointerBounds(GLint size, GLenum type, GLsizei stride,$/;"	f
glCompileShader	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCompileShader;$/;"	m	class:android::gltrace::GLMessage	file:
glCompileShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCompileShader = GLMessage_Function_glCompileShader;$/;"	m	class:android::gltrace::GLMessage
glCompressedTexImage2D	opengl/libagl/texture.cpp	/^void glCompressedTexImage2D($/;"	f
glCompressedTexImage2D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCompressedTexImage2D;$/;"	m	class:android::gltrace::GLMessage	file:
glCompressedTexImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCompressedTexImage2D = GLMessage_Function_glCompressedTexImage2D;$/;"	m	class:android::gltrace::GLMessage
glCompressedTexImage3D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCompressedTexImage3D;$/;"	m	class:android::gltrace::GLMessage	file:
glCompressedTexImage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCompressedTexImage3D = GLMessage_Function_glCompressedTexImage3D;$/;"	m	class:android::gltrace::GLMessage
glCompressedTexImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCompressedTexImage3DOES;$/;"	m	class:android::gltrace::GLMessage	file:
glCompressedTexImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCompressedTexImage3DOES = GLMessage_Function_glCompressedTexImage3DOES;$/;"	m	class:android::gltrace::GLMessage
glCompressedTexSubImage2D	opengl/libagl/texture.cpp	/^void glCompressedTexSubImage2D($/;"	f
glCompressedTexSubImage2D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCompressedTexSubImage2D;$/;"	m	class:android::gltrace::GLMessage	file:
glCompressedTexSubImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCompressedTexSubImage2D = GLMessage_Function_glCompressedTexSubImage2D;$/;"	m	class:android::gltrace::GLMessage
glCompressedTexSubImage3D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCompressedTexSubImage3D;$/;"	m	class:android::gltrace::GLMessage	file:
glCompressedTexSubImage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCompressedTexSubImage3D = GLMessage_Function_glCompressedTexSubImage3D;$/;"	m	class:android::gltrace::GLMessage
glCompressedTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCompressedTexSubImage3DOES;$/;"	m	class:android::gltrace::GLMessage	file:
glCompressedTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCompressedTexSubImage3DOES = GLMessage_Function_glCompressedTexSubImage3DOES;$/;"	m	class:android::gltrace::GLMessage
glCopyBufferSubData	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCopyBufferSubData;$/;"	m	class:android::gltrace::GLMessage	file:
glCopyBufferSubData	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCopyBufferSubData = GLMessage_Function_glCopyBufferSubData;$/;"	m	class:android::gltrace::GLMessage
glCopyBufferSubDataNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCopyBufferSubDataNV;$/;"	m	class:android::gltrace::GLMessage	file:
glCopyBufferSubDataNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCopyBufferSubDataNV = GLMessage_Function_glCopyBufferSubDataNV;$/;"	m	class:android::gltrace::GLMessage
glCopyImageSubDataEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCopyImageSubDataEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glCopyImageSubDataEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCopyImageSubDataEXT = GLMessage_Function_glCopyImageSubDataEXT;$/;"	m	class:android::gltrace::GLMessage
glCopyTexImage2D	opengl/libagl/texture.cpp	/^void glCopyTexImage2D($/;"	f
glCopyTexImage2D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCopyTexImage2D;$/;"	m	class:android::gltrace::GLMessage	file:
glCopyTexImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCopyTexImage2D = GLMessage_Function_glCopyTexImage2D;$/;"	m	class:android::gltrace::GLMessage
glCopyTexSubImage2D	opengl/libagl/texture.cpp	/^void glCopyTexSubImage2D($/;"	f
glCopyTexSubImage2D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCopyTexSubImage2D;$/;"	m	class:android::gltrace::GLMessage	file:
glCopyTexSubImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCopyTexSubImage2D = GLMessage_Function_glCopyTexSubImage2D;$/;"	m	class:android::gltrace::GLMessage
glCopyTexSubImage3D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCopyTexSubImage3D;$/;"	m	class:android::gltrace::GLMessage	file:
glCopyTexSubImage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCopyTexSubImage3D = GLMessage_Function_glCopyTexSubImage3D;$/;"	m	class:android::gltrace::GLMessage
glCopyTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCopyTexSubImage3DOES;$/;"	m	class:android::gltrace::GLMessage	file:
glCopyTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCopyTexSubImage3DOES = GLMessage_Function_glCopyTexSubImage3DOES;$/;"	m	class:android::gltrace::GLMessage
glCopyTextureLevelsAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCopyTextureLevelsAPPLE;$/;"	m	class:android::gltrace::GLMessage	file:
glCopyTextureLevelsAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCopyTextureLevelsAPPLE = GLMessage_Function_glCopyTextureLevelsAPPLE;$/;"	m	class:android::gltrace::GLMessage
glCoreARBPat	opengl/tools/glgen2/registry/genheaders.py	/^glCoreARBPat    = None$/;"	v
glCorearbPlatformStrings	opengl/tools/glgen2/registry/genheaders.py	/^glCorearbPlatformStrings = glExtPlatformStrings + [$/;"	v
glCoverageMaskNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCoverageMaskNV;$/;"	m	class:android::gltrace::GLMessage	file:
glCoverageMaskNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCoverageMaskNV = GLMessage_Function_glCoverageMaskNV;$/;"	m	class:android::gltrace::GLMessage
glCoverageOperationNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCoverageOperationNV;$/;"	m	class:android::gltrace::GLMessage	file:
glCoverageOperationNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCoverageOperationNV = GLMessage_Function_glCoverageOperationNV;$/;"	m	class:android::gltrace::GLMessage
glCreatePerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCreatePerfQueryINTEL;$/;"	m	class:android::gltrace::GLMessage	file:
glCreatePerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCreatePerfQueryINTEL = GLMessage_Function_glCreatePerfQueryINTEL;$/;"	m	class:android::gltrace::GLMessage
glCreateProgram	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCreateProgram;$/;"	m	class:android::gltrace::GLMessage	file:
glCreateProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCreateProgram = GLMessage_Function_glCreateProgram;$/;"	m	class:android::gltrace::GLMessage
glCreateShader	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCreateShader;$/;"	m	class:android::gltrace::GLMessage	file:
glCreateShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCreateShader = GLMessage_Function_glCreateShader;$/;"	m	class:android::gltrace::GLMessage
glCreateShaderProgramv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCreateShaderProgramv;$/;"	m	class:android::gltrace::GLMessage	file:
glCreateShaderProgramv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCreateShaderProgramv = GLMessage_Function_glCreateShaderProgramv;$/;"	m	class:android::gltrace::GLMessage
glCreateShaderProgramv	opengl/tools/glgen/stubs/gles11/glCreateShaderProgramv.java	/^    public static native int glCreateShaderProgramv($/;"	m
glCreateShaderProgramvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCreateShaderProgramvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glCreateShaderProgramvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCreateShaderProgramvEXT = GLMessage_Function_glCreateShaderProgramvEXT;$/;"	m	class:android::gltrace::GLMessage
glCullFace	opengl/libagl/state.cpp	/^void glCullFace(GLenum mode)$/;"	f
glCullFace	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCullFace;$/;"	m	class:android::gltrace::GLMessage	file:
glCullFace	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCullFace = GLMessage_Function_glCullFace;$/;"	m	class:android::gltrace::GLMessage
glCurrentPaletteMatrixOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glCurrentPaletteMatrixOES;$/;"	m	class:android::gltrace::GLMessage	file:
glCurrentPaletteMatrixOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glCurrentPaletteMatrixOES = GLMessage_Function_glCurrentPaletteMatrixOES;$/;"	m	class:android::gltrace::GLMessage
glDebugMessageCallbackKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDebugMessageCallbackKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glDebugMessageCallbackKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDebugMessageCallbackKHR = GLMessage_Function_glDebugMessageCallbackKHR;$/;"	m	class:android::gltrace::GLMessage
glDebugMessageCallbackKHR	opengl/tools/glgen/stubs/gles11/glDebugMessageCallbackKHR.java	/^    public static native void glDebugMessageCallbackKHR(DebugProcKHR callback);$/;"	m
glDebugMessageControlKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDebugMessageControlKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glDebugMessageControlKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDebugMessageControlKHR = GLMessage_Function_glDebugMessageControlKHR;$/;"	m	class:android::gltrace::GLMessage
glDebugMessageInsertKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDebugMessageInsertKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glDebugMessageInsertKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDebugMessageInsertKHR = GLMessage_Function_glDebugMessageInsertKHR;$/;"	m	class:android::gltrace::GLMessage
glDebugMessageInsertKHR	opengl/tools/glgen/stubs/gles11/glDebugMessageInsertKHR.java	/^    public static native void glDebugMessageInsertKHR($/;"	m
glDeleteBuffers	opengl/libagl/array.cpp	/^void glDeleteBuffers(GLsizei n, const GLuint* buffers)$/;"	f
glDeleteBuffers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteBuffers;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteBuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteBuffers = GLMessage_Function_glDeleteBuffers;$/;"	m	class:android::gltrace::GLMessage
glDeleteFencesNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteFencesNV;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteFencesNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteFencesNV = GLMessage_Function_glDeleteFencesNV;$/;"	m	class:android::gltrace::GLMessage
glDeleteFramebuffers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteFramebuffers;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteFramebuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteFramebuffers = GLMessage_Function_glDeleteFramebuffers;$/;"	m	class:android::gltrace::GLMessage
glDeleteFramebuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteFramebuffersOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteFramebuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteFramebuffersOES = GLMessage_Function_glDeleteFramebuffersOES;$/;"	m	class:android::gltrace::GLMessage
glDeletePerfMonitorsAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeletePerfMonitorsAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glDeletePerfMonitorsAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeletePerfMonitorsAMD = GLMessage_Function_glDeletePerfMonitorsAMD;$/;"	m	class:android::gltrace::GLMessage
glDeletePerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeletePerfQueryINTEL;$/;"	m	class:android::gltrace::GLMessage	file:
glDeletePerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeletePerfQueryINTEL = GLMessage_Function_glDeletePerfQueryINTEL;$/;"	m	class:android::gltrace::GLMessage
glDeleteProgram	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteProgram;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteProgram = GLMessage_Function_glDeleteProgram;$/;"	m	class:android::gltrace::GLMessage
glDeleteProgramPipelines	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteProgramPipelines;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteProgramPipelines	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteProgramPipelines = GLMessage_Function_glDeleteProgramPipelines;$/;"	m	class:android::gltrace::GLMessage
glDeleteProgramPipelinesEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteProgramPipelinesEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteProgramPipelinesEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteProgramPipelinesEXT = GLMessage_Function_glDeleteProgramPipelinesEXT;$/;"	m	class:android::gltrace::GLMessage
glDeleteQueries	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteQueries;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteQueries	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteQueries = GLMessage_Function_glDeleteQueries;$/;"	m	class:android::gltrace::GLMessage
glDeleteQueriesEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteQueriesEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteQueriesEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteQueriesEXT = GLMessage_Function_glDeleteQueriesEXT;$/;"	m	class:android::gltrace::GLMessage
glDeleteRenderbuffers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteRenderbuffers;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteRenderbuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteRenderbuffers = GLMessage_Function_glDeleteRenderbuffers;$/;"	m	class:android::gltrace::GLMessage
glDeleteRenderbuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteRenderbuffersOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteRenderbuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteRenderbuffersOES = GLMessage_Function_glDeleteRenderbuffersOES;$/;"	m	class:android::gltrace::GLMessage
glDeleteSamplers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteSamplers;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteSamplers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteSamplers = GLMessage_Function_glDeleteSamplers;$/;"	m	class:android::gltrace::GLMessage
glDeleteShader	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteShader;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteShader = GLMessage_Function_glDeleteShader;$/;"	m	class:android::gltrace::GLMessage
glDeleteSync	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteSync;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteSync	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteSync = GLMessage_Function_glDeleteSync;$/;"	m	class:android::gltrace::GLMessage
glDeleteSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteSyncAPPLE;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteSyncAPPLE = GLMessage_Function_glDeleteSyncAPPLE;$/;"	m	class:android::gltrace::GLMessage
glDeleteTextures	opengl/libagl/texture.cpp	/^void glDeleteTextures(GLsizei n, const GLuint *textures)$/;"	f
glDeleteTextures	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteTextures;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteTextures	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteTextures = GLMessage_Function_glDeleteTextures;$/;"	m	class:android::gltrace::GLMessage
glDeleteTransformFeedbacks	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteTransformFeedbacks;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteTransformFeedbacks	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteTransformFeedbacks = GLMessage_Function_glDeleteTransformFeedbacks;$/;"	m	class:android::gltrace::GLMessage
glDeleteVertexArrays	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteVertexArrays;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteVertexArrays	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteVertexArrays = GLMessage_Function_glDeleteVertexArrays;$/;"	m	class:android::gltrace::GLMessage
glDeleteVertexArraysOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDeleteVertexArraysOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDeleteVertexArraysOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDeleteVertexArraysOES = GLMessage_Function_glDeleteVertexArraysOES;$/;"	m	class:android::gltrace::GLMessage
glDepthFunc	opengl/libagl/state.cpp	/^void glDepthFunc(GLenum func) {$/;"	f
glDepthFunc	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDepthFunc;$/;"	m	class:android::gltrace::GLMessage	file:
glDepthFunc	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDepthFunc = GLMessage_Function_glDepthFunc;$/;"	m	class:android::gltrace::GLMessage
glDepthMask	opengl/libagl/state.cpp	/^void glDepthMask(GLboolean flag) {$/;"	f
glDepthMask	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDepthMask;$/;"	m	class:android::gltrace::GLMessage	file:
glDepthMask	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDepthMask = GLMessage_Function_glDepthMask;$/;"	m	class:android::gltrace::GLMessage
glDepthRangef	opengl/libagl/matrix.cpp	/^void glDepthRangef(GLclampf zNear, GLclampf zFar)$/;"	f
glDepthRangef	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDepthRangef;$/;"	m	class:android::gltrace::GLMessage	file:
glDepthRangef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDepthRangef = GLMessage_Function_glDepthRangef;$/;"	m	class:android::gltrace::GLMessage
glDepthRangefOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDepthRangefOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDepthRangefOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDepthRangefOES = GLMessage_Function_glDepthRangefOES;$/;"	m	class:android::gltrace::GLMessage
glDepthRangex	opengl/libagl/matrix.cpp	/^void glDepthRangex(GLclampx zNear, GLclampx zFar)$/;"	f
glDepthRangex	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDepthRangex;$/;"	m	class:android::gltrace::GLMessage	file:
glDepthRangex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDepthRangex = GLMessage_Function_glDepthRangex;$/;"	m	class:android::gltrace::GLMessage
glDepthRangexOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDepthRangexOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDepthRangexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDepthRangexOES = GLMessage_Function_glDepthRangexOES;$/;"	m	class:android::gltrace::GLMessage
glDetachShader	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDetachShader;$/;"	m	class:android::gltrace::GLMessage	file:
glDetachShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDetachShader = GLMessage_Function_glDetachShader;$/;"	m	class:android::gltrace::GLMessage
glDisable	opengl/libagl/state.cpp	/^void glDisable(GLenum cap) {$/;"	f
glDisable	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDisable;$/;"	m	class:android::gltrace::GLMessage	file:
glDisable	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDisable = GLMessage_Function_glDisable;$/;"	m	class:android::gltrace::GLMessage
glDisableClientState	opengl/libagl/array.cpp	/^void glDisableClientState(GLenum array) {$/;"	f
glDisableClientState	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDisableClientState;$/;"	m	class:android::gltrace::GLMessage	file:
glDisableClientState	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDisableClientState = GLMessage_Function_glDisableClientState;$/;"	m	class:android::gltrace::GLMessage
glDisableDriverControlQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDisableDriverControlQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glDisableDriverControlQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDisableDriverControlQCOM = GLMessage_Function_glDisableDriverControlQCOM;$/;"	m	class:android::gltrace::GLMessage
glDisableVertexAttribArray	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDisableVertexAttribArray;$/;"	m	class:android::gltrace::GLMessage	file:
glDisableVertexAttribArray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDisableVertexAttribArray = GLMessage_Function_glDisableVertexAttribArray;$/;"	m	class:android::gltrace::GLMessage
glDisableiEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDisableiEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glDisableiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDisableiEXT = GLMessage_Function_glDisableiEXT;$/;"	m	class:android::gltrace::GLMessage
glDiscardFramebufferEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDiscardFramebufferEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glDiscardFramebufferEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDiscardFramebufferEXT = GLMessage_Function_glDiscardFramebufferEXT;$/;"	m	class:android::gltrace::GLMessage
glDispatchCompute	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDispatchCompute;$/;"	m	class:android::gltrace::GLMessage	file:
glDispatchCompute	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDispatchCompute = GLMessage_Function_glDispatchCompute;$/;"	m	class:android::gltrace::GLMessage
glDispatchComputeIndirect	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDispatchComputeIndirect;$/;"	m	class:android::gltrace::GLMessage	file:
glDispatchComputeIndirect	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDispatchComputeIndirect = GLMessage_Function_glDispatchComputeIndirect;$/;"	m	class:android::gltrace::GLMessage
glDispatchComputeIndirect	opengl/tools/glgen/stubs/gles11/glDispatchComputeIndirect.java	/^    public static native void glDispatchComputeIndirect(long indirect);$/;"	m
glDrawArrays	opengl/libagl/array.cpp	/^void glDrawArrays(GLenum mode, GLint first, GLsizei count)$/;"	f
glDrawArrays	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawArrays;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawArrays	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawArrays = GLMessage_Function_glDrawArrays;$/;"	m	class:android::gltrace::GLMessage
glDrawArraysIndirect	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawArraysIndirect;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawArraysIndirect	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawArraysIndirect = GLMessage_Function_glDrawArraysIndirect;$/;"	m	class:android::gltrace::GLMessage
glDrawArraysIndirect	opengl/tools/glgen/stubs/gles11/glDrawArraysIndirect.java	/^    public static native void glDrawArraysIndirect(int mode, long indirect);$/;"	m
glDrawArraysInstanced	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawArraysInstanced;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawArraysInstanced	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawArraysInstanced = GLMessage_Function_glDrawArraysInstanced;$/;"	m	class:android::gltrace::GLMessage
glDrawArraysInstancedANGLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawArraysInstancedANGLE;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawArraysInstancedANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawArraysInstancedANGLE = GLMessage_Function_glDrawArraysInstancedANGLE;$/;"	m	class:android::gltrace::GLMessage
glDrawArraysInstancedEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawArraysInstancedEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawArraysInstancedEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawArraysInstancedEXT = GLMessage_Function_glDrawArraysInstancedEXT;$/;"	m	class:android::gltrace::GLMessage
glDrawArraysInstancedNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawArraysInstancedNV;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawArraysInstancedNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawArraysInstancedNV = GLMessage_Function_glDrawArraysInstancedNV;$/;"	m	class:android::gltrace::GLMessage
glDrawBuffers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawBuffers;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawBuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawBuffers = GLMessage_Function_glDrawBuffers;$/;"	m	class:android::gltrace::GLMessage
glDrawBuffersEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawBuffersEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawBuffersEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawBuffersEXT = GLMessage_Function_glDrawBuffersEXT;$/;"	m	class:android::gltrace::GLMessage
glDrawBuffersIndexedEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawBuffersIndexedEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawBuffersIndexedEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawBuffersIndexedEXT = GLMessage_Function_glDrawBuffersIndexedEXT;$/;"	m	class:android::gltrace::GLMessage
glDrawBuffersNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawBuffersNV;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawBuffersNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawBuffersNV = GLMessage_Function_glDrawBuffersNV;$/;"	m	class:android::gltrace::GLMessage
glDrawElements	opengl/libagl/array.cpp	/^void glDrawElements($/;"	f
glDrawElements	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawElements;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawElements	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawElements = GLMessage_Function_glDrawElements;$/;"	m	class:android::gltrace::GLMessage
glDrawElementsIndirect	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawElementsIndirect;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawElementsIndirect	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawElementsIndirect = GLMessage_Function_glDrawElementsIndirect;$/;"	m	class:android::gltrace::GLMessage
glDrawElementsIndirect	opengl/tools/glgen/stubs/gles11/glDrawElementsIndirect.java	/^    public static native void glDrawElementsIndirect(int mode, int type, long indirect);$/;"	m
glDrawElementsInstanced	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawElementsInstanced;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawElementsInstanced	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawElementsInstanced = GLMessage_Function_glDrawElementsInstanced;$/;"	m	class:android::gltrace::GLMessage
glDrawElementsInstanced	opengl/tools/glgen/stubs/gles11/glDrawElementsInstanced.java	/^    public static native void glDrawElementsInstanced($/;"	m
glDrawElementsInstancedANGLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawElementsInstancedANGLE;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawElementsInstancedANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawElementsInstancedANGLE = GLMessage_Function_glDrawElementsInstancedANGLE;$/;"	m	class:android::gltrace::GLMessage
glDrawElementsInstancedEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawElementsInstancedEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawElementsInstancedEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawElementsInstancedEXT = GLMessage_Function_glDrawElementsInstancedEXT;$/;"	m	class:android::gltrace::GLMessage
glDrawElementsInstancedNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawElementsInstancedNV;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawElementsInstancedNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawElementsInstancedNV = GLMessage_Function_glDrawElementsInstancedNV;$/;"	m	class:android::gltrace::GLMessage
glDrawRangeElements	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawRangeElements;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawRangeElements	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawRangeElements = GLMessage_Function_glDrawRangeElements;$/;"	m	class:android::gltrace::GLMessage
glDrawTexfOES	opengl/libagl/texture.cpp	/^void glDrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat w, GLfloat h){$/;"	f
glDrawTexfOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawTexfOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawTexfOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawTexfOES = GLMessage_Function_glDrawTexfOES;$/;"	m	class:android::gltrace::GLMessage
glDrawTexfvOES	opengl/libagl/texture.cpp	/^void glDrawTexfvOES(const GLfloat* coords) {$/;"	f
glDrawTexfvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawTexfvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawTexfvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawTexfvOES = GLMessage_Function_glDrawTexfvOES;$/;"	m	class:android::gltrace::GLMessage
glDrawTexiOES	opengl/libagl/texture.cpp	/^void glDrawTexiOES(GLint x, GLint y, GLint z, GLint w, GLint h) {$/;"	f
glDrawTexiOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawTexiOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawTexiOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawTexiOES = GLMessage_Function_glDrawTexiOES;$/;"	m	class:android::gltrace::GLMessage
glDrawTexivOES	opengl/libagl/texture.cpp	/^void glDrawTexivOES(const GLint* coords) {$/;"	f
glDrawTexivOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawTexivOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawTexivOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawTexivOES = GLMessage_Function_glDrawTexivOES;$/;"	m	class:android::gltrace::GLMessage
glDrawTexsOES	opengl/libagl/texture.cpp	/^void glDrawTexsOES(GLshort x , GLshort y, GLshort z, GLshort w, GLshort h) {$/;"	f
glDrawTexsOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawTexsOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawTexsOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawTexsOES = GLMessage_Function_glDrawTexsOES;$/;"	m	class:android::gltrace::GLMessage
glDrawTexsvOES	opengl/libagl/texture.cpp	/^void glDrawTexsvOES(const GLshort* coords) {$/;"	f
glDrawTexsvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawTexsvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawTexsvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawTexsvOES = GLMessage_Function_glDrawTexsvOES;$/;"	m	class:android::gltrace::GLMessage
glDrawTexxOES	opengl/libagl/texture.cpp	/^void glDrawTexxOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w, GLfixed h) {$/;"	f
glDrawTexxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawTexxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawTexxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawTexxOES = GLMessage_Function_glDrawTexxOES;$/;"	m	class:android::gltrace::GLMessage
glDrawTexxvOES	opengl/libagl/texture.cpp	/^void glDrawTexxvOES(const GLfixed* coords) {$/;"	f
glDrawTexxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glDrawTexxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glDrawTexxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glDrawTexxvOES = GLMessage_Function_glDrawTexxvOES;$/;"	m	class:android::gltrace::GLMessage
glEGLImageTargetRenderbufferStorageOES	opengl/libagl/texture.cpp	/^void glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image)$/;"	f
glEGLImageTargetRenderbufferStorageOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEGLImageTargetRenderbufferStorageOES;$/;"	m	class:android::gltrace::GLMessage	file:
glEGLImageTargetRenderbufferStorageOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEGLImageTargetRenderbufferStorageOES = GLMessage_Function_glEGLImageTargetRenderbufferStorageOES;$/;"	m	class:android::gltrace::GLMessage
glEGLImageTargetTexture2DOES	opengl/libagl/texture.cpp	/^void glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image)$/;"	f
glEGLImageTargetTexture2DOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEGLImageTargetTexture2DOES;$/;"	m	class:android::gltrace::GLMessage	file:
glEGLImageTargetTexture2DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEGLImageTargetTexture2DOES = GLMessage_Function_glEGLImageTargetTexture2DOES;$/;"	m	class:android::gltrace::GLMessage
glEnable	opengl/libagl/state.cpp	/^void glEnable(GLenum cap) {$/;"	f
glEnable	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEnable;$/;"	m	class:android::gltrace::GLMessage	file:
glEnable	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEnable = GLMessage_Function_glEnable;$/;"	m	class:android::gltrace::GLMessage
glEnableClientState	opengl/libagl/array.cpp	/^void glEnableClientState(GLenum array) {$/;"	f
glEnableClientState	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEnableClientState;$/;"	m	class:android::gltrace::GLMessage	file:
glEnableClientState	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEnableClientState = GLMessage_Function_glEnableClientState;$/;"	m	class:android::gltrace::GLMessage
glEnableDriverControlQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEnableDriverControlQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glEnableDriverControlQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEnableDriverControlQCOM = GLMessage_Function_glEnableDriverControlQCOM;$/;"	m	class:android::gltrace::GLMessage
glEnableVertexAttribArray	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEnableVertexAttribArray;$/;"	m	class:android::gltrace::GLMessage	file:
glEnableVertexAttribArray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEnableVertexAttribArray = GLMessage_Function_glEnableVertexAttribArray;$/;"	m	class:android::gltrace::GLMessage
glEnableiEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEnableiEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glEnableiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEnableiEXT = GLMessage_Function_glEnableiEXT;$/;"	m	class:android::gltrace::GLMessage
glEndPerfMonitorAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEndPerfMonitorAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glEndPerfMonitorAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEndPerfMonitorAMD = GLMessage_Function_glEndPerfMonitorAMD;$/;"	m	class:android::gltrace::GLMessage
glEndPerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEndPerfQueryINTEL;$/;"	m	class:android::gltrace::GLMessage	file:
glEndPerfQueryINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEndPerfQueryINTEL = GLMessage_Function_glEndPerfQueryINTEL;$/;"	m	class:android::gltrace::GLMessage
glEndQuery	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEndQuery;$/;"	m	class:android::gltrace::GLMessage	file:
glEndQuery	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEndQuery = GLMessage_Function_glEndQuery;$/;"	m	class:android::gltrace::GLMessage
glEndQueryEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEndQueryEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glEndQueryEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEndQueryEXT = GLMessage_Function_glEndQueryEXT;$/;"	m	class:android::gltrace::GLMessage
glEndTilingQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEndTilingQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glEndTilingQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEndTilingQCOM = GLMessage_Function_glEndTilingQCOM;$/;"	m	class:android::gltrace::GLMessage
glEndTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glEndTransformFeedback;$/;"	m	class:android::gltrace::GLMessage	file:
glEndTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glEndTransformFeedback = GLMessage_Function_glEndTransformFeedback;$/;"	m	class:android::gltrace::GLMessage
glExtGetBufferPointervQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtGetBufferPointervQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtGetBufferPointervQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtGetBufferPointervQCOM = GLMessage_Function_glExtGetBufferPointervQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtGetBuffersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtGetBuffersQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtGetBuffersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtGetBuffersQCOM = GLMessage_Function_glExtGetBuffersQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtGetFramebuffersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtGetFramebuffersQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtGetFramebuffersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtGetFramebuffersQCOM = GLMessage_Function_glExtGetFramebuffersQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtGetProgramBinarySourceQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtGetProgramBinarySourceQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtGetProgramBinarySourceQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtGetProgramBinarySourceQCOM = GLMessage_Function_glExtGetProgramBinarySourceQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtGetProgramsQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtGetProgramsQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtGetProgramsQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtGetProgramsQCOM = GLMessage_Function_glExtGetProgramsQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtGetRenderbuffersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtGetRenderbuffersQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtGetRenderbuffersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtGetRenderbuffersQCOM = GLMessage_Function_glExtGetRenderbuffersQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtGetShadersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtGetShadersQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtGetShadersQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtGetShadersQCOM = GLMessage_Function_glExtGetShadersQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtGetTexLevelParameterivQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtGetTexLevelParameterivQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtGetTexLevelParameterivQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtGetTexLevelParameterivQCOM = GLMessage_Function_glExtGetTexLevelParameterivQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtGetTexSubImageQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtGetTexSubImageQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtGetTexSubImageQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtGetTexSubImageQCOM = GLMessage_Function_glExtGetTexSubImageQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtGetTexturesQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtGetTexturesQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtGetTexturesQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtGetTexturesQCOM = GLMessage_Function_glExtGetTexturesQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtIsProgramBinaryQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtIsProgramBinaryQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtIsProgramBinaryQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtIsProgramBinaryQCOM = GLMessage_Function_glExtIsProgramBinaryQCOM;$/;"	m	class:android::gltrace::GLMessage
glExtPlatformStrings	opengl/tools/glgen2/registry/genheaders.py	/^glExtPlatformStrings = [$/;"	v
glExtTexObjectStateOverrideiQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glExtTexObjectStateOverrideiQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glExtTexObjectStateOverrideiQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glExtTexObjectStateOverrideiQCOM = GLMessage_Function_glExtTexObjectStateOverrideiQCOM;$/;"	m	class:android::gltrace::GLMessage
glFenceSync	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFenceSync;$/;"	m	class:android::gltrace::GLMessage	file:
glFenceSync	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFenceSync = GLMessage_Function_glFenceSync;$/;"	m	class:android::gltrace::GLMessage
glFenceSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFenceSyncAPPLE;$/;"	m	class:android::gltrace::GLMessage	file:
glFenceSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFenceSyncAPPLE = GLMessage_Function_glFenceSyncAPPLE;$/;"	m	class:android::gltrace::GLMessage
glFinish	opengl/libagl/state.cpp	/^void glFinish()$/;"	f
glFinish	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFinish;$/;"	m	class:android::gltrace::GLMessage	file:
glFinish	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFinish = GLMessage_Function_glFinish;$/;"	m	class:android::gltrace::GLMessage
glFinishFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFinishFenceNV;$/;"	m	class:android::gltrace::GLMessage	file:
glFinishFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFinishFenceNV = GLMessage_Function_glFinishFenceNV;$/;"	m	class:android::gltrace::GLMessage
glFlush	opengl/libagl/state.cpp	/^void glFlush()$/;"	f
glFlush	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFlush;$/;"	m	class:android::gltrace::GLMessage	file:
glFlush	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFlush = GLMessage_Function_glFlush;$/;"	m	class:android::gltrace::GLMessage
glFlushMappedBufferRange	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFlushMappedBufferRange;$/;"	m	class:android::gltrace::GLMessage	file:
glFlushMappedBufferRange	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFlushMappedBufferRange = GLMessage_Function_glFlushMappedBufferRange;$/;"	m	class:android::gltrace::GLMessage
glFlushMappedBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFlushMappedBufferRangeEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glFlushMappedBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFlushMappedBufferRangeEXT = GLMessage_Function_glFlushMappedBufferRangeEXT;$/;"	m	class:android::gltrace::GLMessage
glFogf	opengl/libagl/light.cpp	/^void glFogf(GLenum pname, GLfloat param) {$/;"	f
glFogf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFogf;$/;"	m	class:android::gltrace::GLMessage	file:
glFogf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFogf = GLMessage_Function_glFogf;$/;"	m	class:android::gltrace::GLMessage
glFogfv	opengl/libagl/light.cpp	/^void glFogfv(GLenum pname, const GLfloat *params)$/;"	f
glFogfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFogfv;$/;"	m	class:android::gltrace::GLMessage	file:
glFogfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFogfv = GLMessage_Function_glFogfv;$/;"	m	class:android::gltrace::GLMessage
glFogx	opengl/libagl/light.cpp	/^void glFogx(GLenum pname, GLfixed param) {$/;"	f
glFogx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFogx;$/;"	m	class:android::gltrace::GLMessage	file:
glFogx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFogx = GLMessage_Function_glFogx;$/;"	m	class:android::gltrace::GLMessage
glFogxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFogxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glFogxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFogxOES = GLMessage_Function_glFogxOES;$/;"	m	class:android::gltrace::GLMessage
glFogxv	opengl/libagl/light.cpp	/^void glFogxv(GLenum pname, const GLfixed *params)$/;"	f
glFogxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFogxv;$/;"	m	class:android::gltrace::GLMessage	file:
glFogxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFogxv = GLMessage_Function_glFogxv;$/;"	m	class:android::gltrace::GLMessage
glFogxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFogxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glFogxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFogxvOES = GLMessage_Function_glFogxvOES;$/;"	m	class:android::gltrace::GLMessage
glFramebufferParameteri	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFramebufferParameteri;$/;"	m	class:android::gltrace::GLMessage	file:
glFramebufferParameteri	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFramebufferParameteri = GLMessage_Function_glFramebufferParameteri;$/;"	m	class:android::gltrace::GLMessage
glFramebufferRenderbuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFramebufferRenderbuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glFramebufferRenderbuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFramebufferRenderbuffer = GLMessage_Function_glFramebufferRenderbuffer;$/;"	m	class:android::gltrace::GLMessage
glFramebufferRenderbufferOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFramebufferRenderbufferOES;$/;"	m	class:android::gltrace::GLMessage	file:
glFramebufferRenderbufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFramebufferRenderbufferOES = GLMessage_Function_glFramebufferRenderbufferOES;$/;"	m	class:android::gltrace::GLMessage
glFramebufferTexture2D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFramebufferTexture2D;$/;"	m	class:android::gltrace::GLMessage	file:
glFramebufferTexture2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFramebufferTexture2D = GLMessage_Function_glFramebufferTexture2D;$/;"	m	class:android::gltrace::GLMessage
glFramebufferTexture2DMultisampleEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFramebufferTexture2DMultisampleEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glFramebufferTexture2DMultisampleEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFramebufferTexture2DMultisampleEXT = GLMessage_Function_glFramebufferTexture2DMultisampleEXT;$/;"	m	class:android::gltrace::GLMessage
glFramebufferTexture2DMultisampleIMG	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFramebufferTexture2DMultisampleIMG;$/;"	m	class:android::gltrace::GLMessage	file:
glFramebufferTexture2DMultisampleIMG	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFramebufferTexture2DMultisampleIMG = GLMessage_Function_glFramebufferTexture2DMultisampleIMG;$/;"	m	class:android::gltrace::GLMessage
glFramebufferTexture2DOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFramebufferTexture2DOES;$/;"	m	class:android::gltrace::GLMessage	file:
glFramebufferTexture2DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFramebufferTexture2DOES = GLMessage_Function_glFramebufferTexture2DOES;$/;"	m	class:android::gltrace::GLMessage
glFramebufferTexture3DOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFramebufferTexture3DOES;$/;"	m	class:android::gltrace::GLMessage	file:
glFramebufferTexture3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFramebufferTexture3DOES = GLMessage_Function_glFramebufferTexture3DOES;$/;"	m	class:android::gltrace::GLMessage
glFramebufferTextureEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFramebufferTextureEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glFramebufferTextureEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFramebufferTextureEXT = GLMessage_Function_glFramebufferTextureEXT;$/;"	m	class:android::gltrace::GLMessage
glFramebufferTextureLayer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFramebufferTextureLayer;$/;"	m	class:android::gltrace::GLMessage	file:
glFramebufferTextureLayer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFramebufferTextureLayer = GLMessage_Function_glFramebufferTextureLayer;$/;"	m	class:android::gltrace::GLMessage
glFrontFace	opengl/libagl/state.cpp	/^void glFrontFace(GLenum mode)$/;"	f
glFrontFace	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFrontFace;$/;"	m	class:android::gltrace::GLMessage	file:
glFrontFace	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFrontFace = GLMessage_Function_glFrontFace;$/;"	m	class:android::gltrace::GLMessage
glFrustumf	opengl/libagl/matrix.cpp	/^void glFrustumf($/;"	f
glFrustumf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFrustumf;$/;"	m	class:android::gltrace::GLMessage	file:
glFrustumf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFrustumf = GLMessage_Function_glFrustumf;$/;"	m	class:android::gltrace::GLMessage
glFrustumfOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFrustumfOES;$/;"	m	class:android::gltrace::GLMessage	file:
glFrustumfOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFrustumfOES = GLMessage_Function_glFrustumfOES;$/;"	m	class:android::gltrace::GLMessage
glFrustumx	opengl/libagl/matrix.cpp	/^void glFrustumx( $/;"	f
glFrustumx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFrustumx;$/;"	m	class:android::gltrace::GLMessage	file:
glFrustumx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFrustumx = GLMessage_Function_glFrustumx;$/;"	m	class:android::gltrace::GLMessage
glFrustumxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glFrustumxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glFrustumxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glFrustumxOES = GLMessage_Function_glFrustumxOES;$/;"	m	class:android::gltrace::GLMessage
glGenBuffers	opengl/libagl/array.cpp	/^void glGenBuffers(GLsizei n, GLuint* buffers)$/;"	f
glGenBuffers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenBuffers;$/;"	m	class:android::gltrace::GLMessage	file:
glGenBuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenBuffers = GLMessage_Function_glGenBuffers;$/;"	m	class:android::gltrace::GLMessage
glGenFencesNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenFencesNV;$/;"	m	class:android::gltrace::GLMessage	file:
glGenFencesNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenFencesNV = GLMessage_Function_glGenFencesNV;$/;"	m	class:android::gltrace::GLMessage
glGenFramebuffers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenFramebuffers;$/;"	m	class:android::gltrace::GLMessage	file:
glGenFramebuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenFramebuffers = GLMessage_Function_glGenFramebuffers;$/;"	m	class:android::gltrace::GLMessage
glGenFramebuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenFramebuffersOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGenFramebuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenFramebuffersOES = GLMessage_Function_glGenFramebuffersOES;$/;"	m	class:android::gltrace::GLMessage
glGenPerfMonitorsAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenPerfMonitorsAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glGenPerfMonitorsAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenPerfMonitorsAMD = GLMessage_Function_glGenPerfMonitorsAMD;$/;"	m	class:android::gltrace::GLMessage
glGenProgramPipelines	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenProgramPipelines;$/;"	m	class:android::gltrace::GLMessage	file:
glGenProgramPipelines	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenProgramPipelines = GLMessage_Function_glGenProgramPipelines;$/;"	m	class:android::gltrace::GLMessage
glGenProgramPipelinesEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenProgramPipelinesEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGenProgramPipelinesEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenProgramPipelinesEXT = GLMessage_Function_glGenProgramPipelinesEXT;$/;"	m	class:android::gltrace::GLMessage
glGenQueries	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenQueries;$/;"	m	class:android::gltrace::GLMessage	file:
glGenQueries	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenQueries = GLMessage_Function_glGenQueries;$/;"	m	class:android::gltrace::GLMessage
glGenQueriesEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenQueriesEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGenQueriesEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenQueriesEXT = GLMessage_Function_glGenQueriesEXT;$/;"	m	class:android::gltrace::GLMessage
glGenRenderbuffers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenRenderbuffers;$/;"	m	class:android::gltrace::GLMessage	file:
glGenRenderbuffers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenRenderbuffers = GLMessage_Function_glGenRenderbuffers;$/;"	m	class:android::gltrace::GLMessage
glGenRenderbuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenRenderbuffersOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGenRenderbuffersOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenRenderbuffersOES = GLMessage_Function_glGenRenderbuffersOES;$/;"	m	class:android::gltrace::GLMessage
glGenSamplers	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenSamplers;$/;"	m	class:android::gltrace::GLMessage	file:
glGenSamplers	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenSamplers = GLMessage_Function_glGenSamplers;$/;"	m	class:android::gltrace::GLMessage
glGenTextures	opengl/libagl/texture.cpp	/^void glGenTextures(GLsizei n, GLuint *textures)$/;"	f
glGenTextures	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenTextures;$/;"	m	class:android::gltrace::GLMessage	file:
glGenTextures	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenTextures = GLMessage_Function_glGenTextures;$/;"	m	class:android::gltrace::GLMessage
glGenTransformFeedbacks	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenTransformFeedbacks;$/;"	m	class:android::gltrace::GLMessage	file:
glGenTransformFeedbacks	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenTransformFeedbacks = GLMessage_Function_glGenTransformFeedbacks;$/;"	m	class:android::gltrace::GLMessage
glGenVertexArrays	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenVertexArrays;$/;"	m	class:android::gltrace::GLMessage	file:
glGenVertexArrays	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenVertexArrays = GLMessage_Function_glGenVertexArrays;$/;"	m	class:android::gltrace::GLMessage
glGenVertexArraysOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenVertexArraysOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGenVertexArraysOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenVertexArraysOES = GLMessage_Function_glGenVertexArraysOES;$/;"	m	class:android::gltrace::GLMessage
glGenerateMipmap	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenerateMipmap;$/;"	m	class:android::gltrace::GLMessage	file:
glGenerateMipmap	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenerateMipmap = GLMessage_Function_glGenerateMipmap;$/;"	m	class:android::gltrace::GLMessage
glGenerateMipmapOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGenerateMipmapOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGenerateMipmapOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGenerateMipmapOES = GLMessage_Function_glGenerateMipmapOES;$/;"	m	class:android::gltrace::GLMessage
glGetActiveAttrib	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetActiveAttrib;$/;"	m	class:android::gltrace::GLMessage	file:
glGetActiveAttrib	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetActiveAttrib = GLMessage_Function_glGetActiveAttrib;$/;"	m	class:android::gltrace::GLMessage
glGetActiveAttrib	opengl/tools/glgen/stubs/gles11/glGetActiveAttrib.java	/^    public static native String glGetActiveAttrib($/;"	m
glGetActiveAttrib	opengl/tools/glgen/stubs/gles11/glGetActiveAttrib.java	/^    public static native void glGetActiveAttrib($/;"	m
glGetActiveUniform	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetActiveUniform;$/;"	m	class:android::gltrace::GLMessage	file:
glGetActiveUniform	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetActiveUniform = GLMessage_Function_glGetActiveUniform;$/;"	m	class:android::gltrace::GLMessage
glGetActiveUniform	opengl/tools/glgen/stubs/gles11/glGetActiveUniform.java	/^    public static native String glGetActiveUniform($/;"	m
glGetActiveUniform	opengl/tools/glgen/stubs/gles11/glGetActiveUniform.java	/^    public static native void glGetActiveUniform($/;"	m
glGetActiveUniformBlockName	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetActiveUniformBlockName;$/;"	m	class:android::gltrace::GLMessage	file:
glGetActiveUniformBlockName	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetActiveUniformBlockName = GLMessage_Function_glGetActiveUniformBlockName;$/;"	m	class:android::gltrace::GLMessage
glGetActiveUniformBlockName	opengl/tools/glgen/stubs/gles11/glGetActiveUniformBlockName.java	/^    public static native String glGetActiveUniformBlockName($/;"	m
glGetActiveUniformBlockName	opengl/tools/glgen/stubs/gles11/glGetActiveUniformBlockName.java	/^    public static native void glGetActiveUniformBlockName($/;"	m
glGetActiveUniformBlockiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetActiveUniformBlockiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetActiveUniformBlockiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetActiveUniformBlockiv = GLMessage_Function_glGetActiveUniformBlockiv;$/;"	m	class:android::gltrace::GLMessage
glGetActiveUniformsiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetActiveUniformsiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetActiveUniformsiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetActiveUniformsiv = GLMessage_Function_glGetActiveUniformsiv;$/;"	m	class:android::gltrace::GLMessage
glGetAttachedShaders	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetAttachedShaders;$/;"	m	class:android::gltrace::GLMessage	file:
glGetAttachedShaders	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetAttachedShaders = GLMessage_Function_glGetAttachedShaders;$/;"	m	class:android::gltrace::GLMessage
glGetAttribLocation	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetAttribLocation;$/;"	m	class:android::gltrace::GLMessage	file:
glGetAttribLocation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetAttribLocation = GLMessage_Function_glGetAttribLocation;$/;"	m	class:android::gltrace::GLMessage
glGetBooleani_v	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetBooleani_v;$/;"	m	class:android::gltrace::GLMessage	file:
glGetBooleani_v	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetBooleani_v = GLMessage_Function_glGetBooleani_v;$/;"	m	class:android::gltrace::GLMessage
glGetBooleanv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetBooleanv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetBooleanv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetBooleanv = GLMessage_Function_glGetBooleanv;$/;"	m	class:android::gltrace::GLMessage
glGetBooleanv	opengl/tools/glgen/stubs/gles11/glGetBooleanv.java	/^    public static native void glGetBooleanv($/;"	m
glGetBufferParameteri64v	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetBufferParameteri64v;$/;"	m	class:android::gltrace::GLMessage	file:
glGetBufferParameteri64v	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetBufferParameteri64v = GLMessage_Function_glGetBufferParameteri64v;$/;"	m	class:android::gltrace::GLMessage
glGetBufferParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetBufferParameteriv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetBufferParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetBufferParameteriv = GLMessage_Function_glGetBufferParameteriv;$/;"	m	class:android::gltrace::GLMessage
glGetBufferPointerv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetBufferPointerv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetBufferPointerv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetBufferPointerv = GLMessage_Function_glGetBufferPointerv;$/;"	m	class:android::gltrace::GLMessage
glGetBufferPointerv	opengl/tools/glgen/stubs/gles11/glGetBufferPointerv.java	/^    public static native java.nio.Buffer glGetBufferPointerv($/;"	m
glGetBufferPointervOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetBufferPointervOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetBufferPointervOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetBufferPointervOES = GLMessage_Function_glGetBufferPointervOES;$/;"	m	class:android::gltrace::GLMessage
glGetClipPlanef	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetClipPlanef;$/;"	m	class:android::gltrace::GLMessage	file:
glGetClipPlanef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetClipPlanef = GLMessage_Function_glGetClipPlanef;$/;"	m	class:android::gltrace::GLMessage
glGetClipPlanefOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetClipPlanefOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetClipPlanefOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetClipPlanefOES = GLMessage_Function_glGetClipPlanefOES;$/;"	m	class:android::gltrace::GLMessage
glGetClipPlanex	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetClipPlanex;$/;"	m	class:android::gltrace::GLMessage	file:
glGetClipPlanex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetClipPlanex = GLMessage_Function_glGetClipPlanex;$/;"	m	class:android::gltrace::GLMessage
glGetClipPlanexOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetClipPlanexOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetClipPlanexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetClipPlanexOES = GLMessage_Function_glGetClipPlanexOES;$/;"	m	class:android::gltrace::GLMessage
glGetDebugMessageCallbackKHR	opengl/tools/glgen/stubs/gles11/glGetPointervKHR.java	/^    public static native DebugProcKHR glGetDebugMessageCallbackKHR();$/;"	m
glGetDebugMessageLogKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetDebugMessageLogKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glGetDebugMessageLogKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetDebugMessageLogKHR = GLMessage_Function_glGetDebugMessageLogKHR;$/;"	m	class:android::gltrace::GLMessage
glGetDebugMessageLogKHR	opengl/tools/glgen/stubs/gles11/glGetDebugMessageLogKHR.java	/^    public static native String[] glGetDebugMessageLogKHR($/;"	m
glGetDebugMessageLogKHR	opengl/tools/glgen/stubs/gles11/glGetDebugMessageLogKHR.java	/^    public static native int glGetDebugMessageLogKHR($/;"	m
glGetDriverControlStringQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetDriverControlStringQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glGetDriverControlStringQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetDriverControlStringQCOM = GLMessage_Function_glGetDriverControlStringQCOM;$/;"	m	class:android::gltrace::GLMessage
glGetDriverControlsQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetDriverControlsQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glGetDriverControlsQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetDriverControlsQCOM = GLMessage_Function_glGetDriverControlsQCOM;$/;"	m	class:android::gltrace::GLMessage
glGetError	opengl/libagl/state.cpp	/^GLenum glGetError()$/;"	f
glGetError	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetError;$/;"	m	class:android::gltrace::GLMessage	file:
glGetError	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetError = GLMessage_Function_glGetError;$/;"	m	class:android::gltrace::GLMessage
glGetFenceivNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetFenceivNV;$/;"	m	class:android::gltrace::GLMessage	file:
glGetFenceivNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetFenceivNV = GLMessage_Function_glGetFenceivNV;$/;"	m	class:android::gltrace::GLMessage
glGetFirstPerfQueryIdINTEL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetFirstPerfQueryIdINTEL;$/;"	m	class:android::gltrace::GLMessage	file:
glGetFirstPerfQueryIdINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetFirstPerfQueryIdINTEL = GLMessage_Function_glGetFirstPerfQueryIdINTEL;$/;"	m	class:android::gltrace::GLMessage
glGetFixedv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetFixedv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetFixedv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetFixedv = GLMessage_Function_glGetFixedv;$/;"	m	class:android::gltrace::GLMessage
glGetFixedvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetFixedvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetFixedvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetFixedvOES = GLMessage_Function_glGetFixedvOES;$/;"	m	class:android::gltrace::GLMessage
glGetFloatv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetFloatv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetFloatv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetFloatv = GLMessage_Function_glGetFloatv;$/;"	m	class:android::gltrace::GLMessage
glGetFloatv	opengl/tools/glgen/stubs/gles11/glGetFloatv.java	/^    public static native void glGetFloatv($/;"	m
glGetFragDataLocation	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetFragDataLocation;$/;"	m	class:android::gltrace::GLMessage	file:
glGetFragDataLocation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetFragDataLocation = GLMessage_Function_glGetFragDataLocation;$/;"	m	class:android::gltrace::GLMessage
glGetFramebufferAttachmentParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetFramebufferAttachmentParameteriv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetFramebufferAttachmentParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetFramebufferAttachmentParameteriv = GLMessage_Function_glGetFramebufferAttachmentParameteriv;$/;"	m	class:android::gltrace::GLMessage
glGetFramebufferAttachmentParameterivOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetFramebufferAttachmentParameterivOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetFramebufferAttachmentParameterivOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetFramebufferAttachmentParameterivOES = GLMessage_Function_glGetFramebufferAttachmentParameterivOES;$/;"	m	class:android::gltrace::GLMessage
glGetFramebufferParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetFramebufferParameteriv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetFramebufferParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetFramebufferParameteriv = GLMessage_Function_glGetFramebufferParameteriv;$/;"	m	class:android::gltrace::GLMessage
glGetGraphicsResetStatusEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetGraphicsResetStatusEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetGraphicsResetStatusEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetGraphicsResetStatusEXT = GLMessage_Function_glGetGraphicsResetStatusEXT;$/;"	m	class:android::gltrace::GLMessage
glGetInteger	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^GLint glGetInteger(GLTraceContext *context, GLenum param) {$/;"	f	namespace:android::gltrace
glGetInteger64i_v	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetInteger64i_v;$/;"	m	class:android::gltrace::GLMessage	file:
glGetInteger64i_v	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetInteger64i_v = GLMessage_Function_glGetInteger64i_v;$/;"	m	class:android::gltrace::GLMessage
glGetInteger64v	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetInteger64v;$/;"	m	class:android::gltrace::GLMessage	file:
glGetInteger64v	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetInteger64v = GLMessage_Function_glGetInteger64v;$/;"	m	class:android::gltrace::GLMessage
glGetInteger64vAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetInteger64vAPPLE;$/;"	m	class:android::gltrace::GLMessage	file:
glGetInteger64vAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetInteger64vAPPLE = GLMessage_Function_glGetInteger64vAPPLE;$/;"	m	class:android::gltrace::GLMessage
glGetIntegeri_v	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetIntegeri_v;$/;"	m	class:android::gltrace::GLMessage	file:
glGetIntegeri_v	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetIntegeri_v = GLMessage_Function_glGetIntegeri_v;$/;"	m	class:android::gltrace::GLMessage
glGetIntegeri_vEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetIntegeri_vEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetIntegeri_vEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetIntegeri_vEXT = GLMessage_Function_glGetIntegeri_vEXT;$/;"	m	class:android::gltrace::GLMessage
glGetIntegerv	opengl/libagl/state.cpp	/^void glGetIntegerv(GLenum pname, GLint *params)$/;"	f
glGetIntegerv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetIntegerv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetIntegerv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetIntegerv = GLMessage_Function_glGetIntegerv;$/;"	m	class:android::gltrace::GLMessage
glGetIntegerv	opengl/tools/glgen/stubs/gles11/glGetIntegerv.java	/^    public static native void glGetIntegerv($/;"	m
glGetInternalformativ	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetInternalformativ;$/;"	m	class:android::gltrace::GLMessage	file:
glGetInternalformativ	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetInternalformativ = GLMessage_Function_glGetInternalformativ;$/;"	m	class:android::gltrace::GLMessage
glGetLightfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetLightfv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetLightfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetLightfv = GLMessage_Function_glGetLightfv;$/;"	m	class:android::gltrace::GLMessage
glGetLightxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetLightxv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetLightxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetLightxv = GLMessage_Function_glGetLightxv;$/;"	m	class:android::gltrace::GLMessage
glGetLightxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetLightxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetLightxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetLightxvOES = GLMessage_Function_glGetLightxvOES;$/;"	m	class:android::gltrace::GLMessage
glGetMaterialfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetMaterialfv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetMaterialfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetMaterialfv = GLMessage_Function_glGetMaterialfv;$/;"	m	class:android::gltrace::GLMessage
glGetMaterialxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetMaterialxv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetMaterialxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetMaterialxv = GLMessage_Function_glGetMaterialxv;$/;"	m	class:android::gltrace::GLMessage
glGetMaterialxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetMaterialxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetMaterialxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetMaterialxvOES = GLMessage_Function_glGetMaterialxvOES;$/;"	m	class:android::gltrace::GLMessage
glGetMultisamplefv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetMultisamplefv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetMultisamplefv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetMultisamplefv = GLMessage_Function_glGetMultisamplefv;$/;"	m	class:android::gltrace::GLMessage
glGetNextPerfQueryIdINTEL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetNextPerfQueryIdINTEL;$/;"	m	class:android::gltrace::GLMessage	file:
glGetNextPerfQueryIdINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetNextPerfQueryIdINTEL = GLMessage_Function_glGetNextPerfQueryIdINTEL;$/;"	m	class:android::gltrace::GLMessage
glGetObjectLabelEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetObjectLabelEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetObjectLabelEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetObjectLabelEXT = GLMessage_Function_glGetObjectLabelEXT;$/;"	m	class:android::gltrace::GLMessage
glGetObjectLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetObjectLabelKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glGetObjectLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetObjectLabelKHR = GLMessage_Function_glGetObjectLabelKHR;$/;"	m	class:android::gltrace::GLMessage
glGetObjectLabelKHR	opengl/tools/glgen/stubs/gles11/glGetObjectLabelKHR.java	/^    public static native String glGetObjectLabelKHR(int identifier, int name);$/;"	m
glGetObjectPtrLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetObjectPtrLabelKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glGetObjectPtrLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetObjectPtrLabelKHR = GLMessage_Function_glGetObjectPtrLabelKHR;$/;"	m	class:android::gltrace::GLMessage
glGetObjectPtrLabelKHR	opengl/tools/glgen/stubs/gles11/glGetObjectPtrLabelKHR.java	/^    public static native String glGetObjectPtrLabelKHR(long ptr);$/;"	m
glGetPerfCounterInfoINTEL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPerfCounterInfoINTEL;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPerfCounterInfoINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPerfCounterInfoINTEL = GLMessage_Function_glGetPerfCounterInfoINTEL;$/;"	m	class:android::gltrace::GLMessage
glGetPerfMonitorCounterDataAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPerfMonitorCounterDataAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPerfMonitorCounterDataAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPerfMonitorCounterDataAMD = GLMessage_Function_glGetPerfMonitorCounterDataAMD;$/;"	m	class:android::gltrace::GLMessage
glGetPerfMonitorCounterInfoAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPerfMonitorCounterInfoAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPerfMonitorCounterInfoAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPerfMonitorCounterInfoAMD = GLMessage_Function_glGetPerfMonitorCounterInfoAMD;$/;"	m	class:android::gltrace::GLMessage
glGetPerfMonitorCounterStringAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPerfMonitorCounterStringAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPerfMonitorCounterStringAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPerfMonitorCounterStringAMD = GLMessage_Function_glGetPerfMonitorCounterStringAMD;$/;"	m	class:android::gltrace::GLMessage
glGetPerfMonitorCountersAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPerfMonitorCountersAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPerfMonitorCountersAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPerfMonitorCountersAMD = GLMessage_Function_glGetPerfMonitorCountersAMD;$/;"	m	class:android::gltrace::GLMessage
glGetPerfMonitorGroupStringAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPerfMonitorGroupStringAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPerfMonitorGroupStringAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPerfMonitorGroupStringAMD = GLMessage_Function_glGetPerfMonitorGroupStringAMD;$/;"	m	class:android::gltrace::GLMessage
glGetPerfMonitorGroupsAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPerfMonitorGroupsAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPerfMonitorGroupsAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPerfMonitorGroupsAMD = GLMessage_Function_glGetPerfMonitorGroupsAMD;$/;"	m	class:android::gltrace::GLMessage
glGetPerfQueryDataINTEL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPerfQueryDataINTEL;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPerfQueryDataINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPerfQueryDataINTEL = GLMessage_Function_glGetPerfQueryDataINTEL;$/;"	m	class:android::gltrace::GLMessage
glGetPerfQueryIdByNameINTEL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPerfQueryIdByNameINTEL;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPerfQueryIdByNameINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPerfQueryIdByNameINTEL = GLMessage_Function_glGetPerfQueryIdByNameINTEL;$/;"	m	class:android::gltrace::GLMessage
glGetPerfQueryInfoINTEL	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPerfQueryInfoINTEL;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPerfQueryInfoINTEL	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPerfQueryInfoINTEL = GLMessage_Function_glGetPerfQueryInfoINTEL;$/;"	m	class:android::gltrace::GLMessage
glGetPointerv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPointerv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPointerv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPointerv = GLMessage_Function_glGetPointerv;$/;"	m	class:android::gltrace::GLMessage
glGetPointervKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetPointervKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glGetPointervKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetPointervKHR = GLMessage_Function_glGetPointervKHR;$/;"	m	class:android::gltrace::GLMessage
glGetProgramBinary	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramBinary;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramBinary	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramBinary = GLMessage_Function_glGetProgramBinary;$/;"	m	class:android::gltrace::GLMessage
glGetProgramBinaryOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramBinaryOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramBinaryOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramBinaryOES = GLMessage_Function_glGetProgramBinaryOES;$/;"	m	class:android::gltrace::GLMessage
glGetProgramInfoLog	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramInfoLog;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramInfoLog	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramInfoLog = GLMessage_Function_glGetProgramInfoLog;$/;"	m	class:android::gltrace::GLMessage
glGetProgramInfoLog	opengl/tools/glgen/stubs/gles11/glGetProgramInfoLog.java	/^    public static native String glGetProgramInfoLog($/;"	m
glGetProgramInterfaceiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramInterfaceiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramInterfaceiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramInterfaceiv = GLMessage_Function_glGetProgramInterfaceiv;$/;"	m	class:android::gltrace::GLMessage
glGetProgramPipelineInfoLog	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramPipelineInfoLog;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramPipelineInfoLog	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramPipelineInfoLog = GLMessage_Function_glGetProgramPipelineInfoLog;$/;"	m	class:android::gltrace::GLMessage
glGetProgramPipelineInfoLog	opengl/tools/glgen/stubs/gles11/glGetProgramPipelineInfoLog.java	/^    public static native String glGetProgramPipelineInfoLog($/;"	m
glGetProgramPipelineInfoLogEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramPipelineInfoLogEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramPipelineInfoLogEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramPipelineInfoLogEXT = GLMessage_Function_glGetProgramPipelineInfoLogEXT;$/;"	m	class:android::gltrace::GLMessage
glGetProgramPipelineiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramPipelineiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramPipelineiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramPipelineiv = GLMessage_Function_glGetProgramPipelineiv;$/;"	m	class:android::gltrace::GLMessage
glGetProgramPipelineivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramPipelineivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramPipelineivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramPipelineivEXT = GLMessage_Function_glGetProgramPipelineivEXT;$/;"	m	class:android::gltrace::GLMessage
glGetProgramResourceIndex	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramResourceIndex;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramResourceIndex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramResourceIndex = GLMessage_Function_glGetProgramResourceIndex;$/;"	m	class:android::gltrace::GLMessage
glGetProgramResourceLocation	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramResourceLocation;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramResourceLocation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramResourceLocation = GLMessage_Function_glGetProgramResourceLocation;$/;"	m	class:android::gltrace::GLMessage
glGetProgramResourceName	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramResourceName;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramResourceName	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramResourceName = GLMessage_Function_glGetProgramResourceName;$/;"	m	class:android::gltrace::GLMessage
glGetProgramResourceName	opengl/tools/glgen/stubs/gles11/glGetProgramResourceName.java	/^    public static native String glGetProgramResourceName($/;"	m
glGetProgramResourceiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramResourceiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramResourceiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramResourceiv = GLMessage_Function_glGetProgramResourceiv;$/;"	m	class:android::gltrace::GLMessage
glGetProgramiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetProgramiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetProgramiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetProgramiv = GLMessage_Function_glGetProgramiv;$/;"	m	class:android::gltrace::GLMessage
glGetQueryObjecti64vEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetQueryObjecti64vEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetQueryObjecti64vEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetQueryObjecti64vEXT = GLMessage_Function_glGetQueryObjecti64vEXT;$/;"	m	class:android::gltrace::GLMessage
glGetQueryObjectivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetQueryObjectivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetQueryObjectivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetQueryObjectivEXT = GLMessage_Function_glGetQueryObjectivEXT;$/;"	m	class:android::gltrace::GLMessage
glGetQueryObjectui64vEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetQueryObjectui64vEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetQueryObjectui64vEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetQueryObjectui64vEXT = GLMessage_Function_glGetQueryObjectui64vEXT;$/;"	m	class:android::gltrace::GLMessage
glGetQueryObjectuiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetQueryObjectuiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetQueryObjectuiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetQueryObjectuiv = GLMessage_Function_glGetQueryObjectuiv;$/;"	m	class:android::gltrace::GLMessage
glGetQueryObjectuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetQueryObjectuivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetQueryObjectuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetQueryObjectuivEXT = GLMessage_Function_glGetQueryObjectuivEXT;$/;"	m	class:android::gltrace::GLMessage
glGetQueryiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetQueryiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetQueryiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetQueryiv = GLMessage_Function_glGetQueryiv;$/;"	m	class:android::gltrace::GLMessage
glGetQueryivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetQueryivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetQueryivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetQueryivEXT = GLMessage_Function_glGetQueryivEXT;$/;"	m	class:android::gltrace::GLMessage
glGetRenderbufferParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetRenderbufferParameteriv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetRenderbufferParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetRenderbufferParameteriv = GLMessage_Function_glGetRenderbufferParameteriv;$/;"	m	class:android::gltrace::GLMessage
glGetRenderbufferParameterivOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetRenderbufferParameterivOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetRenderbufferParameterivOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetRenderbufferParameterivOES = GLMessage_Function_glGetRenderbufferParameterivOES;$/;"	m	class:android::gltrace::GLMessage
glGetSamplerParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetSamplerParameterIivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetSamplerParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetSamplerParameterIivEXT = GLMessage_Function_glGetSamplerParameterIivEXT;$/;"	m	class:android::gltrace::GLMessage
glGetSamplerParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetSamplerParameterIuivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetSamplerParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetSamplerParameterIuivEXT = GLMessage_Function_glGetSamplerParameterIuivEXT;$/;"	m	class:android::gltrace::GLMessage
glGetSamplerParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetSamplerParameterfv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetSamplerParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetSamplerParameterfv = GLMessage_Function_glGetSamplerParameterfv;$/;"	m	class:android::gltrace::GLMessage
glGetSamplerParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetSamplerParameteriv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetSamplerParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetSamplerParameteriv = GLMessage_Function_glGetSamplerParameteriv;$/;"	m	class:android::gltrace::GLMessage
glGetShaderInfoLog	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetShaderInfoLog;$/;"	m	class:android::gltrace::GLMessage	file:
glGetShaderInfoLog	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetShaderInfoLog = GLMessage_Function_glGetShaderInfoLog;$/;"	m	class:android::gltrace::GLMessage
glGetShaderInfoLog	opengl/tools/glgen/stubs/gles11/glGetShaderInfoLog.java	/^    public static native String glGetShaderInfoLog($/;"	m
glGetShaderPrecisionFormat	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetShaderPrecisionFormat;$/;"	m	class:android::gltrace::GLMessage	file:
glGetShaderPrecisionFormat	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetShaderPrecisionFormat = GLMessage_Function_glGetShaderPrecisionFormat;$/;"	m	class:android::gltrace::GLMessage
glGetShaderSource	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetShaderSource;$/;"	m	class:android::gltrace::GLMessage	file:
glGetShaderSource	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetShaderSource = GLMessage_Function_glGetShaderSource;$/;"	m	class:android::gltrace::GLMessage
glGetShaderSource	opengl/tools/glgen/stubs/gles11/glGetShaderSource.java	/^    public static native String glGetShaderSource($/;"	m
glGetShaderSource	opengl/tools/glgen/stubs/gles11/glGetShaderSource.java	/^    public static native void glGetShaderSource($/;"	m
glGetShaderiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetShaderiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetShaderiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetShaderiv = GLMessage_Function_glGetShaderiv;$/;"	m	class:android::gltrace::GLMessage
glGetString	opengl/libagl/state.cpp	/^const GLubyte* glGetString(GLenum string)$/;"	f
glGetString	opengl/libs/GLES2/gl2.cpp	/^const GLubyte * glGetString(GLenum name)$/;"	f
glGetString	opengl/libs/GLES_CM/gl.cpp	/^const GLubyte * glGetString(GLenum name) {$/;"	f
glGetString	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetString;$/;"	m	class:android::gltrace::GLMessage	file:
glGetString	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetString = GLMessage_Function_glGetString;$/;"	m	class:android::gltrace::GLMessage
glGetString	opengl/tools/glgen/stubs/gles11/glGetString.java	/^    public static native String glGetString($/;"	m
glGetStringi	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetStringi;$/;"	m	class:android::gltrace::GLMessage	file:
glGetStringi	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetStringi = GLMessage_Function_glGetStringi;$/;"	m	class:android::gltrace::GLMessage
glGetStringi	opengl/tools/glgen/stubs/gles11/glGetStringi.java	/^    public static native String glGetStringi($/;"	m
glGetSynciv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetSynciv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetSynciv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetSynciv = GLMessage_Function_glGetSynciv;$/;"	m	class:android::gltrace::GLMessage
glGetSyncivAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetSyncivAPPLE;$/;"	m	class:android::gltrace::GLMessage	file:
glGetSyncivAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetSyncivAPPLE = GLMessage_Function_glGetSyncivAPPLE;$/;"	m	class:android::gltrace::GLMessage
glGetTexEnvfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexEnvfv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexEnvfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexEnvfv = GLMessage_Function_glGetTexEnvfv;$/;"	m	class:android::gltrace::GLMessage
glGetTexEnviv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexEnviv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexEnviv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexEnviv = GLMessage_Function_glGetTexEnviv;$/;"	m	class:android::gltrace::GLMessage
glGetTexEnvxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexEnvxv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexEnvxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexEnvxv = GLMessage_Function_glGetTexEnvxv;$/;"	m	class:android::gltrace::GLMessage
glGetTexEnvxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexEnvxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexEnvxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexEnvxvOES = GLMessage_Function_glGetTexEnvxvOES;$/;"	m	class:android::gltrace::GLMessage
glGetTexGenfv	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	33;"	d	file:
glGetTexGenfvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexGenfvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexGenfvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexGenfvOES = GLMessage_Function_glGetTexGenfvOES;$/;"	m	class:android::gltrace::GLMessage
glGetTexGeniv	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	34;"	d	file:
glGetTexGenivOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexGenivOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexGenivOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexGenivOES = GLMessage_Function_glGetTexGenivOES;$/;"	m	class:android::gltrace::GLMessage
glGetTexGenxv	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	35;"	d	file:
glGetTexGenxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexGenxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexGenxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexGenxvOES = GLMessage_Function_glGetTexGenxvOES;$/;"	m	class:android::gltrace::GLMessage
glGetTexLevelParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexLevelParameterfv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexLevelParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexLevelParameterfv = GLMessage_Function_glGetTexLevelParameterfv;$/;"	m	class:android::gltrace::GLMessage
glGetTexLevelParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexLevelParameteriv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexLevelParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexLevelParameteriv = GLMessage_Function_glGetTexLevelParameteriv;$/;"	m	class:android::gltrace::GLMessage
glGetTexParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexParameterIivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexParameterIivEXT = GLMessage_Function_glGetTexParameterIivEXT;$/;"	m	class:android::gltrace::GLMessage
glGetTexParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexParameterIuivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexParameterIuivEXT = GLMessage_Function_glGetTexParameterIuivEXT;$/;"	m	class:android::gltrace::GLMessage
glGetTexParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexParameterfv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexParameterfv = GLMessage_Function_glGetTexParameterfv;$/;"	m	class:android::gltrace::GLMessage
glGetTexParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexParameteriv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexParameteriv = GLMessage_Function_glGetTexParameteriv;$/;"	m	class:android::gltrace::GLMessage
glGetTexParameterxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexParameterxv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexParameterxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexParameterxv = GLMessage_Function_glGetTexParameterxv;$/;"	m	class:android::gltrace::GLMessage
glGetTexParameterxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTexParameterxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTexParameterxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTexParameterxvOES = GLMessage_Function_glGetTexParameterxvOES;$/;"	m	class:android::gltrace::GLMessage
glGetTransformFeedbackVarying	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTransformFeedbackVarying;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTransformFeedbackVarying	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTransformFeedbackVarying = GLMessage_Function_glGetTransformFeedbackVarying;$/;"	m	class:android::gltrace::GLMessage
glGetTransformFeedbackVarying	opengl/tools/glgen/stubs/gles11/glGetTransformFeedbackVarying.java	/^    public static native String glGetTransformFeedbackVarying($/;"	m
glGetTransformFeedbackVarying	opengl/tools/glgen/stubs/gles11/glGetTransformFeedbackVarying.java	/^    public static native void glGetTransformFeedbackVarying($/;"	m
glGetTranslatedShaderSourceANGLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetTranslatedShaderSourceANGLE;$/;"	m	class:android::gltrace::GLMessage	file:
glGetTranslatedShaderSourceANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetTranslatedShaderSourceANGLE = GLMessage_Function_glGetTranslatedShaderSourceANGLE;$/;"	m	class:android::gltrace::GLMessage
glGetUniformBlockIndex	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetUniformBlockIndex;$/;"	m	class:android::gltrace::GLMessage	file:
glGetUniformBlockIndex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetUniformBlockIndex = GLMessage_Function_glGetUniformBlockIndex;$/;"	m	class:android::gltrace::GLMessage
glGetUniformIndices	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetUniformIndices;$/;"	m	class:android::gltrace::GLMessage	file:
glGetUniformIndices	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetUniformIndices = GLMessage_Function_glGetUniformIndices;$/;"	m	class:android::gltrace::GLMessage
glGetUniformIndices	opengl/tools/glgen/stubs/gles11/glGetUniformIndices.java	/^    public static native void glGetUniformIndices($/;"	m
glGetUniformLocation	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetUniformLocation;$/;"	m	class:android::gltrace::GLMessage	file:
glGetUniformLocation	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetUniformLocation = GLMessage_Function_glGetUniformLocation;$/;"	m	class:android::gltrace::GLMessage
glGetUniformfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetUniformfv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetUniformfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetUniformfv = GLMessage_Function_glGetUniformfv;$/;"	m	class:android::gltrace::GLMessage
glGetUniformiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetUniformiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetUniformiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetUniformiv = GLMessage_Function_glGetUniformiv;$/;"	m	class:android::gltrace::GLMessage
glGetUniformuiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetUniformuiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetUniformuiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetUniformuiv = GLMessage_Function_glGetUniformuiv;$/;"	m	class:android::gltrace::GLMessage
glGetVertexAttrib	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^GLint glGetVertexAttrib(GLTraceContext *context, GLuint index, GLenum pname) {$/;"	f	namespace:android::gltrace
glGetVertexAttribIiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetVertexAttribIiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetVertexAttribIiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetVertexAttribIiv = GLMessage_Function_glGetVertexAttribIiv;$/;"	m	class:android::gltrace::GLMessage
glGetVertexAttribIuiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetVertexAttribIuiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetVertexAttribIuiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetVertexAttribIuiv = GLMessage_Function_glGetVertexAttribIuiv;$/;"	m	class:android::gltrace::GLMessage
glGetVertexAttribPointerv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetVertexAttribPointerv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetVertexAttribPointerv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetVertexAttribPointerv = GLMessage_Function_glGetVertexAttribPointerv;$/;"	m	class:android::gltrace::GLMessage
glGetVertexAttribfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetVertexAttribfv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetVertexAttribfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetVertexAttribfv = GLMessage_Function_glGetVertexAttribfv;$/;"	m	class:android::gltrace::GLMessage
glGetVertexAttribiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetVertexAttribiv;$/;"	m	class:android::gltrace::GLMessage	file:
glGetVertexAttribiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetVertexAttribiv = GLMessage_Function_glGetVertexAttribiv;$/;"	m	class:android::gltrace::GLMessage
glGetnUniformfvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetnUniformfvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetnUniformfvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetnUniformfvEXT = GLMessage_Function_glGetnUniformfvEXT;$/;"	m	class:android::gltrace::GLMessage
glGetnUniformivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glGetnUniformivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glGetnUniformivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glGetnUniformivEXT = GLMessage_Function_glGetnUniformivEXT;$/;"	m	class:android::gltrace::GLMessage
glHint	opengl/libagl/state.cpp	/^void glHint(GLenum target, GLenum mode)$/;"	f
glHint	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glHint;$/;"	m	class:android::gltrace::GLMessage	file:
glHint	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glHint = GLMessage_Function_glHint;$/;"	m	class:android::gltrace::GLMessage
glInsertEventMarkerEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glInsertEventMarkerEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glInsertEventMarkerEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glInsertEventMarkerEXT = GLMessage_Function_glInsertEventMarkerEXT;$/;"	m	class:android::gltrace::GLMessage
glInvalidateFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glInvalidateFramebuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glInvalidateFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glInvalidateFramebuffer = GLMessage_Function_glInvalidateFramebuffer;$/;"	m	class:android::gltrace::GLMessage
glInvalidateSubFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glInvalidateSubFramebuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glInvalidateSubFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glInvalidateSubFramebuffer = GLMessage_Function_glInvalidateSubFramebuffer;$/;"	m	class:android::gltrace::GLMessage
glIsBuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsBuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glIsBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsBuffer = GLMessage_Function_glIsBuffer;$/;"	m	class:android::gltrace::GLMessage
glIsEnabled	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsEnabled;$/;"	m	class:android::gltrace::GLMessage	file:
glIsEnabled	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsEnabled = GLMessage_Function_glIsEnabled;$/;"	m	class:android::gltrace::GLMessage
glIsEnablediEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsEnablediEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glIsEnablediEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsEnablediEXT = GLMessage_Function_glIsEnablediEXT;$/;"	m	class:android::gltrace::GLMessage
glIsFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsFenceNV;$/;"	m	class:android::gltrace::GLMessage	file:
glIsFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsFenceNV = GLMessage_Function_glIsFenceNV;$/;"	m	class:android::gltrace::GLMessage
glIsFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsFramebuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glIsFramebuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsFramebuffer = GLMessage_Function_glIsFramebuffer;$/;"	m	class:android::gltrace::GLMessage
glIsFramebufferOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsFramebufferOES;$/;"	m	class:android::gltrace::GLMessage	file:
glIsFramebufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsFramebufferOES = GLMessage_Function_glIsFramebufferOES;$/;"	m	class:android::gltrace::GLMessage
glIsProgram	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsProgram;$/;"	m	class:android::gltrace::GLMessage	file:
glIsProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsProgram = GLMessage_Function_glIsProgram;$/;"	m	class:android::gltrace::GLMessage
glIsProgramPipeline	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsProgramPipeline;$/;"	m	class:android::gltrace::GLMessage	file:
glIsProgramPipeline	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsProgramPipeline = GLMessage_Function_glIsProgramPipeline;$/;"	m	class:android::gltrace::GLMessage
glIsProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsProgramPipelineEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glIsProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsProgramPipelineEXT = GLMessage_Function_glIsProgramPipelineEXT;$/;"	m	class:android::gltrace::GLMessage
glIsQuery	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsQuery;$/;"	m	class:android::gltrace::GLMessage	file:
glIsQuery	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsQuery = GLMessage_Function_glIsQuery;$/;"	m	class:android::gltrace::GLMessage
glIsQueryEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsQueryEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glIsQueryEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsQueryEXT = GLMessage_Function_glIsQueryEXT;$/;"	m	class:android::gltrace::GLMessage
glIsRenderbuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsRenderbuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glIsRenderbuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsRenderbuffer = GLMessage_Function_glIsRenderbuffer;$/;"	m	class:android::gltrace::GLMessage
glIsRenderbufferOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsRenderbufferOES;$/;"	m	class:android::gltrace::GLMessage	file:
glIsRenderbufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsRenderbufferOES = GLMessage_Function_glIsRenderbufferOES;$/;"	m	class:android::gltrace::GLMessage
glIsSampler	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsSampler;$/;"	m	class:android::gltrace::GLMessage	file:
glIsSampler	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsSampler = GLMessage_Function_glIsSampler;$/;"	m	class:android::gltrace::GLMessage
glIsShader	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsShader;$/;"	m	class:android::gltrace::GLMessage	file:
glIsShader	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsShader = GLMessage_Function_glIsShader;$/;"	m	class:android::gltrace::GLMessage
glIsSync	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsSync;$/;"	m	class:android::gltrace::GLMessage	file:
glIsSync	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsSync = GLMessage_Function_glIsSync;$/;"	m	class:android::gltrace::GLMessage
glIsSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsSyncAPPLE;$/;"	m	class:android::gltrace::GLMessage	file:
glIsSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsSyncAPPLE = GLMessage_Function_glIsSyncAPPLE;$/;"	m	class:android::gltrace::GLMessage
glIsTexture	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsTexture;$/;"	m	class:android::gltrace::GLMessage	file:
glIsTexture	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsTexture = GLMessage_Function_glIsTexture;$/;"	m	class:android::gltrace::GLMessage
glIsTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsTransformFeedback;$/;"	m	class:android::gltrace::GLMessage	file:
glIsTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsTransformFeedback = GLMessage_Function_glIsTransformFeedback;$/;"	m	class:android::gltrace::GLMessage
glIsVertexArray	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsVertexArray;$/;"	m	class:android::gltrace::GLMessage	file:
glIsVertexArray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsVertexArray = GLMessage_Function_glIsVertexArray;$/;"	m	class:android::gltrace::GLMessage
glIsVertexArrayOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glIsVertexArrayOES;$/;"	m	class:android::gltrace::GLMessage	file:
glIsVertexArrayOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glIsVertexArrayOES = GLMessage_Function_glIsVertexArrayOES;$/;"	m	class:android::gltrace::GLMessage
glLabelObjectEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLabelObjectEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glLabelObjectEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLabelObjectEXT = GLMessage_Function_glLabelObjectEXT;$/;"	m	class:android::gltrace::GLMessage
glLightModelf	opengl/libagl/light.cpp	/^void glLightModelf(GLenum pname, GLfloat param)$/;"	f
glLightModelf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightModelf;$/;"	m	class:android::gltrace::GLMessage	file:
glLightModelf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightModelf = GLMessage_Function_glLightModelf;$/;"	m	class:android::gltrace::GLMessage
glLightModelfv	opengl/libagl/light.cpp	/^void glLightModelfv(GLenum pname, const GLfloat *params)$/;"	f
glLightModelfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightModelfv;$/;"	m	class:android::gltrace::GLMessage	file:
glLightModelfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightModelfv = GLMessage_Function_glLightModelfv;$/;"	m	class:android::gltrace::GLMessage
glLightModelx	opengl/libagl/light.cpp	/^void glLightModelx(GLenum pname, GLfixed param)$/;"	f
glLightModelx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightModelx;$/;"	m	class:android::gltrace::GLMessage	file:
glLightModelx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightModelx = GLMessage_Function_glLightModelx;$/;"	m	class:android::gltrace::GLMessage
glLightModelxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightModelxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glLightModelxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightModelxOES = GLMessage_Function_glLightModelxOES;$/;"	m	class:android::gltrace::GLMessage
glLightModelxv	opengl/libagl/light.cpp	/^void glLightModelxv(GLenum pname, const GLfixed *params)$/;"	f
glLightModelxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightModelxv;$/;"	m	class:android::gltrace::GLMessage	file:
glLightModelxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightModelxv = GLMessage_Function_glLightModelxv;$/;"	m	class:android::gltrace::GLMessage
glLightModelxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightModelxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glLightModelxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightModelxvOES = GLMessage_Function_glLightModelxvOES;$/;"	m	class:android::gltrace::GLMessage
glLightf	opengl/libagl/light.cpp	/^void glLightf(GLenum i, GLenum pname, GLfloat param)$/;"	f
glLightf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightf;$/;"	m	class:android::gltrace::GLMessage	file:
glLightf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightf = GLMessage_Function_glLightf;$/;"	m	class:android::gltrace::GLMessage
glLightfv	opengl/libagl/light.cpp	/^void glLightfv(GLenum i, GLenum pname, const GLfloat *params)$/;"	f
glLightfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightfv;$/;"	m	class:android::gltrace::GLMessage	file:
glLightfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightfv = GLMessage_Function_glLightfv;$/;"	m	class:android::gltrace::GLMessage
glLightx	opengl/libagl/light.cpp	/^void glLightx(GLenum i, GLenum pname, GLfixed param)$/;"	f
glLightx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightx;$/;"	m	class:android::gltrace::GLMessage	file:
glLightx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightx = GLMessage_Function_glLightx;$/;"	m	class:android::gltrace::GLMessage
glLightxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glLightxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightxOES = GLMessage_Function_glLightxOES;$/;"	m	class:android::gltrace::GLMessage
glLightxv	opengl/libagl/light.cpp	/^void glLightxv(GLenum i, GLenum pname, const GLfixed *params)$/;"	f
glLightxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightxv;$/;"	m	class:android::gltrace::GLMessage	file:
glLightxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightxv = GLMessage_Function_glLightxv;$/;"	m	class:android::gltrace::GLMessage
glLightxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLightxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glLightxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLightxvOES = GLMessage_Function_glLightxvOES;$/;"	m	class:android::gltrace::GLMessage
glLineWidth	opengl/libagl/state.cpp	/^void glLineWidth(GLfloat width)$/;"	f
glLineWidth	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLineWidth;$/;"	m	class:android::gltrace::GLMessage	file:
glLineWidth	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLineWidth = GLMessage_Function_glLineWidth;$/;"	m	class:android::gltrace::GLMessage
glLineWidthx	opengl/libagl/state.cpp	/^void glLineWidthx(GLfixed width)$/;"	f
glLineWidthx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLineWidthx;$/;"	m	class:android::gltrace::GLMessage	file:
glLineWidthx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLineWidthx = GLMessage_Function_glLineWidthx;$/;"	m	class:android::gltrace::GLMessage
glLineWidthxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLineWidthxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glLineWidthxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLineWidthxOES = GLMessage_Function_glLineWidthxOES;$/;"	m	class:android::gltrace::GLMessage
glLinkProgram	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLinkProgram;$/;"	m	class:android::gltrace::GLMessage	file:
glLinkProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLinkProgram = GLMessage_Function_glLinkProgram;$/;"	m	class:android::gltrace::GLMessage
glLoadIdentity	opengl/libagl/matrix.cpp	/^void glLoadIdentity()$/;"	f
glLoadIdentity	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLoadIdentity;$/;"	m	class:android::gltrace::GLMessage	file:
glLoadIdentity	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLoadIdentity = GLMessage_Function_glLoadIdentity;$/;"	m	class:android::gltrace::GLMessage
glLoadMatrixf	opengl/libagl/matrix.cpp	/^void glLoadMatrixf(const GLfloat* m)$/;"	f
glLoadMatrixf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLoadMatrixf;$/;"	m	class:android::gltrace::GLMessage	file:
glLoadMatrixf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLoadMatrixf = GLMessage_Function_glLoadMatrixf;$/;"	m	class:android::gltrace::GLMessage
glLoadMatrixx	opengl/libagl/matrix.cpp	/^void glLoadMatrixx(const GLfixed* m)$/;"	f
glLoadMatrixx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLoadMatrixx;$/;"	m	class:android::gltrace::GLMessage	file:
glLoadMatrixx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLoadMatrixx = GLMessage_Function_glLoadMatrixx;$/;"	m	class:android::gltrace::GLMessage
glLoadMatrixxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLoadMatrixxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glLoadMatrixxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLoadMatrixxOES = GLMessage_Function_glLoadMatrixxOES;$/;"	m	class:android::gltrace::GLMessage
glLoadPaletteFromModelViewMatrixOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLoadPaletteFromModelViewMatrixOES;$/;"	m	class:android::gltrace::GLMessage	file:
glLoadPaletteFromModelViewMatrixOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLoadPaletteFromModelViewMatrixOES = GLMessage_Function_glLoadPaletteFromModelViewMatrixOES;$/;"	m	class:android::gltrace::GLMessage
glLogicOp	opengl/libagl/state.cpp	/^void glLogicOp(GLenum opcode) {$/;"	f
glLogicOp	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glLogicOp;$/;"	m	class:android::gltrace::GLMessage	file:
glLogicOp	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glLogicOp = GLMessage_Function_glLogicOp;$/;"	m	class:android::gltrace::GLMessage
glMapBufferOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMapBufferOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMapBufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMapBufferOES = GLMessage_Function_glMapBufferOES;$/;"	m	class:android::gltrace::GLMessage
glMapBufferRange	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMapBufferRange;$/;"	m	class:android::gltrace::GLMessage	file:
glMapBufferRange	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMapBufferRange = GLMessage_Function_glMapBufferRange;$/;"	m	class:android::gltrace::GLMessage
glMapBufferRange	opengl/tools/glgen/stubs/gles11/glMapBufferRange.java	/^    public static native java.nio.Buffer glMapBufferRange($/;"	m
glMapBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMapBufferRangeEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glMapBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMapBufferRangeEXT = GLMessage_Function_glMapBufferRangeEXT;$/;"	m	class:android::gltrace::GLMessage
glMaterialf	opengl/libagl/light.cpp	/^void glMaterialf(GLenum face, GLenum pname, GLfloat param)$/;"	f
glMaterialf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMaterialf;$/;"	m	class:android::gltrace::GLMessage	file:
glMaterialf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMaterialf = GLMessage_Function_glMaterialf;$/;"	m	class:android::gltrace::GLMessage
glMaterialfv	opengl/libagl/light.cpp	/^void glMaterialfv($/;"	f
glMaterialfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMaterialfv;$/;"	m	class:android::gltrace::GLMessage	file:
glMaterialfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMaterialfv = GLMessage_Function_glMaterialfv;$/;"	m	class:android::gltrace::GLMessage
glMaterialx	opengl/libagl/light.cpp	/^void glMaterialx(GLenum face, GLenum pname, GLfixed param)$/;"	f
glMaterialx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMaterialx;$/;"	m	class:android::gltrace::GLMessage	file:
glMaterialx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMaterialx = GLMessage_Function_glMaterialx;$/;"	m	class:android::gltrace::GLMessage
glMaterialxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMaterialxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMaterialxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMaterialxOES = GLMessage_Function_glMaterialxOES;$/;"	m	class:android::gltrace::GLMessage
glMaterialxv	opengl/libagl/light.cpp	/^void glMaterialxv($/;"	f
glMaterialxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMaterialxv;$/;"	m	class:android::gltrace::GLMessage	file:
glMaterialxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMaterialxv = GLMessage_Function_glMaterialxv;$/;"	m	class:android::gltrace::GLMessage
glMaterialxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMaterialxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMaterialxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMaterialxvOES = GLMessage_Function_glMaterialxvOES;$/;"	m	class:android::gltrace::GLMessage
glMatrixIndexPointerOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMatrixIndexPointerOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMatrixIndexPointerOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMatrixIndexPointerOES = GLMessage_Function_glMatrixIndexPointerOES;$/;"	m	class:android::gltrace::GLMessage
glMatrixIndexPointerOESBounds	opengl/libs/GLES_CM/gl.cpp	/^GL_API void GL_APIENTRY glMatrixIndexPointerOESBounds(GLint size, GLenum type,$/;"	f
glMatrixMode	opengl/libagl/matrix.cpp	/^void glMatrixMode(GLenum mode)$/;"	f
glMatrixMode	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMatrixMode;$/;"	m	class:android::gltrace::GLMessage	file:
glMatrixMode	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMatrixMode = GLMessage_Function_glMatrixMode;$/;"	m	class:android::gltrace::GLMessage
glMemoryBarrier	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMemoryBarrier;$/;"	m	class:android::gltrace::GLMessage	file:
glMemoryBarrier	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMemoryBarrier = GLMessage_Function_glMemoryBarrier;$/;"	m	class:android::gltrace::GLMessage
glMemoryBarrierByRegion	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMemoryBarrierByRegion;$/;"	m	class:android::gltrace::GLMessage	file:
glMemoryBarrierByRegion	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMemoryBarrierByRegion = GLMessage_Function_glMemoryBarrierByRegion;$/;"	m	class:android::gltrace::GLMessage
glMinSampleShadingOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMinSampleShadingOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMinSampleShadingOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMinSampleShadingOES = GLMessage_Function_glMinSampleShadingOES;$/;"	m	class:android::gltrace::GLMessage
glMultMatrixf	opengl/libagl/matrix.cpp	/^void glMultMatrixf(const GLfloat* m)$/;"	f
glMultMatrixf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultMatrixf;$/;"	m	class:android::gltrace::GLMessage	file:
glMultMatrixf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultMatrixf = GLMessage_Function_glMultMatrixf;$/;"	m	class:android::gltrace::GLMessage
glMultMatrixx	opengl/libagl/matrix.cpp	/^void glMultMatrixx(const GLfixed* m)$/;"	f
glMultMatrixx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultMatrixx;$/;"	m	class:android::gltrace::GLMessage	file:
glMultMatrixx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultMatrixx = GLMessage_Function_glMultMatrixx;$/;"	m	class:android::gltrace::GLMessage
glMultMatrixxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultMatrixxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMultMatrixxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultMatrixxOES = GLMessage_Function_glMultMatrixxOES;$/;"	m	class:android::gltrace::GLMessage
glMultiDrawArraysEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiDrawArraysEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiDrawArraysEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiDrawArraysEXT = GLMessage_Function_glMultiDrawArraysEXT;$/;"	m	class:android::gltrace::GLMessage
glMultiDrawElementsEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiDrawElementsEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiDrawElementsEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiDrawElementsEXT = GLMessage_Function_glMultiDrawElementsEXT;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord1bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord1bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord1bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord1bOES = GLMessage_Function_glMultiTexCoord1bOES;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord1bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord1bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord1bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord1bvOES = GLMessage_Function_glMultiTexCoord1bvOES;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord2bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord2bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord2bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord2bOES = GLMessage_Function_glMultiTexCoord2bOES;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord2bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord2bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord2bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord2bvOES = GLMessage_Function_glMultiTexCoord2bvOES;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord3bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord3bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord3bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord3bOES = GLMessage_Function_glMultiTexCoord3bOES;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord3bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord3bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord3bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord3bvOES = GLMessage_Function_glMultiTexCoord3bvOES;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord4bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord4bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord4bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord4bOES = GLMessage_Function_glMultiTexCoord4bOES;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord4bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord4bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord4bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord4bvOES = GLMessage_Function_glMultiTexCoord4bvOES;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord4f	opengl/libagl/texture.cpp	/^void glMultiTexCoord4f($/;"	f
glMultiTexCoord4f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord4f;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord4f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord4f = GLMessage_Function_glMultiTexCoord4f;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord4x	opengl/libagl/texture.cpp	/^void glMultiTexCoord4x($/;"	f
glMultiTexCoord4x	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord4x;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord4x	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord4x = GLMessage_Function_glMultiTexCoord4x;$/;"	m	class:android::gltrace::GLMessage
glMultiTexCoord4xOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glMultiTexCoord4xOES;$/;"	m	class:android::gltrace::GLMessage	file:
glMultiTexCoord4xOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glMultiTexCoord4xOES = GLMessage_Function_glMultiTexCoord4xOES;$/;"	m	class:android::gltrace::GLMessage
glNormal3f	opengl/libagl/vertex.cpp	/^void glNormal3f(GLfloat x, GLfloat y, GLfloat z)$/;"	f
glNormal3f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glNormal3f;$/;"	m	class:android::gltrace::GLMessage	file:
glNormal3f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glNormal3f = GLMessage_Function_glNormal3f;$/;"	m	class:android::gltrace::GLMessage
glNormal3x	opengl/libagl/vertex.cpp	/^void glNormal3x(GLfixed x, GLfixed y, GLfixed z)$/;"	f
glNormal3x	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glNormal3x;$/;"	m	class:android::gltrace::GLMessage	file:
glNormal3x	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glNormal3x = GLMessage_Function_glNormal3x;$/;"	m	class:android::gltrace::GLMessage
glNormal3xOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glNormal3xOES;$/;"	m	class:android::gltrace::GLMessage	file:
glNormal3xOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glNormal3xOES = GLMessage_Function_glNormal3xOES;$/;"	m	class:android::gltrace::GLMessage
glNormalPointer	opengl/libagl/array.cpp	/^void glNormalPointer($/;"	f
glNormalPointer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glNormalPointer;$/;"	m	class:android::gltrace::GLMessage	file:
glNormalPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glNormalPointer = GLMessage_Function_glNormalPointer;$/;"	m	class:android::gltrace::GLMessage
glNormalPointerBounds	opengl/libs/GLES_CM/gl.cpp	/^void glNormalPointerBounds(GLenum type, GLsizei stride,$/;"	f
glObjectLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glObjectLabelKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glObjectLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glObjectLabelKHR = GLMessage_Function_glObjectLabelKHR;$/;"	m	class:android::gltrace::GLMessage
glObjectPtrLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glObjectPtrLabelKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glObjectPtrLabelKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glObjectPtrLabelKHR = GLMessage_Function_glObjectPtrLabelKHR;$/;"	m	class:android::gltrace::GLMessage
glObjectPtrLabelKHR	opengl/tools/glgen/stubs/gles11/glObjectPtrLabelKHR.java	/^    public static native void glObjectPtrLabelKHR(long ptr, String label);$/;"	m
glOrthof	opengl/libagl/matrix.cpp	/^void glOrthof( $/;"	f
glOrthof	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glOrthof;$/;"	m	class:android::gltrace::GLMessage	file:
glOrthof	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glOrthof = GLMessage_Function_glOrthof;$/;"	m	class:android::gltrace::GLMessage
glOrthofOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glOrthofOES;$/;"	m	class:android::gltrace::GLMessage	file:
glOrthofOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glOrthofOES = GLMessage_Function_glOrthofOES;$/;"	m	class:android::gltrace::GLMessage
glOrthox	opengl/libagl/matrix.cpp	/^void glOrthox($/;"	f
glOrthox	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glOrthox;$/;"	m	class:android::gltrace::GLMessage	file:
glOrthox	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glOrthox = GLMessage_Function_glOrthox;$/;"	m	class:android::gltrace::GLMessage
glOrthoxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glOrthoxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glOrthoxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glOrthoxOES = GLMessage_Function_glOrthoxOES;$/;"	m	class:android::gltrace::GLMessage
glPatchParameteriEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPatchParameteriEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glPatchParameteriEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPatchParameteriEXT = GLMessage_Function_glPatchParameteriEXT;$/;"	m	class:android::gltrace::GLMessage
glPauseTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPauseTransformFeedback;$/;"	m	class:android::gltrace::GLMessage	file:
glPauseTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPauseTransformFeedback = GLMessage_Function_glPauseTransformFeedback;$/;"	m	class:android::gltrace::GLMessage
glPixelStorei	opengl/libagl/texture.cpp	/^void glPixelStorei(GLenum pname, GLint param)$/;"	f
glPixelStorei	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPixelStorei;$/;"	m	class:android::gltrace::GLMessage	file:
glPixelStorei	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPixelStorei = GLMessage_Function_glPixelStorei;$/;"	m	class:android::gltrace::GLMessage
glPointParameterf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPointParameterf;$/;"	m	class:android::gltrace::GLMessage	file:
glPointParameterf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPointParameterf = GLMessage_Function_glPointParameterf;$/;"	m	class:android::gltrace::GLMessage
glPointParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPointParameterfv;$/;"	m	class:android::gltrace::GLMessage	file:
glPointParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPointParameterfv = GLMessage_Function_glPointParameterfv;$/;"	m	class:android::gltrace::GLMessage
glPointParameterx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPointParameterx;$/;"	m	class:android::gltrace::GLMessage	file:
glPointParameterx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPointParameterx = GLMessage_Function_glPointParameterx;$/;"	m	class:android::gltrace::GLMessage
glPointParameterxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPointParameterxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glPointParameterxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPointParameterxOES = GLMessage_Function_glPointParameterxOES;$/;"	m	class:android::gltrace::GLMessage
glPointParameterxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPointParameterxv;$/;"	m	class:android::gltrace::GLMessage	file:
glPointParameterxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPointParameterxv = GLMessage_Function_glPointParameterxv;$/;"	m	class:android::gltrace::GLMessage
glPointParameterxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPointParameterxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glPointParameterxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPointParameterxvOES = GLMessage_Function_glPointParameterxvOES;$/;"	m	class:android::gltrace::GLMessage
glPointSize	opengl/libagl/state.cpp	/^void glPointSize(GLfloat size)$/;"	f
glPointSize	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPointSize;$/;"	m	class:android::gltrace::GLMessage	file:
glPointSize	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPointSize = GLMessage_Function_glPointSize;$/;"	m	class:android::gltrace::GLMessage
glPointSizePointerOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPointSizePointerOES;$/;"	m	class:android::gltrace::GLMessage	file:
glPointSizePointerOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPointSizePointerOES = GLMessage_Function_glPointSizePointerOES;$/;"	m	class:android::gltrace::GLMessage
glPointSizePointerOESBounds	opengl/libs/GLES_CM/gl.cpp	/^void GL_APIENTRY glPointSizePointerOESBounds(GLenum type,$/;"	f
glPointSizex	opengl/libagl/state.cpp	/^void glPointSizex(GLfixed size)$/;"	f
glPointSizex	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPointSizex;$/;"	m	class:android::gltrace::GLMessage	file:
glPointSizex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPointSizex = GLMessage_Function_glPointSizex;$/;"	m	class:android::gltrace::GLMessage
glPointSizexOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPointSizexOES;$/;"	m	class:android::gltrace::GLMessage	file:
glPointSizexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPointSizexOES = GLMessage_Function_glPointSizexOES;$/;"	m	class:android::gltrace::GLMessage
glPolygonOffset	opengl/libagl/matrix.cpp	/^void glPolygonOffset(GLfloat factor, GLfloat units)$/;"	f
glPolygonOffset	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPolygonOffset;$/;"	m	class:android::gltrace::GLMessage	file:
glPolygonOffset	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPolygonOffset = GLMessage_Function_glPolygonOffset;$/;"	m	class:android::gltrace::GLMessage
glPolygonOffsetx	opengl/libagl/matrix.cpp	/^void glPolygonOffsetx(GLfixed factor, GLfixed units)$/;"	f
glPolygonOffsetx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPolygonOffsetx;$/;"	m	class:android::gltrace::GLMessage	file:
glPolygonOffsetx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPolygonOffsetx = GLMessage_Function_glPolygonOffsetx;$/;"	m	class:android::gltrace::GLMessage
glPolygonOffsetxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPolygonOffsetxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glPolygonOffsetxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPolygonOffsetxOES = GLMessage_Function_glPolygonOffsetxOES;$/;"	m	class:android::gltrace::GLMessage
glPopDebugGroupKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPopDebugGroupKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glPopDebugGroupKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPopDebugGroupKHR = GLMessage_Function_glPopDebugGroupKHR;$/;"	m	class:android::gltrace::GLMessage
glPopGroupMarkerEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPopGroupMarkerEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glPopGroupMarkerEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPopGroupMarkerEXT = GLMessage_Function_glPopGroupMarkerEXT;$/;"	m	class:android::gltrace::GLMessage
glPopMatrix	opengl/libagl/matrix.cpp	/^void glPopMatrix()$/;"	f
glPopMatrix	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPopMatrix;$/;"	m	class:android::gltrace::GLMessage	file:
glPopMatrix	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPopMatrix = GLMessage_Function_glPopMatrix;$/;"	m	class:android::gltrace::GLMessage
glPrimitiveBoundingBoxEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPrimitiveBoundingBoxEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glPrimitiveBoundingBoxEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPrimitiveBoundingBoxEXT = GLMessage_Function_glPrimitiveBoundingBoxEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramBinary	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramBinary;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramBinary	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramBinary = GLMessage_Function_glProgramBinary;$/;"	m	class:android::gltrace::GLMessage
glProgramBinaryOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramBinaryOES;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramBinaryOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramBinaryOES = GLMessage_Function_glProgramBinaryOES;$/;"	m	class:android::gltrace::GLMessage
glProgramParameteri	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramParameteri;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramParameteri	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramParameteri = GLMessage_Function_glProgramParameteri;$/;"	m	class:android::gltrace::GLMessage
glProgramParameteriEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramParameteriEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramParameteriEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramParameteriEXT = GLMessage_Function_glProgramParameteriEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1f;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1f = GLMessage_Function_glProgramUniform1f;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1fEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1fEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1fEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1fEXT = GLMessage_Function_glProgramUniform1fEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1fv = GLMessage_Function_glProgramUniform1fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1fvEXT = GLMessage_Function_glProgramUniform1fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1i	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1i;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1i = GLMessage_Function_glProgramUniform1i;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1iEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1iEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1iEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1iEXT = GLMessage_Function_glProgramUniform1iEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1iv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1iv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1iv = GLMessage_Function_glProgramUniform1iv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1ivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1ivEXT = GLMessage_Function_glProgramUniform1ivEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1ui	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1ui;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1ui = GLMessage_Function_glProgramUniform1ui;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1uiEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1uiEXT = GLMessage_Function_glProgramUniform1uiEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1uiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1uiv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1uiv = GLMessage_Function_glProgramUniform1uiv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform1uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform1uivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform1uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform1uivEXT = GLMessage_Function_glProgramUniform1uivEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2f;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2f = GLMessage_Function_glProgramUniform2f;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2fEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2fEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2fEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2fEXT = GLMessage_Function_glProgramUniform2fEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2fv = GLMessage_Function_glProgramUniform2fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2fvEXT = GLMessage_Function_glProgramUniform2fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2i	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2i;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2i = GLMessage_Function_glProgramUniform2i;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2iEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2iEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2iEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2iEXT = GLMessage_Function_glProgramUniform2iEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2iv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2iv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2iv = GLMessage_Function_glProgramUniform2iv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2ivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2ivEXT = GLMessage_Function_glProgramUniform2ivEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2ui	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2ui;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2ui = GLMessage_Function_glProgramUniform2ui;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2uiEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2uiEXT = GLMessage_Function_glProgramUniform2uiEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2uiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2uiv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2uiv = GLMessage_Function_glProgramUniform2uiv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform2uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform2uivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform2uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform2uivEXT = GLMessage_Function_glProgramUniform2uivEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3f;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3f = GLMessage_Function_glProgramUniform3f;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3fEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3fEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3fEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3fEXT = GLMessage_Function_glProgramUniform3fEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3fv = GLMessage_Function_glProgramUniform3fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3fvEXT = GLMessage_Function_glProgramUniform3fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3i	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3i;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3i = GLMessage_Function_glProgramUniform3i;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3iEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3iEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3iEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3iEXT = GLMessage_Function_glProgramUniform3iEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3iv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3iv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3iv = GLMessage_Function_glProgramUniform3iv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3ivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3ivEXT = GLMessage_Function_glProgramUniform3ivEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3ui	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3ui;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3ui = GLMessage_Function_glProgramUniform3ui;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3uiEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3uiEXT = GLMessage_Function_glProgramUniform3uiEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3uiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3uiv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3uiv = GLMessage_Function_glProgramUniform3uiv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform3uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform3uivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform3uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform3uivEXT = GLMessage_Function_glProgramUniform3uivEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4f;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4f = GLMessage_Function_glProgramUniform4f;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4fEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4fEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4fEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4fEXT = GLMessage_Function_glProgramUniform4fEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4fv = GLMessage_Function_glProgramUniform4fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4fvEXT = GLMessage_Function_glProgramUniform4fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4i	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4i;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4i = GLMessage_Function_glProgramUniform4i;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4iEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4iEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4iEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4iEXT = GLMessage_Function_glProgramUniform4iEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4iv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4iv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4iv = GLMessage_Function_glProgramUniform4iv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4ivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4ivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4ivEXT = GLMessage_Function_glProgramUniform4ivEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4ui	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4ui;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4ui = GLMessage_Function_glProgramUniform4ui;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4uiEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4uiEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4uiEXT = GLMessage_Function_glProgramUniform4uiEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4uiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4uiv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4uiv = GLMessage_Function_glProgramUniform4uiv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniform4uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniform4uivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniform4uivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniform4uivEXT = GLMessage_Function_glProgramUniform4uivEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix2fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix2fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix2fv = GLMessage_Function_glProgramUniformMatrix2fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix2fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix2fvEXT = GLMessage_Function_glProgramUniformMatrix2fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix2x3fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix2x3fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix2x3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix2x3fv = GLMessage_Function_glProgramUniformMatrix2x3fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix2x3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix2x3fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix2x3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix2x3fvEXT = GLMessage_Function_glProgramUniformMatrix2x3fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix2x4fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix2x4fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix2x4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix2x4fv = GLMessage_Function_glProgramUniformMatrix2x4fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix2x4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix2x4fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix2x4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix2x4fvEXT = GLMessage_Function_glProgramUniformMatrix2x4fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix3fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix3fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix3fv = GLMessage_Function_glProgramUniformMatrix3fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix3fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix3fvEXT = GLMessage_Function_glProgramUniformMatrix3fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix3x2fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix3x2fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix3x2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix3x2fv = GLMessage_Function_glProgramUniformMatrix3x2fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix3x2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix3x2fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix3x2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix3x2fvEXT = GLMessage_Function_glProgramUniformMatrix3x2fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix3x4fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix3x4fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix3x4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix3x4fv = GLMessage_Function_glProgramUniformMatrix3x4fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix3x4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix3x4fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix3x4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix3x4fvEXT = GLMessage_Function_glProgramUniformMatrix3x4fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix4fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix4fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix4fv = GLMessage_Function_glProgramUniformMatrix4fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix4fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix4fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix4fvEXT = GLMessage_Function_glProgramUniformMatrix4fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix4x2fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix4x2fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix4x2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix4x2fv = GLMessage_Function_glProgramUniformMatrix4x2fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix4x2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix4x2fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix4x2fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix4x2fvEXT = GLMessage_Function_glProgramUniformMatrix4x2fvEXT;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix4x3fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix4x3fv;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix4x3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix4x3fv = GLMessage_Function_glProgramUniformMatrix4x3fv;$/;"	m	class:android::gltrace::GLMessage
glProgramUniformMatrix4x3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glProgramUniformMatrix4x3fvEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glProgramUniformMatrix4x3fvEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glProgramUniformMatrix4x3fvEXT = GLMessage_Function_glProgramUniformMatrix4x3fvEXT;$/;"	m	class:android::gltrace::GLMessage
glPushDebugGroupKHR	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPushDebugGroupKHR;$/;"	m	class:android::gltrace::GLMessage	file:
glPushDebugGroupKHR	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPushDebugGroupKHR = GLMessage_Function_glPushDebugGroupKHR;$/;"	m	class:android::gltrace::GLMessage
glPushGroupMarkerEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPushGroupMarkerEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glPushGroupMarkerEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPushGroupMarkerEXT = GLMessage_Function_glPushGroupMarkerEXT;$/;"	m	class:android::gltrace::GLMessage
glPushMatrix	opengl/libagl/matrix.cpp	/^void glPushMatrix()$/;"	f
glPushMatrix	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glPushMatrix;$/;"	m	class:android::gltrace::GLMessage	file:
glPushMatrix	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glPushMatrix = GLMessage_Function_glPushMatrix;$/;"	m	class:android::gltrace::GLMessage
glQueryCounterEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glQueryCounterEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glQueryCounterEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glQueryCounterEXT = GLMessage_Function_glQueryCounterEXT;$/;"	m	class:android::gltrace::GLMessage
glQueryMatrixxOES	opengl/libagl/matrix.cpp	/^GLbitfield glQueryMatrixxOES(GLfixed* m, GLint* e)$/;"	f
glQueryMatrixxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glQueryMatrixxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glQueryMatrixxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glQueryMatrixxOES = GLMessage_Function_glQueryMatrixxOES;$/;"	m	class:android::gltrace::GLMessage
glReadBuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glReadBuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glReadBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glReadBuffer = GLMessage_Function_glReadBuffer;$/;"	m	class:android::gltrace::GLMessage
glReadBufferIndexedEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glReadBufferIndexedEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glReadBufferIndexedEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glReadBufferIndexedEXT = GLMessage_Function_glReadBufferIndexedEXT;$/;"	m	class:android::gltrace::GLMessage
glReadBufferNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glReadBufferNV;$/;"	m	class:android::gltrace::GLMessage	file:
glReadBufferNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glReadBufferNV = GLMessage_Function_glReadBufferNV;$/;"	m	class:android::gltrace::GLMessage
glReadPixels	opengl/libagl/texture.cpp	/^void glReadPixels($/;"	f
glReadPixels	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glReadPixels;$/;"	m	class:android::gltrace::GLMessage	file:
glReadPixels	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glReadPixels = GLMessage_Function_glReadPixels;$/;"	m	class:android::gltrace::GLMessage
glReadnPixelsEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glReadnPixelsEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glReadnPixelsEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glReadnPixelsEXT = GLMessage_Function_glReadnPixelsEXT;$/;"	m	class:android::gltrace::GLMessage
glReleaseShaderCompiler	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glReleaseShaderCompiler;$/;"	m	class:android::gltrace::GLMessage	file:
glReleaseShaderCompiler	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glReleaseShaderCompiler = GLMessage_Function_glReleaseShaderCompiler;$/;"	m	class:android::gltrace::GLMessage
glRenderbufferStorage	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRenderbufferStorage;$/;"	m	class:android::gltrace::GLMessage	file:
glRenderbufferStorage	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRenderbufferStorage = GLMessage_Function_glRenderbufferStorage;$/;"	m	class:android::gltrace::GLMessage
glRenderbufferStorageMultisample	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRenderbufferStorageMultisample;$/;"	m	class:android::gltrace::GLMessage	file:
glRenderbufferStorageMultisample	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRenderbufferStorageMultisample = GLMessage_Function_glRenderbufferStorageMultisample;$/;"	m	class:android::gltrace::GLMessage
glRenderbufferStorageMultisampleANGLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRenderbufferStorageMultisampleANGLE;$/;"	m	class:android::gltrace::GLMessage	file:
glRenderbufferStorageMultisampleANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRenderbufferStorageMultisampleANGLE = GLMessage_Function_glRenderbufferStorageMultisampleANGLE;$/;"	m	class:android::gltrace::GLMessage
glRenderbufferStorageMultisampleAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRenderbufferStorageMultisampleAPPLE;$/;"	m	class:android::gltrace::GLMessage	file:
glRenderbufferStorageMultisampleAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRenderbufferStorageMultisampleAPPLE = GLMessage_Function_glRenderbufferStorageMultisampleAPPLE;$/;"	m	class:android::gltrace::GLMessage
glRenderbufferStorageMultisampleEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRenderbufferStorageMultisampleEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glRenderbufferStorageMultisampleEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRenderbufferStorageMultisampleEXT = GLMessage_Function_glRenderbufferStorageMultisampleEXT;$/;"	m	class:android::gltrace::GLMessage
glRenderbufferStorageMultisampleIMG	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRenderbufferStorageMultisampleIMG;$/;"	m	class:android::gltrace::GLMessage	file:
glRenderbufferStorageMultisampleIMG	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRenderbufferStorageMultisampleIMG = GLMessage_Function_glRenderbufferStorageMultisampleIMG;$/;"	m	class:android::gltrace::GLMessage
glRenderbufferStorageMultisampleNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRenderbufferStorageMultisampleNV;$/;"	m	class:android::gltrace::GLMessage	file:
glRenderbufferStorageMultisampleNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRenderbufferStorageMultisampleNV = GLMessage_Function_glRenderbufferStorageMultisampleNV;$/;"	m	class:android::gltrace::GLMessage
glRenderbufferStorageOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRenderbufferStorageOES;$/;"	m	class:android::gltrace::GLMessage	file:
glRenderbufferStorageOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRenderbufferStorageOES = GLMessage_Function_glRenderbufferStorageOES;$/;"	m	class:android::gltrace::GLMessage
glResolveMultisampleFramebufferAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glResolveMultisampleFramebufferAPPLE;$/;"	m	class:android::gltrace::GLMessage	file:
glResolveMultisampleFramebufferAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glResolveMultisampleFramebufferAPPLE = GLMessage_Function_glResolveMultisampleFramebufferAPPLE;$/;"	m	class:android::gltrace::GLMessage
glResumeTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glResumeTransformFeedback;$/;"	m	class:android::gltrace::GLMessage	file:
glResumeTransformFeedback	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glResumeTransformFeedback = GLMessage_Function_glResumeTransformFeedback;$/;"	m	class:android::gltrace::GLMessage
glRotatef	opengl/libagl/matrix.cpp	/^void glRotatef(GLfloat a, GLfloat x, GLfloat y, GLfloat z)$/;"	f
glRotatef	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRotatef;$/;"	m	class:android::gltrace::GLMessage	file:
glRotatef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRotatef = GLMessage_Function_glRotatef;$/;"	m	class:android::gltrace::GLMessage
glRotatex	opengl/libagl/matrix.cpp	/^void glRotatex(GLfixed a, GLfixed x, GLfixed y, GLfixed z)$/;"	f
glRotatex	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRotatex;$/;"	m	class:android::gltrace::GLMessage	file:
glRotatex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRotatex = GLMessage_Function_glRotatex;$/;"	m	class:android::gltrace::GLMessage
glRotatexOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glRotatexOES;$/;"	m	class:android::gltrace::GLMessage	file:
glRotatexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glRotatexOES = GLMessage_Function_glRotatexOES;$/;"	m	class:android::gltrace::GLMessage
glSampleCoverage	opengl/libagl/state.cpp	/^void glSampleCoverage(GLclampf \/*value*\/, GLboolean \/*invert*\/) {$/;"	f
glSampleCoverage	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSampleCoverage;$/;"	m	class:android::gltrace::GLMessage	file:
glSampleCoverage	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSampleCoverage = GLMessage_Function_glSampleCoverage;$/;"	m	class:android::gltrace::GLMessage
glSampleCoverageOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSampleCoverageOES;$/;"	m	class:android::gltrace::GLMessage	file:
glSampleCoverageOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSampleCoverageOES = GLMessage_Function_glSampleCoverageOES;$/;"	m	class:android::gltrace::GLMessage
glSampleCoveragex	opengl/libagl/state.cpp	/^void glSampleCoveragex(GLclampx \/*value*\/, GLboolean \/*invert*\/) {$/;"	f
glSampleCoveragex	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSampleCoveragex;$/;"	m	class:android::gltrace::GLMessage	file:
glSampleCoveragex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSampleCoveragex = GLMessage_Function_glSampleCoveragex;$/;"	m	class:android::gltrace::GLMessage
glSampleCoveragexOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSampleCoveragexOES;$/;"	m	class:android::gltrace::GLMessage	file:
glSampleCoveragexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSampleCoveragexOES = GLMessage_Function_glSampleCoveragexOES;$/;"	m	class:android::gltrace::GLMessage
glSampleMaski	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSampleMaski;$/;"	m	class:android::gltrace::GLMessage	file:
glSampleMaski	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSampleMaski = GLMessage_Function_glSampleMaski;$/;"	m	class:android::gltrace::GLMessage
glSamplerParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSamplerParameterIivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glSamplerParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSamplerParameterIivEXT = GLMessage_Function_glSamplerParameterIivEXT;$/;"	m	class:android::gltrace::GLMessage
glSamplerParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSamplerParameterIuivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glSamplerParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSamplerParameterIuivEXT = GLMessage_Function_glSamplerParameterIuivEXT;$/;"	m	class:android::gltrace::GLMessage
glSamplerParameterf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSamplerParameterf;$/;"	m	class:android::gltrace::GLMessage	file:
glSamplerParameterf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSamplerParameterf = GLMessage_Function_glSamplerParameterf;$/;"	m	class:android::gltrace::GLMessage
glSamplerParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSamplerParameterfv;$/;"	m	class:android::gltrace::GLMessage	file:
glSamplerParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSamplerParameterfv = GLMessage_Function_glSamplerParameterfv;$/;"	m	class:android::gltrace::GLMessage
glSamplerParameteri	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSamplerParameteri;$/;"	m	class:android::gltrace::GLMessage	file:
glSamplerParameteri	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSamplerParameteri = GLMessage_Function_glSamplerParameteri;$/;"	m	class:android::gltrace::GLMessage
glSamplerParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSamplerParameteriv;$/;"	m	class:android::gltrace::GLMessage	file:
glSamplerParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSamplerParameteriv = GLMessage_Function_glSamplerParameteriv;$/;"	m	class:android::gltrace::GLMessage
glScalef	opengl/libagl/matrix.cpp	/^void glScalef(GLfloat x, GLfloat y, GLfloat z)$/;"	f
glScalef	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glScalef;$/;"	m	class:android::gltrace::GLMessage	file:
glScalef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glScalef = GLMessage_Function_glScalef;$/;"	m	class:android::gltrace::GLMessage
glScalex	opengl/libagl/matrix.cpp	/^void glScalex(GLfixed x, GLfixed y, GLfixed z)$/;"	f
glScalex	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glScalex;$/;"	m	class:android::gltrace::GLMessage	file:
glScalex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glScalex = GLMessage_Function_glScalex;$/;"	m	class:android::gltrace::GLMessage
glScalexOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glScalexOES;$/;"	m	class:android::gltrace::GLMessage	file:
glScalexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glScalexOES = GLMessage_Function_glScalexOES;$/;"	m	class:android::gltrace::GLMessage
glScissor	opengl/libagl/matrix.cpp	/^void glScissor(GLint x, GLint y, GLsizei w, GLsizei h)$/;"	f
glScissor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glScissor;$/;"	m	class:android::gltrace::GLMessage	file:
glScissor	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glScissor = GLMessage_Function_glScissor;$/;"	m	class:android::gltrace::GLMessage
glSelectPerfMonitorCountersAMD	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSelectPerfMonitorCountersAMD;$/;"	m	class:android::gltrace::GLMessage	file:
glSelectPerfMonitorCountersAMD	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSelectPerfMonitorCountersAMD = GLMessage_Function_glSelectPerfMonitorCountersAMD;$/;"	m	class:android::gltrace::GLMessage
glSetFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glSetFenceNV;$/;"	m	class:android::gltrace::GLMessage	file:
glSetFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glSetFenceNV = GLMessage_Function_glSetFenceNV;$/;"	m	class:android::gltrace::GLMessage
glShadeModel	opengl/libagl/light.cpp	/^void glShadeModel(GLenum mode)$/;"	f
glShadeModel	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glShadeModel;$/;"	m	class:android::gltrace::GLMessage	file:
glShadeModel	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glShadeModel = GLMessage_Function_glShadeModel;$/;"	m	class:android::gltrace::GLMessage
glShaderBinary	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glShaderBinary;$/;"	m	class:android::gltrace::GLMessage	file:
glShaderBinary	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glShaderBinary = GLMessage_Function_glShaderBinary;$/;"	m	class:android::gltrace::GLMessage
glShaderSource	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glShaderSource;$/;"	m	class:android::gltrace::GLMessage	file:
glShaderSource	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glShaderSource = GLMessage_Function_glShaderSource;$/;"	m	class:android::gltrace::GLMessage
glShaderSource	opengl/tools/glgen/stubs/gles11/glShaderSource.java	/^    public static native void glShaderSource($/;"	m
glStartTilingQCOM	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glStartTilingQCOM;$/;"	m	class:android::gltrace::GLMessage	file:
glStartTilingQCOM	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glStartTilingQCOM = GLMessage_Function_glStartTilingQCOM;$/;"	m	class:android::gltrace::GLMessage
glStencilFunc	opengl/libagl/state.cpp	/^void glStencilFunc(GLenum func, GLint \/*ref*\/, GLuint \/*mask*\/) {$/;"	f
glStencilFunc	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glStencilFunc;$/;"	m	class:android::gltrace::GLMessage	file:
glStencilFunc	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glStencilFunc = GLMessage_Function_glStencilFunc;$/;"	m	class:android::gltrace::GLMessage
glStencilFuncSeparate	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glStencilFuncSeparate;$/;"	m	class:android::gltrace::GLMessage	file:
glStencilFuncSeparate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glStencilFuncSeparate = GLMessage_Function_glStencilFuncSeparate;$/;"	m	class:android::gltrace::GLMessage
glStencilMask	opengl/libagl/state.cpp	/^void glStencilMask(GLuint mask) {$/;"	f
glStencilMask	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glStencilMask;$/;"	m	class:android::gltrace::GLMessage	file:
glStencilMask	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glStencilMask = GLMessage_Function_glStencilMask;$/;"	m	class:android::gltrace::GLMessage
glStencilMaskSeparate	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glStencilMaskSeparate;$/;"	m	class:android::gltrace::GLMessage	file:
glStencilMaskSeparate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glStencilMaskSeparate = GLMessage_Function_glStencilMaskSeparate;$/;"	m	class:android::gltrace::GLMessage
glStencilOp	opengl/libagl/state.cpp	/^void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass) {$/;"	f
glStencilOp	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glStencilOp;$/;"	m	class:android::gltrace::GLMessage	file:
glStencilOp	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glStencilOp = GLMessage_Function_glStencilOp;$/;"	m	class:android::gltrace::GLMessage
glStencilOpSeparate	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glStencilOpSeparate;$/;"	m	class:android::gltrace::GLMessage	file:
glStencilOpSeparate	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glStencilOpSeparate = GLMessage_Function_glStencilOpSeparate;$/;"	m	class:android::gltrace::GLMessage
glTestCheckEglError	opengl/tests/lib/glTestLib.cpp	/^void glTestCheckEglError(const char* op, EGLBoolean returnVal)$/;"	f
glTestCheckGlError	opengl/tests/lib/glTestLib.cpp	/^void glTestCheckGlError(const char* op)$/;"	f
glTestFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTestFenceNV;$/;"	m	class:android::gltrace::GLMessage	file:
glTestFenceNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTestFenceNV = GLMessage_Function_glTestFenceNV;$/;"	m	class:android::gltrace::GLMessage
glTestPrintEGLConfiguration	opengl/tests/lib/glTestLib.cpp	/^void glTestPrintEGLConfiguration(EGLDisplay dpy, EGLConfig config)$/;"	f
glTestPrintGLString	opengl/tests/lib/glTestLib.cpp	/^void glTestPrintGLString(const char *name, GLenum s)$/;"	f
glTexBufferEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexBufferEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTexBufferEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexBufferEXT = GLMessage_Function_glTexBufferEXT;$/;"	m	class:android::gltrace::GLMessage
glTexBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexBufferRangeEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTexBufferRangeEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexBufferRangeEXT = GLMessage_Function_glTexBufferRangeEXT;$/;"	m	class:android::gltrace::GLMessage
glTexCoord1bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexCoord1bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexCoord1bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexCoord1bOES = GLMessage_Function_glTexCoord1bOES;$/;"	m	class:android::gltrace::GLMessage
glTexCoord1bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexCoord1bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexCoord1bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexCoord1bvOES = GLMessage_Function_glTexCoord1bvOES;$/;"	m	class:android::gltrace::GLMessage
glTexCoord2bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexCoord2bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexCoord2bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexCoord2bOES = GLMessage_Function_glTexCoord2bOES;$/;"	m	class:android::gltrace::GLMessage
glTexCoord2bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexCoord2bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexCoord2bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexCoord2bvOES = GLMessage_Function_glTexCoord2bvOES;$/;"	m	class:android::gltrace::GLMessage
glTexCoord3bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexCoord3bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexCoord3bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexCoord3bOES = GLMessage_Function_glTexCoord3bOES;$/;"	m	class:android::gltrace::GLMessage
glTexCoord3bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexCoord3bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexCoord3bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexCoord3bvOES = GLMessage_Function_glTexCoord3bvOES;$/;"	m	class:android::gltrace::GLMessage
glTexCoord4bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexCoord4bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexCoord4bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexCoord4bOES = GLMessage_Function_glTexCoord4bOES;$/;"	m	class:android::gltrace::GLMessage
glTexCoord4bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexCoord4bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexCoord4bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexCoord4bvOES = GLMessage_Function_glTexCoord4bvOES;$/;"	m	class:android::gltrace::GLMessage
glTexCoordPointer	opengl/libagl/array.cpp	/^void glTexCoordPointer($/;"	f
glTexCoordPointer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexCoordPointer;$/;"	m	class:android::gltrace::GLMessage	file:
glTexCoordPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexCoordPointer = GLMessage_Function_glTexCoordPointer;$/;"	m	class:android::gltrace::GLMessage
glTexCoordPointerBounds	opengl/libs/GLES_CM/gl.cpp	/^void glTexCoordPointerBounds(GLint size, GLenum type,$/;"	f
glTexEnvf	opengl/libagl/texture.cpp	/^void glTexEnvf(GLenum target, GLenum pname, GLfloat param)$/;"	f
glTexEnvf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexEnvf;$/;"	m	class:android::gltrace::GLMessage	file:
glTexEnvf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexEnvf = GLMessage_Function_glTexEnvf;$/;"	m	class:android::gltrace::GLMessage
glTexEnvfv	opengl/libagl/texture.cpp	/^void glTexEnvfv($/;"	f
glTexEnvfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexEnvfv;$/;"	m	class:android::gltrace::GLMessage	file:
glTexEnvfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexEnvfv = GLMessage_Function_glTexEnvfv;$/;"	m	class:android::gltrace::GLMessage
glTexEnvi	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexEnvi;$/;"	m	class:android::gltrace::GLMessage	file:
glTexEnvi	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexEnvi = GLMessage_Function_glTexEnvi;$/;"	m	class:android::gltrace::GLMessage
glTexEnviv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexEnviv;$/;"	m	class:android::gltrace::GLMessage	file:
glTexEnviv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexEnviv = GLMessage_Function_glTexEnviv;$/;"	m	class:android::gltrace::GLMessage
glTexEnvx	opengl/libagl/texture.cpp	/^void glTexEnvx(GLenum target, GLenum pname, GLfixed param)$/;"	f
glTexEnvx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexEnvx;$/;"	m	class:android::gltrace::GLMessage	file:
glTexEnvx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexEnvx = GLMessage_Function_glTexEnvx;$/;"	m	class:android::gltrace::GLMessage
glTexEnvxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexEnvxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexEnvxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexEnvxOES = GLMessage_Function_glTexEnvxOES;$/;"	m	class:android::gltrace::GLMessage
glTexEnvxv	opengl/libagl/texture.cpp	/^void glTexEnvxv($/;"	f
glTexEnvxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexEnvxv;$/;"	m	class:android::gltrace::GLMessage	file:
glTexEnvxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexEnvxv = GLMessage_Function_glTexEnvxv;$/;"	m	class:android::gltrace::GLMessage
glTexEnvxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexEnvxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexEnvxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexEnvxvOES = GLMessage_Function_glTexEnvxvOES;$/;"	m	class:android::gltrace::GLMessage
glTexGenf	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	36;"	d	file:
glTexGenfOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexGenfOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexGenfOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexGenfOES = GLMessage_Function_glTexGenfOES;$/;"	m	class:android::gltrace::GLMessage
glTexGenfv	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	37;"	d	file:
glTexGenfvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexGenfvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexGenfvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexGenfvOES = GLMessage_Function_glTexGenfvOES;$/;"	m	class:android::gltrace::GLMessage
glTexGeni	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	38;"	d	file:
glTexGeniOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexGeniOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexGeniOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexGeniOES = GLMessage_Function_glTexGeniOES;$/;"	m	class:android::gltrace::GLMessage
glTexGeniv	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	39;"	d	file:
glTexGenivOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexGenivOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexGenivOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexGenivOES = GLMessage_Function_glTexGenivOES;$/;"	m	class:android::gltrace::GLMessage
glTexGenx	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	40;"	d	file:
glTexGenxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexGenxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexGenxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexGenxOES = GLMessage_Function_glTexGenxOES;$/;"	m	class:android::gltrace::GLMessage
glTexGenxv	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	41;"	d	file:
glTexGenxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexGenxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexGenxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexGenxvOES = GLMessage_Function_glTexGenxvOES;$/;"	m	class:android::gltrace::GLMessage
glTexImage2D	opengl/libagl/texture.cpp	/^void glTexImage2D($/;"	f
glTexImage2D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexImage2D;$/;"	m	class:android::gltrace::GLMessage	file:
glTexImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexImage2D = GLMessage_Function_glTexImage2D;$/;"	m	class:android::gltrace::GLMessage
glTexImage3D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexImage3D;$/;"	m	class:android::gltrace::GLMessage	file:
glTexImage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexImage3D = GLMessage_Function_glTexImage3D;$/;"	m	class:android::gltrace::GLMessage
glTexImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexImage3DOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexImage3DOES = GLMessage_Function_glTexImage3DOES;$/;"	m	class:android::gltrace::GLMessage
glTexParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexParameterIivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTexParameterIivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexParameterIivEXT = GLMessage_Function_glTexParameterIivEXT;$/;"	m	class:android::gltrace::GLMessage
glTexParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexParameterIuivEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTexParameterIuivEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexParameterIuivEXT = GLMessage_Function_glTexParameterIuivEXT;$/;"	m	class:android::gltrace::GLMessage
glTexParameterf	opengl/libagl/texture.cpp	/^void glTexParameterf($/;"	f
glTexParameterf	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexParameterf;$/;"	m	class:android::gltrace::GLMessage	file:
glTexParameterf	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexParameterf = GLMessage_Function_glTexParameterf;$/;"	m	class:android::gltrace::GLMessage
glTexParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexParameterfv;$/;"	m	class:android::gltrace::GLMessage	file:
glTexParameterfv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexParameterfv = GLMessage_Function_glTexParameterfv;$/;"	m	class:android::gltrace::GLMessage
glTexParameteri	opengl/libagl/texture.cpp	/^void glTexParameteri($/;"	f
glTexParameteri	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexParameteri;$/;"	m	class:android::gltrace::GLMessage	file:
glTexParameteri	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexParameteri = GLMessage_Function_glTexParameteri;$/;"	m	class:android::gltrace::GLMessage
glTexParameteriv	opengl/libagl/texture.cpp	/^void glTexParameteriv($/;"	f
glTexParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexParameteriv;$/;"	m	class:android::gltrace::GLMessage	file:
glTexParameteriv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexParameteriv = GLMessage_Function_glTexParameteriv;$/;"	m	class:android::gltrace::GLMessage
glTexParameterx	opengl/libagl/texture.cpp	/^void glTexParameterx($/;"	f
glTexParameterx	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexParameterx;$/;"	m	class:android::gltrace::GLMessage	file:
glTexParameterx	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexParameterx = GLMessage_Function_glTexParameterx;$/;"	m	class:android::gltrace::GLMessage
glTexParameterxOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexParameterxOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexParameterxOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexParameterxOES = GLMessage_Function_glTexParameterxOES;$/;"	m	class:android::gltrace::GLMessage
glTexParameterxv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexParameterxv;$/;"	m	class:android::gltrace::GLMessage	file:
glTexParameterxv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexParameterxv = GLMessage_Function_glTexParameterxv;$/;"	m	class:android::gltrace::GLMessage
glTexParameterxvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexParameterxvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexParameterxvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexParameterxvOES = GLMessage_Function_glTexParameterxvOES;$/;"	m	class:android::gltrace::GLMessage
glTexStorage1DEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexStorage1DEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTexStorage1DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexStorage1DEXT = GLMessage_Function_glTexStorage1DEXT;$/;"	m	class:android::gltrace::GLMessage
glTexStorage2D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexStorage2D;$/;"	m	class:android::gltrace::GLMessage	file:
glTexStorage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexStorage2D = GLMessage_Function_glTexStorage2D;$/;"	m	class:android::gltrace::GLMessage
glTexStorage2DEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexStorage2DEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTexStorage2DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexStorage2DEXT = GLMessage_Function_glTexStorage2DEXT;$/;"	m	class:android::gltrace::GLMessage
glTexStorage2DMultisample	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexStorage2DMultisample;$/;"	m	class:android::gltrace::GLMessage	file:
glTexStorage2DMultisample	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexStorage2DMultisample = GLMessage_Function_glTexStorage2DMultisample;$/;"	m	class:android::gltrace::GLMessage
glTexStorage3D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexStorage3D;$/;"	m	class:android::gltrace::GLMessage	file:
glTexStorage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexStorage3D = GLMessage_Function_glTexStorage3D;$/;"	m	class:android::gltrace::GLMessage
glTexStorage3DEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexStorage3DEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTexStorage3DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexStorage3DEXT = GLMessage_Function_glTexStorage3DEXT;$/;"	m	class:android::gltrace::GLMessage
glTexStorage3DMultisampleOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexStorage3DMultisampleOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexStorage3DMultisampleOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexStorage3DMultisampleOES = GLMessage_Function_glTexStorage3DMultisampleOES;$/;"	m	class:android::gltrace::GLMessage
glTexSubImage2D	opengl/libagl/texture.cpp	/^void glTexSubImage2D($/;"	f
glTexSubImage2D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexSubImage2D;$/;"	m	class:android::gltrace::GLMessage	file:
glTexSubImage2D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexSubImage2D = GLMessage_Function_glTexSubImage2D;$/;"	m	class:android::gltrace::GLMessage
glTexSubImage3D	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexSubImage3D;$/;"	m	class:android::gltrace::GLMessage	file:
glTexSubImage3D	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexSubImage3D = GLMessage_Function_glTexSubImage3D;$/;"	m	class:android::gltrace::GLMessage
glTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTexSubImage3DOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTexSubImage3DOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTexSubImage3DOES = GLMessage_Function_glTexSubImage3DOES;$/;"	m	class:android::gltrace::GLMessage
glTextureStorage1DEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTextureStorage1DEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTextureStorage1DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTextureStorage1DEXT = GLMessage_Function_glTextureStorage1DEXT;$/;"	m	class:android::gltrace::GLMessage
glTextureStorage2DEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTextureStorage2DEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTextureStorage2DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTextureStorage2DEXT = GLMessage_Function_glTextureStorage2DEXT;$/;"	m	class:android::gltrace::GLMessage
glTextureStorage3DEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTextureStorage3DEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTextureStorage3DEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTextureStorage3DEXT = GLMessage_Function_glTextureStorage3DEXT;$/;"	m	class:android::gltrace::GLMessage
glTextureViewEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTextureViewEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glTextureViewEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTextureViewEXT = GLMessage_Function_glTextureViewEXT;$/;"	m	class:android::gltrace::GLMessage
glTransformFeedbackVaryings	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTransformFeedbackVaryings;$/;"	m	class:android::gltrace::GLMessage	file:
glTransformFeedbackVaryings	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTransformFeedbackVaryings = GLMessage_Function_glTransformFeedbackVaryings;$/;"	m	class:android::gltrace::GLMessage
glTransformFeedbackVaryings	opengl/tools/glgen/stubs/gles11/glTransformFeedbackVaryings.java	/^    public static native void glTransformFeedbackVaryings($/;"	m
glTranslatef	opengl/libagl/matrix.cpp	/^void glTranslatef(GLfloat x, GLfloat y, GLfloat z)$/;"	f
glTranslatef	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTranslatef;$/;"	m	class:android::gltrace::GLMessage	file:
glTranslatef	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTranslatef = GLMessage_Function_glTranslatef;$/;"	m	class:android::gltrace::GLMessage
glTranslatex	opengl/libagl/matrix.cpp	/^void glTranslatex(GLfixed x, GLfixed y, GLfixed z)$/;"	f
glTranslatex	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTranslatex;$/;"	m	class:android::gltrace::GLMessage	file:
glTranslatex	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTranslatex = GLMessage_Function_glTranslatex;$/;"	m	class:android::gltrace::GLMessage
glTranslatexOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glTranslatexOES;$/;"	m	class:android::gltrace::GLMessage	file:
glTranslatexOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glTranslatexOES = GLMessage_Function_glTranslatexOES;$/;"	m	class:android::gltrace::GLMessage
glUniform1f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform1f;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform1f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform1f = GLMessage_Function_glUniform1f;$/;"	m	class:android::gltrace::GLMessage
glUniform1fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform1fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform1fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform1fv = GLMessage_Function_glUniform1fv;$/;"	m	class:android::gltrace::GLMessage
glUniform1i	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform1i;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform1i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform1i = GLMessage_Function_glUniform1i;$/;"	m	class:android::gltrace::GLMessage
glUniform1iv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform1iv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform1iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform1iv = GLMessage_Function_glUniform1iv;$/;"	m	class:android::gltrace::GLMessage
glUniform1ui	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform1ui;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform1ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform1ui = GLMessage_Function_glUniform1ui;$/;"	m	class:android::gltrace::GLMessage
glUniform1uiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform1uiv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform1uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform1uiv = GLMessage_Function_glUniform1uiv;$/;"	m	class:android::gltrace::GLMessage
glUniform2f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform2f;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform2f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform2f = GLMessage_Function_glUniform2f;$/;"	m	class:android::gltrace::GLMessage
glUniform2fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform2fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform2fv = GLMessage_Function_glUniform2fv;$/;"	m	class:android::gltrace::GLMessage
glUniform2i	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform2i;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform2i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform2i = GLMessage_Function_glUniform2i;$/;"	m	class:android::gltrace::GLMessage
glUniform2iv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform2iv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform2iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform2iv = GLMessage_Function_glUniform2iv;$/;"	m	class:android::gltrace::GLMessage
glUniform2ui	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform2ui;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform2ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform2ui = GLMessage_Function_glUniform2ui;$/;"	m	class:android::gltrace::GLMessage
glUniform2uiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform2uiv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform2uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform2uiv = GLMessage_Function_glUniform2uiv;$/;"	m	class:android::gltrace::GLMessage
glUniform3f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform3f;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform3f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform3f = GLMessage_Function_glUniform3f;$/;"	m	class:android::gltrace::GLMessage
glUniform3fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform3fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform3fv = GLMessage_Function_glUniform3fv;$/;"	m	class:android::gltrace::GLMessage
glUniform3i	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform3i;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform3i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform3i = GLMessage_Function_glUniform3i;$/;"	m	class:android::gltrace::GLMessage
glUniform3iv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform3iv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform3iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform3iv = GLMessage_Function_glUniform3iv;$/;"	m	class:android::gltrace::GLMessage
glUniform3ui	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform3ui;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform3ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform3ui = GLMessage_Function_glUniform3ui;$/;"	m	class:android::gltrace::GLMessage
glUniform3uiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform3uiv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform3uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform3uiv = GLMessage_Function_glUniform3uiv;$/;"	m	class:android::gltrace::GLMessage
glUniform4f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform4f;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform4f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform4f = GLMessage_Function_glUniform4f;$/;"	m	class:android::gltrace::GLMessage
glUniform4fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform4fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform4fv = GLMessage_Function_glUniform4fv;$/;"	m	class:android::gltrace::GLMessage
glUniform4i	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform4i;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform4i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform4i = GLMessage_Function_glUniform4i;$/;"	m	class:android::gltrace::GLMessage
glUniform4iv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform4iv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform4iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform4iv = GLMessage_Function_glUniform4iv;$/;"	m	class:android::gltrace::GLMessage
glUniform4ui	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform4ui;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform4ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform4ui = GLMessage_Function_glUniform4ui;$/;"	m	class:android::gltrace::GLMessage
glUniform4uiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniform4uiv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniform4uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniform4uiv = GLMessage_Function_glUniform4uiv;$/;"	m	class:android::gltrace::GLMessage
glUniformBlockBinding	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformBlockBinding;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformBlockBinding	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformBlockBinding = GLMessage_Function_glUniformBlockBinding;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix2fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix2fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix2fv = GLMessage_Function_glUniformMatrix2fv;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix2x3fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix2x3fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix2x3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix2x3fv = GLMessage_Function_glUniformMatrix2x3fv;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix2x3fvNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix2x3fvNV;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix2x3fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix2x3fvNV = GLMessage_Function_glUniformMatrix2x3fvNV;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix2x4fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix2x4fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix2x4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix2x4fv = GLMessage_Function_glUniformMatrix2x4fv;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix2x4fvNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix2x4fvNV;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix2x4fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix2x4fvNV = GLMessage_Function_glUniformMatrix2x4fvNV;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix3fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix3fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix3fv = GLMessage_Function_glUniformMatrix3fv;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix3x2fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix3x2fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix3x2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix3x2fv = GLMessage_Function_glUniformMatrix3x2fv;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix3x2fvNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix3x2fvNV;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix3x2fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix3x2fvNV = GLMessage_Function_glUniformMatrix3x2fvNV;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix3x4fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix3x4fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix3x4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix3x4fv = GLMessage_Function_glUniformMatrix3x4fv;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix3x4fvNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix3x4fvNV;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix3x4fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix3x4fvNV = GLMessage_Function_glUniformMatrix3x4fvNV;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix4fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix4fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix4fv = GLMessage_Function_glUniformMatrix4fv;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix4x2fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix4x2fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix4x2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix4x2fv = GLMessage_Function_glUniformMatrix4x2fv;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix4x2fvNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix4x2fvNV;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix4x2fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix4x2fvNV = GLMessage_Function_glUniformMatrix4x2fvNV;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix4x3fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix4x3fv;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix4x3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix4x3fv = GLMessage_Function_glUniformMatrix4x3fv;$/;"	m	class:android::gltrace::GLMessage
glUniformMatrix4x3fvNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUniformMatrix4x3fvNV;$/;"	m	class:android::gltrace::GLMessage	file:
glUniformMatrix4x3fvNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUniformMatrix4x3fvNV = GLMessage_Function_glUniformMatrix4x3fvNV;$/;"	m	class:android::gltrace::GLMessage
glUnmapBuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUnmapBuffer;$/;"	m	class:android::gltrace::GLMessage	file:
glUnmapBuffer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUnmapBuffer = GLMessage_Function_glUnmapBuffer;$/;"	m	class:android::gltrace::GLMessage
glUnmapBufferOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUnmapBufferOES;$/;"	m	class:android::gltrace::GLMessage	file:
glUnmapBufferOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUnmapBufferOES = GLMessage_Function_glUnmapBufferOES;$/;"	m	class:android::gltrace::GLMessage
glUseProgram	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUseProgram;$/;"	m	class:android::gltrace::GLMessage	file:
glUseProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUseProgram = GLMessage_Function_glUseProgram;$/;"	m	class:android::gltrace::GLMessage
glUseProgramStages	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUseProgramStages;$/;"	m	class:android::gltrace::GLMessage	file:
glUseProgramStages	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUseProgramStages = GLMessage_Function_glUseProgramStages;$/;"	m	class:android::gltrace::GLMessage
glUseProgramStagesEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glUseProgramStagesEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glUseProgramStagesEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glUseProgramStagesEXT = GLMessage_Function_glUseProgramStagesEXT;$/;"	m	class:android::gltrace::GLMessage
glValidateProgram	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glValidateProgram;$/;"	m	class:android::gltrace::GLMessage	file:
glValidateProgram	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glValidateProgram = GLMessage_Function_glValidateProgram;$/;"	m	class:android::gltrace::GLMessage
glValidateProgramPipeline	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glValidateProgramPipeline;$/;"	m	class:android::gltrace::GLMessage	file:
glValidateProgramPipeline	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glValidateProgramPipeline = GLMessage_Function_glValidateProgramPipeline;$/;"	m	class:android::gltrace::GLMessage
glValidateProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glValidateProgramPipelineEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glValidateProgramPipelineEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glValidateProgramPipelineEXT = GLMessage_Function_glValidateProgramPipelineEXT;$/;"	m	class:android::gltrace::GLMessage
glVertex2bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertex2bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glVertex2bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertex2bOES = GLMessage_Function_glVertex2bOES;$/;"	m	class:android::gltrace::GLMessage
glVertex2bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertex2bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glVertex2bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertex2bvOES = GLMessage_Function_glVertex2bvOES;$/;"	m	class:android::gltrace::GLMessage
glVertex3bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertex3bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glVertex3bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertex3bOES = GLMessage_Function_glVertex3bOES;$/;"	m	class:android::gltrace::GLMessage
glVertex3bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertex3bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glVertex3bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertex3bvOES = GLMessage_Function_glVertex3bvOES;$/;"	m	class:android::gltrace::GLMessage
glVertex4bOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertex4bOES;$/;"	m	class:android::gltrace::GLMessage	file:
glVertex4bOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertex4bOES = GLMessage_Function_glVertex4bOES;$/;"	m	class:android::gltrace::GLMessage
glVertex4bvOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertex4bvOES;$/;"	m	class:android::gltrace::GLMessage	file:
glVertex4bvOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertex4bvOES = GLMessage_Function_glVertex4bvOES;$/;"	m	class:android::gltrace::GLMessage
glVertexAttrib1f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttrib1f;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttrib1f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttrib1f = GLMessage_Function_glVertexAttrib1f;$/;"	m	class:android::gltrace::GLMessage
glVertexAttrib1fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttrib1fv;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttrib1fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttrib1fv = GLMessage_Function_glVertexAttrib1fv;$/;"	m	class:android::gltrace::GLMessage
glVertexAttrib2f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttrib2f;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttrib2f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttrib2f = GLMessage_Function_glVertexAttrib2f;$/;"	m	class:android::gltrace::GLMessage
glVertexAttrib2fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttrib2fv;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttrib2fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttrib2fv = GLMessage_Function_glVertexAttrib2fv;$/;"	m	class:android::gltrace::GLMessage
glVertexAttrib3f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttrib3f;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttrib3f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttrib3f = GLMessage_Function_glVertexAttrib3f;$/;"	m	class:android::gltrace::GLMessage
glVertexAttrib3fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttrib3fv;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttrib3fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttrib3fv = GLMessage_Function_glVertexAttrib3fv;$/;"	m	class:android::gltrace::GLMessage
glVertexAttrib4f	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttrib4f;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttrib4f	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttrib4f = GLMessage_Function_glVertexAttrib4f;$/;"	m	class:android::gltrace::GLMessage
glVertexAttrib4fv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttrib4fv;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttrib4fv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttrib4fv = GLMessage_Function_glVertexAttrib4fv;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribBinding	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribBinding;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribBinding	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribBinding = GLMessage_Function_glVertexAttribBinding;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribDivisor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribDivisor;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribDivisor	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribDivisor = GLMessage_Function_glVertexAttribDivisor;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribDivisorANGLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribDivisorANGLE;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribDivisorANGLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribDivisorANGLE = GLMessage_Function_glVertexAttribDivisorANGLE;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribDivisorEXT	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribDivisorEXT;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribDivisorEXT	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribDivisorEXT = GLMessage_Function_glVertexAttribDivisorEXT;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribDivisorNV	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribDivisorNV;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribDivisorNV	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribDivisorNV = GLMessage_Function_glVertexAttribDivisorNV;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribFormat	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribFormat;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribFormat	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribFormat = GLMessage_Function_glVertexAttribFormat;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribI4i	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribI4i;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribI4i	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribI4i = GLMessage_Function_glVertexAttribI4i;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribI4iv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribI4iv;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribI4iv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribI4iv = GLMessage_Function_glVertexAttribI4iv;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribI4ui	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribI4ui;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribI4ui	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribI4ui = GLMessage_Function_glVertexAttribI4ui;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribI4uiv	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribI4uiv;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribI4uiv	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribI4uiv = GLMessage_Function_glVertexAttribI4uiv;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribIFormat	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribIFormat;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribIFormat	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribIFormat = GLMessage_Function_glVertexAttribIFormat;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribIPointer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribIPointer;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribIPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribIPointer = GLMessage_Function_glVertexAttribIPointer;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribIPointerBounds	opengl/tools/glgen/stubs/gles11/common.cpp	/^static void glVertexAttribIPointerBounds(GLuint indx, GLint size, GLenum type,$/;"	f	file:
glVertexAttribPointer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribPointer;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribPointer = GLMessage_Function_glVertexAttribPointer;$/;"	m	class:android::gltrace::GLMessage
glVertexAttribPointerBounds	opengl/tools/glgen/stubs/gles11/common.cpp	/^static void glVertexAttribPointerBounds(GLuint indx, GLint size, GLenum type,$/;"	f	file:
glVertexAttribPointerData	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexAttribPointerData;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexAttribPointerData	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexAttribPointerData = GLMessage_Function_glVertexAttribPointerData;$/;"	m	class:android::gltrace::GLMessage
glVertexBindingDivisor	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexBindingDivisor;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexBindingDivisor	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexBindingDivisor = GLMessage_Function_glVertexBindingDivisor;$/;"	m	class:android::gltrace::GLMessage
glVertexPointer	opengl/libagl/array.cpp	/^void glVertexPointer($/;"	f
glVertexPointer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glVertexPointer;$/;"	m	class:android::gltrace::GLMessage	file:
glVertexPointer	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glVertexPointer = GLMessage_Function_glVertexPointer;$/;"	m	class:android::gltrace::GLMessage
glVertexPointerBounds	opengl/libs/GLES_CM/gl.cpp	/^void glVertexPointerBounds(GLint size, GLenum type,$/;"	f
glViewport	opengl/libagl/matrix.cpp	/^void glViewport(GLint x, GLint y, GLsizei w, GLsizei h)$/;"	f
glViewport	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glViewport;$/;"	m	class:android::gltrace::GLMessage	file:
glViewport	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glViewport = GLMessage_Function_glViewport;$/;"	m	class:android::gltrace::GLMessage
glWaitSync	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glWaitSync;$/;"	m	class:android::gltrace::GLMessage	file:
glWaitSync	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glWaitSync = GLMessage_Function_glWaitSync;$/;"	m	class:android::gltrace::GLMessage
glWaitSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glWaitSyncAPPLE;$/;"	m	class:android::gltrace::GLMessage	file:
glWaitSyncAPPLE	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glWaitSyncAPPLE = GLMessage_Function_glWaitSyncAPPLE;$/;"	m	class:android::gltrace::GLMessage
glWeightPointerOES	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::glWeightPointerOES;$/;"	m	class:android::gltrace::GLMessage	file:
glWeightPointerOES	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function glWeightPointerOES = GLMessage_Function_glWeightPointerOES;$/;"	m	class:android::gltrace::GLMessage
glWeightPointerOESBounds	opengl/libs/GLES_CM/gl.cpp	/^GL_API void GL_APIENTRY glWeightPointerOESBounds(GLint size, GLenum type,$/;"	f
gl_ext_t	opengl/libs/hooks.h	/^    struct gl_ext_t {$/;"	s	struct:android::gl_hooks_t
gl_extensions	opengl/libs/EGL/egl_object.h	/^    String8 gl_extensions;$/;"	m	class:android::egl_context_t
gl_hooks_t	opengl/libs/hooks.h	/^struct gl_hooks_t {$/;"	s	namespace:android
gl_names	opengl/libs/EGL/egl.cpp	/^char const * const gl_names[] = {$/;"	m	namespace:android	file:
gl_no_context	opengl/libs/EGL/egl.cpp	/^static int gl_no_context() {$/;"	f	namespace:android
gl_noop	opengl/libs/EGL/egl.cpp	/^void gl_noop() {$/;"	f	namespace:android
gl_t	opengl/libs/hooks.h	/^    struct gl_t {$/;"	s	struct:android::gl_hooks_t
gl_unimplemented	opengl/libs/EGL/egl.cpp	/^void gl_unimplemented() {$/;"	f	namespace:android
gles1PlatformStrings	opengl/tools/glgen2/registry/genheaders.py	/^gles1PlatformStrings = [ '#include <GLES\/glplatform.h>', '' ]$/;"	v
gles2PlatformStrings	opengl/tools/glgen2/registry/genheaders.py	/^gles2PlatformStrings = [ '#include <GLES2\/gl2platform.h>', '' ]$/;"	v
gles2and30Pat	opengl/tools/glgen2/registry/genheaders.py	/^gles2and30Pat   = '2\\.[0-9]|3.0'$/;"	v
gles2and30and31Pat	opengl/tools/glgen2/registry/genheaders.py	/^gles2and30and31Pat    = '2.[0-9]|3.[01]'$/;"	v
gles2onlyPat	opengl/tools/glgen2/registry/genheaders.py	/^gles2onlyPat    = '2\\.[0-9]'$/;"	v
gles3PlatformStrings	opengl/tools/glgen2/registry/genheaders.py	/^gles3PlatformStrings = [ '#include <GLES3\/gl3platform.h>', '' ]$/;"	v
glextVersionStrings	opengl/tools/glgen2/registry/genheaders.py	/^glextVersionStrings = [$/;"	v
gltrace	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^namespace gltrace {$/;"	n	namespace:android	file:
gltrace	opengl/libs/GLES_trace/src/gltrace.pb.h	/^namespace gltrace {$/;"	n	namespace:android
gltrace	opengl/libs/GLES_trace/src/gltrace_api.cpp	/^namespace gltrace {$/;"	n	namespace:android	file:
gltrace	opengl/libs/GLES_trace/src/gltrace_api.h	/^namespace gltrace {$/;"	n	namespace:android
gltrace	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^namespace gltrace {$/;"	n	namespace:android	file:
gltrace	opengl/libs/GLES_trace/src/gltrace_context.h	/^namespace gltrace {$/;"	n	namespace:android
gltrace	opengl/libs/GLES_trace/src/gltrace_egl.cpp	/^namespace gltrace {$/;"	n	namespace:android	file:
gltrace	opengl/libs/GLES_trace/src/gltrace_egl.h	/^namespace gltrace {$/;"	n	namespace:android
gltrace	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^namespace gltrace {$/;"	n	namespace:android	file:
gltrace	opengl/libs/GLES_trace/src/gltrace_fixup.h	/^namespace gltrace {$/;"	n	namespace:android
gltrace	opengl/libs/GLES_trace/src/gltrace_hooks.cpp	/^namespace gltrace {$/;"	n	namespace:android	file:
gltrace	opengl/libs/GLES_trace/src/gltrace_hooks.h	/^namespace gltrace {$/;"	n	namespace:android
gltrace	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^namespace gltrace {$/;"	n	namespace:android	file:
gltrace	opengl/libs/GLES_trace/src/gltrace_transport.h	/^namespace gltrace {$/;"	n	namespace:android
gluLookAt	opengl/tests/angeles/demo.c	/^static void gluLookAt(GLfloat eyex, GLfloat eyey, GLfloat eyez,$/;"	f	file:
gluLookAt	opengl/tests/gl_basic/gl_basic.cpp	/^static void gluLookAt(float eyeX, float eyeY, float eyeZ,$/;"	f	file:
gluLookAt	opengl/tests/gl_jni/jni/gl_code.cpp	/^static void gluLookAt(float eyeX, float eyeY, float eyeZ,$/;"	f	file:
gluLookAt	opengl/tests/tritex/tritex.cpp	/^static void gluLookAt(float eyeX, float eyeY, float eyeZ,$/;"	f	file:
gluPerspective	opengl/tests/angeles/demo.c	/^static void gluPerspective(GLfloat fovy, GLfloat aspect,$/;"	f	file:
glx13andLaterPat	opengl/tools/glgen2/registry/genheaders.py	/^glx13andLaterPat = '1\\.[3-9]'$/;"	v
glxextVersionStrings	opengl/tools/glgen2/registry/genheaders.py	/^glxextVersionStrings = [$/;"	v
good_old_string	cmds/service/service.cpp	/^static String8 good_old_string(const String16& src)$/;"	f	file:
grDev	include/ui/FramebufferNativeWindow.h	/^    alloc_device_t* grDev;$/;"	m	class:android::FramebufferNativeWindow
granted	include/binder/PermissionCache.h	/^        bool        granted;$/;"	m	struct:android::PermissionCache::Entry
graphicBuffer	include/gui/GLConsumer.h	/^        const sp<GraphicBuffer>& graphicBuffer() { return mGraphicBuffer; }$/;"	f	class:android::GLConsumer::EglImage
graphicBufferHandle	include/gui/GLConsumer.h	/^        const native_handle* graphicBufferHandle() {$/;"	f	class:android::GLConsumer::EglImage
green	opengl/libagl/dxt.cpp	53;"	d	file:
growData	libs/binder/Parcel.cpp	/^status_t Parcel::growData(size_t len)$/;"	f	class:android::Parcel
gvPositionHandle	opengl/tests/gl2_basic/gl2_basic.cpp	/^GLuint gvPositionHandle;$/;"	v
gvPositionHandle	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint gvPositionHandle;$/;"	v
gvPositionHandle	opengl/tests/gl2_jni/jni/gl_code.cpp	/^GLuint gvPositionHandle;$/;"	v
gvPositionHandle	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^GLint gvPositionHandle;$/;"	v
gvPositionHandle	opengl/tests/gldual/jni/gl_code.cpp	/^GLuint gvPositionHandle;$/;"	v
gvTexturePositionHandle	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint gvTexturePositionHandle;$/;"	v
gvTextureSamplerHandle	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint gvTextureSamplerHandle;$/;"	v
gvTextureTexCoordsHandle	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint gvTextureTexCoordsHandle;$/;"	v
gyroVAR	services/sensorservice/Fusion.cpp	/^static const float gyroVAR = 1e-7;      \/\/ (rad\/s)^2 \/ Hz$/;"	m	namespace:android	file:
h	include/private/gui/LayerState.h	/^            uint32_t        h;$/;"	m	struct:android::layer_state_t
h	include/ui/DisplayInfo.h	/^    uint32_t h;$/;"	m	struct:android::DisplayInfo
h	include/ui/GraphicBufferAllocator.h	/^        uint32_t h;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
h	include/ui/PixelFormat.h	/^        uint8_t h;$/;"	m	struct:android::PixelFormatInfo::szinfo
h	opengl/libagl/context.h	/^        GLsizei     h;$/;"	m	struct:android::gl::viewport_t::__anon230
h	opengl/libagl/context.h	/^    GLsizei     h;$/;"	m	struct:android::gl::viewport_t
h	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^uint32_t h;$/;"	v
h	services/surfaceflinger/Layer.h	/^        uint32_t h;$/;"	m	struct:android::Layer::Geometry
hMarkTargetComponent	include/media/openmax/OMX_Core.h	/^    OMX_HANDLETYPE hMarkTargetComponent; \/**< The component that will generate a$/;"	m	struct:OMX_BUFFERHEADERTYPE
hMarkTargetComponent	include/media/openmax/OMX_Types.h	/^    OMX_HANDLETYPE hMarkTargetComponent;   \/**< The component that will$/;"	m	struct:OMX_MARKTYPE
hMod	opengl/tests/hwc/hwcTestLib.h	/^    uint32_t wMod, hMod; \/\/ Width\/height mod this value must equal zero$/;"	m	struct:hwcTestGraphicFormat
hPipe	include/media/openmax/OMX_Component.h	/^    OMX_HANDLETYPE hPipe;       \/**< The pipe handle*\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE
hScale	opengl/tests/hwc/hwcCommit.cpp	/^        Rational hScale;$/;"	m	struct:meas::sourceCrop	file:
hScaleBestDf	opengl/tests/hwc/hwcCommit.cpp	/^        HwcTestDim hScaleBestDf;$/;"	m	struct:meas::sourceCrop	file:
hScaleBestSc	opengl/tests/hwc/hwcCommit.cpp	/^        HwcTestDim hScaleBestSc;$/;"	m	struct:meas::sourceCrop	file:
h_alpha	include/ui/PixelFormat.h	/^            uint8_t     h_alpha;$/;"	m	struct:android::PixelFormatInfo::__anon80::__anon81
h_blue	include/ui/PixelFormat.h	/^            uint8_t     h_blue;$/;"	m	struct:android::PixelFormatInfo::__anon80::__anon81
h_green	include/ui/PixelFormat.h	/^            uint8_t     h_green;$/;"	m	struct:android::PixelFormatInfo::__anon80::__anon81
h_red	include/ui/PixelFormat.h	/^            uint8_t     h_red;$/;"	m	struct:android::PixelFormatInfo::__anon80::__anon81
handle	cmds/servicemanager/service_manager.c	/^    uint32_t handle;$/;"	m	struct:svcinfo	file:
handle	include/binder/BpBinder.h	/^    inline  int32_t     handle() const { return mHandle; }$/;"	f	class:android::BpBinder
handle	services/sensorservice/BatteryService.h	/^        int handle;$/;"	m	struct:android::BatteryService::Info
handleAcc	services/sensorservice/Fusion.cpp	/^status_t Fusion::handleAcc(const vec3_t& a) {$/;"	f	class:android::Fusion
handleConfigurationChangedLocked	services/inputflinger/InputReader.cpp	/^void InputReader::handleConfigurationChangedLocked(nsecs_t when) {$/;"	f	class:android::InputReader
handleEvent	services/sensorservice/SensorService.cpp	/^int SensorService::SensorEventConnection::handleEvent(int fd, int events, void* \/*data*\/) {$/;"	f	class:android::SensorService::SensorEventConnection
handleGyro	services/sensorservice/Fusion.cpp	/^void Fusion::handleGyro(const vec3_t& w, float dT) {$/;"	f	class:android::Fusion
handleMag	services/sensorservice/Fusion.cpp	/^status_t Fusion::handleMag(const vec3_t& m) {$/;"	f	class:android::Fusion
handleMessage	services/surfaceflinger/MessageQueue.cpp	/^void MessageBase::handleMessage(const Message&) {$/;"	f	class:android::MessageBase
handleMessage	services/surfaceflinger/MessageQueue.cpp	/^void MessageQueue::Handler::handleMessage(const Message& message) {$/;"	f	class:android::MessageQueue::Handler
handleMessage	services/surfaceflinger/SurfaceFlinger.cpp	/^    virtual void handleMessage(const Message& message) {$/;"	f	class:android::GraphicProducerWrapper	file:
handleMessageInvalidate	services/surfaceflinger/SurfaceFlinger.cpp	/^bool SurfaceFlinger::handleMessageInvalidate() {$/;"	f	class:android::SurfaceFlinger
handleMessageRefresh	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::handleMessageRefresh() {$/;"	f	class:android::SurfaceFlinger
handleMessageTransaction	services/surfaceflinger/SurfaceFlinger.cpp	/^bool SurfaceFlinger::handleMessageTransaction() {$/;"	f	class:android::SurfaceFlinger
handlePageFlip	services/surfaceflinger/SurfaceFlinger.cpp	/^bool SurfaceFlinger::handlePageFlip()$/;"	f	class:android::SurfaceFlinger
handlePolledCommands	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::handlePolledCommands()$/;"	f	class:android::IPCThreadState
handleReceiveCallback	services/inputflinger/InputDispatcher.cpp	/^int InputDispatcher::handleReceiveCallback(int fd, int events, void* data) {$/;"	f	class:android::InputDispatcher
handleSignal	cmds/atrace/atrace.cpp	/^static void handleSignal(int \/*signo*\/)$/;"	f	file:
handleTargetsNotReadyLocked	services/inputflinger/InputDispatcher.cpp	/^int32_t InputDispatcher::handleTargetsNotReadyLocked(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher
handleTransaction	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::handleTransaction(uint32_t transactionFlags)$/;"	f	class:android::SurfaceFlinger
handleTransactionLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::handleTransactionLocked(uint32_t transactionFlags)$/;"	f	class:android::SurfaceFlinger
handle_entry	include/binder/ProcessState.h	/^            struct handle_entry {$/;"	s	class:android::ProcessState
handled	include/input/InputTransport.h	/^            bool handled;$/;"	m	struct:android::InputMessage::Body::Finished
handled	services/inputflinger/InputDispatcher.h	/^        bool handled;$/;"	m	struct:android::InputDispatcher::CommandEntry
handlesKeyRepeat	services/inputflinger/InputReader.h	/^        bool handlesKeyRepeat;$/;"	m	struct:android::KeyboardInputMapper::Parameters
hasAbsoluteAxis	services/inputflinger/InputReader.h	/^    bool hasAbsoluteAxis(int32_t code) {$/;"	f	class:android::InputDevice
hasAnyEventListeners	services/surfaceflinger/DispSync.cpp	/^    bool hasAnyEventListeners() {$/;"	f	class:android::DispSyncThread
hasAnySensor	services/sensorservice/SensorService.cpp	/^bool SensorService::SensorEventConnection::hasAnySensor() const {$/;"	f	class:android::SensorService::SensorEventConnection
hasAssociatedDisplay	services/inputflinger/InputReader.h	/^        bool hasAssociatedDisplay;$/;"	m	struct:android::CursorInputMapper::Parameters
hasAssociatedDisplay	services/inputflinger/InputReader.h	/^        bool hasAssociatedDisplay;$/;"	m	struct:android::KeyboardInputMapper::Parameters
hasAssociatedDisplay	services/inputflinger/InputReader.h	/^        bool hasAssociatedDisplay;$/;"	m	struct:android::TouchInputMapper::Parameters
hasBlitComp	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        bool hasBlitComp;$/;"	m	struct:android::HWComposer::DisplayData
hasBlitComposition	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::hasBlitComposition(int32_t id) const {$/;"	f	class:android::HWComposer
hasBufferArg	opengl/tools/glgen/src/JFunc.java	/^    boolean hasBufferArg = false;$/;"	f	class:JFunc
hasBufferArg	opengl/tools/glgen/src/JFunc.java	/^    public boolean hasBufferArg() {$/;"	m	class:JFunc
hasButtonUnderPad	include/input/InputDevice.h	/^    inline bool hasButtonUnderPad() const { return mHasButtonUnderPad; }$/;"	f	class:android::InputDeviceInfo
hasButtonUnderPad	services/inputflinger/InputReader.h	/^        bool hasButtonUnderPad;$/;"	m	struct:android::TouchInputMapper::Parameters
hasCheckTest	opengl/tools/glgen/src/JniCodeEmitter.java	/^    boolean hasCheckTest(CFunc cfunc) {$/;"	m	class:JniCodeEmitter
hasColorMatrix	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline bool hasColorMatrix() const {$/;"	f	class:android::ProgramCache::Key
hasDeferredEvent	libs/input/InputTransport.cpp	/^bool InputConsumer::hasDeferredEvent() const {$/;"	f	class:android::InputConsumer
hasEGLHandleArg	opengl/tools/glgen/src/CFunc.java	/^    boolean hasEGLHandleArg = false;$/;"	f	class:CFunc
hasEGLHandleArg	opengl/tools/glgen/src/CFunc.java	/^    public boolean hasEGLHandleArg() {$/;"	m	class:CFunc
hasEglAndroidImageCrop	libs/gui/GLConsumer.cpp	/^static bool hasEglAndroidImageCrop() {$/;"	f	namespace:android
hasEglAndroidImageCropImpl	libs/gui/GLConsumer.cpp	/^static bool hasEglAndroidImageCropImpl() {$/;"	f	namespace:android
hasEstimate	services/sensorservice/Fusion.cpp	/^bool Fusion::hasEstimate() const {$/;"	f	class:android::Fusion
hasEstimate	services/sensorservice/SensorFusion.h	/^    bool hasEstimate() const { return mFusion.hasEstimate(); }$/;"	f	class:android::SensorFusion
hasExtension	services/surfaceflinger/RenderEngine/GLExtensions.cpp	/^bool GLExtensions::hasExtension(char const* extension) const$/;"	f	class:android::GLExtensions
hasFbComp	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        bool hasFbComp;$/;"	m	struct:android::HWComposer::DisplayData
hasFileDescriptors	libs/binder/Parcel.cpp	/^bool Parcel::hasFileDescriptors() const$/;"	f	class:android::Parcel
hasFocus	services/inputflinger/InputWindow.h	/^    bool hasFocus;$/;"	m	struct:android::InputWindowInfo
hasForegroundTarget	services/inputflinger/InputDispatcher.h	/^        inline bool hasForegroundTarget() const {$/;"	f	struct:android::InputDispatcher::DispatchEntry
hasGlesComposition	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::hasGlesComposition(int32_t id) const {$/;"	f	class:android::HWComposer
hasHwcComposition	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::hasHwcComposition(int32_t id) const {$/;"	f	class:android::HWComposer
hasIfTest	opengl/tools/glgen/src/JniCodeEmitter.java	/^    boolean hasIfTest(CFunc cfunc) {$/;"	m	class:JniCodeEmitter
hasInjectionPermission	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::hasInjectionPermission(int32_t injectorPid, int32_t injectorUid) {$/;"	f	class:android::InputDispatcher
hasInputProperty	services/inputflinger/EventHub.cpp	/^bool EventHub::hasInputProperty(int32_t deviceId, int property) const {$/;"	f	class:android::EventHub
hasInputProperty	services/inputflinger/tests/InputReader_test.cpp	/^    virtual bool hasInputProperty(int32_t deviceId, int property) const {$/;"	f	class:android::FakeEventHub	file:
hasKey	services/inputflinger/InputReader.h	/^    bool hasKey(int32_t code) {$/;"	f	class:android::InputDevice
hasKeycodeLocked	services/inputflinger/EventHub.cpp	/^bool EventHub::hasKeycodeLocked(Device* device, int keycode) const {$/;"	f	class:android::EventHub
hasKeys	services/inputflinger/InputReader.cpp	/^bool InputReader::hasKeys(int32_t deviceId, uint32_t sourceMask,$/;"	f	class:android::InputReader
hasLed	services/inputflinger/EventHub.cpp	/^bool EventHub::hasLed(int32_t deviceId, int32_t led) const {$/;"	f	class:android::EventHub
hasLed	services/inputflinger/tests/InputReader_test.cpp	/^    virtual bool hasLed(int32_t deviceId, int32_t led) const {$/;"	f	class:android::FakeEventHub	file:
hasMipmaps	opengl/libagl/TextureObjectManager.h	/^    bool                hasMipmaps() const { return mMipmaps!=0; }$/;"	f	class:android::EGLTextureObject
hasMovedNearerToValueWithinFilteredRange	services/inputflinger/InputReader.cpp	/^bool JoystickInputMapper::hasMovedNearerToValueWithinFilteredRange($/;"	f	class:android::JoystickInputMapper
hasNewFrame	services/surfaceflinger/Layer.cpp	/^bool Layer::hasNewFrame() const {$/;"	f	class:android::Layer
hasNonConstArg	opengl/tools/glgen/src/JniCodeEmitter.java	/^    boolean hasNonConstArg(JFunc jfunc, CFunc cfunc, List<Integer> nonPrimitiveArgs) {$/;"	m	class:JniCodeEmitter
hasOneShotSensors	services/sensorservice/SensorService.cpp	/^bool SensorService::SensorEventConnection::hasOneShotSensors() const {$/;"	f	class:android::SensorService::SensorEventConnection
hasOvComp	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        bool hasOvComp;$/;"	m	struct:android::HWComposer::DisplayData
hasPendingBatch	libs/input/InputTransport.cpp	/^bool InputConsumer::hasPendingBatch() const {$/;"	f	class:android::InputConsumer
hasPlaneAlpha	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline bool hasPlaneAlpha() const {$/;"	f	class:android::ProgramCache::Key
hasPointerArg	opengl/tools/glgen/src/CFunc.java	/^    boolean hasPointerArg = false;$/;"	f	class:CFunc
hasPointerArg	opengl/tools/glgen/src/CFunc.java	/^    public boolean hasPointerArg() {$/;"	m	class:CFunc
hasQueuedFrame	services/surfaceflinger/Layer.h	/^    bool hasQueuedFrame() const { return mQueuedFrames > 0 || mSidebandStreamChanged; }$/;"	f	class:android::Layer
hasRelativeAxis	services/inputflinger/EventHub.cpp	/^bool EventHub::hasRelativeAxis(int32_t deviceId, int axis) const {$/;"	f	class:android::EventHub
hasRelativeAxis	services/inputflinger/tests/InputReader_test.cpp	/^    virtual bool hasRelativeAxis(int32_t deviceId, int axis) const {$/;"	f	class:android::FakeEventHub	file:
hasScanCode	services/inputflinger/EventHub.cpp	/^bool EventHub::hasScanCode(int32_t deviceId, int32_t scanCode) const {$/;"	f	class:android::EventHub
hasScanCode	services/inputflinger/tests/InputReader_test.cpp	/^    virtual bool hasScanCode(int32_t deviceId, int32_t scanCode) const {$/;"	f	class:android::FakeEventHub	file:
hasSensor	services/sensorservice/SensorService.cpp	/^bool SensorService::SensorEventConnection::hasSensor(int32_t handle) const {$/;"	f	class:android::SensorService::SensorEventConnection
hasStylus	services/inputflinger/InputReader.cpp	/^bool MultiTouchInputMapper::hasStylus() const {$/;"	f	class:android::MultiTouchInputMapper
hasStylus	services/inputflinger/InputReader.cpp	/^bool MultiTouchMotionAccumulator::hasStylus() const {$/;"	f	class:android::MultiTouchMotionAccumulator
hasStylus	services/inputflinger/InputReader.cpp	/^bool SingleTouchInputMapper::hasStylus() const {$/;"	f	class:android::SingleTouchInputMapper
hasStylus	services/inputflinger/InputReader.cpp	/^bool TouchButtonAccumulator::hasStylus() const {$/;"	f	class:android::TouchButtonAccumulator
hasTypedBufferArg	opengl/tools/glgen/src/JFunc.java	/^    boolean hasTypedBufferArg = false;$/;"	f	class:JFunc
hasTypedBufferArg	opengl/tools/glgen/src/JFunc.java	/^    public boolean hasTypedBufferArg() {$/;"	m	class:JFunc
hasTypedPointerArg	opengl/tools/glgen/src/CFunc.java	/^    boolean hasTypedPointerArg = false;$/;"	f	class:CFunc
hasTypedPointerArg	opengl/tools/glgen/src/CFunc.java	/^    public boolean hasTypedPointerArg() {$/;"	m	class:CFunc
hasValueChangedSignificantly	services/inputflinger/InputReader.cpp	/^bool JoystickInputMapper::hasValueChangedSignificantly($/;"	f	class:android::JoystickInputMapper
hasVibrator	include/input/InputDevice.h	/^    inline bool hasVibrator() const { return mHasVibrator; }$/;"	f	class:android::InputDeviceInfo
hasWallpaper	services/inputflinger/InputWindow.h	/^    bool hasWallpaper;$/;"	m	struct:android::InputWindowInfo
hasWindowHandleLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::hasWindowHandleLocked($/;"	f	class:android::InputDispatcher
has_context_id	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage::has_context_id() const {$/;"	f	class:android::gltrace::GLMessage
has_duration	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage::has_duration() const {$/;"	f	class:android::gltrace::GLMessage
has_fb	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage::has_fb() const {$/;"	f	class:android::gltrace::GLMessage
has_function	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage::has_function() const {$/;"	f	class:android::gltrace::GLMessage
has_height	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage_FrameBuffer::has_height() const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
has_isarray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage_DataType::has_isarray() const {$/;"	f	class:android::gltrace::GLMessage_DataType
has_returnvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage::has_returnvalue() const {$/;"	f	class:android::gltrace::GLMessage
has_start_time	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage::has_start_time() const {$/;"	f	class:android::gltrace::GLMessage
has_threadtime	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage::has_threadtime() const {$/;"	f	class:android::gltrace::GLMessage
has_type	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage_DataType::has_type() const {$/;"	f	class:android::gltrace::GLMessage_DataType
has_width	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage_FrameBuffer::has_width() const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
hashCode	opengl/tools/glgen/src/CType.java	/^    public int hashCode() {$/;"	m	class:CType
hashCode	opengl/tools/glgen/static/egl/EGLObjectHandle.java	/^    public int hashCode() {$/;"	m	class:EGLObjectHandle
haveAxis	services/inputflinger/InputReader.cpp	/^bool JoystickInputMapper::haveAxis(int32_t axisId) {$/;"	f	class:android::JoystickInputMapper
haveCheckedExtensionsID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jfieldID haveCheckedExtensionsID;$/;"	v	file:
haveCommandsLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::haveCommandsLocked() const {$/;"	f	class:android::InputDispatcher
haveDistance	services/inputflinger/InputReader.h	/^        bool haveDistance;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
haveDistanceScale	services/inputflinger/InputReader.h	/^        bool haveDistanceScale;$/;"	m	struct:android::TouchInputMapper::Calibration
haveExtension	opengl/libs/EGL/egl_display.cpp	/^bool egl_display_t::haveExtension(const char* name, size_t nameLen) const {$/;"	f	class:android::egl_display_t
haveFramebufferObject	services/surfaceflinger/RenderEngine/GLExtensions.h	/^    inline bool haveFramebufferObject() const {$/;"	f	class:android::GLExtensions
haveKeyCharacterMap	include/input/Keyboard.h	/^    inline bool haveKeyCharacterMap() const {$/;"	f	class:android::KeyMap
haveKeyLayout	include/input/Keyboard.h	/^    inline bool haveKeyLayout() const {$/;"	f	class:android::KeyMap
haveOrientation	services/inputflinger/InputReader.h	/^        bool haveOrientation;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
havePressureScale	services/inputflinger/InputReader.h	/^        bool havePressureScale;$/;"	m	struct:android::TouchInputMapper::Calibration
haveRelativeHWheel	services/inputflinger/InputReader.h	/^    inline bool haveRelativeHWheel() const { return mHaveRelHWheel; }$/;"	f	class:android::CursorScrollAccumulator
haveRelativeVWheel	services/inputflinger/InputReader.h	/^    inline bool haveRelativeVWheel() const { return mHaveRelWheel; }$/;"	f	class:android::CursorScrollAccumulator
haveSize	services/inputflinger/InputReader.h	/^        bool haveSize;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
haveSizeBias	services/inputflinger/InputReader.h	/^        bool haveSizeBias;$/;"	m	struct:android::TouchInputMapper::Calibration
haveSizeIsSummed	services/inputflinger/InputReader.h	/^        bool haveSizeIsSummed;$/;"	m	struct:android::TouchInputMapper::Calibration
haveSizeScale	services/inputflinger/InputReader.h	/^        bool haveSizeScale;$/;"	m	struct:android::TouchInputMapper::Calibration
haveTilt	services/inputflinger/InputReader.h	/^        bool haveTilt;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
haveToolSize	services/inputflinger/InputReader.h	/^        bool haveToolSize;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
haveTouchSize	services/inputflinger/InputReader.h	/^        bool haveTouchSize;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
have_OES_blend_equation_separateID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jfieldID have_OES_blend_equation_separateID;$/;"	v	file:
have_OES_blend_subtractID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jfieldID have_OES_blend_subtractID;$/;"	v	file:
have_OES_framebuffer_objectID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jfieldID have_OES_framebuffer_objectID;$/;"	v	file:
have_OES_texture_cube_mapID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jfieldID have_OES_texture_cube_mapID;$/;"	v	file:
head	libs/binder/MemoryDealer.cpp	/^    NODE const* head() const { return mFirst; }$/;"	f	class:android::LinkedList
head	libs/binder/MemoryDealer.cpp	/^    NODE*       head() { return mFirst; }$/;"	f	class:android::LinkedList
head	libs/ui/Region.cpp	/^    Rect* head;$/;"	m	class:android::Region::rasterizer	file:
head	services/inputflinger/InputDispatcher.h	/^        T* head;$/;"	m	struct:android::InputDispatcher::Queue
header	include/gui/DisplayEventReceiver.h	/^        Header header;$/;"	m	struct:android::DisplayEventReceiver::Event
header	include/input/InputTransport.h	/^    } header;$/;"	m	struct:android::InputMessage	typeref:struct:android::InputMessage::Header
heap	libs/binder/IMemory.cpp	/^        sp<IMemoryHeap> heap;$/;"	m	struct:android::HeapCache::heap_info_t	file:
heap	libs/binder/MemoryDealer.cpp	/^const sp<IMemoryHeap>& MemoryDealer::heap() const {$/;"	f	class:android::MemoryDealer
heapID	include/binder/IMemory.h	/^    int32_t heapID() const { return getHeapID(); }$/;"	f	class:android::IMemoryHeap
heap_info_t	libs/binder/IMemory.cpp	/^    struct heap_info_t {$/;"	s	class:android::HeapCache	file:
heart_rate	include/android/sensor.h	/^            AHeartRateEvent heart_rate;$/;"	m	union:ASensorEvent::__anon187::__anon188
height	cmds/flatland/Flatland.h	/^    uint32_t height;$/;"	m	struct:android::LayerDesc
height	cmds/flatland/Main.cpp	/^    uint32_t height;$/;"	m	struct:BenchmarkDesc	file:
height	include/android/bitmap.h	/^    uint32_t    height;$/;"	m	struct:__anon161
height	include/android/native_window.h	/^    int32_t height;$/;"	m	struct:ANativeWindow_Buffer
height	include/gui/CpuConsumer.h	/^        uint32_t    height;$/;"	m	struct:android::CpuConsumer::LockedBuffer
height	include/gui/IGraphicBufferProducer.h	/^        uint32_t height;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferOutput
height	include/input/VirtualKeyMap.h	/^    int32_t height;$/;"	m	struct:android::VirtualKeyDefinition
height	include/private/gui/LayerState.h	/^    uint32_t width, height;$/;"	m	struct:android::DisplayState
height	include/ui/ANativeObjectBase.h	/^    int32_t     height;$/;"	m	struct:egl_native_pixmap_t
height	include/ui/Rect.h	/^    inline int32_t height() const { return getHeight(); }$/;"	f	class:android::Rect
height	libs/gui/GLConsumer.cpp	/^    size_t width, height;$/;"	m	struct:android::__anon246	file:
height	libs/gui/tests/CpuConsumer_test.cpp	/^    uint32_t height;$/;"	m	struct:android::CpuConsumerTestParams	file:
height	opengl/libagl/egl.cpp	/^    int height;$/;"	m	struct:android::egl_window_surface_v2_t	file:
height	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::google::protobuf::int32 GLMessage_FrameBuffer::height() const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
height	opengl/tests/hwc/hwcColorEquiv.cpp	/^static EGLint width, height;$/;"	v	file:
height	opengl/tests/hwc/hwcCommit.cpp	/^static EGLint width, height;$/;"	v	file:
height	opengl/tests/hwc/hwcRects.cpp	/^static EGLint width, height;$/;"	v	file:
height	opengl/tests/hwc/hwcStress.cpp	/^static EGLint width, height;$/;"	v	file:
height	opengl/tests/hwc/hwcTestLib.h	/^    uint32_t height(void) const { return _h; }$/;"	f	class:HwcTestDim
height	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        uint32_t height;$/;"	m	struct:android::HWComposer::DisplayConfig
height	services/surfaceflinger/LayerBlur.h	/^        int height;$/;"	m	class:android::LayerBlur::FBO
height	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        GLuint height;$/;"	m	struct:android::GLES20RenderEngine::Group
height	services/surfaceflinger/SurfaceFlinger.h	/^        uint32_t width, height;$/;"	m	struct:android::SurfaceFlinger::DisplayDeviceState
height_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::int32 height_;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer
helpers	services/sensorservice/mat.h	/^namespace helpers {$/;"	n	namespace:android
helpers	services/sensorservice/vec.h	/^namespace helpers {$/;"	n	namespace:android
hexdump	cmds/servicemanager/binder.c	/^void hexdump(void *_data, size_t len)$/;"	f
hexdump	cmds/servicemanager/binder.c	79;"	d	file:
hiddenCount	cmds/installd/installd.h	/^    int32_t hiddenCount;$/;"	m	struct:cache_dir_struct
hide	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::hide(const sp<IBinder>& id) {$/;"	f	class:android::SurfaceComposerClient
hide	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::hide() {$/;"	f	class:android::SurfaceControl
high	opengl/libs/ETC1/etc1.cpp	/^    etc1_uint32 high;$/;"	m	struct:__anon238	file:
highAxis	include/input/KeyLayoutMap.h	/^    int32_t highAxis;$/;"	m	struct:android::AxisInfo
highCurrentValue	services/inputflinger/InputReader.h	/^        float highCurrentValue; \/\/ current value of high split$/;"	m	struct:android::JoystickInputMapper::Axis
highNewValue	services/inputflinger/InputReader.h	/^        float highNewValue; \/\/ most recent value of high split$/;"	m	struct:android::JoystickInputMapper::Axis
highOffset	services/inputflinger/InputReader.h	/^        float highOffset; \/\/ offset to add after scaling for normalization of high split$/;"	m	struct:android::JoystickInputMapper::Axis
highScale	services/inputflinger/InputReader.h	/^        float highScale;  \/\/ scale factor from raw to normalized values of high split$/;"	m	struct:android::JoystickInputMapper::Axis
highThreshold	include/input/VelocityControl.h	/^    float highThreshold;$/;"	m	struct:android::VelocityControlParameters
history	include/input/InputTransport.h	/^        History history[2];$/;"	m	struct:android::InputConsumer::TouchState
historyCurrent	include/input/InputTransport.h	/^        size_t historyCurrent;$/;"	m	struct:android::InputConsumer::TouchState
historySize	include/input/InputTransport.h	/^        size_t historySize;$/;"	m	struct:android::InputConsumer::TouchState
hitBottom	services/inputflinger/InputReader.h	/^        int32_t hitBottom;$/;"	m	struct:android::TouchInputMapper::VirtualKey
hitLeft	services/inputflinger/InputReader.h	/^        int32_t hitLeft;$/;"	m	struct:android::TouchInputMapper::VirtualKey
hitRight	services/inputflinger/InputReader.h	/^        int32_t hitRight;$/;"	m	struct:android::TouchInputMapper::VirtualKey
hitTop	services/inputflinger/InputReader.h	/^        int32_t hitTop;$/;"	m	struct:android::TouchInputMapper::VirtualKey
hook_cancelBuffer	libs/gui/Surface.cpp	/^int Surface::hook_cancelBuffer(ANativeWindow* window,$/;"	f	class:android::Surface
hook_cancelBuffer_DEPRECATED	libs/gui/Surface.cpp	/^int Surface::hook_cancelBuffer_DEPRECATED(ANativeWindow* window,$/;"	f	class:android::Surface
hook_dequeueBuffer	libs/gui/Surface.cpp	/^int Surface::hook_dequeueBuffer(ANativeWindow* window,$/;"	f	class:android::Surface
hook_dequeueBuffer_DEPRECATED	libs/gui/Surface.cpp	/^int Surface::hook_dequeueBuffer_DEPRECATED(ANativeWindow* window,$/;"	f	class:android::Surface
hook_hotplug	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::hook_hotplug(const struct hwc_procs* procs, int disp,$/;"	f	class:android::HWComposer
hook_invalidate	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::hook_invalidate(const struct hwc_procs* procs) {$/;"	f	class:android::HWComposer
hook_lockBuffer_DEPRECATED	libs/gui/Surface.cpp	/^int Surface::hook_lockBuffer_DEPRECATED(ANativeWindow* window,$/;"	f	class:android::Surface
hook_perform	libs/gui/Surface.cpp	/^int Surface::hook_perform(ANativeWindow* window, int operation, ...) {$/;"	f	class:android::Surface
hook_query	libs/gui/Surface.cpp	/^int Surface::hook_query(const ANativeWindow* window,$/;"	f	class:android::Surface
hook_queueBuffer	libs/gui/Surface.cpp	/^int Surface::hook_queueBuffer(ANativeWindow* window,$/;"	f	class:android::Surface
hook_queueBuffer_DEPRECATED	libs/gui/Surface.cpp	/^int Surface::hook_queueBuffer_DEPRECATED(ANativeWindow* window,$/;"	f	class:android::Surface
hook_setSwapInterval	libs/gui/Surface.cpp	/^int Surface::hook_setSwapInterval(ANativeWindow* window, int interval) {$/;"	f	class:android::Surface
hook_vsync	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::hook_vsync(const struct hwc_procs* procs, int disp,$/;"	f	class:android::HWComposer
hooks	opengl/libs/EGL/egldefs.h	/^    gl_hooks_t *        hooks[2];$/;"	m	struct:android::egl_connection_t
hooks	opengl/libs/GLES_trace/src/gltrace_context.h	/^    gl_hooks_t *hooks;$/;"	m	class:android::gltrace::GLTraceContext
hostSources	libs/input/Android.mk	/^hostSources := \\$/;"	m
hotplug	include/gui/DisplayEventReceiver.h	/^            Hotplug hotplug;$/;"	m	union:android::DisplayEventReceiver::Event::__anon133
hotplug	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::hotplug(int disp, int connected) {$/;"	f	class:android::HWComposer
hovering	services/inputflinger/InputDispatcher.h	/^            bool hovering;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
hovering	services/inputflinger/InputReader.h	/^        bool hovering;$/;"	m	struct:android::TouchInputMapper::PointerSimple
hoveringIdBits	services/inputflinger/InputReader.h	/^    BitSet32 hoveringIdBits, touchingIdBits;$/;"	m	struct:android::CookedPointerData
hoveringIdBits	services/inputflinger/InputReader.h	/^    BitSet32 hoveringIdBits, touchingIdBits;$/;"	m	struct:android::RawPointerData
hwc	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    HWComposer* hwc;$/;"	m	struct:android::HWComposer::cb_context	file:
hwcApiVersion	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^static uint32_t hwcApiVersion(const hwc_composer_device_1_t* hwc) {$/;"	f	namespace:android
hwcDevice	opengl/tests/hwc/hwcColorEquiv.cpp	/^static hwc_composer_device_1_t *hwcDevice;$/;"	v	file:
hwcDevice	opengl/tests/hwc/hwcCommit.cpp	/^static hwc_composer_device_1_t *hwcDevice;$/;"	v	file:
hwcDevice	opengl/tests/hwc/hwcRects.cpp	/^static hwc_composer_device_1_t *hwcDevice;$/;"	v	file:
hwcDevice	opengl/tests/hwc/hwcStress.cpp	/^static hwc_composer_device_1_t *hwcDevice;$/;"	v	file:
hwcHasApiVersion	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^static bool hwcHasApiVersion(const hwc_composer_device_1_t* hwc,$/;"	f	namespace:android
hwcHeaderVersion	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^static uint32_t hwcHeaderVersion(const hwc_composer_device_1_t* hwc) {$/;"	f	namespace:android
hwcTestColor2Pixel	opengl/tests/hwc/hwcTestLib.cpp	/^uint32_t hwcTestColor2Pixel(uint32_t format, ColorFract color, float alpha)$/;"	f
hwcTestColorConvert	opengl/tests/hwc/hwcTestLib.cpp	/^void hwcTestColorConvert(uint32_t fromFormat, uint32_t toFormat,$/;"	f
hwcTestCreateLayerList	opengl/tests/hwc/hwcTestLib.cpp	/^hwc_display_contents_1_t *hwcTestCreateLayerList(size_t numLayers)$/;"	f
hwcTestDisplayList	opengl/tests/hwc/hwcTestLib.cpp	/^void hwcTestDisplayList(hwc_display_contents_1_t *list)$/;"	f
hwcTestDisplayListHandles	opengl/tests/hwc/hwcTestLib.cpp	/^void hwcTestDisplayListHandles(hwc_display_contents_1_t *list)$/;"	f
hwcTestDisplayListPrepareModifiable	opengl/tests/hwc/hwcTestLib.cpp	/^void hwcTestDisplayListPrepareModifiable(hwc_display_contents_1_t *list)$/;"	f
hwcTestFillColor	opengl/tests/hwc/hwcTestLib.cpp	/^void hwcTestFillColor(GraphicBuffer *gBuf, ColorFract color, float alpha)$/;"	f
hwcTestFillColorHBlend	opengl/tests/hwc/hwcTestLib.cpp	/^void hwcTestFillColorHBlend(GraphicBuffer *gBuf, uint32_t colorFormat,$/;"	f
hwcTestFreeLayerList	opengl/tests/hwc/hwcTestLib.cpp	/^void hwcTestFreeLayerList(hwc_display_contents_1_t *list)$/;"	f
hwcTestGraphicFormat	opengl/tests/hwc/hwcTestLib.h	/^const struct hwcTestGraphicFormat {$/;"	s
hwcTestGraphicFormat	opengl/tests/hwc/hwcTestLib.h	/^} hwcTestGraphicFormat[] = {$/;"	v	typeref:struct:hwcTestGraphicFormat
hwcTestGraphicFormat2str	opengl/tests/hwc/hwcTestLib.cpp	/^const char *hwcTestGraphicFormat2str(uint32_t format)$/;"	f
hwcTestGraphicFormatLookup	opengl/tests/hwc/hwcTestLib.cpp	/^const struct hwcTestGraphicFormat *hwcTestGraphicFormatLookup(const char *desc)$/;"	f
hwcTestGraphicFormatLookup	opengl/tests/hwc/hwcTestLib.cpp	/^const struct hwcTestGraphicFormat *hwcTestGraphicFormatLookup(uint32_t id)$/;"	f
hwcTestInitDisplay	opengl/tests/hwc/hwcTestLib.cpp	/^void hwcTestInitDisplay(bool verbose, EGLDisplay *dpy, EGLSurface *surface,$/;"	f
hwcTestOpenHwc	opengl/tests/hwc/hwcTestLib.cpp	/^void hwcTestOpenHwc(hwc_composer_device_1_t **hwcDevicePtr)$/;"	f
hwcTestParseColor	opengl/tests/hwc/hwcTestLib.cpp	/^ColorFract hwcTestParseColor(istringstream& in, bool& error)$/;"	f
hwcTestParseDim	opengl/tests/hwc/hwcTestLib.cpp	/^HwcTestDim hwcTestParseDim(istringstream& in, bool& error)$/;"	f
hwcTestParseHwcRect	opengl/tests/hwc/hwcTestLib.cpp	/^struct hwc_rect hwcTestParseHwcRect(istringstream& in, bool& error)$/;"	f
hwcTestRect2str	opengl/tests/hwc/hwcTestLib.cpp	/^string hwcTestRect2str(const struct hwc_rect& rect)$/;"	f
hwcTestSetPixel	opengl/tests/hwc/hwcTestLib.cpp	/^void hwcTestSetPixel(GraphicBuffer *gBuf, unsigned char *buf,$/;"	f
i	opengl/tools/glgen2/registry/genheaders.py	/^            i = i+1$/;"	v
i	opengl/tools/glgen2/registry/genheaders.py	/^        i = i + 1$/;"	v
i	opengl/tools/glgen2/registry/genheaders.py	/^    i = 1$/;"	v
iHeight	opengl/include/EGL/eglext.h	/^	EGLint		iHeight;$/;"	m	struct:EGLClientPixmapHI
iStride	opengl/include/EGL/eglext.h	/^	EGLint		iStride;$/;"	m	struct:EGLClientPixmapHI
iWidth	opengl/include/EGL/eglext.h	/^	EGLint		iWidth;$/;"	m	struct:EGLClientPixmapHI
id	include/gui/DisplayEventReceiver.h	/^            uint32_t id;$/;"	m	struct:android::DisplayEventReceiver::Event::Header
id	include/input/Input.h	/^    int32_t id;$/;"	m	struct:android::PointerProperties
id	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t id;$/;"	m	struct:blendType	file:
id	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t id;$/;"	m	struct:transformType	file:
id	services/inputflinger/EventHub.h	/^        const int32_t id;$/;"	m	struct:android::EventHub::Device
id	services/inputflinger/InputReader.h	/^        uint32_t id;$/;"	m	struct:android::RawPointerData::Pointer
idBits	include/input/InputTransport.h	/^        BitSet32 idBits;$/;"	m	struct:android::InputConsumer::History
idBits	include/input/VelocityTracker.h	/^        BitSet32 idBits;$/;"	m	struct:android::LeastSquaresVelocityTrackerStrategy::Movement
idBits	include/input/VelocityTracker.h	/^        BitSet32 idBits;$/;"	m	struct:android::LegacyVelocityTrackerStrategy::Movement
idToIndex	include/input/InputTransport.h	/^        int32_t idToIndex[MAX_POINTER_ID + 1];$/;"	m	struct:android::InputConsumer::History
idToIndex	services/inputflinger/InputReader.h	/^    uint32_t idToIndex[MAX_POINTER_ID + 1];$/;"	m	struct:android::CookedPointerData
idToIndex	services/inputflinger/InputReader.h	/^    uint32_t idToIndex[MAX_POINTER_ID + 1];$/;"	m	struct:android::RawPointerData
identifier	services/inputflinger/EventHub.h	/^        const InputDeviceIdentifier identifier;$/;"	m	struct:android::EventHub::Device
identifier	services/inputflinger/tests/InputReader_test.cpp	/^        InputDeviceIdentifier identifier;$/;"	m	struct:android::FakeEventHub::Device	file:
idmap	cmds/installd/commands.c	/^int idmap(const char *target_apk, const char *overlay_apk, const char *cache_path,$/;"	f
ignore	opengl/libagl/egl.cpp	/^    static bool ignore(GLint \/*reqValue*\/, GLint \/*confValue*\/) {$/;"	f	struct:android::config_management_t
ignored	services/inputflinger/InputReader.h	/^        bool ignored;$/;"	m	struct:android::TouchInputMapper::CurrentVirtualKeyState
image	include/media/openmax/OMX_Component.h	/^        OMX_IMAGE_PORTDEFINITIONTYPE image;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon129
impl	services/surfaceflinger/SurfaceFlinger.cpp	/^    sp<IGraphicBufferProducer> impl;$/;"	m	class:android::GraphicProducerWrapper	file:
implicitAmbient	opengl/libagl/context.h	/^    vec4_t      implicitAmbient;$/;"	m	struct:android::gl::light_t
implicitDiffuse	opengl/libagl/context.h	/^    vec4_t      implicitDiffuse;$/;"	m	struct:android::gl::light_t
implicitSceneEmissionAndAmbient	opengl/libagl/context.h	/^    vec4_t              implicitSceneEmissionAndAmbient;$/;"	m	struct:android::gl::lighting_t
implicitSpecular	opengl/libagl/context.h	/^    vec4_t      implicitSpecular;$/;"	m	struct:android::gl::light_t
inRange4bitSigned	opengl/libs/ETC1/etc1.cpp	/^static bool inRange4bitSigned(int color) {$/;"	f	file:
incRef	include/ui/ANativeObjectBase.h	/^    static void incRef(android_native_base_t* base) {$/;"	f	class:android::ANativeObjectBase
incRef	opengl/libs/EGL/egl_object.h	/^    inline int32_t incRef() { return android_atomic_inc(&count); }$/;"	f	class:android::egl_object_t
incStrong	include/ui/ANativeObjectBase.h	/^    void incStrong(const void* id) const {$/;"	f	class:android::ANativeObjectBase
incStrong	opengl/libagl/BufferObjectManager.h	/^void EGLBufferObjectManager::incStrong(const void* \/*id*\/) const {$/;"	f	class:android::EGLBufferObjectManager
incStrongHandle	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::incStrongHandle(int32_t handle)$/;"	f	class:android::IPCThreadState
incWakeCount	opengl/libs/EGL/egl_display.cpp	/^bool egl_display_t::HibernationMachine::incWakeCount(WakeRefStrength strength) {$/;"	f	class:android::egl_display_t::HibernationMachine
incWeakHandle	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::incWeakHandle(int32_t handle)$/;"	f	class:android::IPCThreadState
incrementPendingFlushCount	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::incrementPendingFlushCount(int32_t handle) {$/;"	f	class:android::SensorService::SensorEventConnection
incrementPendingForegroundDispatchesLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::incrementPendingForegroundDispatchesLocked(EventEntry* entry) {$/;"	f	class:android::InputDispatcher
incrementReleaseCountLocked	include/gui/StreamSplitter.h	/^        size_t incrementReleaseCountLocked() { return ++mReleaseCount; }$/;"	f	class:android::StreamSplitter::BufferTracker
indent	include/binder/TextOutput.h	/^inline TextOutput& indent(TextOutput& to)$/;"	f	namespace:android
indent	libs/binder/BufferedTextOutput.cpp	/^    int32_t indent;$/;"	m	struct:android::BufferedTextOutput::BufferState	file:
indent	opengl/tools/glgen/src/JniCodeEmitter.java	/^    protected static String indent = "    ";$/;"	f	class:JniCodeEmitter
indent	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^Formatter& indent(Formatter& f) {$/;"	f	namespace:android
indentStr	libs/binder/Debug.cpp	/^static const char indentStr[] =$/;"	m	namespace:android	file:
index	opengl/libagl/context.h	/^    size_t          index;  \/\/ cache tag, and vertex index$/;"	m	struct:android::gl::vertex_t
indicesType	opengl/libagl/context.h	/^    GLenum          indicesType;$/;"	m	struct:android::gl::array_machine_t
inflate	include/gui/IGraphicBufferProducer.h	/^        inline void inflate(uint32_t inWidth, uint32_t inHeight,$/;"	f	struct:android::IGraphicBufferProducer::QueueBufferOutput
init	libs/binder/MemoryHeapBase.cpp	/^status_t MemoryHeapBase::init(int fd, void *base, int size, int flags, const char* device)$/;"	f	class:android::MemoryHeapBase
init	libs/binder/Parcel.cpp	/^void Parcel::Blob::init(bool mapped, void* data, size_t size) {$/;"	f	class:android::Parcel::Blob
init	libs/gui/BitTube.cpp	/^void BitTube::init(size_t rcvbuf, size_t sndbuf) {$/;"	f	class:android::BitTube
init	opengl/libagl/TextureObjectManager.cpp	/^void EGLTextureObject::init()$/;"	f	class:android::EGLTextureObject
init	opengl/libagl/array.cpp	/^void array_t::init($/;"	f	class:android::array_t
init	opengl/libagl/array.cpp	/^void vertex_cache_t::init()$/;"	f	class:android::vertex_cache_t
init	opengl/libagl/matrix.cpp	/^void matrix_stack_t::init(int depth) {$/;"	f	class:android::matrix_stack_t
init	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNILib.java	/^     public static native void init(int width, int height);$/;"	m	class:GL2JNILib
init	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^    private void init(boolean translucent, int depth, int stencil) {$/;"	m	class:GL2JNIView	file:
init	opengl/tests/gl_jni/src/com/android/gljni/GLJNILib.java	/^     public static native void init(int width, int height);$/;"	m	class:GLJNILib
init	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^    private void init() {$/;"	m	class:GLJNIView	file:
init	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfLib.java	/^     public static native void init(int width, int height);$/;"	m	class:GLPerfLib
init	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^    private void init(boolean translucent, int depth, int stencil) {$/;"	m	class:GLPerfView	file:
init	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^    private void init(boolean translucent, int depth, int stencil) {$/;"	m	class:GLDualGL2View	file:
init	opengl/tests/gldual/src/com/android/gldual/GLDualLib.java	/^     public static native void init(int width, int height);$/;"	m	class:GLDualLib
init	opengl/tests/hwc/hwcColorEquiv.cpp	/^void init(void)$/;"	f
init	opengl/tests/hwc/hwcCommit.cpp	/^void init(void)$/;"	f
init	opengl/tests/hwc/hwcRects.cpp	/^void init(void)$/;"	f
init	opengl/tests/hwc/hwcStress.cpp	/^void init(void)$/;"	f
init	opengl/tests/testPauseResume/src/com/android/test/TestView.java	/^    private void init() {$/;"	m	class:TestView	file:
init	opengl/tests/testViewport/src/com/android/test/TestView.java	/^    private void init() {$/;"	m	class:TestView	file:
init	services/sensorservice/Fusion.cpp	/^void Fusion::init() {$/;"	f	class:android::Fusion
init	services/surfaceflinger/MessageQueue.cpp	/^void MessageQueue::init(const sp<SurfaceFlinger>& flinger)$/;"	f	class:android::MessageQueue
init	services/surfaceflinger/RenderEngine/Texture.cpp	/^void Texture::init(Target textureTarget, uint32_t textureName) {$/;"	f	class:android::Texture
init	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::init() {$/;"	f	class:android::SurfaceFlinger
initCheck	libs/gui/BitTube.cpp	/^status_t BitTube::initCheck() const$/;"	f	class:android::BitTube
initCheck	libs/gui/DisplayEventReceiver.cpp	/^status_t DisplayEventReceiver::initCheck() const {$/;"	f	class:android::DisplayEventReceiver
initCheck	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::initCheck() const {$/;"	f	class:android::SurfaceComposerClient
initCheck	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::initCheck() const {$/;"	f	class:android::GraphicBuffer
initCheck	opengl/libagl/egl.cpp	/^    virtual     bool        initCheck() const   { return pbuffer.data != 0; }$/;"	f	struct:android::egl_pbuffer_surface_t
initCheck	opengl/libagl/egl.cpp	/^    virtual     bool        initCheck() const { return !depth.format || depth.data!=0; } $/;"	f	struct:android::egl_pixmap_surface_t
initCheck	opengl/libagl/egl.cpp	/^    virtual     bool        initCheck() const { return true; } \/\/ TODO: report failure if ctor fails$/;"	f	struct:android::egl_window_surface_v2_t
initCheck	services/sensorservice/SensorDevice.cpp	/^status_t SensorDevice::initCheck() const {$/;"	f	class:android::SensorDevice
initCheck	services/surfaceflinger/Client.cpp	/^status_t Client::initCheck() const {$/;"	f	class:android::Client
initCheck	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::initCheck() const {$/;"	f	class:android::HWComposer
initEglDebugLevel	opengl/libs/EGL/egl.cpp	/^void initEglDebugLevel() {$/;"	f	namespace:android
initEglTraceLevel	opengl/libs/EGL/egl.cpp	/^void initEglTraceLevel() {$/;"	f	namespace:android
initFbo	services/surfaceflinger/LayerBlur.cpp	/^void LayerBlur::initFbo(FBO& fbobj, int width, int height, int textureName) {$/;"	f	class:android::LayerBlur
initFrames	opengl/tests/hwc/hwcStress.cpp	/^void initFrames(unsigned int seed)$/;"	f
initFusion	services/sensorservice/Fusion.cpp	/^void Fusion::initFusion(const vec4_t& q, float dT)$/;"	f	class:android::Fusion
initGraphics	opengl/tests/angeles/app-linux.cpp	/^static int initGraphics(unsigned samples, const WindowSurface& windowSurface)$/;"	f	file:
initLerp	opengl/libagl/primitives.cpp	/^void compute_iterators_t::initLerp(vertex_t const* v0, uint32_t enables)$/;"	f	class:android::compute_iterators_t
initLine	opengl/libagl/primitives.cpp	/^void compute_iterators_t::initLine($/;"	f	class:android::compute_iterators_t
initShaders	libs/gui/tests/SRGB_test.cpp	/^    void initShaders() {$/;"	f	class:android::SRGBTest
initSize	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::initSize(uint32_t w, uint32_t h, PixelFormat format,$/;"	f	class:android::GraphicBuffer
initState	libs/binder/Parcel.cpp	/^void Parcel::initState()$/;"	f	class:android::Parcel
initState	libs/input/VelocityTracker.cpp	/^void IntegratingVelocityTrackerStrategy::initState(State& state,$/;"	f	class:android::IntegratingVelocityTrackerStrategy
initTriangle	opengl/libagl/primitives.cpp	/^void compute_iterators_t::initTriangle($/;"	f	class:android::compute_iterators_t
initWithGLStrings	services/surfaceflinger/RenderEngine/GLExtensions.cpp	/^void GLExtensions::initWithGLStrings($/;"	f	class:android::GLExtensions
init_api	opengl/libs/EGL/Loader.cpp	/^void Loader::init_api(void* dso,$/;"	f	class:android::Loader
init_gl_surface	opengl/tests/gl_basic/gl_basic.cpp	/^int init_gl_surface(const WindowSurface& windowSurface)$/;"	f
init_gl_surface	opengl/tests/tritex/tritex.cpp	/^int init_gl_surface(const WindowSurface& windowSurface)$/;"	f
init_scene	opengl/tests/gl_basic/gl_basic.cpp	/^void init_scene(void)$/;"	f
init_scene	opengl/tests/gl_jni/jni/gl_code.cpp	/^void init_scene(int width, int height)$/;"	f
init_scene	opengl/tests/tritex/tritex.cpp	/^void init_scene(void)$/;"	f
init_tables	opengl/libagl/dxt.cpp	/^init_tables()$/;"	f	namespace:android
init_white	opengl/libagl/light.cpp	/^static void init_white(vec4_t& c) {$/;"	f	namespace:android
initialize	include/input/InputTransport.h	/^        void initialize(int32_t deviceId, int32_t source) {$/;"	f	struct:android::InputConsumer::TouchState
initialize	libs/input/Input.cpp	/^void InputEvent::initialize(const InputEvent& from) {$/;"	f	class:android::InputEvent
initialize	libs/input/Input.cpp	/^void InputEvent::initialize(int32_t deviceId, int32_t source) {$/;"	f	class:android::InputEvent
initialize	libs/input/Input.cpp	/^void KeyEvent::initialize($/;"	f	class:android::KeyEvent
initialize	libs/input/Input.cpp	/^void KeyEvent::initialize(const KeyEvent& from) {$/;"	f	class:android::KeyEvent
initialize	libs/input/Input.cpp	/^void MotionEvent::initialize($/;"	f	class:android::MotionEvent
initialize	libs/input/InputDevice.cpp	/^void InputDeviceInfo::initialize(int32_t id, int32_t generation, int32_t controllerNumber,$/;"	f	class:android::InputDeviceInfo
initialize	opengl/libs/EGL/egl_cache.cpp	/^void egl_cache_t::initialize(egl_display_t *display) {$/;"	f	class:android::egl_cache_t
initialize	opengl/libs/EGL/egl_display.cpp	/^EGLBoolean egl_display_t::initialize(EGLint *major, EGLint *minor) {$/;"	f	class:android::egl_display_t
initialize	services/inputflinger/InputManager.cpp	/^void InputManager::initialize() {$/;"	f	class:android::InputManager
initialize	services/inputflinger/InputReader.h	/^        void initialize(const RawAbsoluteAxisInfo& rawAxisInfo, const AxisInfo& axisInfo,$/;"	f	struct:android::JoystickInputMapper::Axis
initializeDisplays	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::initializeDisplays() {$/;"	f	class:android::SurfaceFlinger
initializeEventWithHistory	libs/input/tests/InputEvent_test.cpp	/^void MotionEventTest::initializeEventWithHistory(MotionEvent* event) {$/;"	f	class:android::MotionEventTest
initializeFrom	include/input/InputTransport.h	/^        void initializeFrom(const InputMessage* msg) {$/;"	f	struct:android::InputConsumer::History
initializeKeyEvent	libs/input/InputTransport.cpp	/^void InputConsumer::initializeKeyEvent(KeyEvent* event, const InputMessage* msg) {$/;"	f	class:android::InputConsumer
initializeKeyEvent	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::initializeKeyEvent(KeyEvent* event, const KeyEntry* entry) {$/;"	f	class:android::InputDispatcher
initializeLedState	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::initializeLedState(LedState& ledState, int32_t led) {$/;"	f	class:android::KeyboardInputMapper
initializeMotionEvent	libs/input/InputTransport.cpp	/^void InputConsumer::initializeMotionEvent(MotionEvent* event, const InputMessage* msg) {$/;"	f	class:android::InputConsumer
initialize_directories	cmds/installd/installd.c	/^int initialize_directories() {$/;"	f
initialize_globals	cmds/installd/installd.c	/^int initialize_globals() {$/;"	f
initialized	opengl/libagl/egl.cpp	/^    volatile int32_t    initialized;$/;"	m	struct:android::egl_display_t	file:
initialized	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^static int initialized = 0;$/;"	v	file:
initialized	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^static int initialized = 0;$/;"	v	file:
initialized	opengl/tools/glgen/stubs/gles11/common.cpp	/^static int initialized = 0;$/;"	v	file:
initialized	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static int initialized = 0;$/;"	v	file:
injectInputEvent	services/inputflinger/InputDispatcher.cpp	/^int32_t InputDispatcher::injectInputEvent(const InputEvent* event, int32_t displayId,$/;"	f	class:android::InputDispatcher
injectionIsAsync	services/inputflinger/InputDispatcher.h	/^        bool injectionIsAsync; \/\/ set to true if injection is not waiting for the result$/;"	m	struct:android::InputDispatcher::InjectionState
injectionResult	services/inputflinger/InputDispatcher.h	/^        int32_t injectionResult;  \/\/ initially INPUT_EVENT_INJECTION_PENDING$/;"	m	struct:android::InputDispatcher::InjectionState
injectionState	services/inputflinger/InputDispatcher.h	/^        InjectionState* injectionState;$/;"	m	struct:android::InputDispatcher::EventEntry
injectorPid	services/inputflinger/InputDispatcher.h	/^        int32_t injectorPid;$/;"	m	struct:android::InputDispatcher::InjectionState
injectorUid	services/inputflinger/InputDispatcher.h	/^        int32_t injectorUid;$/;"	m	struct:android::InputDispatcher::InjectionState
inputApplicationHandle	services/inputflinger/InputDispatcher.h	/^        sp<InputApplicationHandle> inputApplicationHandle;$/;"	m	struct:android::InputDispatcher::CommandEntry
inputApplicationHandle	services/inputflinger/InputWindow.h	/^    const sp<InputApplicationHandle> inputApplicationHandle;$/;"	m	class:android::InputWindowHandle
inputChannel	services/inputflinger/InputDispatcher.h	/^        sp<InputChannel> inputChannel; \/\/ never null$/;"	m	class:android::InputDispatcher::Connection
inputChannel	services/inputflinger/InputDispatcher.h	/^    sp<InputChannel> inputChannel;$/;"	m	struct:android::InputTarget
inputChannel	services/inputflinger/InputWindow.h	/^    sp<InputChannel> inputChannel;$/;"	m	struct:android::InputWindowInfo
inputFeatures	services/inputflinger/InputWindow.h	/^    int32_t inputFeatures;$/;"	m	struct:android::InputWindowInfo
inputFileVersion	cmds/rawbu/backup.cpp	/^static uint32_t inputFileVersion;$/;"	m	namespace:android	file:
inputPublisher	services/inputflinger/InputDispatcher.h	/^        InputPublisher inputPublisher;$/;"	m	class:android::InputDispatcher::Connection
inputPublisherBlocked	services/inputflinger/InputDispatcher.h	/^        bool inputPublisherBlocked;$/;"	m	class:android::InputDispatcher::Connection
inputState	services/inputflinger/InputDispatcher.h	/^        InputState inputState;$/;"	m	class:android::InputDispatcher::Connection
inputWindowHandle	services/inputflinger/InputDispatcher.h	/^        sp<InputWindowHandle> inputWindowHandle; \/\/ may be null$/;"	m	class:android::InputDispatcher::Connection
inputWindowHandle	services/inputflinger/InputDispatcher.h	/^        sp<InputWindowHandle> inputWindowHandle;$/;"	m	struct:android::InputDispatcher::CommandEntry
insertAfter	libs/binder/MemoryDealer.cpp	/^    void insertAfter(NODE* node, NODE* newNode) {$/;"	f	class:android::LinkedList
insertBefore	libs/binder/MemoryDealer.cpp	/^    void insertBefore(NODE* node, NODE* newNode) {$/;"	f	class:android::LinkedList
insertHead	libs/binder/MemoryDealer.cpp	/^    void insertHead(NODE* newNode) {$/;"	f	class:android::LinkedList
insertTail	libs/binder/MemoryDealer.cpp	/^    void insertTail(NODE* newNode) {$/;"	f	class:android::LinkedList
install	cmds/installd/commands.c	/^int install(const char *pkgname, uid_t uid, gid_t gid, const char *seinfo)$/;"	f
instance	include/android/native_activity.h	/^    void* instance;$/;"	m	struct:ANativeActivity
instantiate	include/binder/BinderService.h	/^    static void instantiate() { publish(); }$/;"	f	class:android::BinderService
int64value	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::int64value() const {$/;"	f	class:android::gltrace::GLMessage_DataType
int64value	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::google::protobuf::int64 GLMessage_DataType::int64value(int index) const {$/;"	f	class:android::gltrace::GLMessage_DataType
int64value_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > int64value_;$/;"	m	class:android::gltrace::GLMessage_DataType
int64value_size	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline int GLMessage_DataType::int64value_size() const {$/;"	f	class:android::gltrace::GLMessage_DataType
interceptKeyBeforeDispatching	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual nsecs_t interceptKeyBeforeDispatching(const sp<InputWindowHandle>& inputWindowHandle,$/;"	f	class:android::FakeInputDispatcherPolicy	file:
interceptKeyBeforeQueueing	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual void interceptKeyBeforeQueueing(const KeyEvent* keyEvent, uint32_t& policyFlags) {$/;"	f	class:android::FakeInputDispatcherPolicy	file:
interceptKeyResult	services/inputflinger/InputDispatcher.h	/^        InterceptKeyResult interceptKeyResult; \/\/ set based on the interception result$/;"	m	struct:android::InputDispatcher::KeyEntry
interceptKeyWakeupTime	services/inputflinger/InputDispatcher.h	/^        nsecs_t interceptKeyWakeupTime; \/\/ used with INTERCEPT_KEY_RESULT_TRY_AGAIN_LATER$/;"	m	struct:android::InputDispatcher::KeyEntry
interceptMotionBeforeQueueing	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual void interceptMotionBeforeQueueing(nsecs_t when, uint32_t& policyFlags) {$/;"	f	class:android::FakeInputDispatcherPolicy	file:
interface_cast	include/binder/IInterface.h	/^inline sp<INTERFACE> interface_cast(const sp<IBinder>& obj)$/;"	f	namespace:android
internalDataPath	include/android/native_activity.h	/^    const char* internalDataPath;$/;"	m	struct:ANativeActivity
internalformat	opengl/libagl/TextureObjectManager.h	/^    GLenum              internalformat;$/;"	m	class:android::EGLTextureObject
intersect	libs/ui/Rect.cpp	/^bool Rect::intersect(const Rect& with, Rect* result) const {$/;"	f	class:android::Rect
intersect	libs/ui/Region.cpp	/^const Region Region::intersect(const Rect& rhs) const {$/;"	f	class:android::Region
intersect	libs/ui/Region.cpp	/^const Region Region::intersect(const Region& rhs) const {$/;"	f	class:android::Region
intersect	libs/ui/Region.cpp	/^const Region Region::intersect(const Region& rhs, int dx, int dy) const {$/;"	f	class:android::Region
intvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::intvalue() const {$/;"	f	class:android::gltrace::GLMessage_DataType
intvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::google::protobuf::int32 GLMessage_DataType::intvalue(int index) const {$/;"	f	class:android::gltrace::GLMessage_DataType
intvalue_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > intvalue_;$/;"	m	class:android::gltrace::GLMessage_DataType
intvalue_size	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline int GLMessage_DataType::intvalue_size() const {$/;"	f	class:android::gltrace::GLMessage_DataType
invEndMinusStart	opengl/libagl/context.h	/^    GLfixed     invEndMinusStart;$/;"	m	struct:android::gl::fog_t
invalid	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const GLMessage_Function GLMessage::invalid;$/;"	m	class:android::gltrace::GLMessage	file:
invalid	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const Function invalid = GLMessage_Function_invalid;$/;"	m	class:android::gltrace::GLMessage
invalidate	opengl/libagl/matrix.cpp	/^void transform_state_t::invalidate()$/;"	f	class:android::transform_state_t
invalidate	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::invalidate() {$/;"	f	class:android::HWComposer
invalidate	services/surfaceflinger/MessageQueue.cpp	/^void MessageQueue::invalidate() {$/;"	f	class:android::MessageQueue
invalidateHwcGeometry	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::invalidateHwcGeometry()$/;"	f	class:android::SurfaceFlinger
invalidateLayerStack	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::invalidateLayerStack(uint32_t layerStack,$/;"	f	class:android::SurfaceFlinger
invalidateTransactionNow	services/surfaceflinger/MessageQueue.cpp	/^void MessageQueue::invalidateTransactionNow() {$/;"	f	class:android::MessageQueue
invalidate_lighting	opengl/libagl/light.cpp	/^void invalidate_lighting(ogles_context_t* c)$/;"	f	namespace:android
invalidate_texture	opengl/libagl/texture.cpp	/^void invalidate_texture(ogles_context_t* c, int tmu, uint8_t flags = 0xFF) {$/;"	f	namespace:android
inverse	include/ui/TMatHelpers.h	/^    friend BASE<T> PURE inverse(const BASE<T>& m)   { return matrix::inverse(m); }$/;"	f	class:android::TMatSquareFunctions
inverse	include/ui/TMatHelpers.h	/^MATRIX PURE inverse(const MATRIX& src) {$/;"	f	namespace:android::matrix
inverse	services/surfaceflinger/Transform.cpp	/^Transform Transform::inverse() const {$/;"	f	class:android::Transform
invert	opengl/libagl/matrix.cpp	/^void invert(GLfloat* inverse, const GLfloat* src)$/;"	f	namespace:android
invert	services/sensorservice/mat.h	/^mat<T, N, N> PURE invert(const mat<T, N, N>& src) {$/;"	f	namespace:android
ion_FlagMask_valid_check	libs/binder/MemoryHeapIon.cpp	/^uint32_t ion_FlagMask_valid_check(uint32_t flags)$/;"	f	namespace:android
ion_HeapMask_valid_check	libs/binder/MemoryHeapIon.cpp	/^uint32_t ion_HeapMask_valid_check(uint32_t flags)$/;"	f	namespace:android
ipcData	libs/binder/Parcel.cpp	/^uintptr_t Parcel::ipcData() const$/;"	f	class:android::Parcel
ipcDataSize	libs/binder/Parcel.cpp	/^size_t Parcel::ipcDataSize() const$/;"	f	class:android::Parcel
ipcObjects	libs/binder/Parcel.cpp	/^uintptr_t Parcel::ipcObjects() const$/;"	f	class:android::Parcel
ipcObjectsCount	libs/binder/Parcel.cpp	/^size_t Parcel::ipcObjectsCount() const$/;"	f	class:android::Parcel
ipcSetDataReference	libs/binder/Parcel.cpp	/^void Parcel::ipcSetDataReference(const uint8_t* data, size_t dataSize,$/;"	f	class:android::Parcel
isAcquired	opengl/libagl/Tokenizer.cpp	/^bool Tokenizer::isAcquired(uint32_t token) const$/;"	f	class:android::Tokenizer
isAlive	opengl/libs/EGL/egl_display.h	/^    inline bool isAlive() const { return isValid(); }$/;"	f	class:android::egl_display_t
isAppSwitchKeyCode	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::isAppSwitchKeyCode(int32_t keyCode) {$/;"	f	class:android::InputDispatcher
isAppSwitchKeyEventLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::isAppSwitchKeyEventLocked(KeyEntry* keyEntry) {$/;"	f	class:android::InputDispatcher
isAppSwitchPendingLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::isAppSwitchPendingLocked() {$/;"	f	class:android::InputDispatcher
isArray	opengl/tools/glgen/src/JType.java	/^    boolean isArray;$/;"	f	class:JType
isArray	opengl/tools/glgen/src/JType.java	/^    public boolean isArray() {$/;"	m	class:JType
isAttributeMatching	opengl/libagl/egl.cpp	/^static int isAttributeMatching(int i, EGLint attr, EGLint val)$/;"	f	namespace:android
isAutoTimestamp	include/gui/IGraphicBufferProducer.h	/^        int isAutoTimestamp;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferInput
isAutoTimestamp	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        bool isAutoTimestamp;$/;"	m	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder	file:
isBinderAlive	libs/binder/Binder.cpp	/^bool BBinder::isBinderAlive() const$/;"	f	class:android::BBinder
isBinderAlive	libs/binder/BpBinder.cpp	/^bool BpBinder::isBinderAlive() const$/;"	f	class:android::BpBinder
isBlurLayer	services/surfaceflinger/Layer.h	/^    virtual bool isBlurLayer() const { return false; }$/;"	f	class:android::Layer
isBlurLayer	services/surfaceflinger/LayerBlur.h	/^    virtual bool isBlurLayer() const      { return true; }$/;"	f	class:android::LayerBlur
isBuffer	opengl/tools/glgen/src/JType.java	/^    public boolean isBuffer() {$/;"	m	class:JType
isCategorySupported	cmds/atrace/atrace.cpp	/^static bool isCategorySupported(const TracingCategory& category)$/;"	f	file:
isCategorySupportedForRoot	cmds/atrace/atrace.cpp	/^static bool isCategorySupportedForRoot(const TracingCategory& category)$/;"	f	file:
isCenteredAxis	services/inputflinger/InputReader.cpp	/^bool JoystickInputMapper::isCenteredAxis(int32_t axis) {$/;"	f	class:android::JoystickInputMapper
isClass	opengl/tools/glgen/src/JType.java	/^    boolean isClass;$/;"	f	class:JType
isClass	opengl/tools/glgen/src/JType.java	/^    public boolean isClass() {$/;"	m	class:JType
isComplete	include/input/Keyboard.h	/^    inline bool isComplete() const {$/;"	f	class:android::KeyMap
isComplete	opengl/libagl/TextureObjectManager.h	/^    bool                isComplete() const { return mIsComplete; }$/;"	f	class:android::EGLTextureObject
isCompositionMapChanged	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::isCompositionMapChanged(int32_t id) {$/;"	f	class:android::HWComposer
isConnected	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::isConnected(int disp) const {$/;"	f	class:android::HWComposer
isConst	opengl/tools/glgen/src/CType.java	/^    boolean isConst;$/;"	f	class:CType
isConst	opengl/tools/glgen/src/CType.java	/^    public boolean isConst() {$/;"	m	class:CType
isConstCharPointer	opengl/tools/glgen/src/CType.java	/^    public boolean isConstCharPointer() {$/;"	m	class:CType
isContextManager	libs/binder/ProcessState.cpp	/^bool ProcessState::isContextManager(void) const$/;"	f	class:android::ProcessState
isCropped	services/surfaceflinger/Layer.cpp	/^bool Layer::isCropped() const {$/;"	f	class:android::Layer
isDescriptorCached	libs/binder/BpBinder.cpp	/^bool BpBinder::isDescriptorCached() const {$/;"	f	class:android::BpBinder
isDisplayOn	services/surfaceflinger/DisplayDevice.cpp	/^bool DisplayDevice::isDisplayOn() const {$/;"	f	class:DisplayDevice
isDone	include/private/ui/RegionHelper.h	/^        inline bool isDone() const {$/;"	f	class:android::region_operator::Spanner
isDone	include/private/ui/RegionHelper.h	/^        inline bool isDone() const {$/;"	f	class:android::region_operator::SpannerInner
isEGLHandle	opengl/tools/glgen/src/CType.java	/^    public boolean isEGLHandle() {$/;"	m	class:CType
isEGLHandle	opengl/tools/glgen/src/JType.java	/^    public boolean isEGLHandle() {$/;"	m	class:JType
isEglImageCroppable	libs/gui/GLConsumer.cpp	/^static bool isEglImageCroppable(const Rect& crop) {$/;"	f	namespace:android
isEligibleBuiltInKeyboard	libs/input/Keyboard.cpp	/^bool isEligibleBuiltInKeyboard(const InputDeviceIdentifier& deviceIdentifier,$/;"	f	namespace:android
isEmpty	include/input/Input.h	/^    bool isEmpty() const {$/;"	f	struct:android::PointerCoords
isEmpty	include/ui/Rect.h	/^    inline bool isEmpty() const {$/;"	f	class:android::Rect
isEmpty	include/ui/Region.h	/^    inline  bool        isEmpty() const     { return getBounds().isEmpty(); }$/;"	f	class:android::Region
isEmpty	libs/binder/MemoryDealer.cpp	/^    bool        isEmpty() const { return mFirst == 0; }$/;"	f	class:android::LinkedList
isEmpty	opengl/libagl/egl.cpp	/^        bool isEmpty() const {$/;"	f	struct:android::egl_window_surface_v2_t::Rect
isEmpty	opengl/libagl/egl.cpp	/^        bool isEmpty() const {$/;"	f	struct:android::egl_window_surface_v2_t::Region
isEmpty	services/inputflinger/InputDispatcher.h	/^        inline bool isEmpty() const {$/;"	f	struct:android::InputDispatcher::Queue
isEnabled	services/sensorservice/SensorFusion.h	/^    bool isEnabled() const { return mEnabled; }$/;"	f	class:android::SensorFusion
isExtOnly	services/surfaceflinger/Layer.cpp	/^bool Layer::isExtOnly() const$/;"	f	class:android::Layer
isExtendedMode	services/surfaceflinger/SurfaceFlinger.h	/^    static bool isExtendedMode() { return sExtendedMode; };$/;"	f	class:android::SurfaceFlinger
isExternal	include/input/InputDevice.h	/^    inline bool isExternal() const { return mIsExternal; }$/;"	f	class:android::InputDeviceInfo
isExternal	services/inputflinger/InputReader.h	/^    inline bool isExternal() { return mIsExternal; }$/;"	f	class:android::InputDevice
isExternal	services/inputflinger/tests/InputReader_test.cpp	/^    virtual bool isExternal(int32_t deviceId) const {$/;"	f	class:android::FakeEventHub	file:
isExternalDeviceLocked	services/inputflinger/EventHub.cpp	/^bool EventHub::isExternalDeviceLocked(Device* device) {$/;"	f	class:android::EventHub
isExternalFormat	libs/gui/GLConsumer.cpp	/^bool GLConsumer::isExternalFormat(uint32_t format)$/;"	f	class:android::GLConsumer
isFixedSize	include/gui/Sensor.h	/^    inline bool isFixedSize() const { return false; }$/;"	f	class:android::Sensor
isFixedSize	include/ui/Region.h	/^    inline  bool        isFixedSize() const { return false; }$/;"	f	class:android::Region
isFixedSize	libs/ui/FrameStats.cpp	/^bool FrameStats::isFixedSize() const {$/;"	f	class:android::FrameStats
isFixedSize	services/surfaceflinger/Layer.cpp	/^bool Layer::isFixedSize() const {$/;"	f	class:android::Layer
isFixedSize	services/surfaceflinger/LayerBlur.h	/^    virtual bool isFixedSize() const      { return true; }$/;"	f	class:android::LayerBlur
isFixedSize	services/surfaceflinger/LayerDim.h	/^    virtual bool isFixedSize() const      { return true; }$/;"	f	class:android::LayerDim
isFrameValidLocked	services/surfaceflinger/FrameTracker.cpp	/^bool FrameTracker::isFrameValidLocked(size_t idx) const {$/;"	f	class:android::FrameTracker
isGeometryChanged	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::isGeometryChanged(int32_t id) {$/;"	f	class:android::HWComposer
isHit	services/inputflinger/InputReader.h	/^        inline bool isHit(int32_t x, int32_t y) const {$/;"	f	struct:android::TouchInputMapper::VirtualKey
isHovering	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::InputState::isHovering(int32_t deviceId, uint32_t source,$/;"	f	class:android::InputDispatcher::InputState
isHovering	services/inputflinger/InputReader.cpp	/^bool TouchButtonAccumulator::isHovering() const {$/;"	f	class:android::TouchButtonAccumulator
isHovering	services/inputflinger/InputReader.h	/^        bool isHovering;$/;"	m	struct:android::RawPointerData::Pointer
isHovering	services/inputflinger/InputReader.h	/^    inline bool isHovering(uint32_t pointerIndex) {$/;"	f	struct:android::CookedPointerData
isHovering	services/inputflinger/InputReader.h	/^    inline bool isHovering(uint32_t pointerIndex) {$/;"	f	struct:android::RawPointerData
isIgnored	services/inputflinger/InputReader.h	/^    inline bool isIgnored() { return mMappers.isEmpty(); }$/;"	f	class:android::InputDevice
isInUse	services/inputflinger/InputReader.h	/^        inline bool isInUse() const { return mInUse; }$/;"	f	class:android::MultiTouchMotionAccumulator::Slot
isInjected	services/inputflinger/InputDispatcher.h	/^        inline bool isInjected() const { return injectionState != NULL; }$/;"	f	struct:android::InputDispatcher::EventEntry
isIntOnly	services/surfaceflinger/Layer.cpp	/^bool Layer::isIntOnly() const$/;"	f	class:android::Layer
isKeyPressed	services/inputflinger/InputReader.h	/^    bool isKeyPressed(int32_t code) {$/;"	f	class:android::InputDevice
isKeyboardOrGamepadKey	services/inputflinger/InputReader.cpp	/^bool KeyboardInputMapper::isKeyboardOrGamepadKey(int32_t scanCode) {$/;"	f	class:android::KeyboardInputMapper
isMainDisplay	services/inputflinger/InputDispatcher.cpp	/^static bool isMainDisplay(int32_t displayId) {$/;"	f	namespace:android
isMainDisplay	services/surfaceflinger/SurfaceFlinger.h	/^        bool isMainDisplay() const { return type == DisplayDevice::DISPLAY_PRIMARY; }$/;"	f	struct:android::SurfaceFlinger::DisplayDeviceState
isMetaKey	libs/input/Keyboard.cpp	/^bool isMetaKey(int32_t keyCode) {$/;"	f	namespace:android
isNeutral	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::InputState::isNeutral() const {$/;"	f	class:android::InputDispatcher::InputState
isNullAllowed	opengl/tools/glgen/src/JniCodeEmitter.java	/^    boolean isNullAllowed(CFunc cfunc) {$/;"	m	class:JniCodeEmitter
isOnef	opengl/libagl/fp.h	/^bool isOnef(GLfloat v) {$/;"	f	namespace:android::gl
isOpaque	services/surfaceflinger/Layer.cpp	/^bool Layer::isOpaque(const Layer::State& s) const$/;"	f	class:android::Layer
isOpaque	services/surfaceflinger/LayerBlur.h	/^    virtual bool isOpaque(const Layer::State& \/*s*\/) const { return false; }$/;"	f	class:android::LayerBlur
isOpaque	services/surfaceflinger/LayerDim.h	/^    virtual bool isOpaque(const Layer::State&) const { return false; }$/;"	f	class:android::LayerDim
isOpaque	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline bool isOpaque() const {$/;"	f	class:android::ProgramCache::Key
isOrigin	include/ui/Point.h	/^    inline bool isOrigin() const {$/;"	f	class:android::Point
isPanelInverseMounted	services/surfaceflinger/DisplayDevice.h	/^    bool isPanelInverseMounted() const {$/;"	f	class:android::DisplayDevice
isPointInsideSurface	services/inputflinger/InputReader.cpp	/^bool TouchInputMapper::isPointInsideSurface(int32_t x, int32_t y) {$/;"	f	class:android::TouchInputMapper
isPointer	opengl/tools/glgen/src/CType.java	/^    boolean isPointer;$/;"	f	class:CType
isPointer	opengl/tools/glgen/src/CType.java	/^    public boolean isPointer() {$/;"	m	class:CType
isPointer	services/sensorservice/traits.h	/^    enum { isPointer        = PointerTraits<T>::result };$/;"	e	enum:android::TypeTraits::__anon72
isPointerDown	services/inputflinger/InputReader.cpp	/^static bool isPointerDown(int32_t buttonState) {$/;"	f	namespace:android
isPointerFunc	opengl/tools/glgen/src/JniCodeEmitter.java	/^    boolean isPointerFunc(JFunc jfunc) {$/;"	m	class:JniCodeEmitter
isPositiveSemidefinite	services/sensorservice/mat.h	/^static bool isPositiveSemidefinite(const mat<TYPE, C, C>& m, TYPE tolerance) {$/;"	f	namespace:android
isPossiblyYUV	libs/gui/CpuConsumer.cpp	/^static bool isPossiblyYUV(PixelFormat format) {$/;"	f	namespace:android
isPotentialCursor	services/surfaceflinger/Layer.h	/^    bool isPotentialCursor() const { return mPotentialCursor;}$/;"	f	class:android::Layer
isPremultiplied	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline bool isPremultiplied() const {$/;"	f	class:android::ProgramCache::Key
isPrimitive	opengl/tools/glgen/src/JType.java	/^    public boolean isPrimitive() {$/;"	m	class:JType
isProtected	services/surfaceflinger/Layer.cpp	/^bool Layer::isProtected() const$/;"	f	class:android::Layer
isReady	opengl/libs/EGL/egl_display.h	/^    inline bool isReady() const { return (refs > 0); }$/;"	f	class:android::egl_display_t
isRect	include/ui/Region.h	/^    inline  bool        isRect() const      { return mStorage.size() == 1; }$/;"	f	class:android::Region
isRequiresFunc	opengl/tools/glgen/src/JniCodeEmitter.java	/^    String isRequiresFunc(CFunc cfunc) {$/;"	m	class:JniCodeEmitter
isRigidBody	opengl/libagl/context.h	/^    inline bool isRigidBody() const {$/;"	f	struct:android::gl::matrix_stack_t
isSameSurface	libs/gui/SurfaceControl.cpp	/^bool SurfaceControl::isSameSurface($/;"	f	class:android::SurfaceControl
isSecure	services/surfaceflinger/DisplayDevice.h	/^    bool isSecure() const { return mIsSecure; }$/;"	f	class:android::DisplayDevice
isSecure	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::isSecure(int disp) const {$/;"	f	class:android::HWComposer
isSecure	services/surfaceflinger/Layer.h	/^    virtual bool isSecure() const           { return mSecure; }$/;"	f	class:android::Layer
isSecure	services/surfaceflinger/LayerBlur.h	/^    virtual bool isSecure() const         { return false; }$/;"	f	class:android::LayerBlur
isSecure	services/surfaceflinger/LayerDim.h	/^    virtual bool isSecure() const         { return false; }$/;"	f	class:android::LayerDim
isSecure	services/surfaceflinger/SurfaceFlinger.h	/^        bool isSecure;$/;"	m	struct:android::SurfaceFlinger::DisplayDeviceState
isSecureDisplay	services/surfaceflinger/Layer.cpp	/^bool Layer::isSecureDisplay() const$/;"	f	class:android::Layer
isSlippery	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::TouchState::isSlippery() const {$/;"	f	class:android::InputDispatcher::TouchState
isSplit	services/inputflinger/InputDispatcher.h	/^        inline bool isSplit() const {$/;"	f	struct:android::InputDispatcher::DispatchEntry
isStaleEventLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::isStaleEventLocked(nsecs_t currentTime, EventEntry* entry) {$/;"	f	class:android::InputDispatcher
isStdArith	services/sensorservice/traits.h	/^    enum { isStdArith       = isStdIntegral || isStdFloat };$/;"	e	enum:android::TypeTraits::__anon73
isStdFloat	services/sensorservice/traits.h	/^    enum { isStdFloat       = TL::IndexOf<Floats,       T>::value >= 0 };$/;"	e	enum:android::TypeTraits::__anon71
isStdIntegral	services/sensorservice/traits.h	/^    enum { isStdIntegral    = TL::IndexOf<OtherInts,    T>::value >= 0 || isStdUnsignedInt || isStdSignedInt };$/;"	e	enum:android::TypeTraits::__anon70
isStdSignedInt	services/sensorservice/traits.h	/^    enum { isStdSignedInt   = TL::IndexOf<SignedInts,   T>::value >= 0 };$/;"	e	enum:android::TypeTraits::__anon69
isStdUnsignedInt	services/sensorservice/traits.h	/^    enum { isStdUnsignedInt = TL::IndexOf<UnsignedInts, T>::value >= 0 };$/;"	e	enum:android::TypeTraits::__anon68
isString	opengl/tools/glgen/src/JType.java	/^    boolean isString;$/;"	f	class:JType
isString	opengl/tools/glgen/src/JType.java	/^    public boolean isString() {$/;"	m	class:JType
isTextureMasking	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline bool isTextureMasking() const {$/;"	f	class:android::ProgramCache::Key
isTexturing	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline bool isTexturing() const {$/;"	f	class:android::ProgramCache::Key
isTokenValid	opengl/libagl/TokenManager.cpp	/^bool TokenManager::isTokenValid(GLuint token) const$/;"	f	class:android::TokenManager
isToolActive	services/inputflinger/InputReader.cpp	/^bool TouchButtonAccumulator::isToolActive() const {$/;"	f	class:android::TouchButtonAccumulator
isTouchEvent	include/input/Input.h	/^    inline bool isTouchEvent() const {$/;"	f	class:android::MotionEvent
isTouchEvent	libs/input/Input.cpp	/^bool MotionEvent::isTouchEvent(int32_t source, int32_t action) {$/;"	f	class:android::MotionEvent
isTouchResamplingEnabled	libs/input/InputTransport.cpp	/^bool InputConsumer::isTouchResamplingEnabled() {$/;"	f	class:android::InputConsumer
isTraceClock	cmds/atrace/atrace.cpp	/^static bool isTraceClock(const char *mode)$/;"	f	file:
isTriviallyEqual	libs/ui/Region.cpp	/^bool Region::isTriviallyEqual(const Region& region) const {$/;"	f	class:android::Region
isTrustedOverlay	services/inputflinger/InputWindow.cpp	/^bool InputWindowInfo::isTrustedOverlay() const {$/;"	f	class:android::InputWindowInfo
isTypedBuffer	opengl/tools/glgen/src/JType.java	/^    public boolean isTypedBuffer() {$/;"	m	class:JType
isTypedPointer	opengl/tools/glgen/src/CType.java	/^    public boolean isTypedPointer() {$/;"	m	class:CType
isUnsupportedFunc	opengl/tools/glgen/src/JniCodeEmitter.java	/^    boolean isUnsupportedFunc(CFunc cfunc) {$/;"	m	class:JniCodeEmitter
isUpdateOnDemand	include/ui/FramebufferNativeWindow.h	/^    bool isUpdateOnDemand() const { return mUpdateOnDemand; }$/;"	f	class:android::FramebufferNativeWindow
isUsingArrayBuffers	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^bool isUsingArrayBuffers(GLTraceContext *context) {$/;"	f	namespace:android::gltrace
isUsingElementArrayBuffers	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^bool isUsingElementArrayBuffers(GLTraceContext *context) {$/;"	f	namespace:android::gltrace
isUsingPixelBuffers	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^bool isUsingPixelBuffers(GLTraceContext *context) {$/;"	f	namespace:android::gltrace
isVDSEnabled	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    inline bool isVDSEnabled() const { return mVDSEnabled; };$/;"	f	class:android::HWComposer
isValid	include/gui/Surface.h	/^    static bool isValid(const sp<Surface>& surface) {$/;"	f	class:android::Surface
isValid	include/gui/SurfaceControl.h	/^    bool isValid() {$/;"	f	class:android::SurfaceControl
isValid	include/gui/SurfaceControl.h	/^    static bool isValid(const sp<SurfaceControl>& surface) {$/;"	f	class:android::SurfaceControl
isValid	include/ui/Fence.h	/^    bool isValid() const { return mFenceFd != -1; }$/;"	f	class:android::Fence
isValid	include/ui/Rect.h	/^    inline bool isValid() const {$/;"	f	class:android::Rect
isValid	libs/input/InputTransport.cpp	/^bool InputMessage::isValid(size_t actualSize) const {$/;"	f	class:android::InputMessage
isValid	opengl/libagl/egl.cpp	/^bool egl_surface_t::isValid() const {$/;"	f	class:android::egl_surface_t
isValid	opengl/libs/EGL/egl_display.h	/^    inline bool isValid() const { return magic == '_dpy'; }$/;"	f	class:android::egl_display_t
isValid	services/inputflinger/InputReader.h	/^    inline bool isValid() const {$/;"	f	struct:android::DisplayViewport
isValid	services/surfaceflinger/DisplayDevice.cpp	/^bool DisplayDevice::isValid() const {$/;"	f	class:DisplayDevice
isValid	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        bool isValid() { return ((width != 0) && (height != 0)); }$/;"	f	struct:android::GLES20RenderEngine::Group
isValid	services/surfaceflinger/RenderEngine/Program.cpp	/^bool Program::isValid() const {$/;"	f	class:android::Program
isValid	services/surfaceflinger/SurfaceFlinger.h	/^        bool isValid() const { return type >= 0; }$/;"	f	struct:android::SurfaceFlinger::DisplayDeviceState
isValidKeyAction	services/inputflinger/InputDispatcher.cpp	/^static bool isValidKeyAction(int32_t action) {$/;"	f	namespace:android
isValidMotionAction	services/inputflinger/InputDispatcher.cpp	/^static bool isValidMotionAction(int32_t action, size_t pointerCount) {$/;"	f	namespace:android
isValidNameChar	libs/input/InputDevice.cpp	/^static bool isValidNameChar(char ch) {$/;"	f	namespace:android
isVirtual	services/inputflinger/EventHub.h	/^        inline bool isVirtual() const { return fd < 0; }$/;"	f	struct:android::EventHub::Device
isVirtual	services/sensorservice/CorrectedGyroSensor.h	/^    virtual bool isVirtual() const { return true; }$/;"	f	class:android::CorrectedGyroSensor
isVirtual	services/sensorservice/GravitySensor.h	/^    virtual bool isVirtual() const { return true; }$/;"	f	class:android::GravitySensor
isVirtual	services/sensorservice/LinearAccelerationSensor.h	/^    virtual bool isVirtual() const { return true; }$/;"	f	class:android::LinearAccelerationSensor
isVirtual	services/sensorservice/OrientationSensor.h	/^    virtual bool isVirtual() const { return true; }$/;"	f	class:android::OrientationSensor
isVirtual	services/sensorservice/RotationVectorSensor.h	/^    virtual bool isVirtual() const { return true; }$/;"	f	class:android::GyroDriftSensor
isVirtual	services/sensorservice/RotationVectorSensor.h	/^    virtual bool isVirtual() const { return true; }$/;"	f	class:android::RotationVectorSensor
isVirtual	services/sensorservice/SensorInterface.h	/^    virtual bool isVirtual() const { return false; }$/;"	f	class:android::HardwareSensor
isVirtualDisplay	services/surfaceflinger/SurfaceFlinger.h	/^        bool isVirtualDisplay() const { return type >= DisplayDevice::DISPLAY_VIRTUAL; }$/;"	f	struct:android::SurfaceFlinger::DisplayDeviceState
isVirtualSensor	services/sensorservice/SensorService.cpp	/^bool SensorService::isVirtualSensor(int handle) const {$/;"	f	class:android::SensorService
isVisible	services/surfaceflinger/Layer.cpp	/^bool Layer::isVisible() const {$/;"	f	class:android::Layer
isVisible	services/surfaceflinger/LayerBlur.cpp	/^bool LayerBlur::isVisible() const {$/;"	f	class:android::LayerBlur
isVisible	services/surfaceflinger/LayerDim.cpp	/^bool LayerDim::isVisible() const {$/;"	f	class:android::LayerDim
isVoid	opengl/tools/glgen/src/CType.java	/^    boolean isVoid() {$/;"	m	class:CType
isVoid	opengl/tools/glgen/src/JType.java	/^    public boolean isVoid() {$/;"	m	class:JType
isWakeLockAcquired	services/sensorservice/SensorService.cpp	/^bool SensorService::isWakeLockAcquired() {$/;"	f	class:android::SensorService
isWakeUpSensor	libs/gui/Sensor.cpp	/^bool Sensor::isWakeUpSensor() const {$/;"	f	class:android::Sensor
isWakeUpSensorEvent	services/sensorservice/SensorService.cpp	/^bool SensorService::isWakeUpSensorEvent(const sensors_event_t& event) const {$/;"	f	class:android::SensorService
isWindowObscuredAtPointLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::isWindowObscuredAtPointLocked($/;"	f	class:android::InputDispatcher
isYuvLayer	services/surfaceflinger/Layer.cpp	/^bool Layer::isYuvLayer() const {$/;"	f	class:android::Layer
isZero	services/surfaceflinger/Transform.cpp	/^bool Transform::isZero(float f) {$/;"	f	class:android::Transform
isZeroOrNegativef	opengl/libagl/fp.h	/^int isZeroOrNegativef(GLfloat v) {$/;"	f	namespace:android::gl
isZerof	opengl/libagl/fp.h	/^bool isZerof(GLfloat v) {$/;"	f	namespace:android::gl
is_valid	opengl/libagl/egl.cpp	/^    static EGLBoolean is_valid(EGLDisplay dpy) {$/;"	f	struct:android::egl_display_t
is_valid_package_name	cmds/installd/utils.c	/^int is_valid_package_name(const char* pkgname) {$/;"	f
isarray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline bool GLMessage_DataType::isarray() const {$/;"	f	class:android::gltrace::GLMessage_DataType
isarray_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  bool isarray_;$/;"	m	class:android::gltrace::GLMessage_DataType
isasciitype	libs/binder/Debug.cpp	/^static inline bool isasciitype(char c)$/;"	f	namespace:android
isident	libs/binder/Debug.cpp	/^static inline int isident(int c)$/;"	f	namespace:android
iterator	services/sensorservice/vec.h	/^    typedef TYPE* iterator;$/;"	t	class:android::vec
iterators0032	opengl/libagl/iterators.S	/^iterators0032:$/;"	l
iterators0032	opengl/libagl/primitives.cpp	/^inline void compute_iterators_t::iterators0032(int32_t* it,$/;"	f	class:android::compute_iterators_t
iterators0032	opengl/libagl/primitives.cpp	/^void compute_iterators_t::iterators0032(int32_t* it,$/;"	f	class:android::compute_iterators_t
iterators0032	opengl/libagl/primitives.cpp	/^void compute_iterators_t::iterators0032(int64_t* it,$/;"	f	class:android::compute_iterators_t
iterators1616	opengl/libagl/primitives.cpp	/^void compute_iterators_t::iterators1616(GGLfixed* it,$/;"	f	class:android::compute_iterators_t
iteratorsScale	opengl/libagl/primitives.cpp	/^int compute_iterators_t::iteratorsScale(GGLfixed* it,$/;"	f	class:android::compute_iterators_t
joinThreadPool	include/binder/BinderService.h	/^    static void joinThreadPool() {$/;"	f	class:android::BinderService
joinThreadPool	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::joinThreadPool(bool isMain)$/;"	f	class:android::IPCThreadState
kAlwaysProvideSwapFile	cmds/installd/commands.c	/^static bool kAlwaysProvideSwapFile = true;$/;"	v	file:
kArgsFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage::kArgsFieldNumber;$/;"	m	class:android::gltrace::GLMessage	file:
kArgsFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kArgsFieldNumber = 5;$/;"	m	class:android::gltrace::GLMessage
kBoolValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_DataType::kBoolValueFieldNumber;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
kBoolValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kBoolValueFieldNumber = 7;$/;"	m	class:android::gltrace::GLMessage_DataType
kCharValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_DataType::kCharValueFieldNumber;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
kCharValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kCharValueFieldNumber = 5;$/;"	m	class:android::gltrace::GLMessage_DataType
kCommandStrings	libs/binder/IPCThreadState.cpp	/^static const char *kCommandStrings[] = {$/;"	m	namespace:android	file:
kContentsFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_FrameBuffer::kContentsFieldNumber;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer	file:
kContentsFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kContentsFieldNumber = 3;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer
kContextIdFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage::kContextIdFieldNumber;$/;"	m	class:android::gltrace::GLMessage	file:
kContextIdFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kContextIdFieldNumber = 1;$/;"	m	class:android::gltrace::GLMessage
kDebugData	libs/gui/GLConsumer.cpp	/^} kDebugData = { 15, 12,$/;"	m	namespace:android	typeref:struct:android::__anon246	file:
kDrmPluginEventKeyExpired	include/media/drm/DrmAPI.h	/^            kDrmPluginEventKeyExpired,$/;"	e	enum:android::DrmPlugin::EventType
kDrmPluginEventKeyNeeded	include/media/drm/DrmAPI.h	/^            kDrmPluginEventKeyNeeded,$/;"	e	enum:android::DrmPlugin::EventType
kDrmPluginEventProvisionRequired	include/media/drm/DrmAPI.h	/^            kDrmPluginEventProvisionRequired = 1,$/;"	e	enum:android::DrmPlugin::EventType
kDrmPluginEventVendorDefined	include/media/drm/DrmAPI.h	/^            kDrmPluginEventVendorDefined$/;"	e	enum:android::DrmPlugin::EventType
kDurationFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage::kDurationFieldNumber;$/;"	m	class:android::gltrace::GLMessage	file:
kDurationFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kDurationFieldNumber = 3;$/;"	m	class:android::gltrace::GLMessage
kErrorThreshold	services/surfaceflinger/DispSync.cpp	/^static const nsecs_t kErrorThreshold = 160000000000;    \/\/ 400 usec squared$/;"	m	namespace:android	file:
kFbFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage::kFbFieldNumber;$/;"	m	class:android::gltrace::GLMessage	file:
kFbFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kFbFieldNumber = 7;$/;"	m	class:android::gltrace::GLMessage
kFloatValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_DataType::kFloatValueFieldNumber;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
kFloatValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kFloatValueFieldNumber = 4;$/;"	m	class:android::gltrace::GLMessage_DataType
kFunctionFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage::kFunctionFieldNumber;$/;"	m	class:android::gltrace::GLMessage	file:
kFunctionFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kFunctionFieldNumber = 4;$/;"	m	class:android::gltrace::GLMessage
kHeightFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_FrameBuffer::kHeightFieldNumber;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer	file:
kHeightFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kHeightFieldNumber = 2;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer
kIgnorePresentFences	services/surfaceflinger/DispSync.h	/^static const bool kIgnorePresentFences = true;$/;"	m	namespace:android
kInt64ValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_DataType::kInt64ValueFieldNumber;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
kInt64ValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kInt64ValueFieldNumber = 8;$/;"	m	class:android::gltrace::GLMessage_DataType
kIntValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_DataType::kIntValueFieldNumber;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
kIntValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kIntValueFieldNumber = 3;$/;"	m	class:android::gltrace::GLMessage_DataType
kIsArrayFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_DataType::kIsArrayFieldNumber;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
kIsArrayFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kIsArrayFieldNumber = 2;$/;"	m	class:android::gltrace::GLMessage_DataType
kKeyType_Offline	include/media/drm/DrmAPI.h	/^            kKeyType_Offline,$/;"	e	enum:android::DrmPlugin::KeyType
kKeyType_Release	include/media/drm/DrmAPI.h	/^            kKeyType_Release$/;"	e	enum:android::DrmPlugin::KeyType
kKeyType_Streaming	include/media/drm/DrmAPI.h	/^            kKeyType_Streaming,$/;"	e	enum:android::DrmPlugin::KeyType
kLookup	opengl/libs/ETC1/etc1.cpp	/^static const int kLookup[8] = { 0, 1, 2, 3, -4, -3, -2, -1 };$/;"	v	file:
kMagic	opengl/libs/ETC1/etc1.cpp	/^static const char kMagic[] = { 'P', 'K', 'M', ' ', '1', '0' };$/;"	v	file:
kMemoryAlign	libs/binder/MemoryDealer.cpp	/^    static const int    kMemoryAlign;$/;"	m	class:android::SimpleBestFitAllocator	file:
kMemoryAlign	libs/binder/MemoryDealer.cpp	/^const int SimpleBestFitAllocator::kMemoryAlign = 32;$/;"	m	class:android::SimpleBestFitAllocator	file:
kMetadataBufferTypeCameraSource	include/media/hardware/MetadataBufferType.h	/^    kMetadataBufferTypeCameraSource  = 0,$/;"	e	enum:android::__anon127
kMetadataBufferTypeGrallocSource	include/media/hardware/MetadataBufferType.h	/^    kMetadataBufferTypeGrallocSource = 1,$/;"	e	enum:android::__anon127
kMetadataBufferTypeGraphicBuffer	include/media/hardware/MetadataBufferType.h	/^    kMetadataBufferTypeGraphicBuffer = 2,$/;"	e	enum:android::__anon127
kMode_AES_CTR	include/media/hardware/CryptoAPI.h	/^        kMode_AES_CTR     = 1,$/;"	e	enum:android::CryptoPlugin::Mode
kMode_AES_WV	include/media/hardware/CryptoAPI.h	/^        kMode_AES_WV      = 2,  \/\/ FIX constant$/;"	e	enum:android::CryptoPlugin::Mode
kMode_Unencrypted	include/media/hardware/CryptoAPI.h	/^        kMode_Unencrypted = 0,$/;"	e	enum:android::CryptoPlugin::Mode
kModifierTable	opengl/libs/ETC1/etc1.cpp	/^static const int kModifierTable[] = {$/;"	v	file:
kPresentTimeOffset	services/surfaceflinger/DispSync.cpp	/^static const int64_t kPresentTimeOffset = PRESENT_TIME_OFFSET_FROM_VSYNC_NS;$/;"	m	namespace:android	file:
kRawBytesFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_DataType::kRawBytesFieldNumber;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
kRawBytesFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kRawBytesFieldNumber = 6;$/;"	m	class:android::gltrace::GLMessage_DataType
kRemoteAcquired	libs/binder/Binder.cpp	/^    kRemoteAcquired = 0x00000001$/;"	e	enum:android::__anon265	file:
kReturnStrings	libs/binder/IPCThreadState.cpp	/^static const char *kReturnStrings[] = {$/;"	m	namespace:android	file:
kReturnValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage::kReturnValueFieldNumber;$/;"	m	class:android::gltrace::GLMessage	file:
kReturnValueFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kReturnValueFieldNumber = 6;$/;"	m	class:android::gltrace::GLMessage
kStartTimeFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage::kStartTimeFieldNumber;$/;"	m	class:android::gltrace::GLMessage	file:
kStartTimeFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kStartTimeFieldNumber = 2;$/;"	m	class:android::gltrace::GLMessage
kThreadtimeFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage::kThreadtimeFieldNumber;$/;"	m	class:android::gltrace::GLMessage	file:
kThreadtimeFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kThreadtimeFieldNumber = 8;$/;"	m	class:android::gltrace::GLMessage
kTraceDetailedInfo	services/surfaceflinger/DispSync.cpp	/^static const bool kTraceDetailedInfo = false;$/;"	m	namespace:android	file:
kTypeFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_DataType::kTypeFieldNumber;$/;"	m	class:android::gltrace::GLMessage_DataType	file:
kTypeFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kTypeFieldNumber = 1;$/;"	m	class:android::gltrace::GLMessage_DataType
kWidthFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^const int GLMessage_FrameBuffer::kWidthFieldNumber;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer	file:
kWidthFieldNumber	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  static const int kWidthFieldNumber = 1;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer
k_categories	cmds/atrace/atrace.cpp	/^static const TracingCategory k_categories[] = {$/;"	v	file:
k_currentTracerPath	cmds/atrace/atrace.cpp	/^static const char* k_currentTracerPath =$/;"	v	file:
k_ftraceFilterPath	cmds/atrace/atrace.cpp	/^static const char* k_ftraceFilterPath =$/;"	v	file:
k_funcgraphAbsTimePath	cmds/atrace/atrace.cpp	/^static const char* k_funcgraphAbsTimePath =$/;"	v	file:
k_funcgraphCpuPath	cmds/atrace/atrace.cpp	/^static const char* k_funcgraphCpuPath =$/;"	v	file:
k_funcgraphDurationPath	cmds/atrace/atrace.cpp	/^static const char* k_funcgraphDurationPath =$/;"	v	file:
k_funcgraphFlatPath	cmds/atrace/atrace.cpp	/^static const char* k_funcgraphFlatPath =$/;"	v	file:
k_funcgraphProcPath	cmds/atrace/atrace.cpp	/^static const char* k_funcgraphProcPath =$/;"	v	file:
k_printTgidPath	cmds/atrace/atrace.cpp	/^static const char* k_printTgidPath =$/;"	v	file:
k_traceAppCmdlineProperty	cmds/atrace/atrace.cpp	/^const char* k_traceAppCmdlineProperty = "debug.atrace.app_cmdlines";$/;"	v
k_traceBufferSizePath	cmds/atrace/atrace.cpp	/^static const char* k_traceBufferSizePath =$/;"	v	file:
k_traceClockPath	cmds/atrace/atrace.cpp	/^static const char* k_traceClockPath =$/;"	v	file:
k_tracePath	cmds/atrace/atrace.cpp	/^static const char* k_tracePath =$/;"	v	file:
k_traceTagsProperty	cmds/atrace/atrace.cpp	/^const char* k_traceTagsProperty = "debug.atrace.tags.enableflags";$/;"	v
k_tracingOnPath	cmds/atrace/atrace.cpp	/^static const char* k_tracingOnPath =$/;"	v	file:
k_tracingOverwriteEnablePath	cmds/atrace/atrace.cpp	/^static const char* k_tracingOverwriteEnablePath =$/;"	v	file:
key	include/input/InputTransport.h	/^        } key;$/;"	m	union:android::InputMessage::Body	typeref:struct:android::InputMessage::Body::Key
key	opengl/libagl/egl.cpp	/^    GLint key;$/;"	m	struct:android::config_management_t	file:
key	opengl/libagl/egl.cpp	/^    GLint key;$/;"	m	struct:android::config_pair_t	file:
keyBitmask	services/inputflinger/EventHub.h	/^        uint8_t keyBitmask[(KEY_MAX + 1) \/ 8];$/;"	m	struct:android::EventHub::Device
keyCharacterMap	include/input/Keyboard.h	/^    sp<KeyCharacterMap> keyCharacterMap;$/;"	m	class:android::KeyMap
keyCharacterMapFile	include/input/Keyboard.h	/^    String8 keyCharacterMapFile;$/;"	m	class:android::KeyMap
keyCode	include/input/InputTransport.h	/^            int32_t keyCode;$/;"	m	struct:android::InputMessage::Body::Key
keyCode	include/input/KeyCharacterMap.h	/^        int32_t keyCode;$/;"	m	struct:android::KeyCharacterMap::FallbackAction
keyCode	include/input/KeyLayoutMap.h	/^        int32_t keyCode;$/;"	m	struct:android::KeyLayoutMap::Key
keyCode	services/inputflinger/InputDispatcher.h	/^            int32_t keyCode;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
keyCode	services/inputflinger/InputDispatcher.h	/^        int32_t keyCode;$/;"	m	struct:android::InputDispatcher::CancelationOptions
keyCode	services/inputflinger/InputDispatcher.h	/^        int32_t keyCode;$/;"	m	struct:android::InputDispatcher::KeyEntry
keyCode	services/inputflinger/InputDispatcher.h	/^        int32_t keyCode;$/;"	m	struct:android::InputDispatcher::KeyReplacement
keyCode	services/inputflinger/InputListener.h	/^    int32_t keyCode;$/;"	m	struct:android::NotifyKeyArgs
keyCode	services/inputflinger/InputReader.h	/^        int32_t keyCode;$/;"	m	struct:android::KeyboardInputMapper::KeyDown
keyCode	services/inputflinger/InputReader.h	/^        int32_t keyCode;$/;"	m	struct:android::TouchInputMapper::CurrentVirtualKeyState
keyCode	services/inputflinger/InputReader.h	/^        int32_t keyCode;$/;"	m	struct:android::TouchInputMapper::VirtualKey
keyCode	services/inputflinger/tests/InputReader_test.cpp	/^        int32_t keyCode;$/;"	m	struct:android::FakeEventHub::KeyInfo	file:
keyCodeRotationMap	services/inputflinger/InputReader.cpp	/^static const int32_t keyCodeRotationMap[][4] = {$/;"	m	namespace:android	file:
keyCodeRotationMapSize	services/inputflinger/InputReader.cpp	/^static const size_t keyCodeRotationMapSize =$/;"	m	namespace:android	file:
keyCodeStates	services/inputflinger/tests/InputReader_test.cpp	/^        KeyedVector<int32_t, int32_t> keyCodeStates;$/;"	m	struct:android::FakeEventHub::Device	file:
keyEntry	services/inputflinger/InputDispatcher.h	/^        KeyEntry* keyEntry;$/;"	m	struct:android::InputDispatcher::CommandEntry
keyLayoutFile	include/input/Keyboard.h	/^    String8 keyLayoutFile;$/;"	m	class:android::KeyMap
keyLayoutMap	include/input/Keyboard.h	/^    sp<KeyLayoutMap> keyLayoutMap;$/;"	m	class:android::KeyMap
keyMap	services/inputflinger/EventHub.h	/^        KeyMap keyMap;$/;"	m	struct:android::EventHub::Device
keyRepeatDelay	services/inputflinger/InputDispatcher.h	/^    nsecs_t keyRepeatDelay;$/;"	m	struct:android::InputDispatcherConfiguration
keyRepeatTimeout	services/inputflinger/InputDispatcher.h	/^    nsecs_t keyRepeatTimeout;$/;"	m	struct:android::InputDispatcherConfiguration
key_t	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        typedef uint32_t key_t;$/;"	t	class:android::ProgramCache::Key
keysByScanCode	services/inputflinger/tests/InputReader_test.cpp	/^        KeyedVector<int32_t, KeyInfo> keysByScanCode;$/;"	m	struct:android::FakeEventHub::Device	file:
keysByUsageCode	services/inputflinger/tests/InputReader_test.cpp	/^        KeyedVector<int32_t, KeyInfo> keysByUsageCode;$/;"	m	struct:android::FakeEventHub::Device	file:
khronos_boolean_enum_t	opengl/include/KHR/khrplatform.h	/^} khronos_boolean_enum_t;$/;"	t	typeref:enum:__anon233
khronos_float_t	opengl/include/KHR/khrplatform.h	/^typedef          float         khronos_float_t;$/;"	t
khronos_int16_t	opengl/include/KHR/khrplatform.h	/^typedef signed   short int     khronos_int16_t;$/;"	t
khronos_int32_t	opengl/include/KHR/khrplatform.h	/^typedef __int32                 khronos_int32_t;$/;"	t
khronos_int32_t	opengl/include/KHR/khrplatform.h	/^typedef int                     khronos_int32_t;$/;"	t
khronos_int32_t	opengl/include/KHR/khrplatform.h	/^typedef int32_t                 khronos_int32_t;$/;"	t
khronos_int64_t	opengl/include/KHR/khrplatform.h	/^typedef __int64                 khronos_int64_t;$/;"	t
khronos_int64_t	opengl/include/KHR/khrplatform.h	/^typedef int64_t                 khronos_int64_t;$/;"	t
khronos_int64_t	opengl/include/KHR/khrplatform.h	/^typedef long int                khronos_int64_t;$/;"	t
khronos_int64_t	opengl/include/KHR/khrplatform.h	/^typedef long long int           khronos_int64_t;$/;"	t
khronos_int8_t	opengl/include/KHR/khrplatform.h	/^typedef signed   char          khronos_int8_t;$/;"	t
khronos_intptr_t	opengl/include/KHR/khrplatform.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	t
khronos_ssize_t	opengl/include/KHR/khrplatform.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	t
khronos_stime_nanoseconds_t	opengl/include/KHR/khrplatform.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	t
khronos_uint16_t	opengl/include/KHR/khrplatform.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	t
khronos_uint32_t	opengl/include/KHR/khrplatform.h	/^typedef uint32_t                khronos_uint32_t;$/;"	t
khronos_uint32_t	opengl/include/KHR/khrplatform.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	t
khronos_uint32_t	opengl/include/KHR/khrplatform.h	/^typedef unsigned int            khronos_uint32_t;$/;"	t
khronos_uint64_t	opengl/include/KHR/khrplatform.h	/^typedef uint64_t                khronos_uint64_t;$/;"	t
khronos_uint64_t	opengl/include/KHR/khrplatform.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	t
khronos_uint64_t	opengl/include/KHR/khrplatform.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	t
khronos_uint64_t	opengl/include/KHR/khrplatform.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	t
khronos_uint8_t	opengl/include/KHR/khrplatform.h	/^typedef unsigned char          khronos_uint8_t;$/;"	t
khronos_uintptr_t	opengl/include/KHR/khrplatform.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	t
khronos_usize_t	opengl/include/KHR/khrplatform.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	t
khronos_utime_nanoseconds_t	opengl/include/KHR/khrplatform.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	t
kill	libs/binder/BpBinder.cpp	/^void BpBinder::ObjectManager::kill()$/;"	f	class:android::BpBinder::ObjectManager
l	include/ui/PixelFormat.h	/^        uint8_t l;$/;"	m	struct:android::PixelFormatInfo::szinfo
l_alpha	include/ui/PixelFormat.h	/^            uint8_t     l_alpha;$/;"	m	struct:android::PixelFormatInfo::__anon80::__anon81
l_blue	include/ui/PixelFormat.h	/^            uint8_t     l_blue;$/;"	m	struct:android::PixelFormatInfo::__anon80::__anon81
l_green	include/ui/PixelFormat.h	/^            uint8_t     l_green;$/;"	m	struct:android::PixelFormatInfo::__anon80::__anon81
l_red	include/ui/PixelFormat.h	/^            uint8_t     l_red;$/;"	m	struct:android::PixelFormatInfo::__anon80::__anon81
label	include/input/KeyCharacterMap.h	/^        char16_t label;$/;"	m	struct:android::KeyCharacterMap::Key
label	libs/input/KeyCharacterMap.cpp	/^    const char* label;$/;"	m	struct:android::Modifier	file:
lamecpy	opengl/tests/gralloc/gralloc.cpp	/^void* lamecpy(void* d, void const* s, size_t size) {$/;"	f
lastCompositionHadVisibleLayers	services/surfaceflinger/DisplayDevice.h	/^    bool lastCompositionHadVisibleLayers;$/;"	m	class:android::DisplayDevice
lastCoords	services/inputflinger/InputReader.h	/^        PointerCoords lastCoords;$/;"	m	struct:android::TouchInputMapper::PointerSimple
lastDisplayFence	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        sp<Fence> lastDisplayFence; \/\/ signals when the last set op takes$/;"	m	struct:android::HWComposer::DisplayData
lastGestureCoords	services/inputflinger/InputReader.h	/^        PointerCoords lastGestureCoords[MAX_POINTERS];$/;"	m	struct:android::TouchInputMapper::PointerGesture
lastGestureIdBits	services/inputflinger/InputReader.h	/^        BitSet32 lastGestureIdBits;$/;"	m	struct:android::TouchInputMapper::PointerGesture
lastGestureIdToIndex	services/inputflinger/InputReader.h	/^        uint32_t lastGestureIdToIndex[MAX_POINTER_ID + 1];$/;"	m	struct:android::TouchInputMapper::PointerGesture
lastGestureMode	services/inputflinger/InputReader.h	/^        Mode lastGestureMode;$/;"	m	struct:android::TouchInputMapper::PointerGesture
lastGestureProperties	services/inputflinger/InputReader.h	/^        PointerProperties lastGestureProperties[MAX_POINTERS];$/;"	m	struct:android::TouchInputMapper::PointerGesture
lastKeyEntry	services/inputflinger/InputDispatcher.h	/^        KeyEntry* lastKeyEntry; \/\/ or null if no repeat$/;"	m	struct:android::InputDispatcher::KeyRepeatState
lastPointerIndex	services/inputflinger/InputReader.h	/^        uint32_t lastPointerIndex : 8;$/;"	m	struct:android::TouchInputMapper::PointerDistanceHeapElement
lastProperties	services/inputflinger/InputReader.h	/^        PointerProperties lastProperties;$/;"	m	struct:android::TouchInputMapper::PointerSimple
lastResample	include/input/InputTransport.h	/^        History lastResample;$/;"	m	struct:android::InputConsumer::TouchState
lastRetireFence	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        sp<Fence> lastRetireFence;  \/\/ signals when the last set op retires$/;"	m	struct:android::HWComposer::DisplayData
lastSurfaceViewLayer	services/surfaceflinger/SurfaceFlinger.cpp	/^static sp<Layer> lastSurfaceViewLayer;$/;"	m	namespace:android	file:
latchBuffer	services/surfaceflinger/Layer.cpp	/^Region Layer::latchBuffer(bool& recomputeVisibleRegions)$/;"	f	class:android::Layer
layer	services/inputflinger/InputWindow.h	/^    int32_t layer;$/;"	m	struct:android::InputWindowInfo
layerFlags	opengl/tests/hwc/hwcStress.cpp	/^const unsigned int layerFlags[] = {$/;"	v
layerStack	include/private/gui/LayerState.h	/^            uint32_t        layerStack;$/;"	m	struct:android::layer_state_t
layerStack	include/private/gui/LayerState.h	/^    uint32_t layerStack;$/;"	m	struct:android::DisplayState
layerStack	services/surfaceflinger/Layer.h	/^        uint32_t layerStack;$/;"	m	struct:android::Layer::State
layerStack	services/surfaceflinger/SurfaceFlinger.h	/^        uint32_t layerStack;$/;"	m	struct:android::SurfaceFlinger::DisplayDeviceState
layer_state_t	include/private/gui/LayerState.h	/^    layer_state_t()$/;"	f	struct:android::layer_state_t
layer_state_t	include/private/gui/LayerState.h	/^struct layer_state_t {$/;"	s	namespace:android
layers	cmds/flatland/Main.cpp	/^    LayerDesc layers[MAX_NUM_LAYERS];$/;"	m	struct:BenchmarkDesc	file:
layersSortedByZ	services/surfaceflinger/SurfaceFlinger.h	/^        LayerVector layersSortedByZ;$/;"	m	struct:android::SurfaceFlinger::State
layoutParamsFlags	services/inputflinger/InputWindow.h	/^    int32_t layoutParamsFlags;$/;"	m	struct:android::InputWindowInfo
layoutParamsType	services/inputflinger/InputWindow.h	/^    int32_t layoutParamsType;$/;"	m	struct:android::InputWindowInfo
leave	opengl/libs/EGL/egl_display.h	/^    void leave() { return mHibernation.decWakeCount(HibernationMachine::WEAK); }$/;"	f	class:android::egl_display_t
ledBitmask	services/inputflinger/EventHub.h	/^        uint8_t ledBitmask[(LED_MAX + 1) \/ 8];$/;"	m	struct:android::EventHub::Device
ledCode	include/input/KeyLayoutMap.h	/^        int32_t ledCode;$/;"	m	struct:android::KeyLayoutMap::Led
leds	services/inputflinger/tests/InputReader_test.cpp	/^        KeyedVector<int32_t, bool> leds;$/;"	m	struct:android::FakeEventHub::Device	file:
left	include/android/rect.h	/^    int32_t left;$/;"	m	struct:ARect
left	opengl/libagl/egl.cpp	/^        int32_t left;$/;"	m	struct:android::egl_window_surface_v2_t::Rect	file:
left	services/surfaceflinger/DisplayHardware/FloatRect.h	/^    float left;$/;"	m	class:android::FloatRect
leftBottom	include/ui/Rect.h	/^    Point leftBottom() const {$/;"	f	class:android::Rect
leftTop	include/ui/Rect.h	/^    Point leftTop() const {$/;"	f	class:android::Rect
len	cmds/installd/installd.h	/^    size_t len;$/;"	m	struct:__anon9
len	cmds/servicemanager/service_manager.c	/^    size_t len;$/;"	m	struct:svcinfo	file:
len	opengl/tests/angeles/cams.h	/^    unsigned char len;      \/\/ length multiplier$/;"	m	struct:__anon234
length	include/ui/TVecHelpers.h	/^    T PURE length(const BASE<T>& lv) {$/;"	f	class:android::TVecFunctions
length	opengl/libagl/Tokenizer.h	/^        uint32_t    length;$/;"	m	struct:android::Tokenizer::run_t
length	services/sensorservice/vec.h	/^TYPE PURE length(const V<TYPE, SIZE>& v) {$/;"	f	namespace:android
length_squared	services/sensorservice/vec.h	/^TYPE PURE length_squared(const V<TYPE, SIZE>& v) {$/;"	f	namespace:android
lerp	libs/input/InputTransport.cpp	/^inline static float lerp(float a, float b, float alpha) {$/;"	f	namespace:android
lerp	opengl/libagl/context.h	/^    compute_iterators_t     lerp;           __attribute__((aligned(32)));$/;"	m	struct:android::gl::ogles_context_t
lerp_texcoords	opengl/libagl/primitives.cpp	/^void lerp_texcoords(ogles_context_t* c,$/;"	f	namespace:android
lerp_texcoords_w	opengl/libagl/primitives.cpp	/^void lerp_texcoords_w(ogles_context_t* c,$/;"	f	namespace:android
lerp_triangle	opengl/libagl/primitives.cpp	/^void lerp_triangle(ogles_context_t* c,$/;"	f	namespace:android
lhs	include/private/ui/RegionHelper.h	/^        region lhs;$/;"	m	class:android::region_operator::Spanner
lhs	include/private/ui/RegionHelper.h	/^        region lhs;$/;"	m	class:android::region_operator::SpannerInner
lhs_after_rhs	include/private/ui/RegionHelper.h	/^            lhs_after_rhs    = 1,$/;"	e	enum:android::region_operator::SpannerBase::__anon104
lhs_before_rhs	include/private/ui/RegionHelper.h	/^            lhs_before_rhs   = 0,$/;"	e	enum:android::region_operator::SpannerBase::__anon104
lhs_coincide_rhs	include/private/ui/RegionHelper.h	/^            lhs_coincide_rhs = 2$/;"	e	enum:android::region_operator::SpannerBase::__anon104
lhs_head	include/private/ui/RegionHelper.h	/^        TYPE lhs_head;$/;"	m	class:android::region_operator::SpannerBase
lhs_tail	include/private/ui/RegionHelper.h	/^        TYPE lhs_tail;$/;"	m	class:android::region_operator::SpannerBase
libEgl	opengl/libs/EGL/egldefs.h	/^    void*               libEgl;$/;"	m	struct:android::egl_connection_t
libGles1	opengl/libs/EGL/egldefs.h	/^    void*               libGles1;$/;"	m	struct:android::egl_connection_t
libGles2	opengl/libs/EGL/egldefs.h	/^    void*               libGles2;$/;"	m	struct:android::egl_connection_t
light	include/android/sensor.h	/^            float           light;$/;"	m	union:ASensorEvent::__anon187::__anon188
lightModel	opengl/libagl/context.h	/^    light_model_t       lightModel;$/;"	m	struct:android::gl::lighting_t
lightModelx	opengl/libagl/light.cpp	/^static void lightModelx(GLenum pname, GLfixed param, ogles_context_t* c)$/;"	f	namespace:android
lightPrimitive	opengl/libagl/primitives.cpp	/^static const light_primitive_t lightPrimitive[8] = {$/;"	m	namespace:android	file:
lightTriangle	opengl/libagl/context.h	/^    void (*lightTriangle)(ogles_context_t* c,$/;"	m	struct:android::gl::lighting_t
lightTriangleDarkFlat	opengl/libagl/primitives.cpp	/^static void lightTriangleDarkFlat(ogles_context_t* c,$/;"	f	namespace:android
lightTriangleDarkFlatFog	opengl/libagl/primitives.cpp	/^static void lightTriangleDarkFlatFog(ogles_context_t* c,$/;"	f	namespace:android
lightTriangleDarkSmooth	opengl/libagl/primitives.cpp	/^static void lightTriangleDarkSmooth(ogles_context_t* c,$/;"	f	namespace:android
lightTriangleDarkSmoothFog	opengl/libagl/primitives.cpp	/^static void lightTriangleDarkSmoothFog(ogles_context_t* c,$/;"	f	namespace:android
lightTriangleFlat	opengl/libagl/primitives.cpp	/^static void lightTriangleFlat(ogles_context_t* c,$/;"	f	namespace:android
lightTriangleFlatFog	opengl/libagl/primitives.cpp	/^static void lightTriangleFlatFog(ogles_context_t* c,$/;"	f	namespace:android
lightTriangleSmooth	opengl/libagl/primitives.cpp	/^static void lightTriangleSmooth(ogles_context_t* c,$/;"	f	namespace:android
lightTriangleSmoothFog	opengl/libagl/primitives.cpp	/^static void lightTriangleSmoothFog(ogles_context_t* c,$/;"	f	namespace:android
lightVertex	opengl/libagl/context.h	/^    void (*lightVertex)(ogles_context_t* c, vertex_t* v);$/;"	m	struct:android::gl::lighting_t
lightVertex	opengl/libagl/light.cpp	/^void lightVertex(ogles_context_t* c, vertex_t* v)$/;"	f	namespace:android
lightVertexDarkFlatFog	opengl/libagl/primitives.cpp	/^void lightVertexDarkFlatFog(ogles_context_t* c, vertex_t* v)$/;"	f	namespace:android
lightVertexDarkSmoothFog	opengl/libagl/primitives.cpp	/^void lightVertexDarkSmoothFog(ogles_context_t* c, vertex_t* v)$/;"	f	namespace:android
lightVertexMaterial	opengl/libagl/light.cpp	/^void lightVertexMaterial(ogles_context_t* c, vertex_t* v)$/;"	f	namespace:android
lightVertexNop	opengl/libagl/light.cpp	/^void lightVertexNop(ogles_context_t*, vertex_t* \/*v*\/)$/;"	f	namespace:android
lightVertexSmoothFog	opengl/libagl/primitives.cpp	/^void lightVertexSmoothFog(ogles_context_t* c, vertex_t* v)$/;"	f	namespace:android
lightVertexValidate	opengl/libagl/light.cpp	/^void lightVertexValidate(ogles_context_t* c, vertex_t* v)$/;"	f	namespace:android
lightVertexValidateMVI	opengl/libagl/light.cpp	/^void lightVertexValidateMVI(ogles_context_t* c, vertex_t* v)$/;"	f	namespace:android
light_fct_t	opengl/libagl/context.h	/^    typedef void (*light_fct_t)(ogles_context_t*, vertex_t*);$/;"	t	struct:android::gl::lighting_t
light_model_t	opengl/libagl/context.h	/^struct light_model_t {$/;"	s	namespace:android::gl
light_picker	opengl/libagl/light.cpp	/^static inline void light_picker(ogles_context_t* c)$/;"	f	namespace:android
light_primitive_t	opengl/libagl/primitives.cpp	/^typedef void (*light_primitive_t)(ogles_context_t*,$/;"	t	namespace:android	file:
light_t	opengl/libagl/context.h	/^struct light_t {$/;"	s	namespace:android::gl
lighting	opengl/libagl/context.h	/^    lighting_t              lighting;$/;"	m	struct:android::gl::ogles_context_t
lighting_t	opengl/libagl/context.h	/^struct lighting_t {$/;"	s	namespace:android::gl
lights	opengl/libagl/context.h	/^    light_t             lights[OGLES_MAX_LIGHTS];$/;"	m	struct:android::gl::lighting_t
lightx	opengl/libagl/light.cpp	/^static void lightx(GLenum i, GLenum pname, GLfixed param, ogles_context_t* c)$/;"	f	namespace:android
lightxv	opengl/libagl/light.cpp	/^static void lightxv(GLenum i, GLenum pname, const GLfixed *params, ogles_context_t* c)$/;"	f	namespace:android
limitID	opengl/tools/glgen/stubs/gles11/common.cpp	/^static jfieldID limitID;$/;"	v	file:
limitID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jfieldID limitID;$/;"	v	file:
line	opengl/libagl/context.h	/^    line_width_t            line;$/;"	m	struct:android::gl::ogles_context_t
line	opengl/libs/EGL/trace.cpp	/^    char line[lineSize];$/;"	m	class:android::StringBuilder	file:
lineSize	opengl/libs/EGL/trace.cpp	/^    static const int lineSize = 500;$/;"	m	class:android::StringBuilder	file:
line_index	opengl/libs/EGL/trace.cpp	/^    int line_index;$/;"	m	class:android::StringBuilder	file:
line_width_t	opengl/libagl/context.h	/^struct line_width_t {$/;"	s	namespace:android::gl
linearToSRGB	libs/gui/tests/SRGB_test.cpp	/^    static float linearToSRGB(float l) {$/;"	f	class:android::SRGBTest
linkShaderProgram	cmds/flatland/GLHelper.cpp	/^static bool linkShaderProgram(GLuint vs, GLuint fs, GLuint* outPgm) {$/;"	f	namespace:android
linkToComposerDeath	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::linkToComposerDeath($/;"	f	class:android::SurfaceComposerClient
linkToDeath	libs/binder/Binder.cpp	/^status_t BBinder::linkToDeath($/;"	f	class:android::BBinder
linkToDeath	libs/binder/BpBinder.cpp	/^status_t BpBinder::linkToDeath($/;"	f	class:android::BpBinder
linklib	cmds/installd/commands.c	/^int linklib(const char* pkgname, const char* asecLibDir, int userId)$/;"	f
list	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        hwc_display_contents_1* list;$/;"	m	struct:android::HWComposer::DisplayData
listLayersLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::listLayersLocked(const Vector<String16>& \/* args *\/,$/;"	f	class:android::SurfaceFlinger
listServices	libs/binder/IServiceManager.cpp	/^    virtual Vector<String16> listServices()$/;"	f	class:android::BpServiceManager
listSupportedCategories	cmds/atrace/atrace.cpp	/^static void listSupportedCategories()$/;"	f	file:
literal	include/input/InputEventLabels.h	/^    const char *literal;$/;"	m	struct:android::InputEventLabel
load	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::load(Tokenizer* tokenizer,$/;"	f	class:android::KeyCharacterMap
load	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::load(const String8& filename,$/;"	f	class:android::KeyCharacterMap
load	libs/input/KeyLayoutMap.cpp	/^status_t KeyLayoutMap::load(const String8& filename, sp<KeyLayoutMap>* outMap) {$/;"	f	class:android::KeyLayoutMap
load	libs/input/Keyboard.cpp	/^status_t KeyMap::load(const InputDeviceIdentifier& deviceIdenfifier,$/;"	f	class:android::KeyMap
load	libs/input/VirtualKeyMap.cpp	/^status_t VirtualKeyMap::load(const String8& filename, VirtualKeyMap** outMap) {$/;"	f	class:android::VirtualKeyMap
load	opengl/libagl/matrix.cpp	/^void matrix_stack_t::load(const GLfixed* rhs)$/;"	f	class:android::matrix_stack_t
load	opengl/libagl/matrix.cpp	/^void matrix_stack_t::load(const GLfloat* rhs)$/;"	f	class:android::matrix_stack_t
load	opengl/libagl/matrix.cpp	/^void matrixf_t::load(const GLfixed* rhs) {$/;"	f	class:android::matrixf_t
load	opengl/libagl/matrix.cpp	/^void matrixf_t::load(const GLfloat* rhs) {$/;"	f	class:android::matrixf_t
load	opengl/libagl/matrix.cpp	/^void matrixf_t::load(const matrixf_t& rhs) {$/;"	f	class:android::matrixf_t
load	opengl/libagl/matrix.cpp	/^void matrixx_t::load(const matrixf_t& rhs) {$/;"	f	class:android::matrixx_t
loadBlobCacheLocked	opengl/libs/EGL/egl_cache.cpp	/^void egl_cache_t::loadBlobCacheLocked() {$/;"	f	class:android::egl_cache_t
loadConfigurationLocked	services/inputflinger/EventHub.cpp	/^void EventHub::loadConfigurationLocked(Device* device) {$/;"	f	class:android::EventHub
loadContents	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::loadContents(const String8& filename, const char* contents,$/;"	f	class:android::KeyCharacterMap
loadElementTree	opengl/tools/glgen2/registry/reg.py	/^    def loadElementTree(self, tree):$/;"	m	class:Registry
loadFbHalModule	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^int HWComposer::loadFbHalModule()$/;"	f	class:android::HWComposer
loadFile	opengl/tools/glgen2/registry/reg.py	/^    def loadFile(self, file):$/;"	m	class:Registry
loadHwcModule	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::loadHwcModule()$/;"	f	class:android::HWComposer
loadIdentity	opengl/libagl/matrix.cpp	/^void matrix_stack_t::loadIdentity() {$/;"	f	class:android::matrix_stack_t
loadIdentity	opengl/libagl/matrix.cpp	/^void matrixf_t::loadIdentity() {$/;"	f	class:android::matrixf_t
loadIdentity	opengl/libagl/matrix.cpp	/^void transform_t::loadIdentity() {$/;"	f	class:android::transform_t
loadIdentity	opengl/libagl/matrix.cpp	/^void vp_transform_t::loadIdentity() {$/;"	f	class:android::vp_transform_t
loadKeyCharacterMap	libs/input/Keyboard.cpp	/^status_t KeyMap::loadKeyCharacterMap(const InputDeviceIdentifier& deviceIdentifier,$/;"	f	class:android::KeyMap
loadKeyLayout	libs/input/Keyboard.cpp	/^status_t KeyMap::loadKeyLayout(const InputDeviceIdentifier& deviceIdentifier,$/;"	f	class:android::KeyMap
loadKeyMapLocked	services/inputflinger/EventHub.cpp	/^status_t EventHub::loadKeyMapLocked(Device* device) {$/;"	f	class:android::EventHub
loadShader	libs/gui/tests/GLTest.cpp	/^void GLTest::loadShader(GLenum shaderType, const char* pSource,$/;"	f	class:android::GLTest
loadShader	opengl/tests/gl2_basic/gl2_basic.cpp	/^GLuint loadShader(GLenum shaderType, const char* pSource) {$/;"	f
loadShader	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private int loadShader(int shaderType, String source) {$/;"	m	class:CamRenderer	file:
loadShader	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^GLuint loadShader(GLenum shaderType, const char* pSource) {$/;"	f
loadShader	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        private int loadShader(int shaderType, String source) {$/;"	m	class:GL2JavaView.Renderer	file:
loadShader	opengl/tests/gl2_jni/jni/gl_code.cpp	/^GLuint loadShader(GLenum shaderType, const char* pSource) {$/;"	f
loadShader	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^GLuint loadShader(GLenum shaderType, const char* pSource) {$/;"	f
loadShader	opengl/tests/gl_perf/fill_common.cpp	/^GLuint loadShader(GLenum shaderType, const char* pSource) {$/;"	f
loadShader	opengl/tests/gldual/jni/gl_code.cpp	/^GLuint loadShader(GLenum shaderType, const char* pSource) {$/;"	f
loadShader	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private int loadShader(int shaderType, String source) {$/;"	m	class:TestLatencyView.Renderer	file:
loadVirtualKeyMapLocked	services/inputflinger/EventHub.cpp	/^status_t EventHub::loadVirtualKeyMapLocked(Device* device) {$/;"	f	class:android::EventHub
load_driver	opengl/libs/EGL/Loader.cpp	/^void *Loader::load_driver(const char* kind,$/;"	f	class:android::Loader
load_wrapper	opengl/libs/EGL/Loader.cpp	/^static void* load_wrapper(const char* path) {$/;"	f	namespace:android
localBinder	libs/binder/Binder.cpp	/^BBinder* BBinder::localBinder()$/;"	f	class:android::BBinder
localBinder	libs/binder/Binder.cpp	/^BBinder* IBinder::localBinder()$/;"	f	class:android::IBinder
local_target_dir	cmds/flatland/Android.mk	/^local_target_dir := $(TARGET_OUT_DATA)\/local\/tmp$/;"	m
location	include/input/InputDevice.h	/^    String8 location;$/;"	m	struct:android::InputDeviceIdentifier
lock	libs/gui/Surface.cpp	/^status_t Surface::lock($/;"	f	class:android::Surface
lock	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::lock(uint32_t usage, const Rect& rect, void** vaddr)$/;"	f	class:android::GraphicBuffer
lock	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::lock(uint32_t usage, void** vaddr)$/;"	f	class:android::GraphicBuffer
lock	libs/ui/GraphicBufferMapper.cpp	/^status_t GraphicBufferMapper::lock(buffer_handle_t handle, $/;"	f	class:android::GraphicBufferMapper
lock	opengl/libagl/egl.cpp	/^status_t egl_window_surface_v2_t::lock($/;"	f	class:android::egl_window_surface_v2_t
lock	opengl/libs/EGL/egl_display.h	/^    mutable Mutex                       lock, refLock;$/;"	m	class:android::egl_display_t
lock	services/surfaceflinger/Barrier.h	/^    mutable     Mutex       lock;$/;"	m	class:android::Barrier
lockAsync	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::lockAsync(uint32_t usage, const Rect& rect, void** vaddr, int fenceFd)$/;"	f	class:android::GraphicBuffer
lockAsync	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::lockAsync(uint32_t usage, void** vaddr, int fenceFd)$/;"	f	class:android::GraphicBuffer
lockAsync	libs/ui/GraphicBufferMapper.cpp	/^status_t GraphicBufferMapper::lockAsync(buffer_handle_t handle,$/;"	f	class:android::GraphicBufferMapper
lockAsyncYCbCr	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::lockAsyncYCbCr(uint32_t usage, android_ycbcr *ycbcr, int fenceFd)$/;"	f	class:android::GraphicBuffer
lockAsyncYCbCr	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::lockAsyncYCbCr(uint32_t usage, const Rect& rect, android_ycbcr *ycbcr, int fenceFd)$/;"	f	class:android::GraphicBuffer
lockAsyncYCbCr	libs/ui/GraphicBufferMapper.cpp	/^status_t GraphicBufferMapper::lockAsyncYCbCr(buffer_handle_t handle,$/;"	f	class:android::GraphicBufferMapper
lockBuffer_DEPRECATED	libs/gui/Surface.cpp	/^int Surface::lockBuffer_DEPRECATED(android_native_buffer_t* buffer __attribute__((unused))) {$/;"	f	class:android::Surface
lockBuffer_DEPRECATED	libs/ui/FramebufferNativeWindow.cpp	/^int FramebufferNativeWindow::lockBuffer_DEPRECATED(ANativeWindow* \/*window*\/, $/;"	f	class:android::FramebufferNativeWindow
lockNextBuffer	libs/gui/CpuConsumer.cpp	/^status_t CpuConsumer::lockNextBuffer(LockedBuffer *nativeBuffer) {$/;"	f	class:android::CpuConsumer
lockYCbCr	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::lockYCbCr(uint32_t usage, android_ycbcr *ycbcr)$/;"	f	class:android::GraphicBuffer
lockYCbCr	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::lockYCbCr(uint32_t usage, const Rect& rect,$/;"	f	class:android::GraphicBuffer
lockYCbCr	libs/ui/GraphicBufferMapper.cpp	/^status_t GraphicBufferMapper::lockYCbCr(buffer_handle_t handle,$/;"	f	class:android::GraphicBufferMapper
locked	opengl/libagl/context.h	/^    uint8_t         locked;$/;"	m	struct:android::gl::vertex_t
log	services/surfaceflinger/EventLog/EventLog.cpp	/^void EventLog::TagBuffer::log() {$/;"	f	class:android::EventLog::TagBuffer
logAndResetStats	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::logAndResetStats(const String8& name) {$/;"	f	class:android::FrameTracker
logCallWithNoContext	opengl/libs/EGL/egl_tls.h	/^    EGLBoolean  logCallWithNoContext;$/;"	m	class:android::egl_tls_t
logDispatchStateLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::logDispatchStateLocked() {$/;"	f	class:android::InputDispatcher
logFrameDurations	services/surfaceflinger/EventLog/EventLog.cpp	/^void EventLog::logFrameDurations(const String8& window,$/;"	f	class:android::EventLog
logFrameStats	services/surfaceflinger/Layer.cpp	/^void Layer::logFrameStats() {$/;"	f	class:android::Layer
logFrameStats	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::logFrameStats() {$/;"	f	class:android::SurfaceFlinger
logMsg	opengl/tools/glgen2/registry/reg.py	/^    def logMsg(self, level, *args):$/;"	m	class:OutputGenerator
logNoContextCall	opengl/libs/EGL/egl_tls.cpp	/^bool egl_tls_t::logNoContextCall() {$/;"	f	class:android::egl_tls_t
logOutboundKeyDetailsLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::logOutboundKeyDetailsLocked(const char* prefix, const KeyEntry* entry) {$/;"	f	class:android::InputDispatcher
logOutboundMotionDetailsLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::logOutboundMotionDetailsLocked(const char* prefix, const MotionEntry* entry) {$/;"	f	class:android::InputDispatcher
logStatsLocked	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::logStatsLocked(const String8& name) const {$/;"	f	class:android::FrameTracker
log_callback	cmds/installd/installd.c	/^static int log_callback(int type, const char *fmt, ...) {$/;"	f	file:
logicalBottom	services/inputflinger/InputReader.h	/^    int32_t logicalBottom;$/;"	m	struct:android::DisplayViewport
logicalLeft	services/inputflinger/InputReader.h	/^    int32_t logicalLeft;$/;"	m	struct:android::DisplayViewport
logicalRight	services/inputflinger/InputReader.h	/^    int32_t logicalRight;$/;"	m	struct:android::DisplayViewport
logicalTop	services/inputflinger/InputReader.h	/^    int32_t logicalTop;$/;"	m	struct:android::DisplayViewport
longname	cmds/atrace/atrace.cpp	/^    const char* longname;$/;"	m	struct:TracingCategory	file:
lookAt	include/ui/mat4.h	/^tmat44<T> tmat44<T>::lookAt(const tvec3<A>& eye, const tvec3<B>& center, const tvec3<C>& up) {$/;"	f	class:android::tmat44
lookupElementInfo	opengl/tools/glgen2/registry/reg.py	/^    def lookupElementInfo(self, fname, dictionary):$/;"	m	class:Registry
lookupHandleLocked	libs/binder/ProcessState.cpp	/^ProcessState::handle_entry* ProcessState::lookupHandleLocked(int32_t handle)$/;"	f	class:android::ProcessState
lookupLabelByValue	include/input/InputEventLabels.h	/^static const char* lookupLabelByValue(int value, const InputEventLabel* list) {$/;"	f	namespace:android
lookupValueByLabel	include/input/InputEventLabels.h	/^static int lookupValueByLabel(const char* literal, const InputEventLabel *list) {$/;"	f	namespace:android
lookup_media_dir	cmds/installd/utils.c	/^int lookup_media_dir(char basepath[PATH_MAX], const char *dir)$/;"	f
loopOnce	services/inputflinger/InputReader.cpp	/^void InputReader::loopOnce() {$/;"	f	class:android::InputReader
looper	include/gui/SensorEventQueue.h	/^    ALooper* looper;$/;"	m	struct:ASensorEventQueue
looper	services/surfaceflinger/SurfaceFlinger.cpp	/^    sp<Looper> looper;$/;"	m	class:android::GraphicProducerWrapper	file:
loseCurrent	opengl/libs/EGL/egl_display.cpp	/^void egl_display_t::loseCurrent(egl_context_t * cur_c)$/;"	f	class:android::egl_display_t
loseCurrentImpl	opengl/libs/EGL/egl_display.cpp	/^void egl_display_t::loseCurrentImpl(egl_context_t * cur_c)$/;"	f	class:android::egl_display_t
low	opengl/libs/ETC1/etc1.cpp	/^    etc1_uint32 low;$/;"	m	struct:__anon238	file:
lowThreshold	include/input/VelocityControl.h	/^    float lowThreshold;$/;"	m	struct:android::VelocityControlParameters
lower	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t lower(void) { return _l; }$/;"	f	class:Range
m	opengl/libagl/context.h	/^    GLfixed m[16];$/;"	m	struct:android::gl::matrixx_t
m	opengl/libagl/context.h	/^    GLfloat     m[16];$/;"	m	struct:android::gl::matrixf_t
mANW	libs/gui/tests/CpuConsumer_test.cpp	/^    sp<ANativeWindow> mANW;$/;"	m	class:android::CpuConsumerTest	file:
mANW	libs/gui/tests/MultiTextureConsumer_test.cpp	/^    ANativeWindow* mANW;$/;"	m	class:android::MultiTextureConsumerTest	file:
mANW	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    sp<ANativeWindow> mANW;$/;"	m	class:android::SurfaceTextureClientTest	file:
mANW	libs/gui/tests/SurfaceTextureGL.h	/^    sp<ANativeWindow> mANW;$/;"	m	class:android::SurfaceTextureGLTest
mAbandoned	include/gui/ConsumerBase.h	/^    bool mAbandoned;$/;"	m	class:android::ConsumerBase
mAbsDistance	services/inputflinger/InputReader.h	/^    int32_t mAbsDistance;$/;"	m	class:android::SingleTouchMotionAccumulator
mAbsMTDistance	services/inputflinger/InputReader.h	/^        int32_t mAbsMTDistance;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsMTOrientation	services/inputflinger/InputReader.h	/^        int32_t mAbsMTOrientation;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsMTPositionX	services/inputflinger/InputReader.h	/^        int32_t mAbsMTPositionX;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsMTPositionY	services/inputflinger/InputReader.h	/^        int32_t mAbsMTPositionY;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsMTPressure	services/inputflinger/InputReader.h	/^        int32_t mAbsMTPressure;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsMTToolType	services/inputflinger/InputReader.h	/^        int32_t mAbsMTToolType;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsMTTouchMajor	services/inputflinger/InputReader.h	/^        int32_t mAbsMTTouchMajor;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsMTTouchMinor	services/inputflinger/InputReader.h	/^        int32_t mAbsMTTouchMinor;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsMTTrackingId	services/inputflinger/InputReader.h	/^        int32_t mAbsMTTrackingId;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsMTWidthMajor	services/inputflinger/InputReader.h	/^        int32_t mAbsMTWidthMajor;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsMTWidthMinor	services/inputflinger/InputReader.h	/^        int32_t mAbsMTWidthMinor;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mAbsPressure	services/inputflinger/InputReader.h	/^    int32_t mAbsPressure;$/;"	m	class:android::SingleTouchMotionAccumulator
mAbsTiltX	services/inputflinger/InputReader.h	/^    int32_t mAbsTiltX;$/;"	m	class:android::SingleTouchMotionAccumulator
mAbsTiltY	services/inputflinger/InputReader.h	/^    int32_t mAbsTiltY;$/;"	m	class:android::SingleTouchMotionAccumulator
mAbsToolWidth	services/inputflinger/InputReader.h	/^    int32_t mAbsToolWidth;$/;"	m	class:android::SingleTouchMotionAccumulator
mAbsX	services/inputflinger/InputReader.h	/^    int32_t mAbsX;$/;"	m	class:android::SingleTouchMotionAccumulator
mAbsY	services/inputflinger/InputReader.h	/^    int32_t mAbsY;$/;"	m	class:android::SingleTouchMotionAccumulator
mAcc	services/sensorservice/SensorFusion.h	/^    Sensor mAcc;$/;"	m	class:android::SensorFusion
mAcceleration	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    Sensor mAcceleration;$/;"	f	class:CamGLSurfaceView
mAccelerometer	services/sensorservice/GravitySensor.h	/^    Sensor mAccelerometer;$/;"	m	class:android::GravitySensor
mAckReceiver	services/sensorservice/SensorService.h	/^    sp<SensorEventAckReceiver> mAckReceiver;$/;"	m	class:android::SensorService
mAcquireCalled	include/gui/BufferItem.h	/^    bool mAcquireCalled;$/;"	m	class:android::BufferItem
mAcquireCalled	include/gui/BufferSlot.h	/^    bool mAcquireCalled;$/;"	m	struct:android::BufferSlot
mAcquireCalled	include/gui/IGraphicBufferConsumer.h	/^        bool mAcquireCalled;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mAcquiredBuffers	include/gui/CpuConsumer.h	/^    Vector<AcquiredBuffer> mAcquiredBuffers;$/;"	m	class:android::CpuConsumer
mAction	include/input/Input.h	/^    int32_t mAction;$/;"	m	class:android::KeyEvent
mAction	include/input/Input.h	/^    int32_t mAction;$/;"	m	class:android::MotionEvent
mActivationCount	services/sensorservice/SensorDevice.h	/^    DefaultKeyedVector<int, Info> mActivationCount;$/;"	m	class:android::SensorDevice
mActivations	services/sensorservice/BatteryService.h	/^    SortedVector<Info> mActivations;$/;"	m	class:android::BatteryService
mActivationsLock	services/sensorservice/BatteryService.h	/^    Mutex mActivationsLock;$/;"	m	class:android::BatteryService
mActiveBuffer	services/surfaceflinger/Layer.h	/^    sp<GraphicBuffer> mActiveBuffer;$/;"	m	class:android::Layer
mActiveConfig	services/surfaceflinger/DisplayDevice.h	/^    int mActiveConfig;$/;"	m	class:android::DisplayDevice
mActiveConnections	services/sensorservice/SensorService.h	/^    SortedVector< wp<SensorEventConnection> > mActiveConnections;$/;"	m	class:android::SensorService
mActiveFrameSequence	services/surfaceflinger/SurfaceFlinger.h	/^    uint32_t mActiveFrameSequence;$/;"	m	class:android::SurfaceFlinger
mActivePointerId	include/input/VelocityTracker.h	/^    int32_t mActivePointerId;$/;"	m	class:android::VelocityTracker
mActiveSensors	services/sensorservice/SensorService.h	/^    DefaultKeyedVector<int, SensorRecord*> mActiveSensors;$/;"	m	class:android::SensorService
mActiveVirtualSensors	services/sensorservice/SensorService.h	/^    DefaultKeyedVector<int, SensorInterface*> mActiveVirtualSensors;$/;"	m	class:android::SensorService
mAffineTransform	services/inputflinger/InputReader.h	/^    struct TouchAffineTransformation mAffineTransform;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::TouchAffineTransformation
mAlias	include/input/InputDevice.h	/^    String8 mAlias;$/;"	m	class:android::InputDeviceInfo
mAlias	services/inputflinger/InputReader.h	/^    String8 mAlias;$/;"	m	class:android::InputDevice
mAlignment	include/binder/TextOutput.h	/^    size_t mAlignment;$/;"	m	class:android::HexDump
mAlive	include/binder/BpBinder.h	/^            volatile int32_t    mAlive;$/;"	m	class:android::BpBinder
mAllocCount	libs/gui/tests/StreamSplitter_test.cpp	/^    int mAllocCount;$/;"	m	class:android::CountedAllocator	file:
mAllocDev	include/ui/GraphicBufferAllocator.h	/^    alloc_device_t  *mAllocDev;$/;"	m	class:android::GraphicBufferAllocator
mAllocMod	include/ui/GraphicBufferMapper.h	/^    gralloc_module_t const *mAllocMod;$/;"	m	class:android::GraphicBufferMapper
mAllocatedDisplayIDs	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    BitSet32                        mAllocatedDisplayIDs;$/;"	m	class:android::HWComposer
mAllocations	include/binder/MemoryHeapPmem.h	/^    SortedVector< wp<MemoryPmem> >  mAllocations;$/;"	m	class:android::MemoryHeapPmem
mAllocator	include/binder/MemoryDealer.h	/^    SimpleBestFitAllocator*     mAllocator;$/;"	m	class:android::MemoryDealer
mAllocator	include/gui/BufferQueueCore.h	/^    sp<IGraphicBufferAlloc> mAllocator;$/;"	m	class:android::BufferQueueCore
mAllocator	libs/gui/tests/StreamSplitter_test.cpp	/^    sp<IGraphicBufferAlloc> mAllocator;$/;"	m	class:android::CountedAllocator	file:
mAllowFds	include/binder/Parcel.h	/^    bool                mAllowFds;$/;"	m	class:android::Parcel
mAllowHibernation	opengl/libs/EGL/egl_display.h	/^        const bool mAllowHibernation;$/;"	m	class:android::egl_display_t::HibernationMachine
mAlphaPlaneLoc	services/surfaceflinger/RenderEngine/Program.h	/^    GLint mAlphaPlaneLoc;$/;"	m	class:android::Program
mAlphaSize	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        protected int mAlphaSize;$/;"	f	class:GL2JNIView.ConfigChooser
mAlphaSize	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        protected int mAlphaSize;$/;"	f	class:GLPerfView.ConfigChooser
mAlphaSize	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        protected int mAlphaSize;$/;"	f	class:GLDualGL2View.ConfigChooser
mAnimCompositionPending	services/surfaceflinger/SurfaceFlinger.h	/^    bool mAnimCompositionPending;$/;"	m	class:android::SurfaceFlinger
mAnimFrameTracker	services/surfaceflinger/SurfaceFlinger.h	/^    FrameTracker mAnimFrameTracker;$/;"	m	class:android::SurfaceFlinger
mAnimTransactionPending	services/surfaceflinger/SurfaceFlinger.h	/^    bool mAnimTransactionPending;$/;"	m	class:android::SurfaceFlinger
mAnimation	libs/gui/SurfaceComposerClient.cpp	/^    bool                        mAnimation;$/;"	m	class:android::Composer	file:
mAppSwitchDueTime	services/inputflinger/InputDispatcher.h	/^    nsecs_t mAppSwitchDueTime;$/;"	m	class:android::InputDispatcher
mAppSwitchSawKeyDown	services/inputflinger/InputDispatcher.h	/^    bool mAppSwitchSawKeyDown;$/;"	m	class:android::InputDispatcher
mArgsQueue	services/inputflinger/InputListener.h	/^    Vector<NotifyArgs*> mArgsQueue;$/;"	m	class:android::QueuedInputListener
mAttached	include/gui/GLConsumer.h	/^    bool mAttached;$/;"	m	class:android::GLConsumer
mAttachedByConsumer	include/gui/BufferSlot.h	/^    bool mAttachedByConsumer;$/;"	m	struct:android::BufferSlot
mAttemptHibernation	opengl/libs/EGL/egl_display.h	/^        bool       mAttemptHibernation;$/;"	m	class:android::egl_display_t::HibernationMachine
mAttitude	services/sensorservice/SensorFusion.h	/^    vec4_t mAttitude;$/;"	m	class:android::SensorFusion
mAvailable	include/gui/SensorEventQueue.h	/^    size_t mAvailable;$/;"	m	class:android::SensorEventQueue
mAxes	include/input/KeyLayoutMap.h	/^    KeyedVector<int32_t, AxisInfo> mAxes;$/;"	m	class:android::KeyLayoutMap
mAxes	services/inputflinger/InputReader.h	/^    KeyedVector<int32_t, Axis> mAxes;$/;"	m	class:android::JoystickInputMapper
mBGSurfaceControl	services/surfaceflinger/tests/Transaction_test.cpp	/^    sp<SurfaceControl> mBGSurfaceControl;$/;"	m	class:android::LayerUpdateTest	file:
mBase	include/binder/MemoryHeapBase.h	/^    void*       mBase;$/;"	m	class:android::MemoryHeapBase
mBase	libs/binder/IMemory.cpp	/^    mutable void*       mBase;$/;"	m	class:android::BpMemoryHeap	file:
mBatches	include/input/InputTransport.h	/^    Vector<Batch> mBatches;$/;"	m	class:android::InputConsumer
mBatteryStatService	services/sensorservice/BatteryService.h	/^    sp<IBatteryStats> mBatteryStatService;$/;"	m	class:android::BatteryService
mBinderContextCheckFunc	include/binder/ProcessState.h	/^            context_check_func  mBinderContextCheckFunc;$/;"	m	class:android::ProcessState
mBinderContextUserData	include/binder/ProcessState.h	/^            void*               mBinderContextUserData;$/;"	m	class:android::ProcessState
mBitDepth	include/media/hardware/HardwareAPI.h	/^    OMX_U32 mBitDepth;               \/\/ useable bit depth$/;"	m	struct:android::MediaImage
mBlitPgm	cmds/flatland/Composers.cpp	/^    GLuint mBlitPgm;$/;"	m	class:android::Blitter	file:
mBlitSrcSamplerLoc	cmds/flatland/Composers.cpp	/^    GLint mBlitSrcSamplerLoc;$/;"	m	class:android::Blitter	file:
mBlobCache	opengl/libs/EGL/egl_cache.h	/^    sp<BlobCache> mBlobCache;$/;"	m	class:android::egl_cache_t
mBlueSize	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        protected int mBlueSize;$/;"	f	class:GL2JNIView.ConfigChooser
mBlueSize	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        protected int mBlueSize;$/;"	f	class:GLPerfView.ConfigChooser
mBlueSize	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        protected int mBlueSize;$/;"	f	class:GLDualGL2View.ConfigChooser
mBlurMaskAlphaThreshold	services/surfaceflinger/LayerBlur.h	/^    float mBlurMaskAlphaThreshold;$/;"	m	class:android::LayerBlur
mBlurMaskLayer	services/surfaceflinger/LayerBlur.h	/^    wp<Layer> mBlurMaskLayer;$/;"	m	class:android::LayerBlur
mBlurMaskSampling	services/surfaceflinger/LayerBlur.h	/^    int32_t mBlurMaskSampling;$/;"	m	class:android::LayerBlur
mBlurToken	services/surfaceflinger/LayerBlur.h	/^    qtiblur::BLUR_TOKEN mBlurToken;$/;"	m	class:android::LayerBlur
mBootFinished	services/surfaceflinger/SurfaceFlinger.h	/^    bool mBootFinished;$/;"	m	class:android::SurfaceFlinger
mBootTime	services/surfaceflinger/SurfaceFlinger.h	/^    nsecs_t mBootTime;$/;"	m	class:android::SurfaceFlinger
mBtnBack	services/inputflinger/InputReader.h	/^    bool mBtnBack;$/;"	m	class:android::CursorButtonAccumulator
mBtnExtra	services/inputflinger/InputReader.h	/^    bool mBtnExtra;$/;"	m	class:android::CursorButtonAccumulator
mBtnForward	services/inputflinger/InputReader.h	/^    bool mBtnForward;$/;"	m	class:android::CursorButtonAccumulator
mBtnLeft	services/inputflinger/InputReader.h	/^    bool mBtnLeft;$/;"	m	class:android::CursorButtonAccumulator
mBtnMiddle	services/inputflinger/InputReader.h	/^    bool mBtnMiddle;$/;"	m	class:android::CursorButtonAccumulator
mBtnRight	services/inputflinger/InputReader.h	/^    bool mBtnRight;$/;"	m	class:android::CursorButtonAccumulator
mBtnSide	services/inputflinger/InputReader.h	/^    bool mBtnSide;$/;"	m	class:android::CursorButtonAccumulator
mBtnStylus	services/inputflinger/InputReader.h	/^    bool mBtnStylus;$/;"	m	class:android::TouchButtonAccumulator
mBtnStylus2	services/inputflinger/InputReader.h	/^    bool mBtnStylus2;$/;"	m	class:android::TouchButtonAccumulator
mBtnTask	services/inputflinger/InputReader.h	/^    bool mBtnTask;$/;"	m	class:android::CursorButtonAccumulator
mBtnToolAirbrush	services/inputflinger/InputReader.h	/^    bool mBtnToolAirbrush;$/;"	m	class:android::TouchButtonAccumulator
mBtnToolBrush	services/inputflinger/InputReader.h	/^    bool mBtnToolBrush;$/;"	m	class:android::TouchButtonAccumulator
mBtnToolDoubleTap	services/inputflinger/InputReader.h	/^    bool mBtnToolDoubleTap;$/;"	m	class:android::TouchButtonAccumulator
mBtnToolFinger	services/inputflinger/InputReader.h	/^    bool mBtnToolFinger;$/;"	m	class:android::TouchButtonAccumulator
mBtnToolLens	services/inputflinger/InputReader.h	/^    bool mBtnToolLens;$/;"	m	class:android::TouchButtonAccumulator
mBtnToolMouse	services/inputflinger/InputReader.h	/^    bool mBtnToolMouse;$/;"	m	class:android::TouchButtonAccumulator
mBtnToolPen	services/inputflinger/InputReader.h	/^    bool mBtnToolPen;$/;"	m	class:android::TouchButtonAccumulator
mBtnToolPencil	services/inputflinger/InputReader.h	/^    bool mBtnToolPencil;$/;"	m	class:android::TouchButtonAccumulator
mBtnToolQuadTap	services/inputflinger/InputReader.h	/^    bool mBtnToolQuadTap;$/;"	m	class:android::TouchButtonAccumulator
mBtnToolRubber	services/inputflinger/InputReader.h	/^    bool mBtnToolRubber;$/;"	m	class:android::TouchButtonAccumulator
mBtnToolTripleTap	services/inputflinger/InputReader.h	/^    bool mBtnToolTripleTap;$/;"	m	class:android::TouchButtonAccumulator
mBtnTouch	services/inputflinger/InputReader.h	/^    bool mBtnTouch;$/;"	m	class:android::TouchButtonAccumulator
mBuf	include/gui/IGraphicBufferConsumer.h	/^        int mBuf;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mBuf	opengl/libs/GLES_trace/src/gltrace_context.h	/^    GLvoid *mBuf;$/;"	m	class:android::gltrace::ElementArrayBuffer
mBuffer	include/binder/TextOutput.h	/^    const void* mBuffer;$/;"	m	class:android::HexDump
mBuffer	include/gui/StreamSplitter.h	/^        sp<GraphicBuffer> mBuffer; \/\/ One instance that holds this native handle$/;"	m	class:android::StreamSplitter::BufferTracker
mBuffer	include/gui/SurfaceComposerClient.h	/^    CpuConsumer::LockedBuffer mBuffer;$/;"	m	class:android::ScreenshotClient
mBufferHasBeenQueued	include/gui/BufferQueueCore.h	/^    bool mBufferHasBeenQueued;$/;"	m	class:android::BufferQueueCore
mBufferHead	include/ui/FramebufferNativeWindow.h	/^    int32_t mBufferHead;$/;"	m	class:android::FramebufferNativeWindow
mBufferMapper	include/ui/GraphicBuffer.h	/^    GraphicBufferMapper& mBufferMapper;$/;"	m	class:android::GraphicBuffer
mBufferPointer	include/gui/CpuConsumer.h	/^        void *mBufferPointer;$/;"	m	struct:android::CpuConsumer::AcquiredBuffer
mBufferSize	include/gui/GraphicBufferAlloc.h	/^    int mBufferSize;$/;"	m	class:android::GraphicBufferAlloc
mBufferSize	opengl/libs/GLES_trace/src/gltrace_transport.h	/^    size_t mBufferSize;$/;"	m	class:android::gltrace::BufferedOutputStream
mBufferState	include/gui/BufferSlot.h	/^    BufferState mBufferState;$/;"	m	struct:android::BufferSlot
mBufferedOutputStream	opengl/libs/GLES_trace/src/gltrace_context.h	/^    BufferedOutputStream *mBufferedOutputStream; \/* stream where trace info is sent *\/$/;"	m	class:android::gltrace::GLTraceContext
mBuffers	include/gui/StreamSplitter.h	/^    KeyedVector<uint64_t, sp<BufferTracker> > mBuffers;$/;"	m	class:android::StreamSplitter
mBuffers	opengl/libagl/BufferObjectManager.h	/^    KeyedVector<GLuint, gl::buffer_t*>  mBuffers;$/;"	m	class:android::EGLBufferObjectManager
mBuiltInKeyboardId	services/inputflinger/EventHub.h	/^    int32_t mBuiltInKeyboardId;$/;"	m	class:android::EventHub
mBuiltinDisplays	services/surfaceflinger/SurfaceFlinger.h	/^    sp<IBinder> mBuiltinDisplays[DisplayDevice::NUM_BUILTIN_DISPLAY_TYPES];$/;"	m	class:android::SurfaceFlinger
mButtonState	include/input/Input.h	/^    int32_t mButtonState;$/;"	m	class:android::MotionEvent
mButtonState	services/inputflinger/InputReader.h	/^    int32_t mButtonState;$/;"	m	class:android::CursorInputMapper
mButtonState	services/inputflinger/tests/InputReader_test.cpp	/^    int32_t mButtonState;$/;"	m	class:android::FakePointerController	file:
mBytesPerLine	include/binder/TextOutput.h	/^    size_t mBytesPerLine;$/;"	m	class:android::HexDump
mCArrayStyle	include/binder/TextOutput.h	/^    bool mCArrayStyle;$/;"	m	class:android::HexDump
mCBContext	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    cb_context*                     mCBContext;$/;"	m	class:android::HWComposer
mCC	libs/gui/tests/CpuConsumer_test.cpp	/^    sp<CpuConsumer> mCC;$/;"	m	class:android::CpuConsumerTest	file:
mCStream	opengl/tools/glgen/src/EGLCodeEmitter.java	/^    PrintStream mCStream;$/;"	f	class:EGLCodeEmitter
mCStream	opengl/tools/glgen/src/GLESCodeEmitter.java	/^    PrintStream mCStream;$/;"	f	class:GLESCodeEmitter
mCStream	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    PrintStream mCStream;$/;"	f	class:Jsr239CodeEmitter
mCache	include/binder/PermissionCache.h	/^    SortedVector< Entry > mCache;$/;"	m	class:android::PermissionCache
mCache	opengl/tests/EGLTest/egl_cache_test.cpp	/^    egl_cache_t* mCache;$/;"	m	class:android::EGLCacheTest	file:
mCache	services/surfaceflinger/RenderEngine/ProgramCache.h	/^    DefaultKeyedVector<Key, Program*> mCache;$/;"	m	class:android::ProgramCache
mCacheSize	services/sensorservice/SensorService.h	/^        int mCacheSize, mMaxCacheSize;$/;"	m	class:android::SensorService::SensorEventConnection
mCalibration	services/inputflinger/InputReader.h	/^    } mCalibration;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::Calibration
mCallback	services/surfaceflinger/DispSync.cpp	/^        sp<DispSync::Callback> mCallback;$/;"	m	struct:android::DispSyncThread::CallbackInvocation	file:
mCallback	services/surfaceflinger/DispSync.cpp	/^        sp<DispSync::Callback> mCallback;$/;"	m	struct:android::DispSyncThread::EventListener	file:
mCallback	services/surfaceflinger/SurfaceFlinger.cpp	/^    sp<VSyncSource::Callback> mCallback;$/;"	m	class:android::DispSyncSource	file:
mCallbackCondition	include/gui/BufferQueueProducer.h	/^    Condition mCallbackCondition;$/;"	m	class:android::BufferQueueProducer
mCallbackMutex	include/gui/BufferQueueProducer.h	/^    Mutex mCallbackMutex;$/;"	m	class:android::BufferQueueProducer
mCallingPid	include/binder/IPCThreadState.h	/^            pid_t               mCallingPid;$/;"	m	class:android::IPCThreadState
mCallingUid	include/binder/IPCThreadState.h	/^            uid_t               mCallingUid;$/;"	m	class:android::IPCThreadState
mCamera	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    Camera mCamera;$/;"	f	class:CamGLSurfaceView
mCamera	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private Camera mCamera;$/;"	f	class:CamRenderer	file:
mCameraRatio	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private float mCameraRatio = 1.0f;$/;"	f	class:CamRenderer	file:
mCanUseGpuTileRender	services/surfaceflinger/SurfaceFlinger.h	/^    bool mCanUseGpuTileRender;$/;"	m	class:android::SurfaceFlinger
mCapsLockLedState	services/inputflinger/InputReader.h	/^    LedState mCapsLockLedState;$/;"	m	class:android::KeyboardInputMapper
mChannel	include/input/InputTransport.h	/^    sp<InputChannel> mChannel;$/;"	m	class:android::InputConsumer
mChannel	include/input/InputTransport.h	/^    sp<InputChannel> mChannel;$/;"	m	class:android::InputPublisher
mChannel	services/sensorservice/SensorService.h	/^        sp<BitTube> mChannel;$/;"	m	class:android::SensorService::SensorEventConnection
mChannel	services/surfaceflinger/EventThread.h	/^        sp<BitTube> const mChannel;$/;"	m	class:android::EventThread::Connection
mChecker	opengl/tools/glgen/src/JniCodeEmitter.java	/^    protected ParameterChecker mChecker;$/;"	f	class:JniCodeEmitter
mClassPathName	opengl/tools/glgen/src/JniCodeEmitter.java	/^    protected String mClassPathName;$/;"	f	class:JniCodeEmitter
mClasses	services/inputflinger/InputReader.h	/^    uint32_t mClasses;$/;"	m	class:android::InputDevice
mClient	include/gui/SurfaceComposerClient.h	/^                sp<ISurfaceComposerClient>  mClient;$/;"	m	class:android::SurfaceComposerClient
mClient	include/gui/SurfaceControl.h	/^    sp<SurfaceComposerClient>   mClient;$/;"	m	class:android::SurfaceControl
mClientApiString	opengl/libs/EGL/egl_display.h	/^            String8 mClientApiString;$/;"	m	class:android::egl_display_t
mClientHeap	include/binder/MemoryHeapPmem.h	/^        sp<MemoryHeapPmem>  mClientHeap;$/;"	m	class:android::MemoryHeapPmem::MemoryPmem
mClientRef	services/surfaceflinger/Layer.h	/^    const wp<Client> mClientRef;$/;"	m	class:android::Layer
mClients	services/sensorservice/SensorFusion.h	/^    SortedVector<void*> mClients;$/;"	m	class:android::SensorFusion
mClosingDevices	services/inputflinger/EventHub.h	/^    Device *mClosingDevices;$/;"	m	class:android::EventHub
mCode	include/binder/TextOutput.h	/^    uint32_t mCode;$/;"	m	class:android::TypeCode
mColInc	include/media/hardware/HardwareAPI.h	/^        OMX_U32 mColInc;             \/\/ column increment in bytes$/;"	m	struct:android::MediaImage::PlaneInfo
mCollectFbOnEglSwap	opengl/libs/GLES_trace/src/gltrace_context.h	/^    bool mCollectFbOnEglSwap;$/;"	m	class:android::gltrace::GLTraceState
mCollectFbOnGlDraw	opengl/libs/GLES_trace/src/gltrace_context.h	/^    bool mCollectFbOnGlDraw;$/;"	m	class:android::gltrace::GLTraceState
mCollectTextureDataOnGlTexImage	opengl/libs/GLES_trace/src/gltrace_context.h	/^    bool mCollectTextureDataOnGlTexImage;$/;"	m	class:android::gltrace::GLTraceState
mColor	services/surfaceflinger/RenderEngine/Description.h	/^    GLclampf mColor[4];$/;"	m	class:android::Description
mColor0UniformLoc	cmds/flatland/Renderers.cpp	/^    GLuint mColor0UniformLoc;$/;"	m	class:android::GradientRenderer	file:
mColor1UniformLoc	cmds/flatland/Renderers.cpp	/^    GLuint mColor1UniformLoc;$/;"	m	class:android::GradientRenderer	file:
mColorLoc	services/surfaceflinger/RenderEngine/Program.h	/^    GLint mColorLoc;$/;"	m	class:android::Program
mColorMatrix	services/surfaceflinger/RenderEngine/Description.h	/^    mat4 mColorMatrix;$/;"	m	class:android::Description
mColorMatrix	services/surfaceflinger/SurfaceFlinger.h	/^    mat4 mColorMatrix;$/;"	m	class:android::SurfaceFlinger
mColorMatrixEnabled	services/surfaceflinger/RenderEngine/Description.h	/^    bool mColorMatrixEnabled;$/;"	m	class:android::Description
mColorMatrixLoc	services/surfaceflinger/RenderEngine/Program.h	/^    GLint mColorMatrixLoc;$/;"	m	class:android::Program
mColorTransform	services/surfaceflinger/Effects/Daltonizer.h	/^    mat4 mColorTransform;$/;"	m	class:android::Daltonizer
mColors	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private final float[] mColors = {$/;"	f	class:TestLatencyView.Renderer	file:
mCommandQueue	services/inputflinger/InputDispatcher.h	/^    Queue<CommandEntry> mCommandQueue;$/;"	m	class:android::InputDispatcher
mComposer	cmds/flatland/Main.cpp	/^    Composer* mComposer;$/;"	m	class:Layer	file:
mComposer	include/gui/SurfaceComposerClient.h	/^                Composer&                   mComposer;$/;"	m	class:android::SurfaceComposerClient
mComposerClient	libs/gui/tests/GLTest.h	/^    sp<SurfaceComposerClient> mComposerClient;$/;"	m	class:android::GLTest
mComposerClient	libs/gui/tests/SRGB_test.cpp	/^    sp<SurfaceComposerClient> mComposerClient;$/;"	m	class:android::SRGBTest	file:
mComposerClient	libs/gui/tests/Surface_test.cpp	/^    sp<SurfaceComposerClient> mComposerClient;$/;"	m	class:android::SurfaceTest	file:
mComposerClient	services/surfaceflinger/tests/Transaction_test.cpp	/^    sp<SurfaceComposerClient> mComposerClient;$/;"	m	class:android::LayerUpdateTest	file:
mComposerService	include/private/gui/ComposerService.h	/^    sp<ISurfaceComposer> mComposerService;$/;"	m	class:android::ComposerService
mComposerStates	libs/gui/SurfaceComposerClient.cpp	/^    SortedVector<ComposerState> mComposerStates;$/;"	m	class:android::Composer	file:
mCompositionType	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    CompositionType mCompositionType;$/;"	m	class:android::VirtualDisplaySurface
mCond	services/surfaceflinger/DispSync.cpp	/^    Condition mCond;$/;"	m	class:android::DispSyncThread	file:
mCond	services/surfaceflinger/EventControlThread.h	/^    Condition mCond;$/;"	m	class:android::EventControlThread
mCondition	include/ui/FramebufferNativeWindow.h	/^    Condition mCondition;$/;"	m	class:android::FramebufferNativeWindow
mCondition	libs/gui/tests/CpuConsumer_test.cpp	/^        Condition mCondition;$/;"	m	class:android::CpuConsumerTest::FrameWaiter	file:
mCondition	libs/gui/tests/FrameWaiter.h	/^    Condition mCondition;$/;"	m	class:android::FrameWaiter
mCondition	opengl/libs/EGL/eglApi.cpp	/^    Condition mCondition;$/;"	m	class:FrameCompletionThread	file:
mCondition	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        Condition mCondition;$/;"	m	class:android::HWComposer::VSyncThread
mCondition	services/surfaceflinger/EventThread.h	/^    mutable Condition mCondition;$/;"	m	class:android::EventThread
mConfig	cmds/flatland/GLHelper.h	/^    EGLConfig mConfig;$/;"	m	class:android::GLHelper
mConfig	services/inputflinger/InputDispatcher.h	/^    InputDispatcherConfiguration mConfig;$/;"	m	class:android::InputDispatcher
mConfig	services/inputflinger/InputReader.h	/^    InputReaderConfiguration mConfig;$/;"	m	class:android::InputReader
mConfig	services/inputflinger/InputReader.h	/^    InputReaderConfiguration mConfig;$/;"	m	class:android::TouchInputMapper
mConfig	services/inputflinger/tests/InputDispatcher_test.cpp	/^    InputDispatcherConfiguration mConfig;$/;"	m	class:android::FakeInputDispatcherPolicy	file:
mConfig	services/inputflinger/tests/InputReader_test.cpp	/^    InputReaderConfiguration mConfig;$/;"	m	class:android::FakeInputReaderPolicy	file:
mConfig	services/surfaceflinger/DisplayDevice.h	/^    EGLConfig       mConfig;$/;"	m	class:android::DisplayDevice
mConfiguration	services/inputflinger/InputReader.h	/^    PropertyMap mConfiguration;$/;"	m	class:android::InputDevice
mConfigurationChangesToRefresh	services/inputflinger/InputReader.h	/^    uint32_t mConfigurationChangesToRefresh;$/;"	m	class:android::InputReader
mConfigureWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    bool mConfigureWasCalled;$/;"	m	class:android::FakeInputMapper	file:
mConnectedApi	include/gui/BufferQueueCore.h	/^    int mConnectedApi;$/;"	m	class:android::BufferQueueCore
mConnectedProducerListener	include/gui/BufferQueueCore.h	/^    sp<IProducerListener> mConnectedProducerListener;$/;"	m	class:android::BufferQueueCore
mConnectedToCpu	include/gui/Surface.h	/^    bool                        mConnectedToCpu;$/;"	m	class:android::Surface
mConnectionLock	services/sensorservice/SensorService.h	/^        mutable Mutex mConnectionLock;$/;"	m	class:android::SensorService::SensorEventConnection
mConnections	services/sensorservice/SensorService.h	/^        SortedVector< wp<SensorEventConnection> > mConnections;$/;"	m	class:android::SensorService::SensorRecord
mConnectionsByFd	services/inputflinger/InputDispatcher.h	/^    KeyedVector<int, sp<Connection> > mConnectionsByFd;$/;"	m	class:android::InputDispatcher
mConstantData	include/binder/BpBinder.h	/^            Parcel*             mConstantData;$/;"	m	class:android::BpBinder
mConsumed	include/gui/SensorEventQueue.h	/^    size_t mConsumed;$/;"	m	class:android::SensorEventQueue
mConsumer	include/gui/ConsumerBase.h	/^    sp<IGraphicBufferConsumer> mConsumer;$/;"	m	class:android::ConsumerBase
mConsumer	libs/gui/tests/BufferQueue_test.cpp	/^    sp<IGraphicBufferConsumer> mConsumer;$/;"	m	class:android::BufferQueueTest	file:
mConsumer	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    sp<IGraphicBufferConsumer> mConsumer;$/;"	m	class:android::IGraphicBufferProducerTest	file:
mConsumer	libs/gui/tests/SurfaceTextureGL.h	/^    sp<IGraphicBufferConsumer> mConsumer;$/;"	m	class:android::SurfaceTextureGLTest
mConsumer	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^    InputConsumer* mConsumer;$/;"	m	class:android::InputPublisherAndConsumerTest	file:
mConsumerControlledByApp	include/gui/BufferQueueCore.h	/^    bool mConsumerControlledByApp;$/;"	m	class:android::BufferQueueCore
mConsumerListener	include/gui/BufferQueue.h	/^        wp<ConsumerListener> mConsumerListener;$/;"	m	class:android::BufferQueue::ProxyConsumerListener
mConsumerListener	include/gui/BufferQueueCore.h	/^    sp<IConsumerListener> mConsumerListener;$/;"	m	class:android::BufferQueueCore
mConsumerName	include/gui/BufferQueueConsumer.h	/^    String8 mConsumerName;$/;"	m	class:android::BufferQueueConsumer
mConsumerName	include/gui/BufferQueueCore.h	/^    String8 mConsumerName;$/;"	m	class:android::BufferQueueCore
mConsumerName	include/gui/BufferQueueProducer.h	/^    String8 mConsumerName;$/;"	m	class:android::BufferQueueProducer
mConsumerRunningBehind	include/gui/Surface.h	/^    mutable bool mConsumerRunningBehind;$/;"	m	class:android::Surface
mConsumerUsageBits	include/gui/BufferQueueCore.h	/^    uint32_t mConsumerUsageBits;$/;"	m	class:android::BufferQueueCore
mContentsChangedListener	services/surfaceflinger/SurfaceFlingerConsumer.h	/^    wp<ContentsChangedListener> mContentsChangedListener;$/;"	m	class:android::SurfaceFlingerConsumer
mContext	cmds/flatland/GLHelper.h	/^    EGLContext mContext;$/;"	m	class:android::GLHelper
mContext	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private Context mContext;$/;"	f	class:CamRenderer	file:
mContext	services/inputflinger/InputReader.h	/^    InputReaderContext* mContext;$/;"	m	class:android::InputDevice
mContext	services/inputflinger/InputReader.h	/^    InputReaderContext* mContext;$/;"	m	class:android::InputMapper
mContext	services/inputflinger/InputReader.h	/^    } mContext;$/;"	m	class:android::InputReader	typeref:class:android::InputReader::ContextImpl
mContexts	include/binder/ProcessState.h	/^                                mContexts;$/;"	m	class:android::ProcessState
mControllerNumber	include/input/InputDevice.h	/^    int32_t mControllerNumber;$/;"	m	class:android::InputDeviceInfo
mControllerNumber	services/inputflinger/InputReader.h	/^    int32_t mControllerNumber;$/;"	m	class:android::InputDevice
mControllerNumbers	services/inputflinger/EventHub.h	/^    BitSet32 mControllerNumbers;$/;"	m	class:android::EventHub
mCore	include/gui/BufferQueueConsumer.h	/^    sp<BufferQueueCore> mCore;$/;"	m	class:android::BufferQueueConsumer
mCore	include/gui/BufferQueueProducer.h	/^    sp<BufferQueueCore> mCore;$/;"	m	class:android::BufferQueueProducer
mCount	opengl/libagl/BufferObjectManager.h	/^    mutable volatile int32_t            mCount;$/;"	m	class:android::EGLBufferObjectManager
mCount	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^    int mCount;$/;"	f	class:TestActivity
mCount	services/sensorservice/Fusion.h	/^    size_t mCount[3];$/;"	m	class:android::Fusion
mCpuConsumer	include/gui/SurfaceComposerClient.h	/^    mutable sp<CpuConsumer> mCpuConsumer;$/;"	m	class:android::ScreenshotClient
mCpuConsumer	libs/gui/tests/SRGB_test.cpp	/^    sp<CpuConsumer> mCpuConsumer;$/;"	m	class:android::SRGBTest	file:
mCrop	include/gui/BufferItem.h	/^    Rect mCrop;$/;"	m	class:android::BufferItem
mCrop	include/gui/IGraphicBufferConsumer.h	/^        Rect mCrop;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mCrop	include/gui/Surface.h	/^    Rect mCrop;$/;"	m	class:android::Surface
mCropRect	include/gui/GLConsumer.h	/^        Rect mCropRect;$/;"	m	class:android::GLConsumer::EglImage
mCurrentBuffer	services/surfaceflinger/DisplayHardware/FramebufferSurface.h	/^    sp<GraphicBuffer> mCurrentBuffer;$/;"	m	class:android::FramebufferSurface
mCurrentBufferIndex	include/ui/FramebufferNativeWindow.h	/^    int32_t mCurrentBufferIndex;$/;"	m	class:android::FramebufferNativeWindow
mCurrentBufferSlot	services/surfaceflinger/DisplayHardware/FramebufferSurface.h	/^    int mCurrentBufferSlot;$/;"	m	class:android::FramebufferSurface
mCurrentButtonState	services/inputflinger/InputReader.h	/^    int32_t mCurrentButtonState;$/;"	m	class:android::TouchInputMapper
mCurrentCallbackTicket	include/gui/BufferQueueProducer.h	/^    int mCurrentCallbackTicket; \/\/ Protected by mCallbackMutex$/;"	m	class:android::BufferQueueProducer
mCurrentCookedPointerData	services/inputflinger/InputReader.h	/^    CookedPointerData mCurrentCookedPointerData;$/;"	m	class:android::TouchInputMapper
mCurrentCrop	include/gui/GLConsumer.h	/^    Rect mCurrentCrop;$/;"	m	class:android::GLConsumer
mCurrentCrop	services/surfaceflinger/Layer.h	/^    Rect mCurrentCrop;$/;"	m	class:android::Layer
mCurrentDirtyRect	include/gui/GLConsumer.h	/^    Rect mCurrentDirtyRect;$/;"	m	class:android::GLConsumer
mCurrentFence	include/gui/GLConsumer.h	/^    sp<Fence> mCurrentFence;$/;"	m	class:android::GLConsumer
mCurrentFingerIdBits	services/inputflinger/InputReader.h	/^    BitSet32 mCurrentFingerIdBits; \/\/ finger or unknown$/;"	m	class:android::TouchInputMapper
mCurrentFrameNumber	include/gui/GLConsumer.h	/^    int64_t mCurrentFrameNumber;$/;"	m	class:android::GLConsumer
mCurrentHidUsage	services/inputflinger/InputReader.h	/^    int32_t mCurrentHidUsage; \/\/ most recent HID usage seen this packet, or 0 if none$/;"	m	class:android::KeyboardInputMapper
mCurrentLayer	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    HWCTYPE* mCurrentLayer;$/;"	m	class:android::Iterable	file:
mCurrentLockedBuffers	include/gui/CpuConsumer.h	/^    uint32_t mCurrentLockedBuffers;$/;"	m	class:android::CpuConsumer
mCurrentMouseIdBits	services/inputflinger/InputReader.h	/^    BitSet32 mCurrentMouseIdBits; \/\/ mouse or lens$/;"	m	class:android::TouchInputMapper
mCurrentOpacity	services/surfaceflinger/Layer.h	/^    bool mCurrentOpacity;$/;"	m	class:android::Layer
mCurrentPointerIdBits	include/input/VelocityTracker.h	/^    BitSet32 mCurrentPointerIdBits;$/;"	m	class:android::VelocityTracker
mCurrentRawHScroll	services/inputflinger/InputReader.h	/^    int32_t mCurrentRawHScroll;$/;"	m	class:android::TouchInputMapper
mCurrentRawPointerData	services/inputflinger/InputReader.h	/^    RawPointerData mCurrentRawPointerData;$/;"	m	class:android::TouchInputMapper
mCurrentRawVScroll	services/inputflinger/InputReader.h	/^    int32_t mCurrentRawVScroll;$/;"	m	class:android::TouchInputMapper
mCurrentScalingMode	include/gui/GLConsumer.h	/^    uint32_t mCurrentScalingMode;$/;"	m	class:android::GLConsumer
mCurrentScalingMode	services/surfaceflinger/Layer.h	/^    uint32_t mCurrentScalingMode;$/;"	m	class:android::Layer
mCurrentSlot	services/inputflinger/InputReader.h	/^    int32_t mCurrentSlot;$/;"	m	class:android::MultiTouchMotionAccumulator
mCurrentState	services/surfaceflinger/Layer.h	/^    State mCurrentState;$/;"	m	class:android::Layer
mCurrentState	services/surfaceflinger/SurfaceFlinger.h	/^    State mCurrentState;$/;"	m	class:android::SurfaceFlinger
mCurrentStylusIdBits	services/inputflinger/InputReader.h	/^    BitSet32 mCurrentStylusIdBits; \/\/ stylus or eraser$/;"	m	class:android::TouchInputMapper
mCurrentTexture	include/gui/GLConsumer.h	/^    int mCurrentTexture;$/;"	m	class:android::GLConsumer
mCurrentTextureImage	include/gui/GLConsumer.h	/^    sp<EglImage> mCurrentTextureImage;$/;"	m	class:android::GLConsumer
mCurrentTimestamp	include/gui/GLConsumer.h	/^    int64_t mCurrentTimestamp;$/;"	m	class:android::GLConsumer
mCurrentTransform	include/gui/GLConsumer.h	/^    uint32_t mCurrentTransform;$/;"	m	class:android::GLConsumer
mCurrentTransform	services/surfaceflinger/Layer.h	/^    uint32_t mCurrentTransform;$/;"	m	class:android::Layer
mCurrentTransformMatrix	include/gui/GLConsumer.h	/^    float mCurrentTransformMatrix[16];$/;"	m	class:android::GLConsumer
mCurrentVirtualKey	services/inputflinger/InputReader.h	/^    } mCurrentVirtualKey;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::CurrentVirtualKeyState
mCursorButtonAccumulator	services/inputflinger/InputReader.h	/^    CursorButtonAccumulator mCursorButtonAccumulator;$/;"	m	class:android::CursorInputMapper
mCursorButtonAccumulator	services/inputflinger/InputReader.h	/^    CursorButtonAccumulator mCursorButtonAccumulator;$/;"	m	class:android::TouchInputMapper
mCursorMotionAccumulator	services/inputflinger/InputReader.h	/^    CursorMotionAccumulator mCursorMotionAccumulator;$/;"	m	class:android::CursorInputMapper
mCursorScrollAccumulator	services/inputflinger/InputReader.h	/^    CursorScrollAccumulator mCursorScrollAccumulator;$/;"	m	class:android::CursorInputMapper
mCursorScrollAccumulator	services/inputflinger/InputReader.h	/^    CursorScrollAccumulator mCursorScrollAccumulator;$/;"	m	class:android::TouchInputMapper
mDC	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    sp<DummyConsumer> mDC;$/;"	m	class:android::IGraphicBufferProducerTest	file:
mDRCount	services/surfaceflinger/SurfaceFlinger.h	/^    int mDRCount;$/;"	m	class:android::SurfaceFlinger
mDT	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^    private long  mDT;$/;"	f	class:TestLatencyView	file:
mDX	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^    private float mDX;$/;"	f	class:TestLatencyView	file:
mDY	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^    private float mDY;$/;"	f	class:TestLatencyView	file:
mDaltonize	services/surfaceflinger/SurfaceFlinger.h	/^    bool mDaltonize;$/;"	m	class:android::SurfaceFlinger
mDaltonizer	services/surfaceflinger/SurfaceFlinger.h	/^    Daltonizer mDaltonizer;$/;"	m	class:android::SurfaceFlinger
mData	include/binder/Parcel.h	/^        void* mData;$/;"	m	class:android::Parcel::Blob
mData	include/binder/Parcel.h	/^    uint8_t*            mData;$/;"	m	class:android::Parcel
mData	services/sensorservice/Fusion.h	/^    vec<vec3_t, 3> mData;$/;"	m	class:android::Fusion
mData	services/surfaceflinger/RenderEngine/Mesh.h	/^        float* mData;$/;"	m	class:android::Mesh::VertexArray
mDataCapacity	include/binder/Parcel.h	/^    size_t              mDataCapacity;$/;"	m	class:android::Parcel
mDataChannel	include/gui/DisplayEventReceiver.h	/^    sp<BitTube> mDataChannel;$/;"	m	class:android::DisplayEventReceiver
mDataPos	include/binder/Parcel.h	/^    mutable size_t      mDataPos;$/;"	m	class:android::Parcel
mDataSize	include/binder/Parcel.h	/^    size_t              mDataSize;$/;"	m	class:android::Parcel
mDbgLastCompositionType	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    CompositionType mDbgLastCompositionType;$/;"	m	class:android::VirtualDisplaySurface
mDbgState	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    DbgState mDbgState;$/;"	m	class:android::VirtualDisplaySurface
mDead	services/sensorservice/SensorService.h	/^        bool mDead;$/;"	m	class:android::SensorService::SensorEventConnection
mDealer	libs/binder/MemoryDealer.cpp	/^    sp<MemoryDealer> mDealer;$/;"	m	class:android::Allocation	file:
mDeathObserver	include/gui/SensorManager.h	/^    mutable sp<IBinder::DeathRecipient> mDeathObserver;$/;"	m	class:android::SensorManager
mDeathObserver	include/private/gui/ComposerService.h	/^    sp<IBinder::DeathRecipient> mDeathObserver;$/;"	m	class:android::ComposerService
mDebug	services/surfaceflinger/Layer.h	/^    mutable bool mDebug;$/;"	m	class:android::Layer
mDebugDDMS	services/surfaceflinger/SurfaceFlinger.h	/^    int mDebugDDMS;$/;"	m	class:android::SurfaceFlinger
mDebugDisableHWC	services/surfaceflinger/SurfaceFlinger.h	/^    int mDebugDisableHWC;$/;"	m	class:android::SurfaceFlinger
mDebugDisableTransformHint	services/surfaceflinger/SurfaceFlinger.h	/^    int mDebugDisableTransformHint;$/;"	m	class:android::SurfaceFlinger
mDebugForceFakeVSync	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    bool                            mDebugForceFakeVSync;$/;"	m	class:android::HWComposer
mDebugInSwapBuffers	services/surfaceflinger/SurfaceFlinger.h	/^    volatile nsecs_t mDebugInSwapBuffers;$/;"	m	class:android::SurfaceFlinger
mDebugInTransaction	services/surfaceflinger/SurfaceFlinger.h	/^    volatile nsecs_t mDebugInTransaction;$/;"	m	class:android::SurfaceFlinger
mDebugRegion	services/surfaceflinger/SurfaceFlinger.h	/^    int mDebugRegion;$/;"	m	class:android::SurfaceFlinger
mDebugVsyncEnabled	services/surfaceflinger/EventThread.h	/^    bool mDebugVsyncEnabled;$/;"	m	class:android::EventThread
mDefaultBufferFormat	include/gui/BufferQueueCore.h	/^    uint32_t mDefaultBufferFormat;$/;"	m	class:android::BufferQueueCore
mDefaultHeight	include/gui/BufferQueueCore.h	/^    int mDefaultHeight;$/;"	m	class:android::BufferQueueCore
mDefaultHeight	include/gui/GLConsumer.h	/^    uint32_t mDefaultWidth, mDefaultHeight;$/;"	m	class:android::GLConsumer
mDefaultHeight	include/gui/Surface.h	/^     uint32_t mDefaultHeight;$/;"	m	class:android::Surface
mDefaultMaxBufferCount	include/gui/BufferQueueCore.h	/^    int mDefaultMaxBufferCount;$/;"	m	class:android::BufferQueueCore
mDefaultOutputFormat	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    uint32_t mDefaultOutputFormat;$/;"	m	class:android::VirtualDisplaySurface
mDefaultWidth	include/gui/BufferQueueCore.h	/^    int mDefaultWidth;$/;"	m	class:android::BufferQueueCore
mDefaultWidth	include/gui/GLConsumer.h	/^    uint32_t mDefaultWidth, mDefaultHeight;$/;"	m	class:android::GLConsumer
mDefaultWidth	include/gui/Surface.h	/^     uint32_t mDefaultWidth;$/;"	m	class:android::Surface
mDegree	include/input/VelocityTracker.h	/^    const uint32_t mDegree;$/;"	m	class:android::IntegratingVelocityTrackerStrategy
mDegree	include/input/VelocityTracker.h	/^    const uint32_t mDegree;$/;"	m	class:android::LeastSquaresVelocityTrackerStrategy
mDelayMillis	libs/input/tests/TestHelpers.h	/^    int mDelayMillis;$/;"	m	class:android::DelayedTask
mDepthSize	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        protected int mDepthSize;$/;"	f	class:GL2JNIView.ConfigChooser
mDepthSize	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        protected int mDepthSize;$/;"	f	class:GLPerfView.ConfigChooser
mDepthSize	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        protected int mDepthSize;$/;"	f	class:GLDualGL2View.ConfigChooser
mDequeueBufferCannotBlock	include/gui/BufferQueueCore.h	/^    bool mDequeueBufferCannotBlock;$/;"	m	class:android::BufferQueueCore
mDequeueCondition	include/gui/BufferQueueCore.h	/^    mutable Condition mDequeueCondition;$/;"	m	class:android::BufferQueueCore
mDequeuedOnce	include/gui/Surface.h	/^    bool mDequeuedOnce;$/;"	m	class:android::Surface
mDesc	cmds/flatland/Main.cpp	/^    LayerDesc mDesc;$/;"	m	class:Layer	file:
mDesc	cmds/flatland/Main.cpp	/^    const BenchmarkDesc& mDesc;$/;"	m	class:BenchmarkRunner	file:
mDescriptorCache	include/binder/BpBinder.h	/^    mutable String16            mDescriptorCache;$/;"	m	class:android::BpBinder
mDestroyedLayerLock	services/surfaceflinger/SurfaceFlinger.h	/^    mutable Mutex mDestroyedLayerLock;$/;"	m	class:android::SurfaceFlinger
mDestroyedLayers	services/surfaceflinger/SurfaceFlinger.h	/^    Vector<Layer const *> mDestroyedLayers;$/;"	m	class:android::SurfaceFlinger
mDevice	include/binder/MemoryHeapBase.h	/^    const char* mDevice;$/;"	m	class:android::MemoryHeapBase
mDevice	services/inputflinger/InputReader.h	/^    InputDevice* mDevice;$/;"	m	class:android::InputMapper
mDevice	services/inputflinger/tests/InputReader_test.cpp	/^    InputDevice* mDevice;$/;"	m	class:android::InputDeviceTest	file:
mDevice	services/inputflinger/tests/InputReader_test.cpp	/^    InputDevice* mDevice;$/;"	m	class:android::InputMapperTest	file:
mDeviceId	include/input/Input.h	/^    int32_t mDeviceId;$/;"	m	class:android::InputEvent
mDeviceMode	services/inputflinger/InputReader.h	/^    DeviceMode mDeviceMode;$/;"	m	class:android::TouchInputMapper
mDevices	services/inputflinger/EventHub.h	/^    KeyedVector<int32_t, Device*> mDevices;$/;"	m	class:android::EventHub
mDevices	services/inputflinger/InputReader.h	/^    KeyedVector<int32_t, InputDevice*> mDevices;$/;"	m	class:android::InputReader
mDevices	services/inputflinger/tests/InputReader_test.cpp	/^    KeyedVector<int32_t, Device*> mDevices;$/;"	m	class:android::FakeEventHub	file:
mDirty	services/surfaceflinger/Effects/Daltonizer.h	/^    bool mDirty;$/;"	m	class:android::Daltonizer
mDirtyRect	include/gui/BufferItem.h	/^    Rect mDirtyRect;$/;"	m	class:android::BufferItem
mDirtyRect	include/gui/IGraphicBufferConsumer.h	/^        Rect mDirtyRect;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mDirtyRect	include/gui/Surface.h	/^    Rect mDirtyRect;$/;"	m	class:android::Surface
mDirtyRegion	include/gui/Surface.h	/^    Region mDirtyRegion;$/;"	m	class:android::Surface
mDisableExtAnimation	services/surfaceflinger/SurfaceFlinger.h	/^    bool mDisableExtAnimation;$/;"	m	class:android::SurfaceFlinger
mDisableVirtualKeysTimeout	services/inputflinger/InputReader.h	/^    nsecs_t mDisableVirtualKeysTimeout;$/;"	m	class:android::InputReader
mDisconnectCondition	libs/gui/tests/CpuConsumer_test.cpp	/^        Condition mDisconnectCondition;$/;"	m	class:android::CpuConsumerTest::DisconnectWaiter	file:
mDisconnectCondition	libs/gui/tests/DisconnectWaiter.h	/^    Condition mDisconnectCondition;$/;"	m	class:android::DisconnectWaiter
mDispSync	services/surfaceflinger/SurfaceFlinger.cpp	/^    DispSync* mDispSync;$/;"	m	class:android::DispSyncSource	file:
mDispatchEnabled	services/inputflinger/InputDispatcher.h	/^    bool mDispatchEnabled;$/;"	m	class:android::InputDispatcher
mDispatchFrozen	services/inputflinger/InputDispatcher.h	/^    bool mDispatchFrozen;$/;"	m	class:android::InputDispatcher
mDispatcher	services/inputflinger/InputDispatcher.h	/^    sp<InputDispatcherInterface> mDispatcher;$/;"	m	class:android::InputDispatcherThread
mDispatcher	services/inputflinger/InputManager.h	/^    sp<InputDispatcherInterface> mDispatcher;$/;"	m	class:android::InputManager
mDispatcher	services/inputflinger/tests/InputDispatcher_test.cpp	/^    sp<InputDispatcher> mDispatcher;$/;"	m	class:android::InputDispatcherTest	file:
mDispatcherIsAliveCondition	services/inputflinger/InputDispatcher.h	/^    Condition mDispatcherIsAliveCondition;$/;"	m	class:android::InputDispatcher
mDispatcherThread	services/inputflinger/InputManager.h	/^    sp<InputDispatcherThread> mDispatcherThread;$/;"	m	class:android::InputManager
mDisplay	cmds/flatland/GLHelper.h	/^    EGLDisplay mDisplay;$/;"	m	class:android::GLHelper
mDisplay	services/surfaceflinger/DisplayDevice.h	/^    EGLDisplay      mDisplay;$/;"	m	class:android::DisplayDevice
mDisplayData	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    DisplayData                     mDisplayData[MAX_HWC_DISPLAYS];$/;"	m	class:android::HWComposer
mDisplayEventConnections	services/surfaceflinger/EventThread.h	/^    SortedVector< wp<Connection> > mDisplayEventConnections;$/;"	m	class:android::EventThread
mDisplayHeight	services/surfaceflinger/DisplayDevice.h	/^    int             mDisplayHeight;$/;"	m	class:android::DisplayDevice
mDisplayId	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    int32_t mDisplayId;$/;"	m	class:android::VirtualDisplaySurface
mDisplayName	services/surfaceflinger/DisplayDevice.h	/^    String8         mDisplayName;$/;"	m	class:android::DisplayDevice
mDisplayName	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    const String8 mDisplayName;$/;"	m	class:android::VirtualDisplaySurface
mDisplayPeriod	services/surfaceflinger/FrameTracker.h	/^    nsecs_t mDisplayPeriod;$/;"	m	class:android::FrameTracker
mDisplaySecs	libs/gui/tests/GLTest.h	/^    int mDisplaySecs;$/;"	m	class:android::GLTest
mDisplayStates	libs/gui/SurfaceComposerClient.cpp	/^    SortedVector<DisplayState > mDisplayStates;$/;"	m	class:android::Composer	file:
mDisplaySurface	services/surfaceflinger/DisplayDevice.h	/^    sp<DisplaySurface> mDisplaySurface;$/;"	m	class:android::DisplayDevice
mDisplayToken	services/surfaceflinger/DisplayDevice.h	/^    wp<IBinder> mDisplayToken;$/;"	m	class:android::DisplayDevice
mDisplayType	services/surfaceflinger/DisplayHardware/FramebufferSurface.h	/^    int mDisplayType;$/;"	m	class:android::FramebufferSurface
mDisplayWidth	services/surfaceflinger/DisplayDevice.h	/^    int             mDisplayWidth;$/;"	m	class:android::DisplayDevice
mDisplays	services/surfaceflinger/SurfaceFlinger.h	/^    DefaultKeyedVector< wp<IBinder>, sp<DisplayDevice> > mDisplays;$/;"	m	class:android::SurfaceFlinger
mDistanceScale	services/inputflinger/InputReader.h	/^    float mDistanceScale;$/;"	m	class:android::TouchInputMapper
mDitherKernelSamplerLoc	cmds/flatland/Renderers.cpp	/^    GLuint mDitherKernelSamplerLoc;$/;"	m	class:android::GradientRenderer	file:
mDitherTexName	cmds/flatland/Renderers.cpp	/^    GLuint mDitherTexName;$/;"	m	class:android::GradientRenderer	file:
mDitherTexture	cmds/flatland/GLHelper.h	/^    GLuint mDitherTexture;$/;"	m	class:android::GLHelper
mDownTime	include/input/Input.h	/^    nsecs_t mDownTime;$/;"	m	class:android::KeyEvent
mDownTime	include/input/Input.h	/^    nsecs_t mDownTime;$/;"	m	class:android::MotionEvent
mDownTime	services/inputflinger/InputReader.h	/^    nsecs_t mDownTime; \/\/ time of most recent key down$/;"	m	class:android::KeyboardInputMapper
mDownTime	services/inputflinger/InputReader.h	/^    nsecs_t mDownTime;$/;"	m	class:android::CursorInputMapper
mDownTime	services/inputflinger/InputReader.h	/^    nsecs_t mDownTime;$/;"	m	class:android::TouchInputMapper
mDpy	opengl/libs/EGL/egl_display.h	/^    egl_display_t* mDpy;$/;"	m	class:android::egl_display_ptr
mDpyValid	opengl/libs/EGL/egl_display.h	/^        bool       mDpyValid;$/;"	m	class:android::egl_display_t::HibernationMachine
mDrawLock	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    mutable Mutex mDrawLock;$/;"	m	class:android::HWComposer
mDrawingState	services/surfaceflinger/Layer.h	/^    State mDrawingState;$/;"	m	class:android::Layer
mDrawingState	services/surfaceflinger/SurfaceFlinger.h	/^    State mDrawingState;$/;"	m	class:android::SurfaceFlinger
mDriverFD	include/binder/ProcessState.h	/^            int                 mDriverFD;$/;"	m	class:android::ProcessState
mDropUntilNextSync	services/inputflinger/InputReader.h	/^    bool mDropUntilNextSync;$/;"	m	class:android::InputDevice
mDummyGLConsumer	cmds/flatland/GLHelper.h	/^    sp<GLConsumer> mDummyGLConsumer;$/;"	m	class:android::GLHelper
mDummySurface	cmds/flatland/GLHelper.h	/^    EGLSurface mDummySurface;$/;"	m	class:android::GLHelper
mDynThreshold	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    float mDynThreshold;$/;"	m	class:android::HWComposer
mEGLConfig	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    EGLConfig mEGLConfig;$/;"	m	class:android::RenderEngine
mEGLContext	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    EGLContext mEGLContext;$/;"	m	class:android::RenderEngine
mEGLContext	services/surfaceflinger/SurfaceFlinger.h	/^    EGLContext mEGLContext;$/;"	m	class:android::SurfaceFlinger
mEGLDisplay	services/surfaceflinger/SurfaceFlinger.h	/^    EGLDisplay mEGLDisplay;$/;"	m	class:android::SurfaceFlinger
mEdgeFlags	include/input/Input.h	/^    int32_t mEdgeFlags;$/;"	m	class:android::MotionEvent
mEglConfig	libs/gui/tests/SRGB_test.cpp	/^    EGLConfig mEglConfig;$/;"	m	class:android::SRGBTest	file:
mEglConfig	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    EGLConfig  mEglConfig;$/;"	m	class:android::SurfaceTextureClientTest	file:
mEglContext	include/gui/GLConsumer.h	/^    EGLContext mEglContext;$/;"	m	class:android::GLConsumer
mEglContext	libs/gui/tests/GLTest.h	/^    EGLContext mEglContext;$/;"	m	class:android::GLTest
mEglContext	libs/gui/tests/SRGB_test.cpp	/^    EGLContext mEglContext;$/;"	m	class:android::SRGBTest	file:
mEglContext	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    EGLContext mEglContext;$/;"	m	class:android::MultiSurfaceTextureClientTest	file:
mEglContext	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    EGLContext mEglContext;$/;"	m	class:android::SurfaceTextureClientTest	file:
mEglDisplay	include/gui/BufferSlot.h	/^    EGLDisplay mEglDisplay;$/;"	m	struct:android::BufferSlot
mEglDisplay	include/gui/GLConsumer.h	/^        EGLDisplay mEglDisplay;$/;"	m	class:android::GLConsumer::EglImage
mEglDisplay	include/gui/GLConsumer.h	/^    EGLDisplay mEglDisplay;$/;"	m	class:android::GLConsumer
mEglDisplay	libs/gui/tests/GLTest.h	/^    EGLDisplay mEglDisplay;$/;"	m	class:android::GLTest
mEglDisplay	libs/gui/tests/SRGB_test.cpp	/^    EGLDisplay mEglDisplay;$/;"	m	class:android::SRGBTest	file:
mEglDisplay	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    EGLDisplay mEglDisplay;$/;"	m	class:android::MultiSurfaceTextureClientTest	file:
mEglDisplay	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    EGLDisplay mEglDisplay;$/;"	m	class:android::SurfaceTextureClientTest	file:
mEglDisplay	opengl/tests/EGLTest/EGL_test.cpp	/^    EGLDisplay mEglDisplay;$/;"	m	class:android::EGLTest	file:
mEglFence	include/gui/BufferSlot.h	/^    EGLSyncKHR mEglFence;$/;"	m	struct:android::BufferSlot
mEglFence	include/gui/GLConsumer.h	/^        EGLSyncKHR mEglFence;$/;"	m	struct:android::GLConsumer::EglSlot
mEglImage	include/gui/GLConsumer.h	/^        EGLImageKHR mEglImage;$/;"	m	class:android::GLConsumer::EglImage
mEglImage	include/gui/GLConsumer.h	/^        sp<EglImage> mEglImage;$/;"	m	struct:android::GLConsumer::EglSlot
mEglSlots	include/gui/GLConsumer.h	/^    EglSlot mEglSlots[BufferQueue::NUM_BUFFER_SLOTS];$/;"	m	class:android::GLConsumer
mEglSurface	libs/gui/tests/GLTest.h	/^    EGLSurface mEglSurface;$/;"	m	class:android::GLTest
mEglSurface	libs/gui/tests/SRGB_test.cpp	/^    EGLSurface mEglSurface;$/;"	m	class:android::SRGBTest	file:
mEglSurface	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    EGLSurface mEglSurface;$/;"	m	class:android::SurfaceTextureClientTest	file:
mEglSurfaces	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    EGLSurface mEglSurfaces[NUM_SURFACE_TEXTURES];$/;"	m	class:android::MultiSurfaceTextureClientTest	file:
mElementArrayBuffers	opengl/libs/GLES_trace/src/gltrace_context.h	/^    DefaultKeyedVector<GLuint, ElementArrayBuffer*> mElementArrayBuffers;$/;"	m	class:android::gltrace::GLTraceContext
mElementBufferObjectId	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       private int mElementBufferObjectId;$/;"	f	class:TestView.Grid	file:
mEnabled	services/sensorservice/SensorFusion.h	/^    bool mEnabled;$/;"	m	class:android::SensorFusion
mEnabled	services/surfaceflinger/Colorizer.h	/^    bool mEnabled;$/;"	m	class:android::Colorizer
mEnabled	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        bool mEnabled;$/;"	m	class:android::HWComposer::VSyncThread
mEngine	services/surfaceflinger/RenderEngine/RenderEngine.h	/^        RenderEngine& mEngine;$/;"	m	class:android::RenderEngine::BindImageAsFramebuffer
mEpollFd	services/inputflinger/EventHub.h	/^    int mEpollFd;$/;"	m	class:android::EventHub
mError	include/binder/Parcel.h	/^    status_t            mError;$/;"	m	class:android::Parcel
mError	services/surfaceflinger/DispSync.h	/^    nsecs_t mError;$/;"	m	class:android::DispSync
mEstimatedGyroRate	services/sensorservice/SensorFusion.h	/^    float mEstimatedGyroRate;$/;"	m	class:android::SensorFusion
mEventBuffer	services/inputflinger/InputReader.h	/^    RawEvent mEventBuffer[EVENT_BUFFER_SIZE];$/;"	m	class:android::InputReader
mEventCache	services/sensorservice/SensorService.h	/^        sensors_event_t *mEventCache;$/;"	m	class:android::SensorService::SensorEventConnection
mEventConnection	include/gui/DisplayEventReceiver.h	/^    sp<IDisplayEventConnection> mEventConnection;$/;"	m	class:android::DisplayEventReceiver
mEventControlLock	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    mutable Mutex mEventControlLock;$/;"	m	class:android::HWComposer
mEventControlThread	services/surfaceflinger/SurfaceFlinger.h	/^    sp<EventControlThread> mEventControlThread;$/;"	m	class:android::SurfaceFlinger
mEventFactory	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^    PreallocatedInputEventFactory mEventFactory;$/;"	m	class:android::InputPublisherAndConsumerTest	file:
mEventHandler	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    EventHandler&                   mEventHandler;$/;"	m	class:android::HWComposer
mEventHub	services/inputflinger/InputReader.h	/^    sp<EventHubInterface> mEventHub;$/;"	m	class:android::InputReader
mEventHub	services/inputflinger/tests/InputReader_test.cpp	/^    sp<EventHubInterface> mEventHub;$/;"	m	class:android::FakeInputReaderContext	file:
mEventListeners	services/surfaceflinger/DispSync.cpp	/^    Vector<EventListener> mEventListeners;$/;"	m	class:android::DispSyncThread	file:
mEventLock	include/media/drm/DrmAPI.h	/^        Mutex mEventLock;$/;"	m	class:android::DrmPlugin
mEventMask	services/surfaceflinger/MessageQueue.h	/^        int32_t mEventMask;$/;"	m	class:android::MessageQueue::Handler
mEventQueue	services/surfaceflinger/SurfaceFlinger.h	/^    mutable MessageQueue mEventQueue;$/;"	m	class:android::SurfaceFlinger
mEventThread	services/surfaceflinger/EventThread.h	/^        sp<EventThread> const mEventThread;$/;"	m	class:android::EventThread::Connection
mEventThread	services/surfaceflinger/MessageQueue.h	/^    sp<EventThread> mEventThread;$/;"	m	class:android::MessageQueue
mEventThread	services/surfaceflinger/SurfaceFlinger.h	/^    sp<EventThread> mEventThread;$/;"	m	class:android::SurfaceFlinger
mEventTime	include/input/Input.h	/^    nsecs_t mEventTime;$/;"	m	class:android::KeyEvent
mEventTime	services/surfaceflinger/DispSync.cpp	/^        nsecs_t mEventTime;$/;"	m	struct:android::DispSyncThread::CallbackInvocation	file:
mEventTube	services/surfaceflinger/MessageQueue.h	/^    sp<BitTube> mEventTube;$/;"	m	class:android::MessageQueue
mEvents	services/inputflinger/tests/InputReader_test.cpp	/^    List<RawEvent> mEvents;$/;"	m	class:android::FakeEventHub	file:
mEvents	services/surfaceflinger/MessageQueue.h	/^    sp<IDisplayEventConnection> mEvents;$/;"	m	class:android::MessageQueue
mEventsReceived	services/sensorservice/SensorService.h	/^        int mEventsReceived, mEventsSent, mEventsSentFromCache;$/;"	m	class:android::SensorService::SensorEventConnection
mEventsSent	services/sensorservice/SensorService.h	/^        int mEventsReceived, mEventsSent, mEventsSentFromCache;$/;"	m	class:android::SensorService::SensorEventConnection
mEventsSentFromCache	services/sensorservice/SensorService.h	/^        int mEventsReceived, mEventsSent, mEventsSentFromCache;$/;"	m	class:android::SensorService::SensorEventConnection
mExcludedDevices	services/inputflinger/EventHub.h	/^    Vector<String8> mExcludedDevices;$/;"	m	class:android::EventHub
mExcludedDevices	services/inputflinger/tests/InputReader_test.cpp	/^    Vector<String8> mExcludedDevices;$/;"	m	class:android::FakeEventHub	file:
mExtensionList	services/surfaceflinger/RenderEngine/GLExtensions.h	/^    SortedVector<String8> mExtensionList;$/;"	m	class:android::GLExtensions
mExtensionString	opengl/libs/EGL/egl_display.h	/^            String8 mExtensionString;$/;"	m	class:android::egl_display_t
mExtensions	services/surfaceflinger/RenderEngine/GLExtensions.h	/^    String8 mExtensions;$/;"	m	class:android::GLExtensions
mExternalDisplay	services/inputflinger/InputReader.h	/^    DisplayViewport mExternalDisplay;$/;"	m	struct:android::InputReaderConfiguration
mExternalHoveringCursorVisible	services/inputflinger/InputReader.h	/^    bool mExternalHoveringCursorVisible;$/;"	m	class:android::TouchInputMapper
mExtras	include/binder/Binder.h	/^    atomic_uintptr_t    mExtras;  \/\/ should be atomic<Extras *>$/;"	m	class:android::BBinder
mFC	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^    sp<FrameCondition> mFC;$/;"	m	class:android::SurfaceTextureGLThreadToGLTest
mFD	include/binder/MemoryHeapBase.h	/^    int         mFD;$/;"	m	class:android::MemoryHeapBase
mFD	libs/binder/Static.cpp	/^    int mFD;$/;"	m	class:android::FdTextOutput	file:
mFGSurfaceControl	services/surfaceflinger/tests/Transaction_test.cpp	/^    sp<SurfaceControl> mFGSurfaceControl;$/;"	m	class:android::LayerUpdateTest	file:
mFVertexBuffer	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^    private FloatBuffer mFVertexBuffer;$/;"	f	class:Triangle	file:
mFW	libs/gui/tests/SurfaceTextureGL.h	/^    sp<FrameWaiter> mFW;$/;"	m	class:android::SurfaceTextureGLTest
mFakeContext	services/inputflinger/tests/InputReader_test.cpp	/^    FakeInputReaderContext* mFakeContext;$/;"	m	class:android::InputDeviceTest	file:
mFakeContext	services/inputflinger/tests/InputReader_test.cpp	/^    FakeInputReaderContext* mFakeContext;$/;"	m	class:android::InputMapperTest	file:
mFakeEventHub	services/inputflinger/tests/InputReader_test.cpp	/^    sp<FakeEventHub> mFakeEventHub;$/;"	m	class:android::InputDeviceTest	file:
mFakeEventHub	services/inputflinger/tests/InputReader_test.cpp	/^    sp<FakeEventHub> mFakeEventHub;$/;"	m	class:android::InputMapperTest	file:
mFakeEventHub	services/inputflinger/tests/InputReader_test.cpp	/^    sp<FakeEventHub> mFakeEventHub;$/;"	m	class:android::InputReaderTest	file:
mFakeListener	services/inputflinger/tests/InputReader_test.cpp	/^    sp<FakeInputListener> mFakeListener;$/;"	m	class:android::InputDeviceTest	file:
mFakeListener	services/inputflinger/tests/InputReader_test.cpp	/^    sp<FakeInputListener> mFakeListener;$/;"	m	class:android::InputMapperTest	file:
mFakeListener	services/inputflinger/tests/InputReader_test.cpp	/^    sp<FakeInputListener> mFakeListener;$/;"	m	class:android::InputReaderTest	file:
mFakePointerController	services/inputflinger/tests/InputReader_test.cpp	/^    sp<FakePointerController> mFakePointerController;$/;"	m	class:android::CursorInputMapperTest	file:
mFakePolicy	services/inputflinger/tests/InputDispatcher_test.cpp	/^    sp<FakeInputDispatcherPolicy> mFakePolicy;$/;"	m	class:android::InputDispatcherTest	file:
mFakePolicy	services/inputflinger/tests/InputReader_test.cpp	/^    sp<FakeInputReaderPolicy> mFakePolicy;$/;"	m	class:android::InputDeviceTest	file:
mFakePolicy	services/inputflinger/tests/InputReader_test.cpp	/^    sp<FakeInputReaderPolicy> mFakePolicy;$/;"	m	class:android::InputMapperTest	file:
mFakePolicy	services/inputflinger/tests/InputReader_test.cpp	/^    sp<FakeInputReaderPolicy> mFakePolicy;$/;"	m	class:android::InputReaderTest	file:
mFallbackKeys	services/inputflinger/InputDispatcher.h	/^        KeyedVector<int32_t, int32_t> mFallbackKeys;$/;"	m	class:android::InputDispatcher::InputState
mFbDev	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    framebuffer_device_t*           mFbDev;$/;"	m	class:android::HWComposer
mFbFence	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    sp<Fence> mFbFence;$/;"	m	class:android::VirtualDisplaySurface
mFbName	services/surfaceflinger/RenderEngine/RenderEngine.h	/^        uint32_t mTexName, mFbName;$/;"	m	class:android::RenderEngine::BindImageAsFramebuffer
mFbProducerSlot	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    int mFbProducerSlot;$/;"	m	class:android::VirtualDisplaySurface
mFbo	libs/gui/tests/SurfaceTextureFBO.h	/^    GLuint mFbo;$/;"	m	class:android::SurfaceTextureFBOTest
mFboCapture	services/surfaceflinger/LayerBlur.h	/^    FBO mFboCapture;$/;"	m	class:android::LayerBlur
mFboMasking	services/surfaceflinger/LayerBlur.h	/^    FBO mFboMasking;$/;"	m	class:android::LayerBlur
mFboTex	libs/gui/tests/SurfaceTextureFBO.h	/^    GLuint mFboTex;$/;"	m	class:android::SurfaceTextureFBOTest
mFd	include/input/InputTransport.h	/^    int mFd;$/;"	m	class:android::InputChannel
mFdsKnown	include/binder/Parcel.h	/^    mutable bool        mFdsKnown;$/;"	m	class:android::Parcel
mFence	include/gui/BufferItem.h	/^    sp<Fence> mFence;$/;"	m	class:android::BufferItem
mFence	include/gui/BufferSlot.h	/^    sp<Fence> mFence;$/;"	m	struct:android::BufferSlot
mFence	include/gui/ConsumerBase.h	/^        sp<Fence> mFence;$/;"	m	struct:android::ConsumerBase::Slot
mFence	include/gui/IGraphicBufferConsumer.h	/^        sp<Fence> mFence;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mFenceFd	include/ui/Fence.h	/^    int mFenceFd;$/;"	m	class:android::Fence
mFifoMaxEventCount	include/gui/Sensor.h	/^    int32_t mFifoMaxEventCount;$/;"	m	class:android::Sensor
mFifoReservedEventCount	include/gui/Sensor.h	/^    int32_t mFifoReservedEventCount;$/;"	m	class:android::Sensor
mFilename	opengl/libs/EGL/egl_cache.h	/^    String8 mFilename;$/;"	m	class:android::egl_cache_t
mFilename	opengl/tests/EGLTest/egl_cache_test.cpp	/^    String8 mFilename;$/;"	m	class:android::EGLCacheSerializationTest	file:
mFiltering	services/surfaceflinger/Layer.h	/^    bool mFiltering;$/;"	m	class:android::Layer
mFiltering	services/surfaceflinger/RenderEngine/Texture.h	/^    bool mFiltering;$/;"	m	class:android::Texture
mFilteringEnabled	include/gui/GLConsumer.h	/^    bool mFilteringEnabled;$/;"	m	class:android::GLConsumer
mFirst	libs/binder/MemoryDealer.cpp	/^    NODE*  mFirst;$/;"	m	class:android::LinkedList	file:
mFirstFlushPending	services/sensorservice/SensorService.h	/^            bool mFirstFlushPending;$/;"	m	struct:android::SensorService::SensorEventConnection::FlushInfo
mFirstFrame	cmds/flatland/Main.cpp	/^    bool mFirstFrame;$/;"	m	class:Layer	file:
mFirstResyncSample	services/surfaceflinger/DispSync.h	/^    size_t mFirstResyncSample;$/;"	m	class:android::DispSync
mFlags	include/binder/BufferedTextOutput.h	/^    uint32_t            mFlags;$/;"	m	class:android::BufferedTextOutput
mFlags	include/binder/MemoryHeapBase.h	/^    uint32_t    mFlags;$/;"	m	class:android::MemoryHeapBase
mFlags	include/gui/Sensor.h	/^    int32_t mFlags;$/;"	m	class:android::Sensor
mFlags	include/input/Input.h	/^    int32_t mFlags;$/;"	m	class:android::KeyEvent
mFlags	include/input/Input.h	/^    int32_t mFlags;$/;"	m	class:android::MotionEvent
mFlags	libs/binder/IMemory.cpp	/^    mutable uint32_t    mFlags;$/;"	m	class:android::BpMemoryHeap	file:
mFlags	services/surfaceflinger/DisplayDevice.h	/^    uint32_t        mFlags;$/;"	m	class:android::DisplayDevice
mFlinger	services/surfaceflinger/Client.h	/^    sp<SurfaceFlinger> mFlinger;$/;"	m	class:android::Client
mFlinger	services/surfaceflinger/DisplayDevice.h	/^    sp<SurfaceFlinger> mFlinger;$/;"	m	class:android::DisplayDevice
mFlinger	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    sp<SurfaceFlinger>              mFlinger;$/;"	m	class:android::HWComposer
mFlinger	services/surfaceflinger/EventControlThread.h	/^    sp<SurfaceFlinger> mFlinger;$/;"	m	class:android::EventControlThread
mFlinger	services/surfaceflinger/Layer.h	/^        sp<SurfaceFlinger> mFlinger;$/;"	m	class:android::Layer::LayerCleaner
mFlinger	services/surfaceflinger/Layer.h	/^    sp<SurfaceFlinger> mFlinger;$/;"	m	class:android::Layer
mFlinger	services/surfaceflinger/MessageQueue.h	/^    sp<SurfaceFlinger> mFlinger;$/;"	m	class:android::MessageQueue
mFlinger	services/surfaceflinger/MonitoredProducer.h	/^    sp<SurfaceFlinger> mFlinger;$/;"	m	class:android::MonitoredProducer
mFocusedApplicationHandle	services/inputflinger/InputDispatcher.h	/^    sp<InputApplicationHandle> mFocusedApplicationHandle;$/;"	m	class:android::InputDispatcher
mFocusedWindowHandle	services/inputflinger/InputDispatcher.h	/^    sp<InputWindowHandle> mFocusedWindowHandle;$/;"	m	class:android::InputDispatcher
mForceHwcCopy	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    bool mForceHwcCopy;$/;"	m	class:android::VirtualDisplaySurface
mForceSynchronous	libs/gui/SurfaceComposerClient.cpp	/^    uint32_t                    mForceSynchronous;$/;"	m	class:android::Composer	file:
mFormat	include/input/KeyCharacterMap.h	/^        Format mFormat;$/;"	m	class:android::KeyCharacterMap::Parser
mFormat	services/surfaceflinger/DisplayDevice.h	/^    PixelFormat     mFormat;$/;"	m	class:android::DisplayDevice
mFormat	services/surfaceflinger/Layer.h	/^    PixelFormat mFormat;$/;"	m	class:android::Layer
mFps	services/surfaceflinger/FrameRateHelper.h	/^    unsigned int mFps;$/;"	m	class:android::FrameRateHelper
mFpsCount	services/surfaceflinger/FrameRateHelper.h	/^    unsigned int mFpsCount;$/;"	m	class:android::FrameRateHelper
mFragmentShader	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private final String mFragmentShader =$/;"	f	class:CamRenderer	file:
mFragmentShader	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        private final String mFragmentShader = "precision mediump float;\\n"$/;"	f	class:GL2JavaView.Renderer	file:
mFragmentShader	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private final String mFragmentShader = "precision mediump float;\\n"$/;"	f	class:TestLatencyView.Renderer	file:
mFragmentShader	services/surfaceflinger/RenderEngine/Program.h	/^    GLuint mFragmentShader;$/;"	m	class:android::Program
mFrame	services/surfaceflinger/DisplayDevice.h	/^    Rect mFrame;$/;"	m	class:android::DisplayDevice
mFrameAvailable	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        bool mFrameAvailable;$/;"	m	class:android::SurfaceTextureGLThreadToGLTest::FrameCondition
mFrameAvailableCondition	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        Condition mFrameAvailableCondition;$/;"	m	class:android::SurfaceTextureGLThreadToGLTest::FrameCondition
mFrameAvailableListener	include/gui/ConsumerBase.h	/^    wp<FrameAvailableListener> mFrameAvailableListener;$/;"	m	class:android::ConsumerBase
mFrameCondition	libs/gui/tests/CpuConsumer_test.cpp	/^        Condition mFrameCondition;$/;"	m	class:android::CpuConsumerTest::DisconnectWaiter	file:
mFrameCondition	libs/gui/tests/DisconnectWaiter.h	/^    Condition mFrameCondition;$/;"	m	class:android::DisconnectWaiter
mFrameCounter	include/gui/BufferQueueCore.h	/^    uint64_t mFrameCounter;$/;"	m	class:android::BufferQueueCore
mFrameFinishCondition	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        Condition mFrameFinishCondition;$/;"	m	class:android::SurfaceTextureGLThreadToGLTest::FrameCondition
mFrameFinished	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        bool mFrameFinished;$/;"	m	class:android::SurfaceTextureGLThreadToGLTest::FrameCondition
mFrameLatencyNeeded	services/surfaceflinger/Layer.h	/^    bool mFrameLatencyNeeded;$/;"	m	class:android::Layer
mFrameNumber	include/gui/BufferItem.h	/^    uint64_t mFrameNumber;$/;"	m	class:android::BufferItem
mFrameNumber	include/gui/BufferSlot.h	/^    uint64_t mFrameNumber;$/;"	m	struct:android::BufferSlot
mFrameNumber	include/gui/ConsumerBase.h	/^        uint64_t mFrameNumber;$/;"	m	struct:android::ConsumerBase::Slot
mFrameNumber	include/gui/IGraphicBufferConsumer.h	/^        uint64_t mFrameNumber;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mFrameRateHelper	services/surfaceflinger/SurfaceFlinger.h	/^    FrameRateHelper mFrameRateHelper;$/;"	m	class:android::SurfaceFlinger
mFrameRecords	services/surfaceflinger/FrameTracker.h	/^    FrameRecord mFrameRecords[NUM_FRAME_RECORDS];$/;"	m	class:android::FrameTracker
mFrameTracker	services/surfaceflinger/Layer.h	/^    FrameTracker mFrameTracker;$/;"	m	class:android::Layer
mFramesCompleted	opengl/libs/EGL/eglApi.cpp	/^    uint32_t mFramesCompleted;$/;"	m	class:FrameCompletionThread	file:
mFramesQueued	opengl/libs/EGL/eglApi.cpp	/^    uint32_t mFramesQueued;$/;"	m	class:FrameCompletionThread	file:
mFunctionsEmitted	opengl/tools/glgen/src/JniCodeEmitter.java	/^    HashSet<String> mFunctionsEmitted = new HashSet<String>();$/;"	f	class:JniCodeEmitter
mFusion	services/sensorservice/SensorFusion.h	/^    Fusion mFusion;$/;"	m	class:android::SensorFusion
mGForce	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private float[] mGForce = new float[3];$/;"	f	class:CamRenderer	file:
mGL2View	opengl/tests/gldual/src/com/android/gldual/GLDualActivity.java	/^    GLDualGL2View mGL2View;$/;"	f	class:GLDualActivity
mGLConsumer	cmds/flatland/Main.cpp	/^    sp<GLConsumer> mGLConsumer;$/;"	m	class:BenchmarkRunner	file:
mGLConsumer	cmds/flatland/Main.cpp	/^    sp<GLConsumer> mGLConsumer;$/;"	m	class:Layer	file:
mGLHelper	cmds/flatland/Main.cpp	/^    GLHelper* mGLHelper;$/;"	m	class:BenchmarkRunner	file:
mGLHelper	cmds/flatland/Main.cpp	/^    GLHelper* mGLHelper;$/;"	m	class:Layer	file:
mGLView	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private GLSurfaceView mGLView;$/;"	f	class:GL2CameraEye	file:
mGLView	opengl/tests/gldual/src/com/android/gldual/GLDualActivity.java	/^    GLSurfaceView mGLView;$/;"	f	class:GLDualActivity
mGLView	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    private GLSurfaceView mGLView;$/;"	f	class:ClearActivity	file:
mGeneration	include/input/InputDevice.h	/^    int32_t mGeneration;$/;"	m	class:android::InputDeviceInfo
mGeneration	services/inputflinger/InputReader.h	/^    int32_t mGeneration;$/;"	m	class:android::InputDevice
mGeneration	services/inputflinger/InputReader.h	/^    int32_t mGeneration;$/;"	m	class:android::InputReader
mGeneration	services/inputflinger/tests/InputReader_test.cpp	/^    int32_t mGeneration;$/;"	m	class:android::FakeInputReaderContext	file:
mGeometricScale	services/inputflinger/InputReader.h	/^    float mGeometricScale;$/;"	m	class:android::TouchInputMapper
mGlConfig	libs/gui/tests/GLTest.h	/^    EGLConfig  mGlConfig;$/;"	m	class:android::GLTest
mGlConsumer	libs/gui/tests/MultiTextureConsumer_test.cpp	/^    sp<GLConsumer> mGlConsumer;$/;"	m	class:android::MultiTextureConsumerTest	file:
mGlobalMetaState	services/inputflinger/InputReader.h	/^    int32_t mGlobalMetaState;$/;"	m	class:android::InputReader
mGlobalMetaState	services/inputflinger/tests/InputReader_test.cpp	/^    int32_t mGlobalMetaState;$/;"	m	class:android::FakeInputReaderContext	file:
mGlobalState	include/binder/BufferedTextOutput.h	/^    BufferState*        mGlobalState;$/;"	m	class:android::BufferedTextOutput
mGlobalTransform	services/surfaceflinger/DisplayDevice.h	/^    Transform mGlobalTransform;$/;"	m	class:android::DisplayDevice
mGpuTileRenderEnable	services/surfaceflinger/SurfaceFlinger.h	/^    bool mGpuTileRenderEnable;$/;"	m	class:android::SurfaceFlinger
mGpuToCpuSupported	services/surfaceflinger/SurfaceFlinger.h	/^    bool mGpuToCpuSupported;$/;"	m	class:android::SurfaceFlinger
mGradPgm	cmds/flatland/Renderers.cpp	/^    GLuint mGradPgm;$/;"	m	class:android::GradientRenderer	file:
mGraphicBuffer	include/gui/BufferItem.h	/^    sp<GraphicBuffer> mGraphicBuffer;$/;"	m	class:android::BufferItem
mGraphicBuffer	include/gui/BufferSlot.h	/^    sp<GraphicBuffer> mGraphicBuffer;$/;"	m	struct:android::BufferSlot
mGraphicBuffer	include/gui/ConsumerBase.h	/^        sp<GraphicBuffer> mGraphicBuffer;$/;"	m	struct:android::ConsumerBase::Slot
mGraphicBuffer	include/gui/CpuConsumer.h	/^        sp<GraphicBuffer> mGraphicBuffer;$/;"	m	struct:android::CpuConsumer::AcquiredBuffer
mGraphicBuffer	include/gui/GLConsumer.h	/^        sp<GraphicBuffer> mGraphicBuffer;$/;"	m	class:android::GLConsumer::EglImage
mGraphicBuffer	include/gui/IGraphicBufferConsumer.h	/^        sp<GraphicBuffer> mGraphicBuffer;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mGraphicBufferAlloc	cmds/flatland/GLHelper.h	/^    sp<GraphicBufferAlloc> mGraphicBufferAlloc;$/;"	m	class:android::GLHelper
mGraphicBufferProducer	include/gui/Surface.h	/^    sp<IGraphicBufferProducer> mGraphicBufferProducer;$/;"	m	class:android::Surface
mGraphicBufferProducer	include/gui/SurfaceControl.h	/^    sp<IGraphicBufferProducer>  mGraphicBufferProducer;$/;"	m	class:android::SurfaceControl
mGraphicBufferProducerList	services/surfaceflinger/SurfaceFlinger.h	/^    SortedVector< wp<IBinder> > mGraphicBufferProducerList;$/;"	m	class:android::SurfaceFlinger
mGravitySensor	services/sensorservice/LinearAccelerationSensor.h	/^    GravitySensor mGravitySensor;$/;"	m	class:android::LinearAccelerationSensor
mGreenSize	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        protected int mGreenSize;$/;"	f	class:GL2JNIView.ConfigChooser
mGreenSize	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        protected int mGreenSize;$/;"	f	class:GLPerfView.ConfigChooser
mGreenSize	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        protected int mGreenSize;$/;"	f	class:GLDualGL2View.ConfigChooser
mGrid	opengl/tests/testViewport/src/com/android/test/TestView.java	/^        private Grid mGrid;$/;"	f	class:TestView.Renderer	file:
mGroupCache	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    DefaultKeyedVector<Key, Group> mGroupCache;$/;"	m	class:android::GLES20RenderEngine
mGroupStack	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    Vector<Group> mGroupStack;$/;"	m	class:android::GLES20RenderEngine
mGyro	services/sensorservice/CorrectedGyroSensor.h	/^    Sensor mGyro;$/;"	m	class:android::CorrectedGyroSensor
mGyro	services/sensorservice/SensorFusion.h	/^    Sensor mGyro;$/;"	m	class:android::SensorFusion
mGyroRate	services/sensorservice/Fusion.h	/^    float mGyroRate;$/;"	m	class:android::Fusion
mGyroTime	services/sensorservice/SensorFusion.h	/^    nsecs_t mGyroTime;$/;"	m	class:android::SensorFusion
mH	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       private int mH;$/;"	f	class:TestView.Grid	file:
mHWVsyncAvailable	services/surfaceflinger/SurfaceFlinger.h	/^    bool mHWVsyncAvailable;$/;"	m	class:android::SurfaceFlinger
mHWVsyncLock	services/surfaceflinger/SurfaceFlinger.h	/^    Mutex mHWVsyncLock;$/;"	m	class:android::SurfaceFlinger
mHWheelScale	services/inputflinger/InputReader.h	/^    float mHWheelScale;$/;"	m	class:android::CursorInputMapper
mHandle	include/binder/BpBinder.h	/^    const   int32_t             mHandle;$/;"	m	class:android::BpBinder
mHandle	include/gui/Sensor.h	/^    int32_t mHandle;$/;"	m	class:android::Sensor
mHandle	include/gui/SurfaceControl.h	/^    sp<IBinder>                 mHandle;$/;"	m	class:android::SurfaceControl
mHandle	opengl/tools/glgen/static/egl/EGLObjectHandle.java	/^    private final long mHandle;$/;"	f	class:EGLObjectHandle	file:
mHandleToObject	include/binder/ProcessState.h	/^            Vector<handle_entry>mHandleToObject;$/;"	m	class:android::ProcessState
mHandler	services/surfaceflinger/MessageQueue.h	/^    sp<Handler> mHandler;$/;"	m	class:android::MessageQueue
mHardwareOrientation	services/surfaceflinger/DisplayDevice.h	/^    int mHardwareOrientation;$/;"	m	class:android::DisplayDevice
mHasButtonUnderPad	include/input/InputDevice.h	/^    bool mHasButtonUnderPad;$/;"	m	class:android::InputDeviceInfo
mHasColorMatrix	services/surfaceflinger/SurfaceFlinger.h	/^    bool mHasColorMatrix;$/;"	m	class:android::SurfaceFlinger
mHasExternalHoveringCursorControl	services/inputflinger/InputReader.h	/^    bool mHasExternalHoveringCursorControl;$/;"	m	class:android::TouchInputMapper
mHasFds	include/binder/Parcel.h	/^    mutable bool        mHasFds;$/;"	m	class:android::Parcel
mHasFenceSync	include/private/gui/SyncFeatures.h	/^    bool mHasFenceSync;$/;"	m	class:android::SyncFeatures
mHasLooperCallbacks	services/sensorservice/SensorService.h	/^        bool mHasLooperCallbacks;$/;"	m	class:android::SensorService::SensorEventConnection
mHasNativeFenceSync	include/private/gui/SyncFeatures.h	/^    bool mHasNativeFenceSync;$/;"	m	class:android::SyncFeatures
mHasSurface	services/surfaceflinger/Layer.h	/^    mutable bool mHasSurface;$/;"	m	class:android::Layer
mHasVibrator	include/input/InputDevice.h	/^    bool mHasVibrator;$/;"	m	class:android::InputDeviceInfo
mHasWaitSync	include/private/gui/SyncFeatures.h	/^    bool mHasWaitSync;$/;"	m	class:android::SyncFeatures
mHaveAbsMTToolType	services/inputflinger/InputReader.h	/^        bool mHaveAbsMTToolType;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mHaveAbsMTTouchMinor	services/inputflinger/InputReader.h	/^        bool mHaveAbsMTTouchMinor;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mHaveAbsMTWidthMinor	services/inputflinger/InputReader.h	/^        bool mHaveAbsMTWidthMinor;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mHaveBounds	services/inputflinger/tests/InputReader_test.cpp	/^    bool mHaveBounds;$/;"	m	class:android::FakePointerController	file:
mHaveBtnTouch	services/inputflinger/InputReader.h	/^    bool mHaveBtnTouch;$/;"	m	class:android::TouchButtonAccumulator
mHaveBuffer	include/gui/SurfaceComposerClient.h	/^    bool mHaveBuffer;$/;"	m	class:android::ScreenshotClient
mHaveRelHWheel	services/inputflinger/InputReader.h	/^    bool mHaveRelHWheel;$/;"	m	class:android::CursorScrollAccumulator
mHaveRelWheel	services/inputflinger/InputReader.h	/^    bool mHaveRelWheel;$/;"	m	class:android::CursorScrollAccumulator
mHaveStylus	services/inputflinger/InputReader.h	/^    bool mHaveStylus;$/;"	m	class:android::MultiTouchMotionAccumulator
mHaveStylus	services/inputflinger/InputReader.h	/^    bool mHaveStylus;$/;"	m	class:android::TouchButtonAccumulator
mHaveTilt	services/inputflinger/InputReader.h	/^    bool mHaveTilt;$/;"	m	class:android::TouchInputMapper
mHeap	include/binder/MemoryBase.h	/^    sp<IMemoryHeap> mHeap;$/;"	m	class:android::MemoryBase
mHeap	include/binder/MemoryDealer.h	/^    sp<IMemoryHeap>             mHeap;$/;"	m	class:android::MemoryDealer
mHeap	include/gui/SurfaceComposerClient.h	/^    sp<IMemoryHeap> mHeap;$/;"	m	class:android::ScreenshotClient
mHeap	libs/binder/IMemory.cpp	/^    mutable sp<IMemoryHeap> mHeap;$/;"	m	class:android::BpMemory	file:
mHeap	services/surfaceflinger/tests/Transaction_test.cpp	/^    sp<IMemoryHeap> mHeap;$/;"	m	class:android::ScreenCapture	file:
mHeapCache	libs/binder/IMemory.cpp	/^    KeyedVector< wp<IBinder>, heap_info_t > mHeapCache;$/;"	m	class:android::HeapCache	file:
mHeapCacheLock	libs/binder/IMemory.cpp	/^    Mutex mHeapCacheLock;$/;"	m	class:android::HeapCache	file:
mHeapId	libs/binder/IMemory.cpp	/^    mutable volatile int32_t mHeapId;$/;"	m	class:android::BpMemoryHeap	file:
mHeapSize	libs/binder/MemoryDealer.cpp	/^    size_t              mHeapSize;$/;"	m	class:android::SimpleBestFitAllocator	file:
mHeight	include/media/hardware/HardwareAPI.h	/^    OMX_U32 mHeight;                 \/\/ height of largest plane (unpadded, as in nFrameHeight)$/;"	m	struct:android::MediaImage
mHeight	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        int mHeight;$/;"	m	class:android::GLES20RenderEngine::Key
mHeight	services/surfaceflinger/RenderEngine/Texture.h	/^    size_t mHeight;$/;"	m	class:android::Texture
mHeight	services/surfaceflinger/tests/Transaction_test.cpp	/^    const uint32_t mHeight;$/;"	m	class:android::ScreenCapture	file:
mHibernating	opengl/libs/EGL/egl_display.h	/^        bool       mHibernating;$/;"	m	class:android::egl_display_t::HibernationMachine
mHibernation	opengl/libs/EGL/egl_display.h	/^    HibernationMachine mHibernation;$/;"	m	class:android::egl_display_t
mHorizSubsampling	include/media/hardware/HardwareAPI.h	/^        OMX_U32 mHorizSubsampling;   \/\/ subsampling compared to the largest plane$/;"	m	struct:android::MediaImage::PlaneInfo
mHwWorkListDirty	services/surfaceflinger/SurfaceFlinger.h	/^    bool mHwWorkListDirty;$/;"	m	class:android::SurfaceFlinger
mHwc	services/surfaceflinger/DisplayHardware/FramebufferSurface.h	/^    HWComposer& mHwc;$/;"	m	class:android::FramebufferSurface
mHwc	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    struct hwc_composer_device_1* mHwc;$/;"	m	class:android::HWCLayerVersion1	typeref:struct:android::HWCLayerVersion1::hwc_composer_device_1	file:
mHwc	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        HWComposer& mHwc;$/;"	m	class:android::HWComposer::VSyncThread
mHwc	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    struct hwc_composer_device_1*   mHwc;$/;"	m	class:android::HWComposer	typeref:struct:android::HWComposer::hwc_composer_device_1
mHwc	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    HWComposer& mHwc;$/;"	m	class:android::VirtualDisplaySurface
mHwc	services/surfaceflinger/SurfaceFlinger.h	/^    HWComposer* mHwc;$/;"	m	class:android::SurfaceFlinger
mHwcDisplayId	services/surfaceflinger/DisplayDevice.h	/^    int32_t mHwcDisplayId;$/;"	m	class:android::DisplayDevice
mINotifyFd	services/inputflinger/EventHub.h	/^    int mINotifyFd;$/;"	m	class:android::EventHub
mId	include/input/InputDevice.h	/^    int32_t mId;$/;"	m	class:android::InputDeviceInfo
mId	include/ui/GraphicBuffer.h	/^    uint64_t mId;$/;"	m	class:android::GraphicBuffer
mId	opengl/libs/GLES_trace/src/gltrace_context.h	/^    int mId;                    \/* unique context id *\/$/;"	m	class:android::gltrace::GLTraceContext
mId	services/inputflinger/InputReader.h	/^    int32_t mId;$/;"	m	class:android::InputDevice
mIdentifier	include/input/InputDevice.h	/^    InputDeviceIdentifier mIdentifier;$/;"	m	class:android::InputDeviceInfo
mIdentifier	services/inputflinger/InputReader.h	/^    InputDeviceIdentifier mIdentifier;$/;"	m	class:android::InputDevice
mIn	include/binder/IPCThreadState.h	/^            Parcel              mIn;$/;"	m	class:android::IPCThreadState
mInUse	services/inputflinger/InputReader.h	/^        bool mInUse;$/;"	m	class:android::MultiTouchMotionAccumulator::Slot
mInboundQueue	services/inputflinger/InputDispatcher.h	/^    Queue<EventEntry> mInboundQueue;$/;"	m	class:android::InputDispatcher
mIndent	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^    int mIndent;$/;"	m	class:android::Formatter	file:
mIndex	include/binder/BufferedTextOutput.h	/^    const int32_t       mIndex;$/;"	m	class:android::BufferedTextOutput
mIndex	include/input/VelocityTracker.h	/^    uint32_t mIndex;$/;"	m	class:android::LeastSquaresVelocityTrackerStrategy
mIndex	include/input/VelocityTracker.h	/^    uint32_t mIndex;$/;"	m	class:android::LegacyVelocityTrackerStrategy
mIndex	services/inputflinger/InputReader.h	/^    ssize_t mIndex;$/;"	m	class:android::VibratorInputMapper
mIndex	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        size_t mIndex;$/;"	m	class:android::HWComposer::LayerListIterator
mIndexBuffer	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^    private ShortBuffer mIndexBuffer;$/;"	f	class:Triangle	file:
mIndexBuffer	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       private CharBuffer mIndexBuffer;$/;"	f	class:TestView.Grid	file:
mIndexCount	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       private int mIndexCount;$/;"	f	class:TestView.Grid	file:
mInfo	services/inputflinger/InputApplication.h	/^    InputApplicationInfo* mInfo;$/;"	m	class:android::InputApplicationHandle
mInfo	services/inputflinger/InputWindow.h	/^    InputWindowInfo* mInfo;$/;"	m	class:android::InputWindowHandle
mInitCheck	include/ui/GraphicBuffer.h	/^    ssize_t mInitCheck;$/;"	m	class:android::GraphicBuffer
mInitCheck	services/sensorservice/SensorService.h	/^    status_t mInitCheck;$/;"	m	class:android::SensorService
mInitState	services/sensorservice/Fusion.h	/^    uint32_t mInitState;$/;"	m	class:android::Fusion
mInitialized	opengl/libs/EGL/egl_cache.h	/^    bool mInitialized;$/;"	m	class:android::egl_cache_t
mInitialized	services/surfaceflinger/RenderEngine/Program.h	/^    bool mInitialized;$/;"	m	class:android::Program
mInjectionResultAvailableCondition	services/inputflinger/InputDispatcher.h	/^    Condition mInjectionResultAvailableCondition;$/;"	m	class:android::InputDispatcher
mInjectionSyncFinishedCondition	services/inputflinger/InputDispatcher.h	/^    Condition mInjectionSyncFinishedCondition;$/;"	m	class:android::InputDispatcher
mInnerListener	services/inputflinger/InputListener.h	/^    sp<InputListenerInterface> mInnerListener;$/;"	m	class:android::QueuedInputListener
mInput	include/gui/StreamSplitter.h	/^    sp<IGraphicBufferConsumer> mInput;$/;"	m	class:android::StreamSplitter
mInputDevices	services/inputflinger/tests/InputReader_test.cpp	/^    Vector<InputDeviceInfo> mInputDevices;$/;"	m	class:android::FakeInputReaderPolicy	file:
mInputFilterEnabled	services/inputflinger/InputDispatcher.h	/^    bool mInputFilterEnabled;$/;"	m	class:android::InputDispatcher
mInputSurface	libs/gui/tests/SRGB_test.cpp	/^    sp<Surface> mInputSurface;$/;"	m	class:android::SRGBTest	file:
mInputTargetWaitApplicationHandle	services/inputflinger/InputDispatcher.h	/^    sp<InputApplicationHandle> mInputTargetWaitApplicationHandle;$/;"	m	class:android::InputDispatcher
mInputTargetWaitCause	services/inputflinger/InputDispatcher.h	/^    InputTargetWaitCause mInputTargetWaitCause;$/;"	m	class:android::InputDispatcher
mInputTargetWaitStartTime	services/inputflinger/InputDispatcher.h	/^    nsecs_t mInputTargetWaitStartTime;$/;"	m	class:android::InputDispatcher
mInputTargetWaitTimeoutExpired	services/inputflinger/InputDispatcher.h	/^    bool mInputTargetWaitTimeoutExpired;$/;"	m	class:android::InputDispatcher
mInputTargetWaitTimeoutTime	services/inputflinger/InputDispatcher.h	/^    nsecs_t mInputTargetWaitTimeoutTime;$/;"	m	class:android::InputDispatcher
mInstance	cmds/flatland/Main.cpp	/^    const size_t mInstance;$/;"	m	class:BenchmarkRunner	file:
mInternalDisplay	services/inputflinger/InputReader.h	/^    DisplayViewport mInternalDisplay;$/;"	m	struct:android::InputReaderConfiguration
mInvDitherKernelSizeSqUniformLoc	cmds/flatland/Renderers.cpp	/^    GLuint mInvDitherKernelSizeSqUniformLoc;$/;"	m	class:android::GradientRenderer	file:
mInvDitherKernelSizeUniformLoc	cmds/flatland/Renderers.cpp	/^    GLuint mInvDitherKernelSizeUniformLoc;$/;"	m	class:android::GradientRenderer	file:
mIonClient	include/binder/MemoryHeapIon.h	/^    int mIonClient;$/;"	m	class:android::MemoryHeapIon
mIsAbandoned	include/gui/BufferQueueCore.h	/^    bool mIsAbandoned;$/;"	m	class:android::BufferQueueCore
mIsAbandoned	include/gui/StreamSplitter.h	/^    bool mIsAbandoned;$/;"	m	class:android::StreamSplitter
mIsAllocating	include/gui/BufferQueueCore.h	/^    bool mIsAllocating;$/;"	m	class:android::BufferQueueCore
mIsAllocatingCondition	include/gui/BufferQueueCore.h	/^    mutable Condition mIsAllocatingCondition;$/;"	m	class:android::BufferQueueCore
mIsAutoTimestamp	include/gui/BufferItem.h	/^    bool mIsAutoTimestamp;$/;"	m	class:android::BufferItem
mIsAutoTimestamp	include/gui/IGraphicBufferConsumer.h	/^        bool mIsAutoTimestamp;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mIsComplete	opengl/libagl/TextureObjectManager.h	/^    bool                mIsComplete;$/;"	m	class:android::EGLTextureObject
mIsDroppable	include/gui/BufferItem.h	/^    bool mIsDroppable;$/;"	m	class:android::BufferItem
mIsDroppable	include/gui/IGraphicBufferConsumer.h	/^        bool mIsDroppable;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mIsExternal	include/input/InputDevice.h	/^    bool mIsExternal;$/;"	m	class:android::InputDeviceInfo
mIsExternal	services/inputflinger/InputReader.h	/^    bool mIsExternal;$/;"	m	class:android::InputDevice
mIsMain	libs/binder/ProcessState.cpp	/^    const bool mIsMain;$/;"	m	class:android::PoolThread	file:
mIsSecure	services/surfaceflinger/DisplayDevice.h	/^    bool            mIsSecure;$/;"	m	class:android::DisplayDevice
mJava10ExtInterfaceStream	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    PrintStream mJava10ExtInterfaceStream;$/;"	f	class:Jsr239CodeEmitter
mJava10InterfaceStream	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    PrintStream mJava10InterfaceStream;$/;"	f	class:Jsr239CodeEmitter
mJava11ExtInterfaceStream	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    PrintStream mJava11ExtInterfaceStream;$/;"	f	class:Jsr239CodeEmitter
mJava11ExtPackInterfaceStream	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    PrintStream mJava11ExtPackInterfaceStream;$/;"	f	class:Jsr239CodeEmitter
mJava11InterfaceStream	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    PrintStream mJava11InterfaceStream;$/;"	f	class:Jsr239CodeEmitter
mJavaImplStream	opengl/tools/glgen/src/EGLCodeEmitter.java	/^    PrintStream mJavaImplStream;$/;"	f	class:EGLCodeEmitter
mJavaImplStream	opengl/tools/glgen/src/GLESCodeEmitter.java	/^    PrintStream mJavaImplStream;$/;"	f	class:GLESCodeEmitter
mJavaImplStream	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    PrintStream mJavaImplStream;$/;"	f	class:Jsr239CodeEmitter
mJavaInterfaceStream	opengl/tools/glgen/src/EGLCodeEmitter.java	/^    PrintStream mJavaInterfaceStream;$/;"	f	class:EGLCodeEmitter
mJavaInterfaceStream	opengl/tools/glgen/src/GLESCodeEmitter.java	/^    PrintStream mJavaInterfaceStream;$/;"	f	class:GLESCodeEmitter
mJavaInterfaceStream	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    PrintStream mJavaInterfaceStream;$/;"	f	class:Jsr239CodeEmitter
mKey	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        key_t mKey;$/;"	m	class:android::ProgramCache::Key
mKeyCharacterMap	include/input/InputDevice.h	/^    sp<KeyCharacterMap> mKeyCharacterMap;$/;"	m	class:android::InputDeviceInfo
mKeyCode	include/input/Input.h	/^    int32_t mKeyCode;$/;"	m	class:android::KeyEvent
mKeyCode	include/input/KeyCharacterMap.h	/^        int32_t mKeyCode;$/;"	m	class:android::KeyCharacterMap::Parser
mKeyCodeStates	services/inputflinger/tests/InputReader_test.cpp	/^    KeyedVector<int32_t, int32_t> mKeyCodeStates;$/;"	m	class:android::FakeInputMapper	file:
mKeyDowns	services/inputflinger/InputReader.h	/^    Vector<KeyDown> mKeyDowns; \/\/ keys that are down$/;"	m	class:android::KeyboardInputMapper
mKeyEvent	include/input/Input.h	/^    KeyEvent mKeyEvent;$/;"	m	class:android::PreallocatedInputEventFactory
mKeyEventPool	include/input/Input.h	/^    Vector<KeyEvent*> mKeyEventPool;$/;"	m	class:android::PooledInputEventFactory
mKeyMementos	services/inputflinger/InputDispatcher.h	/^        Vector<KeyMemento> mKeyMementos;$/;"	m	class:android::InputDispatcher::InputState
mKeyRepeatState	services/inputflinger/InputDispatcher.h	/^    } mKeyRepeatState;$/;"	m	class:android::InputDispatcher	typeref:struct:android::InputDispatcher::KeyRepeatState
mKeyboardType	include/input/InputDevice.h	/^    int32_t mKeyboardType;$/;"	m	class:android::InputDeviceInfo
mKeyboardType	services/inputflinger/InputReader.h	/^    int32_t mKeyboardType;$/;"	m	class:android::KeyboardInputMapper
mKeyboardType	services/inputflinger/tests/InputReader_test.cpp	/^    int32_t mKeyboardType;$/;"	m	class:android::FakeInputMapper	file:
mKeys	include/input/KeyCharacterMap.h	/^    KeyedVector<int32_t, Key*> mKeys;$/;"	m	class:android::KeyCharacterMap
mKeysByScanCode	include/input/KeyCharacterMap.h	/^    KeyedVector<int32_t, int32_t> mKeysByScanCode;$/;"	m	class:android::KeyCharacterMap
mKeysByScanCode	include/input/KeyLayoutMap.h	/^    KeyedVector<int32_t, Key> mKeysByScanCode;$/;"	m	class:android::KeyLayoutMap
mKeysByUsageCode	include/input/KeyCharacterMap.h	/^    KeyedVector<int32_t, int32_t> mKeysByUsageCode;$/;"	m	class:android::KeyCharacterMap
mKeysByUsageCode	include/input/KeyLayoutMap.h	/^    KeyedVector<int32_t, Key> mKeysByUsageCode;$/;"	m	class:android::KeyLayoutMap
mLast	libs/binder/MemoryDealer.cpp	/^    NODE*  mLast;$/;"	m	class:android::LinkedList	file:
mLastANRState	services/inputflinger/InputDispatcher.h	/^    String8 mLastANRState;$/;"	m	class:android::InputDispatcher
mLastButtonState	services/inputflinger/InputReader.h	/^    int32_t mLastButtonState;$/;"	m	class:android::TouchInputMapper
mLastCookedPointerData	services/inputflinger/InputReader.h	/^    CookedPointerData mLastCookedPointerData;$/;"	m	class:android::TouchInputMapper
mLastError	include/binder/IPCThreadState.h	/^            status_t            mLastError;$/;"	m	class:android::IPCThreadState
mLastEvent	services/inputflinger/tests/InputReader_test.cpp	/^    RawEvent mLastEvent;$/;"	m	class:android::FakeInputMapper	file:
mLastEventSeen	services/sensorservice/SensorService.h	/^    KeyedVector<int32_t, sensors_event_t> mLastEventSeen;$/;"	m	class:android::SensorService
mLastEventTime	include/input/VelocityTracker.h	/^    nsecs_t mLastEventTime;$/;"	m	class:android::VelocityTracker
mLastEventTime	services/surfaceflinger/DispSync.cpp	/^        nsecs_t mLastEventTime;$/;"	m	struct:android::DispSyncThread::EventListener	file:
mLastFingerIdBits	services/inputflinger/InputReader.h	/^    BitSet32 mLastFingerIdBits;$/;"	m	class:android::TouchInputMapper
mLastFrameSequence	services/surfaceflinger/LayerBlur.h	/^    uint32_t mLastFrameSequence;$/;"	m	class:android::LayerBlur
mLastHoverWindowHandle	services/inputflinger/InputDispatcher.h	/^    sp<InputWindowHandle> mLastHoverWindowHandle;$/;"	m	class:android::InputDispatcher
mLastHwVSync	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    mutable nsecs_t mLastHwVSync[HWC_NUM_PHYSICAL_DISPLAY_TYPES];$/;"	m	class:android::HWComposer
mLastMouseIdBits	services/inputflinger/InputReader.h	/^    BitSet32 mLastMouseIdBits;$/;"	m	class:android::TouchInputMapper
mLastMovementTime	include/input/VelocityControl.h	/^    nsecs_t mLastMovementTime;$/;"	m	class:android::VelocityControl
mLastQueueBufferFence	include/gui/BufferQueueProducer.h	/^    sp<Fence> mLastQueueBufferFence;$/;"	m	class:android::BufferQueueProducer
mLastRawPointerData	services/inputflinger/InputReader.h	/^    RawPointerData mLastRawPointerData;$/;"	m	class:android::TouchInputMapper
mLastStylusIdBits	services/inputflinger/InputReader.h	/^    BitSet32 mLastStylusIdBits;$/;"	m	class:android::TouchInputMapper
mLastStylusTime	services/inputflinger/InputReader.cpp	/^nsecs_t TouchInputMapper::mLastStylusTime = 0;$/;"	m	class:android::TouchInputMapper	file:
mLastStylusTime	services/inputflinger/InputReader.h	/^    static nsecs_t mLastStylusTime;$/;"	m	class:android::TouchInputMapper
mLastSwapBufferTime	services/surfaceflinger/SurfaceFlinger.h	/^    nsecs_t mLastSwapBufferTime;$/;"	m	class:android::SurfaceFlinger
mLastTime	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private long mLastTime;$/;"	f	class:CamRenderer	file:
mLastTime_us	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^    private long mLastTime_us = 0;$/;"	f	class:TestFramerateView	file:
mLastTransactionBinderFlags	include/binder/IPCThreadState.h	/^            int32_t             mLastTransactionBinderFlags;$/;"	m	class:android::IPCThreadState
mLastTransactionTime	services/surfaceflinger/SurfaceFlinger.h	/^    nsecs_t mLastTransactionTime;$/;"	m	class:android::SurfaceFlinger
mLayer	services/surfaceflinger/Layer.h	/^        wp<Layer> mLayer;$/;"	m	class:android::Layer::LayerCleaner
mLayerDesc	cmds/flatland/Composers.cpp	/^    LayerDesc mLayerDesc;$/;"	m	class:android::ComposerBase	file:
mLayerList	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    HWCTYPE* const mLayerList;$/;"	m	class:android::Iterable	file:
mLayerList	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        HWCLayer* const mLayerList;$/;"	m	class:android::HWComposer::LayerListIterator
mLayerStack	services/surfaceflinger/DisplayDevice.h	/^    uint32_t mLayerStack;$/;"	m	class:android::DisplayDevice
mLayers	cmds/flatland/Main.cpp	/^    Layer mLayers[MAX_NUM_LAYERS];$/;"	m	class:BenchmarkRunner	file:
mLayers	services/surfaceflinger/Client.h	/^    DefaultKeyedVector< wp<IBinder>, wp<Layer> > mLayers;$/;"	m	class:android::Client
mLayersPendingRemoval	services/surfaceflinger/SurfaceFlinger.h	/^    Vector< sp<Layer> > mLayersPendingRemoval;$/;"	m	class:android::SurfaceFlinger
mLayersRemoved	services/surfaceflinger/SurfaceFlinger.h	/^    bool mLayersRemoved;$/;"	m	class:android::SurfaceFlinger
mLedsByScanCode	include/input/KeyLayoutMap.h	/^    KeyedVector<int32_t, Led> mLedsByScanCode;$/;"	m	class:android::KeyLayoutMap
mLedsByUsageCode	include/input/KeyLayoutMap.h	/^    KeyedVector<int32_t, Led> mLedsByUsageCode;$/;"	m	class:android::KeyLayoutMap
mList	libs/binder/MemoryDealer.cpp	/^    LinkedList<chunk_t> mList;$/;"	m	class:android::SimpleBestFitAllocator	file:
mList	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^    KeyedVector<Attribute, EGLint> mList;$/;"	m	class:android::EGLAttributeVector	file:
mListener	include/media/drm/DrmAPI.h	/^        sp<DrmPluginListener> mListener;$/;"	m	class:android::DrmPlugin
mListener	services/inputflinger/tests/InputReader_test.cpp	/^    sp<InputListenerInterface> mListener;$/;"	m	class:android::FakeInputReaderContext	file:
mLists	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    struct hwc_display_contents_1*  mLists[MAX_HWC_DISPLAYS];$/;"	m	class:android::HWComposer	typeref:struct:android::HWComposer::hwc_display_contents_1
mLock	include/binder/AppOpsManager.h	/^    Mutex mLock;$/;"	m	class:android::AppOpsManager
mLock	include/binder/BpBinder.h	/^    mutable Mutex               mLock;$/;"	m	class:android::BpBinder
mLock	include/binder/BufferedTextOutput.h	/^    Mutex               mLock;$/;"	m	class:android::BufferedTextOutput
mLock	include/binder/MemoryHeapPmem.h	/^    mutable Mutex                   mLock;$/;"	m	class:android::MemoryHeapPmem
mLock	include/binder/PermissionCache.h	/^    mutable Mutex mLock;$/;"	m	class:android::PermissionCache
mLock	include/binder/ProcessState.h	/^    mutable Mutex               mLock;  \/\/ protects everything below.$/;"	m	class:android::ProcessState
mLock	include/gui/SensorEventQueue.h	/^    mutable Mutex mLock;$/;"	m	class:android::SensorEventQueue
mLock	include/gui/SensorManager.h	/^    mutable Mutex mLock;$/;"	m	class:android::SensorManager
mLock	include/gui/SurfaceComposerClient.h	/^    mutable     Mutex                       mLock;$/;"	m	class:android::SurfaceComposerClient
mLock	include/gui/SurfaceControl.h	/^    mutable Mutex               mLock;$/;"	m	class:android::SurfaceControl
mLock	include/private/gui/ComposerService.h	/^    Mutex mLock;$/;"	m	class:android::ComposerService
mLock	libs/binder/Binder.cpp	/^    Mutex mLock;$/;"	m	class:android::BBinder::Extras	file:
mLock	libs/binder/IMemory.cpp	/^    mutable Mutex       mLock;$/;"	m	class:android::BpMemoryHeap	file:
mLock	libs/binder/MemoryDealer.cpp	/^    mutable Mutex       mLock;$/;"	m	class:android::SimpleBestFitAllocator	file:
mLock	libs/gui/SurfaceComposerClient.cpp	/^    mutable Mutex               mLock;$/;"	m	class:android::Composer	file:
mLock	opengl/libagl/BufferObjectManager.h	/^    mutable Mutex                       mLock;$/;"	m	class:android::EGLBufferObjectManager
mLock	opengl/libagl/TextureObjectManager.h	/^    mutable Mutex                               mLock;$/;"	m	class:android::EGLSurfaceManager
mLock	opengl/libagl/TokenManager.h	/^    mutable Mutex   mLock;$/;"	m	class:android::TokenManager
mLock	opengl/libs/EGL/egl_display.h	/^        Mutex      mLock;$/;"	m	class:android::egl_display_t::HibernationMachine
mLock	services/inputflinger/EventHub.h	/^    mutable Mutex mLock;$/;"	m	class:android::EventHub
mLock	services/inputflinger/InputDispatcher.h	/^    Mutex mLock;$/;"	m	class:android::InputDispatcher
mLock	services/inputflinger/InputReader.h	/^    Mutex mLock;$/;"	m	class:android::InputReader
mLock	services/sensorservice/SensorDevice.h	/^    mutable Mutex mLock; \/\/ protect mActivationCount[].batchParams$/;"	m	class:android::SensorDevice
mLock	services/sensorservice/SensorService.h	/^    mutable Mutex mLock;$/;"	m	class:android::SensorService
mLock	services/surfaceflinger/Client.h	/^    mutable Mutex mLock;$/;"	m	class:android::Client
mLock	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        mutable Mutex mLock;$/;"	m	class:android::HWComposer::VSyncThread
mLock	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    mutable Mutex mLock;$/;"	m	class:android::HWComposer
mLock	services/surfaceflinger/EventThread.h	/^    mutable Mutex mLock;$/;"	m	class:android::EventThread
mLock	services/surfaceflinger/Layer.h	/^    mutable Mutex mLock;$/;"	m	class:android::Layer
mLockedBuffer	include/gui/Surface.h	/^    sp<GraphicBuffer>           mLockedBuffer;$/;"	m	class:android::Surface
mLockedBuffer	libs/gui/tests/SRGB_test.cpp	/^    CpuConsumer::LockedBuffer mLockedBuffer;$/;"	m	class:android::SRGBTest	file:
mLooper	include/gui/SensorEventQueue.h	/^    mutable sp<Looper> mLooper;$/;"	m	class:android::SensorEventQueue
mLooper	services/inputflinger/InputDispatcher.h	/^    sp<Looper> mLooper;$/;"	m	class:android::InputDispatcher
mLooper	services/sensorservice/SensorService.h	/^    sp<Looper> mLooper;$/;"	m	class:android::SensorService
mLooper	services/surfaceflinger/MessageQueue.h	/^    sp<Looper> mLooper;$/;"	m	class:android::MessageQueue
mMMatrix	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private float[] mMMatrix = new float[16];$/;"	f	class:CamRenderer	file:
mMVPMatrix	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private float[] mMVPMatrix = new float[16];$/;"	f	class:CamRenderer	file:
mMag	services/sensorservice/SensorFusion.h	/^    Sensor mMag;$/;"	m	class:android::SensorFusion
mManagesContexts	include/binder/ProcessState.h	/^            bool                mManagesContexts;$/;"	m	class:android::ProcessState
mMap	include/input/KeyCharacterMap.h	/^        KeyCharacterMap* mMap;$/;"	m	class:android::KeyCharacterMap::Parser
mMap	include/input/KeyLayoutMap.h	/^        KeyLayoutMap* mMap;$/;"	m	class:android::KeyLayoutMap::Parser
mMap	include/input/VirtualKeyMap.h	/^        VirtualKeyMap* mMap;$/;"	m	class:android::VirtualKeyMap::Parser
mMapFlushEventsToConnections	services/sensorservice/SensorService.h	/^    SensorEventConnection const **mMapFlushEventsToConnections;$/;"	m	class:android::SensorService
mMapped	include/binder/Parcel.h	/^        bool mMapped;$/;"	m	class:android::Parcel::Blob
mMappers	services/inputflinger/InputReader.h	/^    Vector<InputMapper*> mMappers;$/;"	m	class:android::InputDevice
mMaskAlphaThreshold	services/surfaceflinger/RenderEngine/Description.h	/^    GLclampf mMaskAlphaThreshold;$/;"	m	class:android::Description
mMaskAlphaThresholdLoc	services/surfaceflinger/RenderEngine/Program.h	/^    GLint mMaskAlphaThresholdLoc;$/;"	m	class:android::Program
mMaskTexture	services/surfaceflinger/RenderEngine/Description.h	/^    Texture mMaskTexture;$/;"	m	class:android::Description
mMaskTextureEnabled	services/surfaceflinger/RenderEngine/Description.h	/^    bool mMaskTextureEnabled;$/;"	m	class:android::Description
mMatrix	services/surfaceflinger/Transform.h	/^    mat33               mMatrix;$/;"	m	class:android::Transform
mMaxAcquiredBufferCount	include/gui/BufferQueueCore.h	/^    int mMaxAcquiredBufferCount;$/;"	m	class:android::BufferQueueCore
mMaxCacheSize	services/sensorservice/SensorService.h	/^        int mCacheSize, mMaxCacheSize;$/;"	m	class:android::SensorService::SensorEventConnection
mMaxDelay	include/gui/Sensor.h	/^    int32_t mMaxDelay;$/;"	m	class:android::Sensor
mMaxLockedBuffers	include/gui/CpuConsumer.h	/^    uint32_t mMaxLockedBuffers;$/;"	m	class:android::CpuConsumer
mMaxPoolSize	include/input/Input.h	/^    const size_t mMaxPoolSize;$/;"	m	class:android::PooledInputEventFactory
mMaxTextureSize	services/surfaceflinger/RenderEngine/GLES11RenderEngine.h	/^    GLint mMaxTextureSize;$/;"	m	class:android::GLES11RenderEngine
mMaxTextureSize	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    GLint mMaxTextureSize;$/;"	m	class:android::GLES20RenderEngine
mMaxValue	include/gui/Sensor.h	/^    float   mMaxValue;$/;"	m	class:android::Sensor
mMaxViewportDims	services/surfaceflinger/RenderEngine/GLES11RenderEngine.h	/^    GLint mMaxViewportDims[2];$/;"	m	class:android::GLES11RenderEngine
mMaxViewportDims	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    GLint mMaxViewportDims[2];$/;"	m	class:android::GLES20RenderEngine
mMaxX	services/inputflinger/tests/InputReader_test.cpp	/^    float mMinX, mMinY, mMaxX, mMaxY;$/;"	m	class:android::FakePointerController	file:
mMaxY	services/inputflinger/tests/InputReader_test.cpp	/^    float mMinX, mMinY, mMaxX, mMaxY;$/;"	m	class:android::FakePointerController	file:
mMergedFence	include/gui/StreamSplitter.h	/^        sp<Fence> mMergedFence;$/;"	m	class:android::StreamSplitter::BufferTracker
mMesh	services/surfaceflinger/Layer.h	/^    mutable Mesh mMesh;$/;"	m	class:android::Layer
mMetaState	include/input/Input.h	/^    int32_t mMetaState;$/;"	m	class:android::KeyEvent
mMetaState	include/input/Input.h	/^    int32_t mMetaState;$/;"	m	class:android::MotionEvent
mMetaState	services/inputflinger/InputReader.h	/^    int32_t mMetaState;$/;"	m	class:android::KeyboardInputMapper
mMetaState	services/inputflinger/tests/InputReader_test.cpp	/^    int32_t mMetaState;$/;"	m	class:android::FakeInputMapper	file:
mMinDelay	include/gui/Sensor.h	/^    int32_t mMinDelay;$/;"	m	class:android::Sensor
mMinValue	include/gui/Sensor.h	/^    float   mMinValue;$/;"	m	class:android::Sensor
mMinX	services/inputflinger/tests/InputReader_test.cpp	/^    float mMinX, mMinY, mMaxX, mMaxY;$/;"	m	class:android::FakePointerController	file:
mMinY	services/inputflinger/tests/InputReader_test.cpp	/^    float mMinX, mMinY, mMaxX, mMaxY;$/;"	m	class:android::FakePointerController	file:
mMipmaps	opengl/libagl/TextureObjectManager.h	/^    GGLSurface          *mMipmaps;$/;"	m	class:android::EGLTextureObject
mModColorUniformLoc	cmds/flatland/Composers.cpp	/^    GLint mModColorUniformLoc;$/;"	m	class:android::Blitter	file:
mMode	services/surfaceflinger/Effects/Daltonizer.h	/^    Mode mMode;$/;"	m	class:android::Daltonizer
mMonitoringChannels	services/inputflinger/InputDispatcher.h	/^    Vector<sp<InputChannel> > mMonitoringChannels;$/;"	m	class:android::InputDispatcher
mMotionEvent	include/input/Input.h	/^    MotionEvent mMotionEvent;$/;"	m	class:android::PreallocatedInputEventFactory
mMotionEventPool	include/input/Input.h	/^    Vector<MotionEvent*> mMotionEventPool;$/;"	m	class:android::PooledInputEventFactory
mMotionMementos	services/inputflinger/InputDispatcher.h	/^        Vector<MotionMemento> mMotionMementos;$/;"	m	class:android::InputDispatcher::InputState
mMotionRanges	include/input/InputDevice.h	/^    Vector<MotionRange> mMotionRanges;$/;"	m	class:android::InputDeviceInfo
mMovements	include/input/VelocityTracker.h	/^    Movement mMovements[HISTORY_SIZE];$/;"	m	class:android::LeastSquaresVelocityTrackerStrategy
mMovements	include/input/VelocityTracker.h	/^    Movement mMovements[HISTORY_SIZE];$/;"	m	class:android::LegacyVelocityTrackerStrategy
mMsg	include/input/InputTransport.h	/^    InputMessage mMsg;$/;"	m	class:android::InputConsumer
mMsgDeferred	include/input/InputTransport.h	/^    bool mMsgDeferred;$/;"	m	class:android::InputConsumer
mMultiTouchMotionAccumulator	services/inputflinger/InputReader.h	/^    MultiTouchMotionAccumulator mMultiTouchMotionAccumulator;$/;"	m	class:android::MultiTouchInputMapper
mMustRecompose	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    bool mMustRecompose;$/;"	m	class:android::VirtualDisplaySurface
mMutex	include/gui/BufferQueueCore.h	/^    mutable Mutex mMutex;$/;"	m	class:android::BufferQueueCore
mMutex	include/gui/ConsumerBase.h	/^    mutable Mutex mMutex;$/;"	m	class:android::ConsumerBase
mMutex	include/gui/StreamSplitter.h	/^    Mutex mMutex;$/;"	m	class:android::StreamSplitter
mMutex	include/gui/Surface.h	/^    mutable Mutex mMutex;$/;"	m	class:android::Surface
mMutex	libs/gui/tests/CpuConsumer_test.cpp	/^        Mutex mMutex;$/;"	m	class:android::CpuConsumerTest::DisconnectWaiter	file:
mMutex	libs/gui/tests/CpuConsumer_test.cpp	/^        Mutex mMutex;$/;"	m	class:android::CpuConsumerTest::FrameWaiter	file:
mMutex	libs/gui/tests/DisconnectWaiter.h	/^    Mutex mMutex;$/;"	m	class:android::DisconnectWaiter
mMutex	libs/gui/tests/FrameWaiter.h	/^    Mutex mMutex;$/;"	m	class:android::FrameWaiter
mMutex	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        Mutex mMutex;$/;"	m	class:android::SurfaceTextureGLThreadToGLTest::FrameCondition
mMutex	opengl/libs/EGL/eglApi.cpp	/^    Mutex mMutex;$/;"	m	class:FrameCompletionThread	file:
mMutex	opengl/libs/EGL/egl_cache.h	/^    mutable Mutex mMutex;$/;"	m	class:android::egl_cache_t
mMutex	services/surfaceflinger/DispSync.cpp	/^    Mutex mMutex;$/;"	m	class:android::DispSyncThread	file:
mMutex	services/surfaceflinger/DispSync.h	/^    mutable Mutex mMutex;$/;"	m	class:android::DispSync
mMutex	services/surfaceflinger/EventControlThread.h	/^    Mutex mMutex;$/;"	m	class:android::EventControlThread
mMutex	services/surfaceflinger/FrameTracker.h	/^    mutable Mutex mMutex;$/;"	m	class:android::FrameTracker
mMutex	services/surfaceflinger/SurfaceFlinger.cpp	/^    Mutex mMutex;$/;"	m	class:android::DispSyncSource	file:
mMyThreadId	include/binder/IPCThreadState.h	/^    const   pid_t               mMyThreadId;$/;"	m	class:android::IPCThreadState
mN	services/sensorservice/Fusion.cpp	/^    size_t mN;$/;"	m	class:android::Covariance	file:
mName	include/gui/ConsumerBase.h	/^    String8 mName;$/;"	m	class:android::ConsumerBase
mName	include/gui/Sensor.h	/^    String8 mName;$/;"	m	class:android::Sensor
mName	include/input/InputTransport.h	/^    String8 mName;$/;"	m	class:android::InputChannel
mName	services/surfaceflinger/Layer.h	/^    String8 mName;$/;"	m	class:android::Layer
mNativeWindow	services/surfaceflinger/DisplayDevice.h	/^    sp<ANativeWindow> mNativeWindow;$/;"	m	class:android::DisplayDevice
mNeedToReopenDevices	services/inputflinger/EventHub.h	/^    bool mNeedToReopenDevices;$/;"	m	class:android::EventHub
mNeedToScanDevices	services/inputflinger/EventHub.h	/^    bool mNeedToScanDevices;$/;"	m	class:android::EventHub
mNeedToSendFinishedDeviceScan	services/inputflinger/EventHub.h	/^    bool mNeedToSendFinishedDeviceScan;$/;"	m	class:android::EventHub
mNeedUnmap	include/binder/MemoryHeapBase.h	/^    bool        mNeedUnmap;$/;"	m	class:android::MemoryHeapBase
mNeedsCleanupOnRelease	include/gui/BufferSlot.h	/^    bool mNeedsCleanupOnRelease;$/;"	m	struct:android::BufferSlot
mNeedsFiltering	services/surfaceflinger/DisplayDevice.h	/^    bool mNeedsFiltering;$/;"	m	class:android::DisplayDevice
mNeedsFiltering	services/surfaceflinger/Layer.h	/^    bool mNeedsFiltering;$/;"	m	class:android::Layer
mNextCallbackTicket	include/gui/BufferQueueProducer.h	/^    int mNextCallbackTicket; \/\/ Protected by mCore->mMutex$/;"	m	class:android::BufferQueueProducer
mNextDevice	services/inputflinger/tests/InputReader_test.cpp	/^    InputDevice* mNextDevice;$/;"	m	class:android::InstrumentedInputReader	file:
mNextDeviceId	services/inputflinger/EventHub.h	/^    int32_t mNextDeviceId;$/;"	m	class:android::EventHub
mNextFakeVSync	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        mutable nsecs_t mNextFakeVSync;$/;"	m	class:android::HWComposer::VSyncThread
mNextObjectHint	include/binder/Parcel.h	/^    mutable size_t      mNextObjectHint;$/;"	m	class:android::Parcel
mNextStepTime	services/inputflinger/InputReader.h	/^    nsecs_t mNextStepTime;$/;"	m	class:android::VibratorInputMapper
mNextTimeout	services/inputflinger/InputReader.h	/^    nsecs_t mNextTimeout;$/;"	m	class:android::InputReader
mNextUnblockedEvent	services/inputflinger/InputDispatcher.h	/^    EventEntry* mNextUnblockedEvent;$/;"	m	class:android::InputDispatcher
mNotifyConfigurationChangedArgsQueue	services/inputflinger/tests/InputReader_test.cpp	/^    List<NotifyConfigurationChangedArgs> mNotifyConfigurationChangedArgsQueue;$/;"	m	class:android::FakeInputListener	file:
mNotifyDeviceResetArgsQueue	services/inputflinger/tests/InputReader_test.cpp	/^    List<NotifyDeviceResetArgs> mNotifyDeviceResetArgsQueue;$/;"	m	class:android::FakeInputListener	file:
mNotifyKeyArgsQueue	services/inputflinger/tests/InputReader_test.cpp	/^    List<NotifyKeyArgs> mNotifyKeyArgsQueue;$/;"	m	class:android::FakeInputListener	file:
mNotifyMotionArgsQueue	services/inputflinger/tests/InputReader_test.cpp	/^    List<NotifyMotionArgs> mNotifyMotionArgsQueue;$/;"	m	class:android::FakeInputListener	file:
mNotifySwitchArgsQueue	services/inputflinger/tests/InputReader_test.cpp	/^    List<NotifySwitchArgs> mNotifySwitchArgsQueue;$/;"	m	class:android::FakeInputListener	file:
mNumAcksToSend	include/gui/SensorEventQueue.h	/^    uint32_t mNumAcksToSend;$/;"	m	class:android::SensorEventQueue
mNumBuffers	include/ui/FramebufferNativeWindow.h	/^    int32_t mNumBuffers;$/;"	m	class:android::FramebufferNativeWindow
mNumBytesOfClearData	include/media/hardware/CryptoAPI.h	/^        uint32_t mNumBytesOfClearData;$/;"	m	struct:android::CryptoPlugin::SubSample
mNumBytesOfEncryptedData	include/media/hardware/CryptoAPI.h	/^        uint32_t mNumBytesOfEncryptedData;$/;"	m	struct:android::CryptoPlugin::SubSample
mNumDisplays	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    size_t                          mNumDisplays;$/;"	m	class:android::HWComposer
mNumExtraLod	opengl/libagl/TextureObjectManager.h	/^    int                 mNumExtraLod;$/;"	m	class:android::EGLTextureObject
mNumFences	services/surfaceflinger/FrameTracker.h	/^    int mNumFences;$/;"	m	class:android::FrameTracker
mNumFrames	services/surfaceflinger/FrameTracker.h	/^    int32_t mNumFrames[NUM_FRAME_BUCKETS];$/;"	m	class:android::FrameTracker
mNumFreeBuffers	include/ui/FramebufferNativeWindow.h	/^    int32_t mNumFreeBuffers;$/;"	m	class:android::FramebufferNativeWindow
mNumLayers	cmds/flatland/Main.cpp	/^    const size_t mNumLayers;$/;"	m	class:BenchmarkRunner	file:
mNumLockLedState	services/inputflinger/InputReader.h	/^    LedState mNumLockLedState;$/;"	m	class:android::KeyboardInputMapper
mNumPlanes	include/media/hardware/HardwareAPI.h	/^    OMX_U32 mNumPlanes;              \/\/ number of planes$/;"	m	struct:android::MediaImage
mNumResyncSamples	services/surfaceflinger/DispSync.h	/^    size_t mNumResyncSamples;$/;"	m	class:android::DispSync
mNumResyncSamplesSincePresent	services/surfaceflinger/DispSync.h	/^    int mNumResyncSamplesSincePresent;$/;"	m	class:android::DispSync
mNumShaders	cmds/flatland/GLHelper.h	/^    size_t mNumShaders;$/;"	m	class:android::GLHelper
mNumShortFramesElapsed	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^    private long mNumShortFramesElapsed = 0;$/;"	f	class:TestFramerateView	file:
mObitsSent	include/binder/BpBinder.h	/^            volatile int32_t    mObitsSent;$/;"	m	class:android::BpBinder
mObituaries	include/binder/BpBinder.h	/^            Vector<Obituary>*   mObituaries;$/;"	m	class:android::BpBinder
mObjToNdcUniformLoc	cmds/flatland/Composers.cpp	/^    GLint mObjToNdcUniformLoc;$/;"	m	class:android::Blitter	file:
mObjToNdcUniformLoc	cmds/flatland/Renderers.cpp	/^    GLuint mObjToNdcUniformLoc;$/;"	m	class:android::GradientRenderer	file:
mObjects	include/binder/BpBinder.h	/^            ObjectManager       mObjects;$/;"	m	class:android::BpBinder
mObjects	include/binder/BpBinder.h	/^        KeyedVector<const void*, entry_t> mObjects;$/;"	m	class:android::BpBinder::ObjectManager
mObjects	include/binder/Parcel.h	/^    binder_size_t*      mObjects;$/;"	m	class:android::Parcel
mObjects	libs/binder/Binder.cpp	/^    BpBinder::ObjectManager mObjects;$/;"	m	class:android::BBinder::Extras	file:
mObjectsCapacity	include/binder/Parcel.h	/^    size_t              mObjectsCapacity;$/;"	m	class:android::Parcel
mObjectsSize	include/binder/Parcel.h	/^    size_t              mObjectsSize;$/;"	m	class:android::Parcel
mOffset	include/binder/MemoryBase.h	/^    ssize_t         mOffset;$/;"	m	class:android::MemoryBase
mOffset	include/binder/MemoryHeapBase.h	/^    uint32_t    mOffset;$/;"	m	class:android::MemoryHeapBase
mOffset	include/media/hardware/HardwareAPI.h	/^        OMX_U32 mOffset;             \/\/ offset of first pixel of the plane in bytes$/;"	m	struct:android::MediaImage::PlaneInfo
mOffset	libs/binder/IMemory.cpp	/^    mutable ssize_t mOffset;$/;"	m	class:android::BpMemory	file:
mOffset	libs/binder/IMemory.cpp	/^    mutable uint32_t    mOffset;$/;"	m	class:android::BpMemoryHeap	file:
mOffset	libs/binder/MemoryHeapPmem.cpp	/^    ssize_t             mOffset;$/;"	m	class:android::SubRegionMemory	file:
mOffset	services/surfaceflinger/FrameTracker.h	/^    size_t mOffset;$/;"	m	class:android::FrameTracker
mOffsetX	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private float mScaleX, mScaleY, mOffsetX, mOffsetY;$/;"	f	class:TestLatencyView.Renderer	file:
mOffsetY	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private float mScaleX, mScaleY, mOffsetX, mOffsetY;$/;"	f	class:TestLatencyView.Renderer	file:
mOpaque	services/surfaceflinger/RenderEngine/Description.h	/^    bool mOpaque;$/;"	m	class:android::Description
mOpeningDevices	services/inputflinger/EventHub.h	/^    Device *mOpeningDevices;$/;"	m	class:android::EventHub
mOrientation	services/inputflinger/InputReader.h	/^    int32_t mOrientation; \/\/ orientation for dpad and volume keys$/;"	m	class:android::KeyboardInputMapper
mOrientation	services/inputflinger/InputReader.h	/^    int32_t mOrientation;$/;"	m	class:android::CursorInputMapper
mOrientation	services/surfaceflinger/DisplayDevice.h	/^    int mOrientation;$/;"	m	class:android::DisplayDevice
mOrientationScale	services/inputflinger/InputReader.h	/^    float mOrientationScale;$/;"	m	class:android::TouchInputMapper
mOrientedRanges	services/inputflinger/InputReader.h	/^    } mOrientedRanges;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::OrientedRanges
mOrientedXPrecision	services/inputflinger/InputReader.h	/^    float mOrientedXPrecision;$/;"	m	class:android::TouchInputMapper
mOrientedYPrecision	services/inputflinger/InputReader.h	/^    float mOrientedYPrecision;$/;"	m	class:android::TouchInputMapper
mOut	include/binder/IPCThreadState.h	/^            Parcel              mOut;$/;"	m	class:android::IPCThreadState
mOutput	include/gui/StreamSplitter.h	/^        sp<IGraphicBufferProducer> mOutput;$/;"	m	class:android::StreamSplitter::OutputListener
mOutputFence	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    sp<Fence> mOutputFence;$/;"	m	class:android::VirtualDisplaySurface
mOutputFormat	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    uint32_t mOutputFormat;$/;"	m	class:android::VirtualDisplaySurface
mOutputProducerSlot	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    int mOutputProducerSlot;$/;"	m	class:android::VirtualDisplaySurface
mOutputSurface	libs/gui/tests/SRGB_test.cpp	/^    sp<Surface> mOutputSurface;$/;"	m	class:android::SRGBTest	file:
mOutputUsage	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    uint32_t mOutputUsage;$/;"	m	class:android::VirtualDisplaySurface
mOutputs	include/gui/StreamSplitter.h	/^    Vector<sp<IGraphicBufferProducer> > mOutputs;$/;"	m	class:android::StreamSplitter
mOutstandingBuffers	include/gui/StreamSplitter.h	/^    int mOutstandingBuffers;$/;"	m	class:android::StreamSplitter
mOverflow	services/surfaceflinger/EventLog/EventLog.h	/^        bool mOverflow;$/;"	m	class:android::EventLog::TagBuffer
mOverrideMaxBufferCount	include/gui/BufferQueueCore.h	/^    int mOverrideMaxBufferCount;$/;"	m	class:android::BufferQueueCore
mOwner	include/binder/Parcel.h	/^    release_func        mOwner;$/;"	m	class:android::Parcel
mOwner	include/ui/GraphicBuffer.h	/^    uint8_t mOwner;$/;"	m	class:android::GraphicBuffer
mOwnerCookie	include/binder/Parcel.h	/^    void*               mOwnerCookie;$/;"	m	class:android::Parcel
mPageFlipCount	services/surfaceflinger/DisplayDevice.h	/^    mutable uint32_t mPageFlipCount;$/;"	m	class:android::DisplayDevice
mPanelInverseMounted	services/surfaceflinger/DisplayDevice.h	/^    int mPanelInverseMounted;$/;"	m	class:android::DisplayDevice
mParameters	include/input/VelocityControl.h	/^    VelocityControlParameters mParameters;$/;"	m	class:android::VelocityControl
mParameters	services/inputflinger/InputReader.h	/^    } mParameters;$/;"	m	class:android::CursorInputMapper	typeref:struct:android::CursorInputMapper::Parameters
mParameters	services/inputflinger/InputReader.h	/^    } mParameters;$/;"	m	class:android::KeyboardInputMapper	typeref:struct:android::KeyboardInputMapper::Parameters
mParameters	services/inputflinger/InputReader.h	/^    } mParameters;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::Parameters
mParentHeap	include/binder/MemoryHeapPmem.h	/^    sp<MemoryHeapBase>              mParentHeap;$/;"	m	class:android::MemoryHeapPmem
mParity	services/surfaceflinger/DispSync.cpp	/^    bool mParity;$/;"	m	class:android::ZeroPhaseTracer	file:
mPattern	services/inputflinger/InputReader.h	/^    nsecs_t mPattern[MAX_VIBRATE_PATTERN_SIZE];$/;"	m	class:android::VibratorInputMapper
mPatternSize	services/inputflinger/InputReader.h	/^    size_t mPatternSize;$/;"	m	class:android::VibratorInputMapper
mPendingEvent	services/inputflinger/InputDispatcher.h	/^    EventEntry* mPendingEvent;$/;"	m	class:android::InputDispatcher
mPendingEventCount	services/inputflinger/EventHub.h	/^    size_t mPendingEventCount;$/;"	m	class:android::EventHub
mPendingEventIndex	services/inputflinger/EventHub.h	/^    size_t mPendingEventIndex;$/;"	m	class:android::EventHub
mPendingEventItems	services/inputflinger/EventHub.h	/^    struct epoll_event mPendingEventItems[EPOLL_MAX_EVENTS];$/;"	m	class:android::EventHub	typeref:struct:android::EventHub::epoll_event
mPendingEvents	services/surfaceflinger/EventThread.h	/^    Vector< DisplayEventReceiver::Event > mPendingEvents;$/;"	m	class:android::EventThread
mPendingFlushConnections	services/sensorservice/SensorService.h	/^        Vector< wp<SensorEventConnection> > mPendingFlushConnections;$/;"	m	class:android::SensorService::SensorRecord
mPendingFlushEventsToSend	services/sensorservice/SensorService.h	/^            int mPendingFlushEventsToSend;$/;"	m	struct:android::SensorService::SensorEventConnection::FlushInfo
mPendingFrames	libs/gui/tests/CpuConsumer_test.cpp	/^        int mPendingFrames;$/;"	m	class:android::CpuConsumerTest::DisconnectWaiter	file:
mPendingFrames	libs/gui/tests/CpuConsumer_test.cpp	/^        int mPendingFrames;$/;"	m	class:android::CpuConsumerTest::FrameWaiter	file:
mPendingFrames	libs/gui/tests/DisconnectWaiter.h	/^    int mPendingFrames;$/;"	m	class:android::DisconnectWaiter
mPendingFrames	libs/gui/tests/FrameWaiter.h	/^    int mPendingFrames;$/;"	m	class:android::FrameWaiter
mPendingINotify	services/inputflinger/EventHub.h	/^    bool mPendingINotify;$/;"	m	class:android::EventHub
mPendingStrongDerefs	include/binder/IPCThreadState.h	/^            Vector<BBinder*>    mPendingStrongDerefs;$/;"	m	class:android::IPCThreadState
mPendingWeakDerefs	include/binder/IPCThreadState.h	/^            Vector<RefBase::weakref_type*> mPendingWeakDerefs;$/;"	m	class:android::IPCThreadState
mPerContextState	opengl/libs/GLES_trace/src/gltrace_context.h	/^    std::map<EGLContext, GLTraceContext*> mPerContextState;$/;"	m	class:android::gltrace::GLTraceState
mPeriod	services/surfaceflinger/DispSync.cpp	/^    nsecs_t mPeriod;$/;"	m	class:android::DispSyncThread	file:
mPeriod	services/surfaceflinger/DispSync.h	/^    nsecs_t mPeriod;$/;"	m	class:android::DispSync
mPermissionNamesPool	include/binder/PermissionCache.h	/^    SortedVector< String16 > mPermissionNamesPool;$/;"	m	class:android::PermissionCache
mPgm	libs/gui/tests/TextureRenderer.h	/^    GLuint mPgm;$/;"	m	class:android::TextureRenderer
mPhase	services/surfaceflinger/DispSync.cpp	/^        nsecs_t mPhase;$/;"	m	struct:android::DispSyncThread::EventListener	file:
mPhase	services/surfaceflinger/DispSync.cpp	/^    nsecs_t mPhase;$/;"	m	class:android::DispSyncThread	file:
mPhase	services/surfaceflinger/DispSync.h	/^    nsecs_t mPhase;$/;"	m	class:android::DispSync
mPhaseOffset	services/surfaceflinger/SurfaceFlinger.cpp	/^    const nsecs_t mPhaseOffset;$/;"	m	class:android::DispSyncSource	file:
mPlane	include/media/hardware/HardwareAPI.h	/^    PlaneInfo mPlane[MAX_NUM_PLANES];$/;"	m	struct:android::MediaImage
mPlaneAlpha	services/surfaceflinger/RenderEngine/Description.h	/^    GLclampf mPlaneAlpha;$/;"	m	class:android::Description
mPointerController	services/inputflinger/InputReader.h	/^    sp<PointerControllerInterface> mPointerController;$/;"	m	class:android::CursorInputMapper
mPointerController	services/inputflinger/InputReader.h	/^    sp<PointerControllerInterface> mPointerController;$/;"	m	class:android::TouchInputMapper
mPointerControllers	services/inputflinger/tests/InputReader_test.cpp	/^    KeyedVector<int32_t, sp<FakePointerController> > mPointerControllers;$/;"	m	class:android::FakeInputReaderPolicy	file:
mPointerGesture	services/inputflinger/InputReader.h	/^    } mPointerGesture;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::PointerGesture
mPointerGestureMaxSwipeWidth	services/inputflinger/InputReader.h	/^    float mPointerGestureMaxSwipeWidth;$/;"	m	class:android::TouchInputMapper
mPointerIdBits	include/input/VelocityTracker.h	/^    BitSet32 mPointerIdBits;$/;"	m	class:android::IntegratingVelocityTrackerStrategy
mPointerIdBits	services/inputflinger/InputReader.h	/^    BitSet32 mPointerIdBits;$/;"	m	class:android::MultiTouchInputMapper
mPointerProperties	include/input/Input.h	/^    Vector<PointerProperties> mPointerProperties;$/;"	m	class:android::MotionEvent
mPointerSimple	services/inputflinger/InputReader.h	/^    } mPointerSimple;$/;"	m	class:android::TouchInputMapper	typeref:struct:android::TouchInputMapper::PointerSimple
mPointerState	include/input/VelocityTracker.h	/^    State mPointerState[MAX_POINTER_ID + 1];$/;"	m	class:android::IntegratingVelocityTrackerStrategy
mPointerTrackingIdMap	services/inputflinger/InputReader.h	/^    int32_t mPointerTrackingIdMap[MAX_POINTER_ID + 1];$/;"	m	class:android::MultiTouchInputMapper
mPointerUsage	services/inputflinger/InputReader.h	/^    PointerUsage mPointerUsage;$/;"	m	class:android::TouchInputMapper
mPointerVelocityControl	services/inputflinger/InputReader.h	/^    VelocityControl mPointerVelocityControl;$/;"	m	class:android::CursorInputMapper
mPointerVelocityControl	services/inputflinger/InputReader.h	/^    VelocityControl mPointerVelocityControl;$/;"	m	class:android::TouchInputMapper
mPointerXMovementScale	services/inputflinger/InputReader.h	/^    float mPointerXMovementScale;$/;"	m	class:android::TouchInputMapper
mPointerXZoomScale	services/inputflinger/InputReader.h	/^    float mPointerXZoomScale;$/;"	m	class:android::TouchInputMapper
mPointerYMovementScale	services/inputflinger/InputReader.h	/^    float mPointerYMovementScale;$/;"	m	class:android::TouchInputMapper
mPointerYZoomScale	services/inputflinger/InputReader.h	/^    float mPointerYZoomScale;$/;"	m	class:android::TouchInputMapper
mPolicy	services/inputflinger/InputDispatcher.h	/^    sp<InputDispatcherPolicyInterface> mPolicy;$/;"	m	class:android::InputDispatcher
mPolicy	services/inputflinger/InputReader.h	/^    sp<InputReaderPolicyInterface> mPolicy;$/;"	m	class:android::InputReader
mPolicy	services/inputflinger/tests/InputReader_test.cpp	/^    sp<InputReaderPolicyInterface> mPolicy;$/;"	m	class:android::FakeInputReaderContext	file:
mPos	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private float[] mPos = new float[3];$/;"	f	class:CamRenderer	file:
mPos	services/surfaceflinger/EventLog/EventLog.h	/^        int32_t mPos;$/;"	m	class:android::EventLog::TagBuffer
mPosAttribLoc	cmds/flatland/Composers.cpp	/^    GLint mPosAttribLoc;$/;"	m	class:android::Blitter	file:
mPosAttribLoc	cmds/flatland/Renderers.cpp	/^    GLuint mPosAttribLoc;$/;"	m	class:android::GradientRenderer	file:
mPositionHandle	libs/gui/tests/TextureRenderer.h	/^    GLint mPositionHandle;$/;"	m	class:android::TextureRenderer
mPostedBuffer	include/gui/Surface.h	/^    sp<GraphicBuffer>           mPostedBuffer;$/;"	m	class:android::Surface
mPotentialCursor	services/surfaceflinger/Layer.h	/^    bool mPotentialCursor;$/;"	m	class:android::Layer
mPower	include/gui/Sensor.h	/^    float   mPower;$/;"	m	class:android::Sensor
mPowerHAL	services/surfaceflinger/EventThread.h	/^    PowerHAL mPowerHAL;$/;"	m	class:android::EventThread
mPowerManager	services/surfaceflinger/DisplayHardware/PowerHAL.h	/^    sp<IPowerManager> mPowerManager;$/;"	m	class:android::PowerHAL
mPowerMode	services/surfaceflinger/DisplayDevice.h	/^    int mPowerMode;$/;"	m	class:android::DisplayDevice
mPremultipliedAlpha	services/surfaceflinger/Layer.h	/^    bool mPremultipliedAlpha;$/;"	m	class:android::Layer
mPremultipliedAlpha	services/surfaceflinger/RenderEngine/Description.h	/^    bool mPremultipliedAlpha;$/;"	m	class:android::Description
mPresentFences	services/surfaceflinger/DispSync.h	/^    sp<Fence> mPresentFences[NUM_PRESENT_SAMPLES];$/;"	m	class:android::DispSync
mPresentSampleOffset	services/surfaceflinger/DispSync.h	/^    size_t mPresentSampleOffset;$/;"	m	class:android::DispSync
mPresentTimes	services/surfaceflinger/DispSync.h	/^    nsecs_t mPresentTimes[NUM_PRESENT_SAMPLES];$/;"	m	class:android::DispSync
mPressureScale	services/inputflinger/InputReader.h	/^    float mPressureScale;$/;"	m	class:android::TouchInputMapper
mPrimaryDispSync	services/surfaceflinger/SurfaceFlinger.h	/^    DispSync mPrimaryDispSync;$/;"	m	class:android::SurfaceFlinger
mPrimaryHWVsyncEnabled	services/surfaceflinger/SurfaceFlinger.h	/^    bool mPrimaryHWVsyncEnabled;$/;"	m	class:android::SurfaceFlinger
mPrimitive	services/surfaceflinger/RenderEngine/Mesh.h	/^    Primitive mPrimitive;$/;"	m	class:android::Mesh
mProcess	include/binder/IPCThreadState.h	/^    const   sp<ProcessState>    mProcess;$/;"	m	class:android::IPCThreadState
mProcessWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    bool mProcessWasCalled;$/;"	m	class:android::FakeInputMapper	file:
mProducer	include/gui/SurfaceComposerClient.h	/^    mutable sp<IGraphicBufferProducer> mProducer;$/;"	m	class:android::ScreenshotClient
mProducer	libs/gui/tests/BufferQueue_test.cpp	/^    sp<IGraphicBufferProducer> mProducer;$/;"	m	class:android::BufferQueueTest	file:
mProducer	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    sp<IGraphicBufferProducer> mProducer;$/;"	m	class:android::IGraphicBufferProducerTest	file:
mProducer	services/surfaceflinger/Layer.h	/^    sp<IGraphicBufferProducer> mProducer;$/;"	m	class:android::Layer
mProducer	services/surfaceflinger/MonitoredProducer.h	/^    sp<IGraphicBufferProducer> mProducer;$/;"	m	class:android::MonitoredProducer
mProducerBuffers	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    sp<GraphicBuffer> mProducerBuffers[BufferQueue::NUM_BUFFER_SLOTS];$/;"	m	class:android::VirtualDisplaySurface
mProducerControlledByApp	include/gui/Surface.h	/^    bool mProducerControlledByApp;$/;"	m	class:android::Surface
mProducerEglContext	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        EGLContext mProducerEglContext;$/;"	m	class:android::SurfaceTextureGLThreadToGLTest::ProducerThread
mProducerEglContext	libs/gui/tests/SurfaceTextureGLToGL.h	/^    EGLContext mProducerEglContext;$/;"	m	class:android::SurfaceTextureGLToGLTest
mProducerEglDisplay	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        EGLDisplay mProducerEglDisplay;$/;"	m	class:android::SurfaceTextureGLThreadToGLTest::ProducerThread
mProducerEglSurface	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        EGLSurface mProducerEglSurface;$/;"	m	class:android::SurfaceTextureGLThreadToGLTest::ProducerThread
mProducerEglSurface	libs/gui/tests/SurfaceTextureGLToGL.h	/^    EGLSurface mProducerEglSurface;$/;"	m	class:android::SurfaceTextureGLToGLTest
mProducerSlotSource	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    uint64_t mProducerSlotSource;$/;"	m	class:android::VirtualDisplaySurface
mProducerThread	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^    sp<ProducerThread> mProducerThread;$/;"	m	class:android::SurfaceTextureGLThreadToGLTest
mProgram	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private int mProgram;$/;"	f	class:CamRenderer	file:
mProgram	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        private int mProgram;$/;"	f	class:GL2JavaView.Renderer	file:
mProgram	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private int mProgram;$/;"	f	class:TestLatencyView.Renderer	file:
mProgram	services/surfaceflinger/RenderEngine/Program.h	/^    GLuint mProgram;$/;"	m	class:android::Program
mProjMatrix	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private float[] mProjMatrix = new float[16];$/;"	f	class:CamRenderer	file:
mProjectionMatrix	services/surfaceflinger/RenderEngine/Description.h	/^    mat4 mProjectionMatrix;$/;"	m	class:android::Description
mProjectionMatrixLoc	services/surfaceflinger/RenderEngine/Program.h	/^    GLint mProjectionMatrixLoc;$/;"	m	class:android::Program
mProjectionRotation	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    Transform::orientation_flags mProjectionRotation;$/;"	m	class:android::GLES20RenderEngine
mProjectionSourceCrop	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    Rect mProjectionSourceCrop;$/;"	m	class:android::GLES20RenderEngine
mProjectionYSwap	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    bool mProjectionYSwap;$/;"	m	class:android::GLES20RenderEngine
mProtectedByApp	services/surfaceflinger/Layer.h	/^    bool mProtectedByApp; \/\/ application requires protected path to external sink$/;"	m	class:android::Layer
mProtectedTexName	services/surfaceflinger/RenderEngine/GLES11RenderEngine.h	/^    GLuint mProtectedTexName;$/;"	m	class:android::GLES11RenderEngine
mProtectedTexName	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    GLuint mProtectedTexName;$/;"	m	class:android::GLES20RenderEngine
mPublisher	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^    InputPublisher* mPublisher;$/;"	m	class:android::InputPublisherAndConsumerTest	file:
mQueue	include/gui/BufferQueueCore.h	/^    Fifo mQueue;$/;"	m	class:android::BufferQueueCore
mQueue	opengl/libs/EGL/eglApi.cpp	/^    Vector<EGLSyncKHR> mQueue;$/;"	m	class:FrameCompletionThread	file:
mQueue	services/surfaceflinger/MessageQueue.h	/^        MessageQueue& mQueue;$/;"	m	class:android::MessageQueue::Handler
mQueueBufferOutput	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    QueueBufferOutput mQueueBufferOutput;$/;"	m	class:android::VirtualDisplaySurface
mQueueItemLock	services/surfaceflinger/Layer.h	/^    mutable Mutex mQueueItemLock;$/;"	m	class:android::Layer
mQueueItems	services/surfaceflinger/Layer.h	/^    Vector<BufferItem> mQueueItems;$/;"	m	class:android::Layer
mQueuedFrames	services/surfaceflinger/Layer.h	/^    volatile int32_t mQueuedFrames;$/;"	m	class:android::Layer
mQueuedListener	services/inputflinger/InputReader.h	/^    sp<QueuedInputListener> mQueuedListener;$/;"	m	class:android::InputReader
mRanges	opengl/libagl/Tokenizer.h	/^    Vector<run_t>   mRanges;$/;"	m	class:android::Tokenizer
mRatio	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private float mRatio = 1.0f;$/;"	f	class:CamRenderer	file:
mRawPointerAxes	services/inputflinger/InputReader.h	/^    RawPointerAxes mRawPointerAxes;$/;"	m	class:android::TouchInputMapper
mRawPosition	include/input/VelocityControl.h	/^    VelocityTracker::Position mRawPosition;$/;"	m	class:android::VelocityControl
mReader	services/inputflinger/InputManager.h	/^    sp<InputReaderInterface> mReader;$/;"	m	class:android::InputManager
mReader	services/inputflinger/InputReader.h	/^        InputReader* mReader;$/;"	m	class:android::InputReader::ContextImpl
mReader	services/inputflinger/InputReader.h	/^    sp<InputReaderInterface> mReader;$/;"	m	class:android::InputReaderThread
mReader	services/inputflinger/tests/InputReader_test.cpp	/^    sp<InstrumentedInputReader> mReader;$/;"	m	class:android::InputReaderTest	file:
mReaderIsAliveCondition	services/inputflinger/InputReader.h	/^    Condition mReaderIsAliveCondition;$/;"	m	class:android::InputReader
mReaderThread	services/inputflinger/InputManager.h	/^    sp<InputReaderThread> mReaderThread;$/;"	m	class:android::InputManager
mRealHeap	libs/binder/IMemory.cpp	/^    mutable bool        mRealHeap;$/;"	m	class:android::BpMemoryHeap	file:
mRecBuffer	include/gui/SensorEventQueue.h	/^    ASensorEvent* mRecBuffer;$/;"	m	class:android::SensorEventQueue
mReceiveFd	include/gui/BitTube.h	/^    mutable int mReceiveFd;$/;"	m	class:android::BitTube
mRecentQueue	services/inputflinger/InputDispatcher.h	/^    Queue<EventEntry> mRecentQueue;$/;"	m	class:android::InputDispatcher
mRedSize	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        protected int mRedSize;$/;"	f	class:GL2JNIView.ConfigChooser
mRedSize	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        protected int mRedSize;$/;"	f	class:GLPerfView.ConfigChooser
mRedSize	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        protected int mRedSize;$/;"	f	class:GLDualGL2View.ConfigChooser
mRefreshPending	services/surfaceflinger/Layer.h	/^    bool mRefreshPending;$/;"	m	class:android::Layer
mRefreshPeriod	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        nsecs_t mRefreshPeriod;$/;"	m	class:android::HWComposer::VSyncThread
mRefreshSkipCount	services/surfaceflinger/DispSync.h	/^    int mRefreshSkipCount;$/;"	m	class:android::DispSync
mRefs	include/binder/Binder.h	/^    RefBase::weakref_type*  mRefs;$/;"	m	class:android::BpRefBase
mRelHWheel	services/inputflinger/InputReader.h	/^    int32_t mRelHWheel;$/;"	m	class:android::CursorScrollAccumulator
mRelWheel	services/inputflinger/InputReader.h	/^    int32_t mRelWheel;$/;"	m	class:android::CursorScrollAccumulator
mRelX	services/inputflinger/InputReader.h	/^    int32_t mRelX;$/;"	m	class:android::CursorMotionAccumulator
mRelX	services/inputflinger/InputReader.h	/^    int32_t mRelX;$/;"	m	class:android::CursorScrollAccumulator
mRelY	services/inputflinger/InputReader.h	/^    int32_t mRelY;$/;"	m	class:android::CursorMotionAccumulator
mRelY	services/inputflinger/InputReader.h	/^    int32_t mRelY;$/;"	m	class:android::CursorScrollAccumulator
mReleaseCondition	include/gui/StreamSplitter.h	/^    Condition mReleaseCondition;$/;"	m	class:android::StreamSplitter
mReleaseCount	include/gui/StreamSplitter.h	/^        size_t mReleaseCount;$/;"	m	class:android::StreamSplitter::BufferTracker
mReleasedTexImage	include/gui/GLConsumer.h	/^    sp<EglImage> mReleasedTexImage;$/;"	m	class:android::GLConsumer
mRemote	include/binder/Binder.h	/^    IBinder* const          mRemote;$/;"	m	class:android::BpRefBase
mRenderEngine	services/surfaceflinger/SurfaceFlinger.h	/^    RenderEngine* mRenderEngine;$/;"	m	class:android::SurfaceFlinger
mRenderer	cmds/flatland/Main.cpp	/^    Renderer* mRenderer;$/;"	m	class:Layer	file:
mRenderer	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    CamRenderer mRenderer;$/;"	f	class:CamGLSurfaceView
mRenderer	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    ClearRenderer mRenderer;$/;"	f	class:ClearGLSurfaceView
mRenderer	services/surfaceflinger/RenderEngine/GLExtensions.h	/^    String8 mRenderer;$/;"	m	class:android::GLExtensions
mRepaintEverything	services/surfaceflinger/SurfaceFlinger.h	/^    volatile int32_t mRepaintEverything;$/;"	m	class:android::SurfaceFlinger
mRepeat	services/inputflinger/InputReader.h	/^    ssize_t mRepeat;$/;"	m	class:android::VibratorInputMapper
mRepeatCount	include/input/Input.h	/^    int32_t mRepeatCount;$/;"	m	class:android::KeyEvent
mReplacedKeys	services/inputflinger/InputDispatcher.h	/^    KeyedVector<KeyReplacement, int32_t> mReplacedKeys;$/;"	m	class:android::InputDispatcher
mReqFormat	include/gui/Surface.h	/^    uint32_t mReqFormat;$/;"	m	class:android::Surface
mReqHeight	include/gui/Surface.h	/^    uint32_t mReqHeight;$/;"	m	class:android::Surface
mReqSize	include/gui/Surface.h	/^    uint32_t mReqSize;$/;"	m	class:android::Surface
mReqUsage	include/gui/Surface.h	/^    uint32_t mReqUsage;$/;"	m	class:android::Surface
mReqWidth	include/gui/Surface.h	/^    uint32_t mReqWidth;$/;"	m	class:android::Surface
mRequestBufferCalled	include/gui/BufferSlot.h	/^    bool mRequestBufferCalled;$/;"	m	struct:android::BufferSlot
mRequiredPermission	include/gui/Sensor.h	/^    String8 mRequiredPermission;$/;"	m	class:android::Sensor
mResampleTouch	include/input/InputTransport.h	/^    const bool mResampleTouch;$/;"	m	class:android::InputConsumer
mReserved0	include/binder/Binder.h	/^            void*       mReserved0;$/;"	m	class:android::BBinder
mResetWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    bool mResetWasCalled;$/;"	m	class:android::FakeInputMapper	file:
mResolution	include/gui/Sensor.h	/^    float   mResolution;$/;"	m	class:android::Sensor
mResyncSamples	services/surfaceflinger/DispSync.h	/^    nsecs_t mResyncSamples[MAX_RESYNC_SAMPLES];$/;"	m	class:android::DispSync
mRootDir	include/binder/ProcessState.h	/^            String8             mRootDir;$/;"	m	class:android::ProcessState
mRotationMapOffset	services/inputflinger/InputReader.h	/^    int32_t mRotationMapOffset; \/\/ determines if and how volume keys rotate$/;"	m	class:android::KeyboardInputMapper
mRowInc	include/media/hardware/HardwareAPI.h	/^        OMX_U32 mRowInc;             \/\/ row increment in bytes$/;"	m	struct:android::MediaImage::PlaneInfo
mRunnable	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^    Runnable mRunnable = new Runnable() {$/;"	f	class:TestActivity
mSFEventThread	services/surfaceflinger/SurfaceFlinger.h	/^    sp<EventThread> mSFEventThread;$/;"	m	class:android::SurfaceFlinger
mST	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    sp<GLConsumer> mST;$/;"	m	class:android::SurfaceTextureClientTest	file:
mST	libs/gui/tests/SurfaceTextureGL.h	/^    sp<GLConsumer> mST;$/;"	m	class:android::SurfaceTextureGLTest
mST	libs/gui/tests/TextureRenderer.h	/^    sp<GLConsumer> mST;$/;"	m	class:android::TextureRenderer
mSTC	libs/gui/tests/CpuConsumer_test.cpp	/^    sp<Surface> mSTC;$/;"	m	class:android::CpuConsumerTest	file:
mSTC	libs/gui/tests/SurfaceTextureClient_test.cpp	/^    sp<Surface> mSTC;$/;"	m	class:android::SurfaceTextureClientTest	file:
mSTC	libs/gui/tests/SurfaceTextureGL.h	/^    sp<Surface> mSTC;$/;"	m	class:android::SurfaceTextureGLTest
mSTMatrix	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private float[] mSTMatrix = new float[16];$/;"	f	class:CamRenderer	file:
mSampleEventTimes	include/input/Input.h	/^    Vector<nsecs_t> mSampleEventTimes;$/;"	m	class:android::MotionEvent
mSamplePointerCoords	include/input/Input.h	/^    Vector<PointerCoords> mSamplePointerCoords;$/;"	m	class:android::MotionEvent
mSamplerLoc	services/surfaceflinger/RenderEngine/Program.h	/^    GLint mSamplerLoc;$/;"	m	class:android::Program
mSamplerMaskLoc	services/surfaceflinger/RenderEngine/Program.h	/^    GLint mSamplerMaskLoc;$/;"	m	class:android::Program
mSavePending	opengl/libs/EGL/egl_cache.h	/^    bool mSavePending;$/;"	m	class:android::egl_cache_t
mScaleX	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private float mScaleX, mScaleY, mOffsetX, mOffsetY;$/;"	f	class:TestLatencyView.Renderer	file:
mScaleY	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private float mScaleX, mScaleY, mOffsetX, mOffsetY;$/;"	f	class:TestLatencyView.Renderer	file:
mScalingMode	include/gui/BufferItem.h	/^    uint32_t mScalingMode;$/;"	m	class:android::BufferItem
mScalingMode	include/gui/IGraphicBufferConsumer.h	/^        uint32_t mScalingMode;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mScalingMode	include/gui/Surface.h	/^    int mScalingMode;$/;"	m	class:android::Surface
mScanCode	include/input/Input.h	/^    int32_t mScanCode;$/;"	m	class:android::KeyEvent
mScanCodeStates	services/inputflinger/tests/InputReader_test.cpp	/^    KeyedVector<int32_t, int32_t> mScanCodeStates;$/;"	m	class:android::FakeInputMapper	file:
mScissor	services/surfaceflinger/DisplayDevice.h	/^    Rect mScissor;$/;"	m	class:android::DisplayDevice
mScrollLockLedState	services/inputflinger/InputReader.h	/^    LedState mScrollLockLedState;$/;"	m	class:android::KeyboardInputMapper
mSecondEglContext	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^    EGLContext mSecondEglContext;$/;"	m	class:android::SurfaceTextureMultiContextGLTest
mSecondTextureRenderer	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^    sp<TextureRenderer> mSecondTextureRenderer;$/;"	m	class:android::SurfaceTextureMultiContextGLTest
mSecure	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    bool mSecure;$/;"	m	class:android::VirtualDisplaySurface
mSecure	services/surfaceflinger/Layer.h	/^    bool mSecure; \/\/ no screenshots$/;"	m	class:android::Layer
mSecureLayerVisible	services/surfaceflinger/DisplayDevice.h	/^    bool mSecureLayerVisible;$/;"	m	class:android::DisplayDevice
mSendFd	include/gui/BitTube.h	/^    int mSendFd;$/;"	m	class:android::BitTube
mSensor	services/sensorservice/SensorInterface.h	/^    Sensor mSensor;$/;"	m	class:android::HardwareSensor
mSensorChannel	include/gui/SensorEventQueue.h	/^    sp<BitTube> mSensorChannel;$/;"	m	class:android::SensorEventQueue
mSensorDevice	services/sensorservice/CorrectedGyroSensor.h	/^    SensorDevice& mSensorDevice;$/;"	m	class:android::CorrectedGyroSensor
mSensorDevice	services/sensorservice/GravitySensor.h	/^    SensorDevice& mSensorDevice;$/;"	m	class:android::GravitySensor
mSensorDevice	services/sensorservice/LinearAccelerationSensor.h	/^    SensorDevice& mSensorDevice;$/;"	m	class:android::LinearAccelerationSensor
mSensorDevice	services/sensorservice/OrientationSensor.h	/^    SensorDevice& mSensorDevice;$/;"	m	class:android::OrientationSensor
mSensorDevice	services/sensorservice/RotationVectorSensor.h	/^    SensorDevice& mSensorDevice;$/;"	m	class:android::GyroDriftSensor
mSensorDevice	services/sensorservice/RotationVectorSensor.h	/^    SensorDevice& mSensorDevice;$/;"	m	class:android::RotationVectorSensor
mSensorDevice	services/sensorservice/SensorDevice.h	/^    sensors_poll_device_1_t* mSensorDevice;$/;"	m	class:android::SensorDevice
mSensorDevice	services/sensorservice/SensorFusion.h	/^    SensorDevice& mSensorDevice;$/;"	m	class:android::SensorFusion
mSensorDevice	services/sensorservice/SensorInterface.h	/^    SensorDevice& mSensorDevice;$/;"	m	class:android::HardwareSensor
mSensorEventBuffer	services/sensorservice/SensorService.h	/^    sensors_event_t *mSensorEventBuffer, *mSensorEventScratch;$/;"	m	class:android::SensorService
mSensorEventConnection	include/gui/SensorEventQueue.h	/^    sp<ISensorEventConnection> mSensorEventConnection;$/;"	m	class:android::SensorEventQueue
mSensorEventScratch	services/sensorservice/SensorService.h	/^    sensors_event_t *mSensorEventBuffer, *mSensorEventScratch;$/;"	m	class:android::SensorService
mSensorFusion	services/sensorservice/CorrectedGyroSensor.h	/^    SensorFusion& mSensorFusion;$/;"	m	class:android::CorrectedGyroSensor
mSensorFusion	services/sensorservice/GravitySensor.h	/^    SensorFusion& mSensorFusion;$/;"	m	class:android::GravitySensor
mSensorFusion	services/sensorservice/OrientationSensor.h	/^    SensorFusion& mSensorFusion;$/;"	m	class:android::OrientationSensor
mSensorFusion	services/sensorservice/RotationVectorSensor.h	/^    SensorFusion& mSensorFusion;$/;"	m	class:android::GyroDriftSensor
mSensorFusion	services/sensorservice/RotationVectorSensor.h	/^    SensorFusion& mSensorFusion;$/;"	m	class:android::RotationVectorSensor
mSensorInfo	services/sensorservice/SensorService.h	/^        KeyedVector<int, FlushInfo> mSensorInfo;$/;"	m	class:android::SensorService::SensorEventConnection
mSensorList	include/gui/SensorManager.h	/^    mutable Sensor const** mSensorList;$/;"	m	class:android::SensorManager
mSensorList	services/sensorservice/SensorService.h	/^    Vector<Sensor> mSensorList;$/;"	m	class:android::SensorService
mSensorManager	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    SensorManager mSensorManager;$/;"	f	class:CamGLSurfaceView
mSensorMap	services/sensorservice/SensorService.h	/^    DefaultKeyedVector<int, SensorInterface*> mSensorMap;$/;"	m	class:android::SensorService
mSensorModule	services/sensorservice/SensorDevice.h	/^    struct sensors_module_t* mSensorModule;$/;"	m	class:android::SensorDevice	typeref:struct:android::SensorDevice::sensors_module_t
mSensorServer	include/gui/SensorManager.h	/^    mutable sp<ISensorServer> mSensorServer;$/;"	m	class:android::SensorManager
mSensors	include/gui/SensorManager.h	/^    mutable Vector<Sensor> mSensors;$/;"	m	class:android::SensorManager
mSentHoverEnter	services/inputflinger/InputReader.h	/^    bool mSentHoverEnter;$/;"	m	class:android::TouchInputMapper
mSeq	include/binder/BufferedTextOutput.h	/^    const int32_t       mSeq;$/;"	m	class:android::BufferedTextOutput
mSeqChains	include/input/InputTransport.h	/^    Vector<SeqChain> mSeqChains;$/;"	m	class:android::InputConsumer
mService	include/binder/AppOpsManager.h	/^    sp<IAppOpsService> mService;$/;"	m	class:android::AppOpsManager
mService	services/sensorservice/SensorService.h	/^        sp<SensorService> const mService;$/;"	m	class:android::SensorService::SensorEventAckReceiver
mService	services/sensorservice/SensorService.h	/^        sp<SensorService> const mService;$/;"	m	class:android::SensorService::SensorEventConnection
mShaderDescs	cmds/flatland/GLHelper.h	/^    const ShaderDesc* mShaderDescs;$/;"	m	class:android::GLHelper
mShaderPrograms	cmds/flatland/GLHelper.h	/^    GLuint* mShaderPrograms;$/;"	m	class:android::GLHelper
mSidebandStream	include/gui/BufferQueueCore.h	/^    sp<NativeHandle> mSidebandStream;$/;"	m	class:android::BufferQueueCore
mSidebandStream	services/surfaceflinger/Layer.h	/^    sp<NativeHandle> mSidebandStream;$/;"	m	class:android::Layer
mSidebandStreamChanged	services/surfaceflinger/Layer.h	/^    volatile int32_t mSidebandStreamChanged; \/\/ used like an atomic boolean$/;"	m	class:android::Layer
mSingleLineCutoff	include/binder/TextOutput.h	/^    int32_t mSingleLineCutoff;$/;"	m	class:android::HexDump
mSingleTouchMotionAccumulator	services/inputflinger/InputReader.h	/^    SingleTouchMotionAccumulator mSingleTouchMotionAccumulator;$/;"	m	class:android::SingleTouchInputMapper
mSinkBufferHeight	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    uint32_t mSinkBufferWidth, mSinkBufferHeight;$/;"	m	class:android::VirtualDisplaySurface
mSinkBufferWidth	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    uint32_t mSinkBufferWidth, mSinkBufferHeight;$/;"	m	class:android::VirtualDisplaySurface
mSize	include/binder/MemoryBase.h	/^    size_t          mSize;$/;"	m	class:android::MemoryBase
mSize	include/binder/MemoryHeapBase.h	/^    size_t      mSize;$/;"	m	class:android::MemoryHeapBase
mSize	include/binder/Parcel.h	/^        size_t mSize;$/;"	m	class:android::Parcel::Blob
mSize	include/binder/TextOutput.h	/^    size_t mSize;$/;"	m	class:android::HexDump
mSize	libs/binder/IMemory.cpp	/^    mutable size_t      mSize;$/;"	m	class:android::BpMemoryHeap	file:
mSize	libs/binder/IMemory.cpp	/^    mutable size_t mSize;$/;"	m	class:android::BpMemory	file:
mSize	libs/binder/MemoryHeapPmem.cpp	/^    size_t              mSize;$/;"	m	class:android::SubRegionMemory	file:
mSize	opengl/libagl/TextureObjectManager.h	/^    size_t              mSize;$/;"	m	class:android::EGLTextureObject
mSize	opengl/libs/GLES_trace/src/gltrace_context.h	/^    GLsizeiptr mSize;$/;"	m	class:android::gltrace::ElementArrayBuffer
mSizeScale	services/inputflinger/InputReader.h	/^    float mSizeScale;$/;"	m	class:android::TouchInputMapper
mSlot	include/gui/BufferItem.h	/^    int mSlot;$/;"	m	class:android::BufferItem
mSlot	include/gui/CpuConsumer.h	/^        int mSlot;$/;"	m	struct:android::CpuConsumer::AcquiredBuffer
mSlotCount	services/inputflinger/InputReader.h	/^    size_t mSlotCount;$/;"	m	class:android::MultiTouchMotionAccumulator
mSlots	include/gui/BufferQueueConsumer.h	/^    BufferQueueDefs::SlotsType& mSlots;$/;"	m	class:android::BufferQueueConsumer
mSlots	include/gui/BufferQueueCore.h	/^    BufferQueueDefs::SlotsType mSlots;$/;"	m	class:android::BufferQueueCore
mSlots	include/gui/BufferQueueProducer.h	/^    BufferQueueDefs::SlotsType& mSlots;$/;"	m	class:android::BufferQueueProducer
mSlots	include/gui/ConsumerBase.h	/^    Slot mSlots[BufferQueue::NUM_BUFFER_SLOTS];$/;"	m	class:android::ConsumerBase
mSlots	include/gui/Surface.h	/^    BufferSlot mSlots[NUM_BUFFER_SLOTS];$/;"	m	class:android::Surface
mSlots	services/inputflinger/InputReader.h	/^    Slot* mSlots;$/;"	m	class:android::MultiTouchMotionAccumulator
mSocket	opengl/libs/GLES_trace/src/gltrace_transport.h	/^    int mSocket;$/;"	m	class:android::gltrace::TCPStream
mSocketBufferSize	services/sensorservice/SensorService.h	/^    uint32_t mSocketBufferSize;$/;"	m	class:android::SensorService
mSocketWriteMutex	opengl/libs/GLES_trace/src/gltrace_transport.h	/^    pthread_mutex_t mSocketWriteMutex;$/;"	m	class:android::gltrace::TCPStream
mSource	include/input/Input.h	/^    int32_t mSource;$/;"	m	class:android::InputEvent
mSource	services/inputflinger/InputReader.h	/^    int32_t mSource;$/;"	m	class:android::CursorInputMapper
mSource	services/inputflinger/InputReader.h	/^    uint32_t mSource;$/;"	m	class:android::KeyboardInputMapper
mSource	services/inputflinger/InputReader.h	/^    uint32_t mSource;$/;"	m	class:android::TouchInputMapper
mSource	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.h	/^    sp<IGraphicBufferProducer> mSource[2]; \/\/ indexed by SOURCE_*$/;"	m	class:android::VirtualDisplaySurface
mSources	include/input/InputDevice.h	/^    uint32_t mSources;$/;"	m	class:android::InputDeviceInfo
mSources	services/inputflinger/InputReader.h	/^    uint32_t mSources;$/;"	m	class:android::InputDevice
mSources	services/inputflinger/tests/InputReader_test.cpp	/^    uint32_t mSources;$/;"	m	class:android::FakeInputMapper	file:
mSplitter	include/gui/StreamSplitter.h	/^        sp<StreamSplitter> mSplitter;$/;"	m	class:android::StreamSplitter::OutputListener
mState	include/binder/Binder.h	/^    volatile int32_t        mState;$/;"	m	class:android::BpRefBase
mState	include/input/KeyCharacterMap.h	/^        State mState;$/;"	m	class:android::KeyCharacterMap::Parser
mState	opengl/libs/GLES_trace/src/gltrace_context.h	/^    GLTraceState *mState;       \/* parent GL Trace state (for per process GL Trace State Info) *\/$/;"	m	class:android::gltrace::GLTraceContext
mState	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    Description mState;$/;"	m	class:android::GLES20RenderEngine
mStateLock	services/surfaceflinger/SurfaceFlinger.h	/^    mutable Mutex mStateLock;$/;"	m	class:android::SurfaceFlinger
mStatus	include/gui/SurfaceComposerClient.h	/^                status_t                    mStatus;$/;"	m	class:android::SurfaceComposerClient
mStatus	services/surfaceflinger/RenderEngine/RenderEngine.h	/^        uint32_t mStatus;$/;"	m	class:android::RenderEngine::BindImageAsFramebuffer
mStencilSize	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        protected int mStencilSize;$/;"	f	class:GL2JNIView.ConfigChooser
mStencilSize	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        protected int mStencilSize;$/;"	f	class:GLPerfView.ConfigChooser
mStencilSize	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        protected int mStencilSize;$/;"	f	class:GLDualGL2View.ConfigChooser
mStickyTransform	include/gui/BufferQueueProducer.h	/^    uint32_t mStickyTransform;$/;"	m	class:android::BufferQueueProducer
mStickyTransform	include/gui/Surface.h	/^    uint32_t mStickyTransform;$/;"	m	class:android::Surface
mStop	services/surfaceflinger/DispSync.cpp	/^    bool mStop;$/;"	m	class:android::DispSyncThread	file:
mStorage	include/ui/Region.h	/^    Vector<Rect> mStorage;$/;"	m	class:android::Region
mStorage	services/surfaceflinger/EventLog/EventLog.h	/^        char mStorage[STORAGE_MAX_SIZE];$/;"	m	class:android::EventLog::TagBuffer
mStrategy	include/input/VelocityTracker.h	/^    VelocityTrackerStrategy* mStrategy;$/;"	m	class:android::VelocityTracker
mStream	opengl/libs/GLES_trace/src/gltrace_context.h	/^    TCPStream *mStream;$/;"	m	class:android::gltrace::GLTraceState
mStream	opengl/libs/GLES_trace/src/gltrace_transport.h	/^    TCPStream *mStream;$/;"	m	class:android::gltrace::BufferedOutputStream
mStrictModePolicy	include/binder/IPCThreadState.h	/^            int32_t             mStrictModePolicy;$/;"	m	class:android::IPCThreadState
mStride	services/surfaceflinger/RenderEngine/Mesh.h	/^        size_t mStride;$/;"	m	class:android::Mesh::VertexArray
mStride	services/surfaceflinger/RenderEngine/Mesh.h	/^    size_t mStride;$/;"	m	class:android::Mesh
mString	include/private/gui/SyncFeatures.h	/^    String8 mString;$/;"	m	class:android::SyncFeatures
mString	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^    String8 mString;$/;"	m	class:android::Formatter	file:
mStringBuffer	opengl/libs/GLES_trace/src/gltrace_transport.h	/^    std::string mStringBuffer;$/;"	m	class:android::gltrace::BufferedOutputStream
mStringType	include/gui/Sensor.h	/^    String8 mStringType;$/;"	m	class:android::Sensor
mSumX	services/sensorservice/Fusion.cpp	/^    vec<TYPE, SIZE> mSumX;$/;"	m	class:android::Covariance	file:
mSumXX	services/sensorservice/Fusion.cpp	/^    mat<TYPE, SIZE, SIZE> mSumXX;$/;"	m	class:android::Covariance	file:
mSupportedKeyCodes	services/inputflinger/tests/InputReader_test.cpp	/^    Vector<int32_t> mSupportedKeyCodes;$/;"	m	class:android::FakeInputMapper	file:
mSurface	cmds/flatland/Main.cpp	/^    EGLSurface mSurface;$/;"	m	class:BenchmarkRunner	file:
mSurface	cmds/flatland/Main.cpp	/^    EGLSurface mSurface;$/;"	m	class:Layer	file:
mSurface	libs/gui/tests/MultiTextureConsumer_test.cpp	/^    sp<Surface> mSurface;$/;"	m	class:android::MultiTextureConsumerTest	file:
mSurface	libs/gui/tests/Surface_test.cpp	/^    sp<Surface> mSurface;$/;"	m	class:android::SurfaceTest	file:
mSurface	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private SurfaceTexture mSurface;$/;"	f	class:CamRenderer	file:
mSurface	services/surfaceflinger/DisplayDevice.h	/^    EGLSurface      mSurface;$/;"	m	class:android::DisplayDevice
mSurfaceComposerClient	cmds/flatland/GLHelper.h	/^    sp<SurfaceComposerClient> mSurfaceComposerClient;$/;"	m	class:android::GLHelper
mSurfaceControl	cmds/flatland/Main.cpp	/^    sp<SurfaceControl> mSurfaceControl;$/;"	m	class:BenchmarkRunner	file:
mSurfaceControl	libs/gui/tests/GLTest.h	/^    sp<SurfaceControl> mSurfaceControl;$/;"	m	class:android::GLTest
mSurfaceControl	libs/gui/tests/SRGB_test.cpp	/^    sp<SurfaceControl> mSurfaceControl;$/;"	m	class:android::SRGBTest	file:
mSurfaceControl	libs/gui/tests/Surface_test.cpp	/^    sp<SurfaceControl> mSurfaceControl;$/;"	m	class:android::SurfaceTest	file:
mSurfaceControl	opengl/tests/include/WindowSurface.h	/^    sp<SurfaceControl> mSurfaceControl;$/;"	m	class:android::WindowSurface
mSurfaceData	include/gui/SurfaceControl.h	/^    mutable sp<Surface>         mSurfaceData;$/;"	m	class:android::SurfaceControl
mSurfaceFlingerConsumer	services/surfaceflinger/Layer.h	/^    sp<SurfaceFlingerConsumer> mSurfaceFlingerConsumer;$/;"	m	class:android::Layer
mSurfaceHeight	services/inputflinger/InputReader.h	/^    int32_t mSurfaceHeight;$/;"	m	class:android::TouchInputMapper
mSurfaceLeft	services/inputflinger/InputReader.h	/^    int32_t mSurfaceLeft;$/;"	m	class:android::TouchInputMapper
mSurfaceOrientation	services/inputflinger/InputReader.h	/^    int32_t mSurfaceOrientation;$/;"	m	class:android::TouchInputMapper
mSurfaceTop	services/inputflinger/InputReader.h	/^    int32_t mSurfaceTop;$/;"	m	class:android::TouchInputMapper
mSurfaceWidth	services/inputflinger/InputReader.h	/^    int32_t mSurfaceWidth;$/;"	m	class:android::TouchInputMapper
mSwapIntervalZero	include/gui/Surface.h	/^    bool mSwapIntervalZero;$/;"	m	class:android::Surface
mSwitchStates	services/inputflinger/tests/InputReader_test.cpp	/^    KeyedVector<int32_t, int32_t> mSwitchStates;$/;"	m	class:android::FakeInputMapper	file:
mSwitchValues	services/inputflinger/InputReader.h	/^    uint32_t mSwitchValues;$/;"	m	class:android::SwitchInputMapper
mSyncSurfaceControl	services/surfaceflinger/tests/Transaction_test.cpp	/^    sp<SurfaceControl> mSyncSurfaceControl;$/;"	m	class:android::LayerUpdateTest	file:
mT	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^    private long  mT;$/;"	f	class:TestLatencyView	file:
mTO	include/binder/TextOutput.h	/^        TextOutput&     mTO;$/;"	m	class:android::TextOutput::Bundle
mTag	services/surfaceflinger/EventLog/EventLog.h	/^        int32_t mTag;$/;"	m	class:android::EventLog::TagBuffer
mTargetDelayNs	services/sensorservice/SensorFusion.h	/^    nsecs_t mTargetDelayNs;$/;"	m	class:android::SensorFusion
mTempTouchState	services/inputflinger/InputDispatcher.h	/^    TouchState mTempTouchState;$/;"	m	class:android::InputDispatcher
mTexCoordsSize	services/surfaceflinger/RenderEngine/Mesh.h	/^    size_t mTexCoordsSize;$/;"	m	class:android::Mesh
mTexMatrixHandle	libs/gui/tests/TextureRenderer.h	/^    GLint mTexMatrixHandle;$/;"	m	class:android::TextureRenderer
mTexName	cmds/flatland/Main.cpp	/^    GLuint mTexName;$/;"	m	class:Layer	file:
mTexName	include/gui/GLConsumer.h	/^    uint32_t mTexName;$/;"	m	class:android::GLConsumer
mTexName	libs/gui/tests/TextureRenderer.h	/^    GLuint mTexName;$/;"	m	class:android::TextureRenderer
mTexName	services/surfaceflinger/RenderEngine/RenderEngine.h	/^        uint32_t mTexName, mFbName;$/;"	m	class:android::RenderEngine::BindImageAsFramebuffer
mTexSamplerHandle	libs/gui/tests/TextureRenderer.h	/^    GLint mTexSamplerHandle;$/;"	m	class:android::TextureRenderer
mTexTarget	include/gui/GLConsumer.h	/^    const uint32_t mTexTarget;$/;"	m	class:android::GLConsumer
mTexture	services/surfaceflinger/Layer.h	/^    mutable Texture mTexture;$/;"	m	class:android::Layer
mTexture	services/surfaceflinger/RenderEngine/Description.h	/^    Texture mTexture;$/;"	m	class:android::Description
mTextureBlur	services/surfaceflinger/LayerBlur.h	/^    Texture mTextureBlur;$/;"	m	class:android::LayerBlur
mTextureCapture	services/surfaceflinger/LayerBlur.h	/^    Texture mTextureCapture;$/;"	m	class:android::LayerBlur
mTextureEnabled	services/surfaceflinger/RenderEngine/Description.h	/^    bool mTextureEnabled;$/;"	m	class:android::Description
mTextureID	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private int mTextureID;$/;"	f	class:CamRenderer	file:
mTextureMasking	services/surfaceflinger/LayerBlur.h	/^    Texture mTextureMasking;$/;"	m	class:android::LayerBlur
mTextureMatrix	services/surfaceflinger/RenderEngine/Texture.h	/^    mat4 mTextureMatrix;$/;"	m	class:android::Texture
mTextureMatrixLoc	services/surfaceflinger/RenderEngine/Program.h	/^    GLint mTextureMatrixLoc;$/;"	m	class:android::Program
mTextureName	services/surfaceflinger/Layer.h	/^    uint32_t mTextureName;      \/\/ from GLES$/;"	m	class:android::Layer
mTextureName	services/surfaceflinger/RenderEngine/Texture.h	/^    uint32_t mTextureName;$/;"	m	class:android::Texture
mTextureRenderer	libs/gui/tests/SurfaceTextureGL.h	/^    sp<TextureRenderer> mTextureRenderer;$/;"	m	class:android::SurfaceTextureGLTest
mTextureTarget	services/surfaceflinger/RenderEngine/Texture.h	/^    uint32_t mTextureTarget;$/;"	m	class:android::Texture
mTextures	opengl/libagl/TextureObjectManager.h	/^    KeyedVector< GLuint, sp<EGLTextureObject> > mTextures;$/;"	m	class:android::EGLSurfaceManager
mThirdEglContext	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^    EGLContext mThirdEglContext;$/;"	m	class:android::SurfaceTextureMultiContextGLTest
mThirdTextureRenderer	libs/gui/tests/SurfaceTextureMultiContextGL.h	/^    sp<TextureRenderer> mThirdTextureRenderer;$/;"	m	class:android::SurfaceTextureMultiContextGLTest
mThread	services/surfaceflinger/DispSync.h	/^    sp<DispSyncThread> mThread;$/;"	m	class:android::DispSync
mThreadPoolSeq	include/binder/ProcessState.h	/^    volatile int32_t            mThreadPoolSeq;$/;"	m	class:android::ProcessState
mThreadPoolStarted	include/binder/ProcessState.h	/^            bool                mThreadPoolStarted;$/;"	m	class:android::ProcessState
mTiltXCenter	services/inputflinger/InputReader.h	/^    float mTiltXCenter;$/;"	m	class:android::TouchInputMapper
mTiltXScale	services/inputflinger/InputReader.h	/^    float mTiltXScale;$/;"	m	class:android::TouchInputMapper
mTiltYCenter	services/inputflinger/InputReader.h	/^    float mTiltYCenter;$/;"	m	class:android::TouchInputMapper
mTiltYScale	services/inputflinger/InputReader.h	/^    float mTiltYScale;$/;"	m	class:android::TouchInputMapper
mTime	services/surfaceflinger/FrameRateHelper.h	/^    nsecs_t mTime;$/;"	m	class:android::FrameRateHelper
mTimerId	services/surfaceflinger/EventThread.h	/^    timer_t mTimerId;$/;"	m	class:android::EventThread
mTimestamp	include/gui/BufferItem.h	/^    int64_t mTimestamp;$/;"	m	class:android::BufferItem
mTimestamp	include/gui/IGraphicBufferConsumer.h	/^        int64_t mTimestamp;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mTimestamp	include/gui/Surface.h	/^    int64_t mTimestamp;$/;"	m	class:android::Surface
mToggle	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^    boolean mToggle;$/;"	f	class:TestActivity
mToken	services/inputflinger/InputReader.h	/^    int32_t mToken;$/;"	m	class:android::VibratorInputMapper
mTokenizer	include/input/KeyCharacterMap.h	/^        Tokenizer* mTokenizer;$/;"	m	class:android::KeyCharacterMap::Parser
mTokenizer	include/input/KeyLayoutMap.h	/^        Tokenizer* mTokenizer;$/;"	m	class:android::KeyLayoutMap::Parser
mTokenizer	include/input/VirtualKeyMap.h	/^        Tokenizer* mTokenizer;$/;"	m	class:android::VirtualKeyMap::Parser
mTokenizer	opengl/libagl/TokenManager.h	/^    Tokenizer       mTokenizer;$/;"	m	class:android::TokenManager
mTotalAcksNeeded	services/sensorservice/SensorService.h	/^        int mTotalAcksNeeded, mTotalAcksReceived;$/;"	m	class:android::SensorService::SensorEventConnection
mTotalAcksReceived	services/sensorservice/SensorService.h	/^        int mTotalAcksNeeded, mTotalAcksReceived;$/;"	m	class:android::SensorService::SensorEventConnection
mTouchButtonAccumulator	services/inputflinger/InputReader.h	/^    TouchButtonAccumulator mTouchButtonAccumulator;$/;"	m	class:android::TouchInputMapper
mTouchStates	include/input/InputTransport.h	/^    Vector<TouchState> mTouchStates;$/;"	m	class:android::InputConsumer
mTouchStatesByDisplay	services/inputflinger/InputDispatcher.h	/^    KeyedVector<int32_t, TouchState> mTouchStatesByDisplay;$/;"	m	class:android::InputDispatcher
mTraceContextIds	opengl/libs/GLES_trace/src/gltrace_context.h	/^    int mTraceContextIds;$/;"	m	class:android::gltrace::GLTraceState
mTraceOptionsRwLock	opengl/libs/GLES_trace/src/gltrace_context.h	/^    pthread_rwlock_t mTraceOptionsRwLock;$/;"	m	class:android::gltrace::GLTraceState
mTraceVsync	services/surfaceflinger/SurfaceFlinger.cpp	/^    const bool mTraceVsync;$/;"	m	class:android::DispSyncSource	file:
mTransactionCV	services/surfaceflinger/SurfaceFlinger.h	/^    Condition mTransactionCV;$/;"	m	class:android::SurfaceFlinger
mTransactionFlags	services/surfaceflinger/Layer.h	/^    volatile int32_t mTransactionFlags;$/;"	m	class:android::Layer
mTransactionFlags	services/surfaceflinger/SurfaceFlinger.h	/^    volatile int32_t mTransactionFlags;$/;"	m	class:android::SurfaceFlinger
mTransactionNestCount	libs/gui/SurfaceComposerClient.cpp	/^    uint32_t                    mTransactionNestCount;$/;"	m	class:android::Composer	file:
mTransactionPending	services/surfaceflinger/SurfaceFlinger.h	/^    bool mTransactionPending;$/;"	m	class:android::SurfaceFlinger
mTransform	include/gui/BufferItem.h	/^    uint32_t mTransform;$/;"	m	class:android::BufferItem
mTransform	include/gui/IGraphicBufferConsumer.h	/^        uint32_t mTransform;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mTransform	include/gui/Surface.h	/^    uint32_t mTransform;$/;"	m	class:android::Surface
mTransformHint	include/gui/BufferQueueCore.h	/^    uint32_t mTransformHint;$/;"	m	class:android::BufferQueueCore
mTransformHint	include/gui/Surface.h	/^    uint32_t mTransformHint;$/;"	m	class:android::Surface
mTransformHint	services/surfaceflinger/Layer.h	/^    uint32_t mTransformHint;$/;"	m	class:android::Layer
mTransformToDisplayInverse	include/gui/BufferItem.h	/^    bool mTransformToDisplayInverse;$/;"	m	class:android::BufferItem
mTransformToDisplayInverse	include/gui/IGraphicBufferConsumer.h	/^        bool mTransformToDisplayInverse;$/;"	m	class:android::IGraphicBufferConsumer::BufferItem
mTransformToDisplayInverse	services/surfaceflinger/SurfaceFlingerConsumer.h	/^    bool mTransformToDisplayInverse;$/;"	m	class:android::SurfaceFlingerConsumer
mTriangle	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^    private Triangle mTriangle;$/;"	f	class:TriangleRenderer	file:
mTriangleVertices	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private FloatBuffer mTriangleVertices;$/;"	f	class:CamRenderer	file:
mTriangleVertices	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        private FloatBuffer mTriangleVertices;$/;"	f	class:GL2JavaView.Renderer	file:
mTriangleVertices	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private FloatBuffer mTriangleVertices;$/;"	f	class:TestLatencyView.Renderer	file:
mTriangleVerticesData	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private final float[] mTriangleVerticesData = {$/;"	f	class:CamRenderer	file:
mTriangleVerticesData	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        private final float[] mTriangleVerticesData = { 0.0f, 0.5f, -0.5f, -0.5f,$/;"	f	class:GL2JavaView.Renderer	file:
mTriangleVerticesData	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private final float[] mTriangleVerticesData = {$/;"	f	class:TestLatencyView.Renderer	file:
mTriangleVerticesData2	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private float[] mTriangleVerticesData2 = new float[mTriangleVerticesData.length];$/;"	f	class:TestLatencyView.Renderer	file:
mType	include/gui/Sensor.h	/^    int32_t mType;$/;"	m	class:android::Sensor
mType	include/input/KeyCharacterMap.h	/^    int mType;$/;"	m	class:android::KeyCharacterMap
mType	include/media/hardware/HardwareAPI.h	/^    Type mType;$/;"	m	struct:android::MediaImage
mType	services/surfaceflinger/DisplayDevice.h	/^    DisplayType mType;$/;"	m	class:android::DisplayDevice
mType	services/surfaceflinger/Effects/Daltonizer.h	/^    ColorBlindnessTypes mType;$/;"	m	class:android::Daltonizer
mType	services/surfaceflinger/Transform.h	/^    mutable uint32_t    mType;$/;"	m	class:android::Transform
mUVAttribLoc	cmds/flatland/Composers.cpp	/^    GLint mUVAttribLoc;$/;"	m	class:android::Blitter	file:
mUVAttribLoc	cmds/flatland/Renderers.cpp	/^    GLuint mUVAttribLoc;$/;"	m	class:android::GradientRenderer	file:
mUVToInterpUniformLoc	cmds/flatland/Renderers.cpp	/^    GLuint mUVToInterpUniformLoc;$/;"	m	class:android::GradientRenderer	file:
mUVToTexUniformLoc	cmds/flatland/Composers.cpp	/^    GLint mUVToTexUniformLoc;$/;"	m	class:android::Blitter	file:
mUid	services/sensorservice/SensorService.h	/^        uid_t mUid;$/;"	m	class:android::SensorService::SensorEventConnection
mUniformsDirty	services/surfaceflinger/RenderEngine/Description.h	/^    bool mUniformsDirty;$/;"	m	class:android::Description
mUnionDirtyRect	services/surfaceflinger/SurfaceFlinger.h	/^    Rect mUnionDirtyRect;$/;"	m	class:android::SurfaceFlinger
mUnionDirtyRectPrev	services/surfaceflinger/SurfaceFlinger.h	/^    Rect mUnionDirtyRectPrev;$/;"	m	class:android::SurfaceFlinger
mUpdateGlobalMetaStateWasCalled	services/inputflinger/tests/InputReader_test.cpp	/^    bool mUpdateGlobalMetaStateWasCalled;$/;"	m	class:android::FakeInputReaderContext	file:
mUpdateOnDemand	include/ui/FramebufferNativeWindow.h	/^    bool mUpdateOnDemand;$/;"	m	class:android::FramebufferNativeWindow
mUpdatedSwitchMask	services/inputflinger/InputReader.h	/^    uint32_t mUpdatedSwitchMask;$/;"	m	class:android::SwitchInputMapper
mUseAsyncBuffer	include/gui/BufferQueueCore.h	/^    bool mUseAsyncBuffer;$/;"	m	class:android::BufferQueueCore
mUseCPlusPlus	opengl/tools/glgen/src/JniCodeEmitter.java	/^    static final boolean mUseCPlusPlus = true;$/;"	f	class:JniCodeEmitter
mUseContextPointer	opengl/tools/glgen/src/JniCodeEmitter.java	/^    protected boolean mUseContextPointer = true;$/;"	f	class:JniCodeEmitter
mUseFenceSync	include/gui/GLConsumer.h	/^    const bool mUseFenceSync;$/;"	m	class:android::GLConsumer
mUseHideCommentForAPI	opengl/tools/glgen/src/JniCodeEmitter.java	/^    protected boolean mUseHideCommentForAPI = false;$/;"	f	class:JniCodeEmitter
mUseReadPixels	services/surfaceflinger/RenderEngine/RenderEngine.h	/^        bool mUseReadPixels;$/;"	m	class:android::RenderEngine::BindImageAsFramebuffer
mUseSimpleMethodNames	opengl/tools/glgen/src/JniCodeEmitter.java	/^    protected boolean mUseSimpleMethodNames = false;$/;"	f	class:JniCodeEmitter
mUseSoftwareVSync	services/surfaceflinger/EventThread.h	/^    bool mUseSoftwareVSync;$/;"	m	class:android::EventThread
mUseStaticMethods	opengl/tools/glgen/src/JniCodeEmitter.java	/^    protected boolean mUseStaticMethods = false;$/;"	f	class:JniCodeEmitter
mUserHeight	include/gui/Surface.h	/^     uint32_t mUserHeight;$/;"	m	class:android::Surface
mUserSensorList	services/sensorservice/SensorService.h	/^    Vector<Sensor> mUserSensorList;$/;"	m	class:android::SensorService
mUserSensorListDebug	services/sensorservice/SensorService.h	/^    Vector<Sensor> mUserSensorListDebug;$/;"	m	class:android::SensorService
mUserWidth	include/gui/Surface.h	/^     uint32_t mUserWidth;$/;"	m	class:android::Surface
mUsingEpollWakeup	services/inputflinger/EventHub.h	/^    bool mUsingEpollWakeup;$/;"	m	class:android::EventHub
mUsingSlotsProtocol	services/inputflinger/InputReader.h	/^    bool mUsingSlotsProtocol;$/;"	m	class:android::MultiTouchMotionAccumulator
mVDSEnabled	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    bool                            mVDSEnabled;$/;"	m	class:android::HWComposer
mVMStart	include/binder/ProcessState.h	/^            void*               mVMStart;$/;"	m	class:android::ProcessState
mVMatrix	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private float[] mVMatrix = new float[16];$/;"	f	class:CamRenderer	file:
mVSyncCounts	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    size_t                          mVSyncCounts[HWC_NUM_PHYSICAL_DISPLAY_TYPES];$/;"	m	class:android::HWComposer
mVSyncEvent	services/surfaceflinger/EventThread.h	/^    DisplayEventReceiver::Event mVSyncEvent[DisplayDevice::NUM_BUILTIN_DISPLAY_TYPES];$/;"	m	class:android::EventThread
mVSyncSource	services/surfaceflinger/EventThread.h	/^    sp<VSyncSource> mVSyncSource;$/;"	m	class:android::EventThread
mVSyncThread	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    sp<VSyncThread>                 mVSyncThread;$/;"	m	class:android::HWComposer
mVWheelScale	services/inputflinger/InputReader.h	/^    float mVWheelScale;$/;"	m	class:android::CursorInputMapper
mValue	include/ui/mat4.h	/^    col_type mValue[ROW_SIZE];$/;"	m	class:android::tmat44
mValue	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        private int[] mValue = new int[1];$/;"	f	class:GL2JNIView.ConfigChooser	file:
mValue	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        private int[] mValue = new int[1];$/;"	f	class:GLPerfView.ConfigChooser	file:
mValue	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        private int[] mValue = new int[1];$/;"	f	class:GLDualGL2View.ConfigChooser	file:
mValue	services/surfaceflinger/SurfaceFlinger.cpp	/^    int mValue;$/;"	m	class:android::DispSyncSource	file:
mVel	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private float[] mVel = new float[3];$/;"	f	class:CamRenderer	file:
mVelocityTracker	include/input/VelocityControl.h	/^    VelocityTracker mVelocityTracker;$/;"	m	class:android::VelocityControl
mVendor	include/gui/Sensor.h	/^    String8 mVendor;$/;"	m	class:android::Sensor
mVendor	services/surfaceflinger/RenderEngine/GLExtensions.h	/^    String8 mVendor;$/;"	m	class:android::GLExtensions
mVendorString	opengl/libs/EGL/egl_display.h	/^            String8 mVendorString;$/;"	m	class:android::egl_display_t
mVersion	include/gui/Sensor.h	/^    int32_t mVersion;$/;"	m	class:android::Sensor
mVersion	opengl/libs/GLES_trace/src/gltrace_context.h	/^    int mVersion;               \/* GL version, e.g: egl_connection_t::GLESv2_INDEX *\/$/;"	m	class:android::gltrace::GLTraceContext
mVersion	services/surfaceflinger/RenderEngine/GLExtensions.h	/^    String8 mVersion;$/;"	m	class:android::GLExtensions
mVersionMajor	opengl/libs/GLES_trace/src/gltrace_context.h	/^    int mVersionMajor;          \/* GL major version. Lazily parsed in getVersionX(). *\/$/;"	m	class:android::gltrace::GLTraceContext
mVersionMinor	opengl/libs/GLES_trace/src/gltrace_context.h	/^    int mVersionMinor;          \/* GL minor version. Lazily parsed in getVersionX(). *\/$/;"	m	class:android::gltrace::GLTraceContext
mVersionParsed	opengl/libs/GLES_trace/src/gltrace_context.h	/^    bool mVersionParsed;        \/* True if major and minor versions have been parsed. *\/$/;"	m	class:android::gltrace::GLTraceContext
mVersionString	opengl/libs/EGL/egl_display.h	/^            String8 mVersionString;$/;"	m	class:android::egl_display_t
mVertSubsampling	include/media/hardware/HardwareAPI.h	/^        OMX_U32 mVertSubsampling;    \/\/ subsampling compared to the largest plane$/;"	m	struct:android::MediaImage::PlaneInfo
mVertexBuffer	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       private FloatBuffer mVertexBuffer;$/;"	f	class:TestView.Grid	file:
mVertexBufferObjectId	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       private int mVertexBufferObjectId;$/;"	f	class:TestView.Grid	file:
mVertexByteBuffer	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       private ByteBuffer mVertexByteBuffer;$/;"	f	class:TestView.Grid	file:
mVertexCount	services/surfaceflinger/RenderEngine/Mesh.h	/^    size_t mVertexCount;$/;"	m	class:android::Mesh
mVertexShader	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private final String mVertexShader =$/;"	f	class:CamRenderer	file:
mVertexShader	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        private final String mVertexShader = "attribute vec4 vPosition;\\n"$/;"	f	class:GL2JavaView.Renderer	file:
mVertexShader	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private final String mVertexShader = "attribute vec4 aPosition;\\n"$/;"	f	class:TestLatencyView.Renderer	file:
mVertexShader	services/surfaceflinger/RenderEngine/Program.h	/^    GLuint mVertexShader;$/;"	m	class:android::Program
mVertexSize	services/surfaceflinger/RenderEngine/Mesh.h	/^    size_t mVertexSize;$/;"	m	class:android::Mesh
mVertices	services/surfaceflinger/RenderEngine/Mesh.h	/^    float* mVertices;$/;"	m	class:android::Mesh
mVibrating	services/inputflinger/InputReader.h	/^    bool mVibrating;$/;"	m	class:android::VibratorInputMapper
mView	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaActivity.java	/^    GL2JavaView mView;$/;"	f	class:GL2JavaActivity
mView	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIActivity.java	/^    GL2JNIView mView;$/;"	f	class:GL2JNIActivity
mView	opengl/tests/gl_jni/src/com/android/gljni/GLJNIActivity.java	/^    GLJNIView mView;$/;"	f	class:GLJNIActivity
mView	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfActivity.java	/^    GLPerfView mView;$/;"	f	class:GLPerfActivity
mView	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateActivity.java	/^    TestFramerateView mView;$/;"	f	class:TestFramerateActivity
mView	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyActivity.java	/^    TestLatencyView mView;$/;"	f	class:TestLatencyActivity
mView	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^    TestView mView;$/;"	f	class:TestActivity
mView	opengl/tests/testViewport/src/com/android/test/TestActivity.java	/^    TestView mView;$/;"	f	class:TestActivity
mViewport	services/inputflinger/InputReader.h	/^    DisplayViewport mViewport;$/;"	m	class:android::TouchInputMapper
mViewport	services/surfaceflinger/DisplayDevice.h	/^    Rect mViewport;$/;"	m	class:android::DisplayDevice
mVirtualKeys	include/input/VirtualKeyMap.h	/^    Vector<VirtualKeyDefinition> mVirtualKeys;$/;"	m	class:android::VirtualKeyMap
mVirtualKeys	services/inputflinger/InputReader.h	/^    Vector<VirtualKey> mVirtualKeys;$/;"	m	class:android::TouchInputMapper
mVirtualSensorList	services/sensorservice/SensorService.h	/^    Vector<SensorInterface *> mVirtualSensorList;$/;"	m	class:android::SensorService
mVisibleLayersSortedByZ	services/surfaceflinger/DisplayDevice.h	/^    Vector< sp<Layer> > mVisibleLayersSortedByZ;$/;"	m	class:android::DisplayDevice
mVisibleRegionsDirty	services/surfaceflinger/SurfaceFlinger.h	/^    bool mVisibleRegionsDirty;$/;"	m	class:android::SurfaceFlinger
mVpHeight	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    GLuint mVpHeight;$/;"	m	class:android::GLES20RenderEngine
mVpWidth	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^    GLuint mVpWidth;$/;"	m	class:android::GLES20RenderEngine
mVsyncEnabled	services/surfaceflinger/EventControlThread.h	/^    bool mVsyncEnabled;$/;"	m	class:android::EventControlThread
mVsyncEnabled	services/surfaceflinger/EventThread.h	/^    bool mVsyncEnabled;$/;"	m	class:android::EventThread
mVsyncEventLabel	services/surfaceflinger/SurfaceFlinger.cpp	/^    const String8 mVsyncEventLabel;$/;"	m	class:android::DispSyncSource	file:
mVsyncHintSent	services/surfaceflinger/EventThread.h	/^    bool mVsyncHintSent;$/;"	m	class:android::EventThread
mVsyncOnLabel	services/surfaceflinger/SurfaceFlinger.cpp	/^    const String8 mVsyncOnLabel;$/;"	m	class:android::DispSyncSource	file:
mW	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       private int mW;$/;"	f	class:TestView.Grid	file:
mWaitForDisconnect	libs/gui/tests/CpuConsumer_test.cpp	/^        bool mWaitForDisconnect;$/;"	m	class:android::CpuConsumerTest::DisconnectWaiter	file:
mWaitForDisconnect	libs/gui/tests/DisconnectWaiter.h	/^    bool mWaitForDisconnect;$/;"	m	class:android::DisconnectWaiter
mWakeCount	opengl/libs/EGL/egl_display.h	/^        int32_t    mWakeCount;$/;"	m	class:android::egl_display_t::HibernationMachine
mWakeLockAcquired	services/sensorservice/SensorService.h	/^    bool mWakeLockAcquired;$/;"	m	class:android::SensorService
mWakeLockRefCount	services/sensorservice/SensorService.h	/^        uint32_t mWakeLockRefCount;$/;"	m	class:android::SensorService::SensorEventConnection
mWakeReadPipeFd	services/inputflinger/EventHub.h	/^    int mWakeReadPipeFd;$/;"	m	class:android::EventHub
mWakeWritePipeFd	services/inputflinger/EventHub.h	/^    int mWakeWritePipeFd;$/;"	m	class:android::EventHub
mWakeupLatency	services/surfaceflinger/DispSync.cpp	/^    nsecs_t mWakeupLatency;$/;"	m	class:android::DispSyncThread	file:
mWeighting	include/input/VelocityTracker.h	/^    const Weighting mWeighting;$/;"	m	class:android::LeastSquaresVelocityTrackerStrategy
mWheelXVelocityControl	services/inputflinger/InputReader.h	/^    VelocityControl mWheelXVelocityControl;$/;"	m	class:android::CursorInputMapper
mWheelXVelocityControl	services/inputflinger/InputReader.h	/^    VelocityControl mWheelXVelocityControl;$/;"	m	class:android::TouchInputMapper
mWheelYVelocityControl	services/inputflinger/InputReader.h	/^    VelocityControl mWheelYVelocityControl;$/;"	m	class:android::CursorInputMapper
mWheelYVelocityControl	services/inputflinger/InputReader.h	/^    VelocityControl mWheelYVelocityControl;$/;"	m	class:android::TouchInputMapper
mWidth	include/media/hardware/HardwareAPI.h	/^    OMX_U32 mWidth;                  \/\/ width of largest plane (unpadded, as in nFrameWidth)$/;"	m	struct:android::MediaImage
mWidth	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        int mWidth;$/;"	m	class:android::GLES20RenderEngine::Key
mWidth	services/surfaceflinger/RenderEngine/Texture.h	/^    size_t mWidth;$/;"	m	class:android::Texture
mWidth	services/surfaceflinger/tests/Transaction_test.cpp	/^    const uint32_t mWidth;$/;"	m	class:android::ScreenCapture	file:
mWindowHandles	services/inputflinger/InputDispatcher.h	/^    Vector<sp<InputWindowHandle> > mWindowHandles;$/;"	m	class:android::InputDispatcher
mWindowSurface	cmds/flatland/Main.cpp	/^    EGLSurface mWindowSurface;$/;"	m	class:BenchmarkRunner	file:
mWrappedBuffer	include/ui/GraphicBuffer.h	/^    sp<ANativeWindowBuffer> mWrappedBuffer;$/;"	m	class:android::GraphicBuffer
mX	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^    private float mX;$/;"	f	class:TestLatencyView	file:
mX	services/inputflinger/tests/InputReader_test.cpp	/^    float mX, mY;$/;"	m	class:android::FakePointerController	file:
mXOffset	include/input/Input.h	/^    float mXOffset;$/;"	m	class:android::MotionEvent
mXPrecision	include/input/Input.h	/^    float mXPrecision;$/;"	m	class:android::MotionEvent
mXPrecision	services/inputflinger/InputReader.h	/^    float mXPrecision;$/;"	m	class:android::CursorInputMapper
mXPrecision	services/inputflinger/InputReader.h	/^    float mXPrecision;$/;"	m	class:android::TouchInputMapper
mXScale	services/inputflinger/InputReader.h	/^    float mXScale;$/;"	m	class:android::CursorInputMapper
mXScale	services/inputflinger/InputReader.h	/^    float mXScale;$/;"	m	class:android::TouchInputMapper
mXTranslate	services/inputflinger/InputReader.h	/^    float mXTranslate;$/;"	m	class:android::TouchInputMapper
mY	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^    private float mY;$/;"	f	class:TestLatencyView	file:
mY	services/inputflinger/tests/InputReader_test.cpp	/^    float mX, mY;$/;"	m	class:android::FakePointerController	file:
mYOffset	include/input/Input.h	/^    float mYOffset;$/;"	m	class:android::MotionEvent
mYPrecision	include/input/Input.h	/^    float mYPrecision;$/;"	m	class:android::MotionEvent
mYPrecision	services/inputflinger/InputReader.h	/^    float mYPrecision;$/;"	m	class:android::CursorInputMapper
mYPrecision	services/inputflinger/InputReader.h	/^    float mYPrecision;$/;"	m	class:android::TouchInputMapper
mYScale	services/inputflinger/InputReader.h	/^    float mYScale;$/;"	m	class:android::CursorInputMapper
mYScale	services/inputflinger/InputReader.h	/^    float mYScale;$/;"	m	class:android::TouchInputMapper
mYTranslate	services/inputflinger/InputReader.h	/^    float mYTranslate;$/;"	m	class:android::TouchInputMapper
m_area	opengl/libagl/context.h	/^    GGLcoord m_area;$/;"	m	struct:android::gl::compute_iterators_t
m_area_scale	opengl/libagl/context.h	/^    uint8_t m_area_scale;$/;"	m	struct:android::gl::compute_iterators_t
m_dx01	opengl/libagl/context.h	/^    GGLcoord m_dx01, m_dy10, m_dx20, m_dy02;$/;"	m	struct:android::gl::compute_iterators_t
m_dx20	opengl/libagl/context.h	/^    GGLcoord m_dx01, m_dy10, m_dx20, m_dy02;$/;"	m	struct:android::gl::compute_iterators_t
m_dy02	opengl/libagl/context.h	/^    GGLcoord m_dx01, m_dy10, m_dx20, m_dy02;$/;"	m	struct:android::gl::compute_iterators_t
m_dy10	opengl/libagl/context.h	/^    GGLcoord m_dx01, m_dy10, m_dx20, m_dy02;$/;"	m	struct:android::gl::compute_iterators_t
m_reserved	opengl/libagl/context.h	/^    uint8_t m_reserved[2];$/;"	m	struct:android::gl::compute_iterators_t
m_scale	opengl/libagl/context.h	/^    uint8_t m_scale;$/;"	m	struct:android::gl::compute_iterators_t
m_x0	opengl/libagl/context.h	/^    GGLcoord m_x0, m_y0;$/;"	m	struct:android::gl::compute_iterators_t
m_y0	opengl/libagl/context.h	/^    GGLcoord m_x0, m_y0;$/;"	m	struct:android::gl::compute_iterators_t
maPositionHandle	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private int maPositionHandle;$/;"	f	class:CamRenderer	file:
maTextureHandle	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private int maTextureHandle;$/;"	f	class:CamRenderer	file:
magSTDEV	services/sensorservice/Fusion.cpp	/^static const float magSTDEV  = 0.5f;    \/\/ uT    (measured 0.7  \/ CDD 0.5)$/;"	m	namespace:android	file:
mag_filter	opengl/libagl/TextureObjectManager.h	/^    GLenum              mag_filter;$/;"	m	class:android::EGLTextureObject
magic	opengl/libagl/egl.cpp	/^    uint32_t            magic;$/;"	m	struct:android::egl_surface_t	file:
magic	opengl/libs/EGL/egl_display.h	/^    uint32_t        magic;$/;"	m	class:android::egl_display_t
magnetic	include/android/sensor.h	/^            ASensorVector   magnetic;$/;"	m	union:ASensorEvent::__anon187::__anon188
main	cmds/atrace/atrace.cpp	/^int main(int argc, char **argv)$/;"	f
main	cmds/bugreport/bugreport.c	/^int main(int argc, char *argv[]) {$/;"	f
main	cmds/dumpstate/dumpstate.c	/^int main(int argc, char *argv[]) {$/;"	f
main	cmds/dumpsys/dumpsys.cpp	/^int main(int argc, char* const argv[])$/;"	f
main	cmds/flatland/Main.cpp	/^int main(int argc, char** argv) {$/;"	f
main	cmds/installd/installd.c	/^int main(const int argc, const char *argv[]) {$/;"	f
main	cmds/ip-up-vpn/ip-up-vpn.c	/^int main(int argc, char **argv)$/;"	f
main	cmds/rawbu/backup.cpp	/^int main (int argc, char **argv)$/;"	f
main	cmds/service/service.cpp	/^int main(int argc, char* const argv[])$/;"	f
main	cmds/servicemanager/bctest.c	/^int main(int argc, char **argv)$/;"	f
main	cmds/servicemanager/service_manager.c	/^int main(int argc, char **argv)$/;"	f
main	opengl/tests/angeles/app-linux.cpp	/^int main(int argc, char *argv[])$/;"	f
main	opengl/tests/configdump/configdump.cpp	/^int main(int argc, char** argv)$/;"	f
main	opengl/tests/fillrate/fillrate.cpp	/^int main(int argc, char** argv)$/;"	f
main	opengl/tests/filter/filter.cpp	/^int main(int argc, char** argv)$/;"	f
main	opengl/tests/finish/finish.cpp	/^int main(int argc, char** argv)$/;"	f
main	opengl/tests/gl2_basic/gl2_basic.cpp	/^int main(int argc, char** argv) {$/;"	f
main	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^int main(int argc, char** argv) {$/;"	f
main	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^int main(int argc, char** argv) {$/;"	f
main	opengl/tests/gl_basic/gl_basic.cpp	/^int main(int argc, char **argv)$/;"	f
main	opengl/tests/gl_perf/gl2_perf.cpp	/^int main(int argc, char** argv) {$/;"	f
main	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^int main(int argc, char** argv) {$/;"	f
main	opengl/tests/gralloc/gralloc.cpp	/^int main(int argc, char** argv)$/;"	f
main	opengl/tests/hwc/hwcColorEquiv.cpp	/^main(int argc, char *argv[])$/;"	f
main	opengl/tests/hwc/hwcCommit.cpp	/^main(int argc, char *argv[])$/;"	f
main	opengl/tests/hwc/hwcRects.cpp	/^main(int argc, char *argv[])$/;"	f
main	opengl/tests/hwc/hwcStress.cpp	/^main(int argc, char *argv[])$/;"	f
main	opengl/tests/linetex/linetex.cpp	/^int main(int argc, char** argv)$/;"	f
main	opengl/tests/swapinterval/swapinterval.cpp	/^int main(int argc, char** argv)$/;"	f
main	opengl/tests/textures/textures.cpp	/^int main(int argc, char** argv)$/;"	f
main	opengl/tests/tritex/tritex.cpp	/^int main(int argc, char **argv)$/;"	f
main	opengl/tools/glgen/src/GenerateEGL.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:GenerateEGL
main	opengl/tools/glgen/src/GenerateGL.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:GenerateGL
main	opengl/tools/glgen/src/GenerateGLES.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:GenerateGLES
main	services/sensorservice/main_sensorservice.cpp	/^int main(int \/*argc*\/, char** \/*argv*\/) {$/;"	f
main	services/sensorservice/tests/sensorservicetest.cpp	/^int main(int argc, char** argv)$/;"	f
main	services/surfaceflinger/main_surfaceflinger.cpp	/^int main(int, char**) {$/;"	f
main	services/surfaceflinger/tests/resize/resize.cpp	/^int main(int argc, char** argv)$/;"	f	namespace:android
main	services/surfaceflinger/tests/screencap/screencap.cpp	/^int main(int argc, char** argv)$/;"	f
main	services/surfaceflinger/tests/transform/TransformTest.cpp	/^int main(int argc, char **argv)$/;"	f
main	services/surfaceflinger/tests/vsync/vsync.cpp	/^int main(int argc, char** argv)$/;"	f
main	services/surfaceflinger/tests/waitforvsync/waitforvsync.cpp	/^int main(int argc, char** argv) {$/;"	f
major	opengl/libs/EGL/egldefs.h	/^    EGLint              major;$/;"	m	struct:android::egl_connection_t
makeBinderThreadName	libs/binder/ProcessState.cpp	/^String8 ProcessState::makeBinderThreadName() {$/;"	f	class:android::ProcessState
makeBounds	services/surfaceflinger/Transform.cpp	/^Rect Transform::makeBounds(int w, int h) const$/;"	f	class:android::Transform
makeBoundsSelf	libs/ui/Region.cpp	/^Region& Region::makeBoundsSelf()$/;"	f	class:android::Region
makeCDecls	opengl/tools/glgen2/registry/reg.py	/^    def makeCDecls(self, cmd):$/;"	m	class:COutputGenerator
makeCurrent	cmds/flatland/GLHelper.cpp	/^bool GLHelper::makeCurrent(EGLSurface surface) {$/;"	f	class:android::GLHelper
makeCurrent	opengl/libagl/egl.cpp	/^static int makeCurrent(ogles_context_t* gl)$/;"	f	namespace:android
makeCurrent	opengl/libs/EGL/egl_display.cpp	/^EGLBoolean egl_display_t::makeCurrent(egl_context_t* c, egl_context_t* cur_c,$/;"	f	class:android::egl_display_t
makeCurrent	services/surfaceflinger/DisplayDevice.cpp	/^EGLBoolean DisplayDevice::makeCurrent(EGLDisplay dpy, EGLContext ctx) const {$/;"	f	class:DisplayDevice
makeInvalid	libs/ui/Rect.cpp	/^void Rect::makeInvalid() {$/;"	f	class:android::Rect
makeREstring	opengl/tools/glgen2/registry/genheaders.py	/^def makeREstring(list):$/;"	f
makeShaderString	cmds/flatland/GLHelper.cpp	/^static const char* makeShaderString(const char* const* src) {$/;"	f	namespace:android
make_user_config	cmds/installd/commands.c	/^int make_user_config(userid_t userid)$/;"	f
make_user_data	cmds/installd/commands.c	/^int make_user_data(const char *pkgname, uid_t uid, userid_t userid, const char* seinfo)$/;"	f
makehexdigit	libs/binder/Debug.cpp	/^static inline char makehexdigit(uint32_t val)$/;"	f	namespace:android
mantissa	opengl/libagl/fp.h	/^int32_t mantissa(GLfloat v) {$/;"	f	namespace:android::gl
map	opengl/tools/glgen/src/ParameterChecker.java	/^    HashMap<String,String[]> map = new HashMap<String,String[]>();$/;"	f	class:ParameterChecker
mapAxis	libs/input/KeyLayoutMap.cpp	/^status_t KeyLayoutMap::mapAxis(int32_t scanCode, AxisInfo* outAxisInfo) const {$/;"	f	class:android::KeyLayoutMap
mapAxis	services/inputflinger/EventHub.cpp	/^status_t EventHub::mapAxis(int32_t deviceId, int32_t scanCode, AxisInfo* outAxisInfo) const {$/;"	f	class:android::EventHub
mapAxis	services/inputflinger/tests/InputReader_test.cpp	/^    virtual status_t mapAxis(int32_t deviceId, int32_t scanCode,$/;"	f	class:android::FakeEventHub	file:
mapKey	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::mapKey(int32_t scanCode, int32_t usageCode, int32_t* outKeyCode) const {$/;"	f	class:android::KeyCharacterMap
mapKey	libs/input/KeyLayoutMap.cpp	/^status_t KeyLayoutMap::mapKey(int32_t scanCode, int32_t usageCode,$/;"	f	class:android::KeyLayoutMap
mapKey	services/inputflinger/EventHub.cpp	/^status_t EventHub::mapKey(int32_t deviceId, int32_t scanCode, int32_t usageCode,$/;"	f	class:android::EventHub
mapKey	services/inputflinger/tests/InputReader_test.cpp	/^    virtual status_t mapKey(int32_t deviceId, int32_t scanCode, int32_t usageCode,$/;"	f	class:android::FakeEventHub	file:
mapLed	services/inputflinger/EventHub.cpp	/^status_t EventHub::mapLed(Device* device, int32_t led, int32_t* outScanCode) const {$/;"	f	class:android::EventHub
mapMemory	libs/binder/MemoryHeapPmem.cpp	/^sp<IMemory> MemoryHeapPmem::mapMemory(size_t offset, size_t size)$/;"	f	class:android::MemoryHeapPmem
mapProducer2SourceSlot	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^int VirtualDisplaySurface::mapProducer2SourceSlot(Source source, int pslot) {$/;"	f	class:android::VirtualDisplaySurface
mapSource2ProducerSlot	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^int VirtualDisplaySurface::mapSource2ProducerSlot(Source source, int sslot) {$/;"	f	class:android::VirtualDisplaySurface
mapfd	libs/binder/MemoryHeapBase.cpp	/^status_t MemoryHeapBase::mapfd(int fd, size_t size, uint32_t offset)$/;"	f	class:android::MemoryHeapBase
mapped	cmds/servicemanager/binder.c	/^    void *mapped;$/;"	m	struct:binder_state	file:
mapsize	cmds/servicemanager/binder.c	/^    size_t mapsize;$/;"	m	struct:binder_state	file:
markIdBit	services/inputflinger/InputReader.h	/^    inline void markIdBit(uint32_t id, bool isHovering) {$/;"	f	struct:android::RawPointerData
markRequired	opengl/tools/glgen2/registry/reg.py	/^    def markRequired(self, features, required):$/;"	m	class:Registry
markSupportedKeyCodes	services/inputflinger/EventHub.cpp	/^bool EventHub::markSupportedKeyCodes(int32_t deviceId, size_t numCodes,$/;"	f	class:android::EventHub
markSupportedKeyCodes	services/inputflinger/InputReader.cpp	/^bool InputDevice::markSupportedKeyCodes(uint32_t sourceMask, size_t numCodes,$/;"	f	class:android::InputDevice
markSupportedKeyCodes	services/inputflinger/InputReader.cpp	/^bool InputMapper::markSupportedKeyCodes(uint32_t sourceMask, size_t numCodes,$/;"	f	class:android::InputMapper
markSupportedKeyCodes	services/inputflinger/InputReader.cpp	/^bool KeyboardInputMapper::markSupportedKeyCodes(uint32_t sourceMask, size_t numCodes,$/;"	f	class:android::KeyboardInputMapper
markSupportedKeyCodes	services/inputflinger/InputReader.cpp	/^bool TouchInputMapper::markSupportedKeyCodes(uint32_t sourceMask, size_t numCodes,$/;"	f	class:android::TouchInputMapper
markSupportedKeyCodes	services/inputflinger/tests/InputReader_test.cpp	/^    virtual bool markSupportedKeyCodes(int32_t deviceId, size_t numCodes, const int32_t* keyCodes,$/;"	f	class:android::FakeEventHub	file:
markSupportedKeyCodes	services/inputflinger/tests/InputReader_test.cpp	/^    virtual bool markSupportedKeyCodes(uint32_t sourceMask, size_t numCodes,$/;"	f	class:android::FakeInputMapper	file:
markSupportedKeyCodesLocked	services/inputflinger/InputReader.cpp	/^bool InputReader::markSupportedKeyCodesLocked(int32_t deviceId, uint32_t sourceMask,$/;"	f	class:android::InputReader
markTypeRequired	opengl/tools/glgen2/registry/reg.py	/^    def markTypeRequired(self, typename, required):$/;"	m	class:Registry
mark_boot_complete	cmds/installd/commands.c	/^int mark_boot_complete(const char* instruction_set)$/;"	f
mask	include/private/gui/LayerState.h	/^            uint8_t         mask;$/;"	m	struct:android::layer_state_t
mask	opengl/libagl/egl.cpp	/^    static bool mask(GLint reqValue, GLint confValue) {$/;"	f	struct:android::config_management_t
mat	services/sensorservice/mat.h	/^    mat() { }$/;"	f	class:android::mat
mat	services/sensorservice/mat.h	/^    mat(const TYPE& rhs) { helpers::doAssign(*this, rhs); }$/;"	f	class:android::mat
mat	services/sensorservice/mat.h	/^    mat(const base& rhs) : base(rhs) { }$/;"	f	class:android::mat
mat	services/sensorservice/mat.h	/^    mat(const mat& rhs)  : base(rhs) { }$/;"	f	class:android::mat
mat	services/sensorservice/mat.h	/^    mat(const mat& rhs) : base(rhs) { }$/;"	f	class:android::mat
mat	services/sensorservice/mat.h	/^    mat(pTYPE rhs) {$/;"	f	class:android::mat
mat	services/sensorservice/mat.h	/^class mat : public vec< vec<TYPE, R>, C > {$/;"	c	namespace:android
mat	services/sensorservice/mat.h	/^class mat<TYPE, 1, R> : public vec<TYPE, R> {$/;"	c	namespace:android
mat22_t	services/sensorservice/mat.h	/^typedef mat<float, 2, 2> mat22_t;$/;"	t	namespace:android
mat33	services/surfaceflinger/Transform.h	/^    struct mat33 {$/;"	s	class:android::Transform
mat33_t	services/sensorservice/mat.h	/^typedef mat<float, 3, 3> mat33_t;$/;"	t	namespace:android
mat34_t	services/sensorservice/Fusion.h	/^typedef mat<float, 3, 4> mat34_t;$/;"	t	namespace:android
mat4	include/ui/mat4.h	/^typedef tmat44<float> mat4;$/;"	t	namespace:android
mat44_t	services/sensorservice/mat.h	/^typedef mat<float, 4, 4> mat44_t;$/;"	t	namespace:android
match	opengl/libagl/egl.cpp	/^    bool (*match)(GLint reqValue, GLint confValue);$/;"	m	struct:android::config_management_t	file:
matchAPIProfile	opengl/tools/glgen2/registry/reg.py	/^def matchAPIProfile(api, profile, elem):$/;"	f
matchesMetaState	libs/input/KeyCharacterMap.cpp	/^bool KeyCharacterMap::matchesMetaState(int32_t eventMetaState, int32_t behaviorMetaState) {$/;"	f	class:android::KeyCharacterMap
material_t	opengl/libagl/context.h	/^struct material_t {$/;"	s	namespace:android::gl
materialx	opengl/libagl/light.cpp	/^static void materialx(GLenum face, GLenum pname, GLfixed param, ogles_context_t* c)$/;"	f	namespace:android
matrix	include/private/gui/LayerState.h	/^            matrix22_t      matrix;$/;"	m	struct:android::layer_state_t
matrix	include/ui/TMatHelpers.h	/^namespace matrix {$/;"	n	namespace:android
matrix	opengl/libagl/context.h	/^    matrixf_t       matrix;$/;"	m	struct:android::gl::vp_transform_t
matrix	opengl/libagl/context.h	/^    matrixx_t       matrix;$/;"	m	struct:android::gl::transform_t
matrix	services/sensorservice/mat.h	/^        mat& matrix;$/;"	m	struct:android::mat::column_builder
matrix22_t	include/private/gui/LayerState.h	/^            struct matrix22_t {$/;"	s	struct:android::layer_state_t
matrixMode	opengl/libagl/context.h	/^    GLenum              matrixMode;$/;"	m	struct:android::gl::transform_state_t
matrixToQuat	services/sensorservice/quat.h	/^vec<TYPE, 4> matrixToQuat(const mat<TYPE, 3, 3>& R) {$/;"	f	namespace:android
matrixToString	libs/input/VelocityTracker.cpp	/^static String8 matrixToString(const float* a, uint32_t m, uint32_t n, bool rowMajor) {$/;"	f	namespace:android
matrix_stack_t	opengl/libagl/context.h	/^struct matrix_stack_t {$/;"	s	namespace:android::gl
matrixf_t	opengl/libagl/context.h	/^struct matrixf_t {$/;"	s	namespace:android::gl
matrixx_t	opengl/libagl/context.h	/^struct matrixx_t {$/;"	s	namespace:android::gl
max	include/input/InputDevice.h	/^        float max;$/;"	m	struct:android::InputDeviceInfo::MotionRange
max	libs/gui/BufferQueueCore.cpp	/^static inline T max(T a, T b) { return a > b ? a : b; }$/;"	f	file:
max	libs/ui/Rect.cpp	/^static inline int32_t max(int32_t a, int32_t b) {$/;"	f	namespace:android
max	libs/ui/Region.cpp	/^    static inline T max(T rhs, T lhs) { return rhs > lhs ? rhs : lhs; }$/;"	f	class:android::Region::rasterizer	file:
max	opengl/libagl/context.h	/^inline T max(T a, T b) {$/;"	f	namespace:android::gl
max	opengl/libagl/context.h	/^inline T max(T a, T b, T c) {$/;"	f	namespace:android::gl
max	services/inputflinger/EventHub.cpp	/^static inline int max(int v1, int v2)$/;"	f	namespace:android
max	services/inputflinger/InputReader.h	/^        float max;        \/\/ normalized inclusive maximum$/;"	m	struct:android::JoystickInputMapper::Axis
max	services/sensorservice/SensorFusion.cpp	/^template <typename T> inline T max(T a, T b) { return a>b ? a : b; }$/;"	f	namespace:android
max	services/sensorservice/vec.h	/^template <typename T> inline T max(T a, T b) { return a>b ? a : b; }$/;"	f	namespace:android::helpers
max	services/surfaceflinger/clz.h	/^static inline T max(T a, T b) {$/;"	f	namespace:android
max	services/surfaceflinger/clz.h	/^static inline T max(T a, T b, T c) {$/;"	f	namespace:android
max	services/surfaceflinger/clz.h	/^static inline T max(T a, T b, T c, T d) {$/;"	f	namespace:android
maxBenchmarkNameLen	cmds/flatland/Main.cpp	/^static size_t maxBenchmarkNameLen() {$/;"	f	file:
maxDepth	opengl/libagl/context.h	/^    uint8_t         maxDepth;$/;"	m	struct:android::gl::matrix_stack_t
maxDim	opengl/tests/hwc/hwcCommit.cpp	/^        HwcTestDim maxDim;$/;"	m	struct:meas::displayFrame	file:
maxDim	opengl/tests/hwc/hwcCommit.cpp	/^        HwcTestDim maxDim;$/;"	m	struct:meas::sourceCrop	file:
maxHeadingLen	opengl/tests/hwc/hwcCommit.cpp	/^static size_t maxHeadingLen;$/;"	v	file:
maxHeight	opengl/tests/hwc/hwcCommit.cpp	/^        uint32_t maxHeight;$/;"	m	struct:meas::displayFrame	file:
maxHeight	opengl/tests/hwc/hwcCommit.cpp	/^        uint32_t maxHeight;$/;"	m	struct:meas::sourceCrop	file:
maxKeySize	opengl/libs/EGL/egl_cache.cpp	/^static const size_t maxKeySize = MAX_EGL_CACHE_KEY_SIZE;$/;"	v	file:
maxLockedBuffers	libs/gui/tests/CpuConsumer_test.cpp	/^    int maxLockedBuffers;$/;"	m	struct:android::CpuConsumerTestParams	file:
maxNonOverlapping	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t maxNonOverlapping;$/;"	m	struct:meas	file:
maxOverlapping	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t maxOverlapping;$/;"	m	struct:meas	file:
maxOverlays	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t maxOverlays(uint32_t format, bool allowOverlap)$/;"	f
maxSizeRatio	opengl/tests/hwc/hwcStress.cpp	/^const float maxSizeRatio = 1.3;  \/\/ Graphic buffers can be upto this munch$/;"	v
maxTotalSize	opengl/libs/EGL/egl_cache.cpp	/^static const size_t maxTotalSize = MAX_EGL_CACHE_SIZE;$/;"	v	file:
maxValidMagFieldSq	services/sensorservice/Fusion.h	/^    float maxValidMagFieldSq;$/;"	m	class:android::Fusion
maxValue	services/inputflinger/EventHub.h	/^    int32_t maxValue;  \/\/ maximum value$/;"	m	struct:android::RawAbsoluteAxisInfo
maxValueSize	opengl/libs/EGL/egl_cache.cpp	/^static const size_t maxValueSize = MAX_EGL_CACHE_ENTRY_SIZE;$/;"	v	file:
maxWidth	opengl/tests/hwc/hwcCommit.cpp	/^        uint32_t maxWidth;$/;"	m	struct:meas::displayFrame	file:
maxWidth	opengl/tests/hwc/hwcCommit.cpp	/^        uint32_t maxWidth;$/;"	m	struct:meas::sourceCrop	file:
max_value	include/private/ui/RegionHelper.h	/^    static const TYPE max_value = 0x7FFFFFF;$/;"	m	class:android::region_operator
meas	opengl/tests/hwc/hwcCommit.cpp	/^struct meas {$/;"	s	file:
measurements	opengl/tests/hwc/hwcCommit.cpp	/^vector<meas> measurements;$/;"	v
memBlocks	cmds/installd/installd.h	/^    void* memBlocks;$/;"	m	struct:__anon12
merge	libs/ui/Fence.cpp	/^sp<Fence> Fence::merge(const String8& name, const sp<Fence>& f1,$/;"	f	class:android::Fence
merge	libs/ui/Region.cpp	/^const Region Region::merge(const Rect& rhs) const {$/;"	f	class:android::Region
merge	libs/ui/Region.cpp	/^const Region Region::merge(const Region& rhs) const {$/;"	f	class:android::Region
merge	libs/ui/Region.cpp	/^const Region Region::merge(const Region& rhs, int dx, int dy) const {$/;"	f	class:android::Region
mergeExclusive	libs/ui/Region.cpp	/^const Region Region::mergeExclusive(const Rect& rhs) const {$/;"	f	class:android::Region
mergeExclusive	libs/ui/Region.cpp	/^const Region Region::mergeExclusive(const Region& rhs) const {$/;"	f	class:android::Region
mergeExclusive	libs/ui/Region.cpp	/^const Region Region::mergeExclusive(const Region& rhs, int dx, int dy) const {$/;"	f	class:android::Region
mergeFence	libs/gui/StreamSplitter.cpp	/^void StreamSplitter::BufferTracker::mergeFence(const sp<Fence>& with) {$/;"	f	class:android::StreamSplitter::BufferTracker
metaState	include/input/InputTransport.h	/^            int32_t metaState;$/;"	m	struct:android::InputMessage::Body::Key
metaState	include/input/InputTransport.h	/^            int32_t metaState;$/;"	m	struct:android::InputMessage::Body::Motion
metaState	include/input/KeyCharacterMap.h	/^            int32_t metaState;$/;"	m	struct:android::KeyCharacterMap::Parser::Property
metaState	include/input/KeyCharacterMap.h	/^        int32_t metaState;$/;"	m	struct:android::KeyCharacterMap::Behavior
metaState	include/input/KeyCharacterMap.h	/^        int32_t metaState;$/;"	m	struct:android::KeyCharacterMap::FallbackAction
metaState	libs/input/KeyCharacterMap.cpp	/^    int32_t metaState;$/;"	m	struct:android::Modifier	file:
metaState	services/inputflinger/InputDispatcher.h	/^            int32_t metaState;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
metaState	services/inputflinger/InputDispatcher.h	/^        int32_t metaState;$/;"	m	struct:android::InputDispatcher::KeyEntry
metaState	services/inputflinger/InputDispatcher.h	/^        int32_t metaState;$/;"	m	struct:android::InputDispatcher::MotionEntry
metaState	services/inputflinger/InputListener.h	/^    int32_t metaState;$/;"	m	struct:android::NotifyKeyArgs
metaState	services/inputflinger/InputListener.h	/^    int32_t metaState;$/;"	m	struct:android::NotifyMotionArgs
meta_data	include/android/sensor.h	/^            AMetaDataEvent meta_data;$/;"	m	union:ASensorEvent::__anon187::__anon188
min	include/input/InputDevice.h	/^        float min;$/;"	m	struct:android::InputDeviceInfo::MotionRange
min	libs/input/InputTransport.cpp	/^inline static T min(const T& a, const T& b) {$/;"	f	namespace:android
min	libs/ui/Rect.cpp	/^static inline int32_t min(int32_t a, int32_t b) {$/;"	f	namespace:android
min	libs/ui/Region.cpp	/^    static inline T min(T rhs, T lhs) { return rhs < lhs ? rhs : lhs; }$/;"	f	class:android::Region::rasterizer	file:
min	opengl/libagl/context.h	/^inline T min(T a, T b) {$/;"	f	namespace:android::gl
min	opengl/libagl/context.h	/^inline T min(T a, T b, T c) {$/;"	f	namespace:android::gl
min	opengl/libagl/context.h	/^inline T min(T a, T b, T c, T d) {$/;"	f	namespace:android::gl
min	services/inputflinger/InputReader.cpp	/^inline static T min(const T& a, const T& b) {$/;"	f	namespace:android
min	services/inputflinger/InputReader.h	/^        float min;        \/\/ normalized inclusive minimum$/;"	m	struct:android::JoystickInputMapper::Axis
min	services/inputflinger/tests/InputReader_test.cpp	/^static inline T min(T a, T b) {$/;"	f	namespace:android
min	services/sensorservice/SensorFusion.cpp	/^template <typename T> inline T min(T a, T b) { return a<b ? a : b; }$/;"	f	namespace:android
min	services/sensorservice/vec.h	/^template <typename T> inline T min(T a, T b) { return a<b ? a : b; }$/;"	f	namespace:android::helpers
min	services/surfaceflinger/clz.h	/^static inline T min(T a, T b) {$/;"	f	namespace:android
min	services/surfaceflinger/clz.h	/^static inline T min(T a, T b, T c) {$/;"	f	namespace:android
min	services/surfaceflinger/clz.h	/^static inline T min(T a, T b, T c, T d) {$/;"	f	namespace:android
minDim	opengl/tests/hwc/hwcCommit.cpp	/^        HwcTestDim minDim;$/;"	m	struct:meas::displayFrame	file:
minDim	opengl/tests/hwc/hwcCommit.cpp	/^        HwcTestDim minDim;$/;"	m	struct:meas::sourceCrop	file:
minHeight	opengl/tests/hwc/hwcCommit.cpp	/^        uint32_t minHeight;$/;"	m	struct:meas::displayFrame	file:
minHeight	opengl/tests/hwc/hwcCommit.cpp	/^        uint32_t minHeight;$/;"	m	struct:meas::sourceCrop	file:
minValue	services/inputflinger/EventHub.h	/^    int32_t minValue;  \/\/ minimum value$/;"	m	struct:android::RawAbsoluteAxisInfo
minWidth	opengl/tests/hwc/hwcCommit.cpp	/^        uint32_t minWidth;$/;"	m	struct:meas::displayFrame	file:
minWidth	opengl/tests/hwc/hwcCommit.cpp	/^        uint32_t minWidth;$/;"	m	struct:meas::sourceCrop	file:
min_filter	opengl/libagl/TextureObjectManager.h	/^    GLenum              min_filter;$/;"	m	class:android::EGLTextureObject
minor	opengl/libs/EGL/egldefs.h	/^    EGLint              minor;$/;"	m	struct:android::egl_connection_t
mip	opengl/libagl/TextureObjectManager.cpp	/^const GGLSurface& EGLTextureObject::mip(int lod) const$/;"	f	class:android::EGLTextureObject
misses	opengl/libagl/context.h	/^    uint32_t        misses;$/;"	m	struct:android::gl::vertex_cache_t
mkinnerdirs	cmds/installd/commands.c	/^void mkinnerdirs(char* path, int basepos, mode_t mode, int uid, int gid,$/;"	f
mla2a	opengl/libagl/matrix.h	/^static inline GLfixed mla2a( GLfixed a0, GLfixed b0,$/;"	f	namespace:android
mla3	opengl/libagl/matrix.h	/^static inline GLfixed mla3( GLfixed a0, GLfixed b0,$/;"	f	namespace:android
mla3a	opengl/libagl/matrix.h	/^static inline GLfixed mla3a( GLfixed a0, GLfixed b0,$/;"	f	namespace:android
mla3a16	opengl/libagl/matrix.h	/^static inline GLfixed mla3a16( GLfixed a0, int32_t b1b0,$/;"	f	namespace:android
mla3a16_btb	opengl/libagl/matrix.h	/^static inline GLfixed mla3a16_btb( GLfixed a0,$/;"	f	namespace:android
mla3a16_btt	opengl/libagl/matrix.h	/^static inline GLfixed mla3a16_btt( GLfixed a0,$/;"	f	namespace:android
mla4	opengl/libagl/matrix.h	/^static inline GLfixed mla4( GLfixed a0, GLfixed b0,$/;"	f	namespace:android
mlock	services/surfaceflinger/DisplayHardware/PowerHAL.h	/^    Mutex mlock;$/;"	m	class:android::PowerHAL
modBlit	cmds/flatland/Composers.cpp	/^    bool modBlit(GLuint texName, const float* texMatrix, float* modColor,$/;"	f	class:android::Blitter
modTime	cmds/installd/installd.h	/^    time_t modTime;$/;"	m	struct:__anon11
mode	include/input/KeyLayoutMap.h	/^    Mode mode;$/;"	m	struct:android::AxisInfo
mode	opengl/libagl/context.h	/^    GLenum      mode;$/;"	m	struct:android::gl::color_material_t
mode	opengl/libagl/context.h	/^    GLenum      mode;$/;"	m	struct:android::gl::fog_t
mode	services/inputflinger/InputDispatcher.h	/^        Mode mode;$/;"	m	struct:android::InputDispatcher::CancelationOptions
mode	services/inputflinger/InputReader.h	/^        Mode mode;$/;"	m	struct:android::CursorInputMapper::Parameters
modelview	opengl/libagl/context.h	/^    matrix_stack_t      modelview;$/;"	m	struct:android::gl::transform_state_t
modifiers	libs/input/KeyCharacterMap.cpp	/^static const Modifier modifiers[] = {$/;"	m	namespace:android	file:
modifyFormatColorspace	opengl/libs/EGL/eglApi.cpp	/^static int modifyFormatColorspace(int fmt, EGLint colorspace) {$/;"	f	file:
module	opengl/libagl/egl.cpp	/^    gralloc_module_t const*    module;$/;"	m	struct:android::egl_window_surface_v2_t	file:
module_tags	services/inputflinger/tests/Android.mk	/^module_tags := eng tests$/;"	m
monitor	services/inputflinger/EventHub.cpp	/^void EventHub::monitor() {$/;"	f	class:android::EventHub
monitor	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::monitor() {$/;"	f	class:android::InputDispatcher
monitor	services/inputflinger/InputDispatcher.h	/^        bool monitor;$/;"	m	class:android::InputDispatcher::Connection
monitor	services/inputflinger/InputReader.cpp	/^void InputReader::monitor() {$/;"	f	class:android::InputReader
monitor	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void monitor() {$/;"	f	class:android::FakeEventHub	file:
motion	include/input/InputTransport.h	/^        } motion;$/;"	m	union:android::InputMessage::Body	typeref:struct:android::InputMessage::Body::Motion
move	libs/input/VelocityControl.cpp	/^void VelocityControl::move(nsecs_t eventTime, float* deltaX, float* deltaY) {$/;"	f	class:android::VelocityControl
move	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void move(float deltaX, float deltaY) {$/;"	f	class:android::FakePointerController	file:
moveIndent	libs/binder/BufferedTextOutput.cpp	/^void BufferedTextOutput::moveIndent(int delta)$/;"	f	class:android::BufferedTextOutput
move_dex	cmds/installd/commands.c	/^int move_dex(const char *src, const char *dst, const char *instruction_set)$/;"	f
movefileordir	cmds/installd/commands.c	/^int movefileordir(char* srcpath, char* dstpath, int dstbasepos,$/;"	f
movefiles	cmds/installd/commands.c	/^int movefiles()$/;"	f
mru	opengl/libagl/context.h	/^    uint8_t         mru;$/;"	m	struct:android::gl::vertex_t
mtxFlipH	libs/gui/GLConsumer.cpp	/^static float mtxFlipH[16] = {$/;"	m	namespace:android	file:
mtxFlipV	libs/gui/GLConsumer.cpp	/^static float mtxFlipV[16] = {$/;"	m	namespace:android	file:
mtxIdentity	libs/gui/GLConsumer.cpp	/^static float mtxIdentity[16] = {$/;"	m	namespace:android	file:
mtxMul	libs/gui/GLConsumer.cpp	/^static void mtxMul(float out[16], const float a[16], const float b[16]) {$/;"	f	namespace:android
mtxRot90	libs/gui/GLConsumer.cpp	/^static float mtxRot90[16] = {$/;"	m	namespace:android	file:
muCRatioHandle	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private int muCRatioHandle;$/;"	f	class:CamRenderer	file:
muMVPMatrixHandle	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private int muMVPMatrixHandle;$/;"	f	class:CamRenderer	file:
muSTMatrixHandle	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private int muSTMatrixHandle;$/;"	f	class:CamRenderer	file:
mul2f	opengl/libagl/fp.h	/^GLfloat mul2f(GLfloat v) {$/;"	f	namespace:android::gl
multiply	include/ui/TMatHelpers.h	/^MATRIX_R PURE multiply(const MATRIX_A& lhs, const MATRIX_B& rhs) {$/;"	f	namespace:android::matrix
multiply	opengl/libagl/matrix.cpp	/^void matrix_stack_t::multiply(const matrixf_t& rhs)$/;"	f	class:android::matrix_stack_t
multiply	opengl/libagl/matrix.cpp	/^void matrixf_t::multiply(const matrixf_t& rhs) {$/;"	f	class:android::matrixf_t
multiply	opengl/libagl/matrix.cpp	/^void matrixf_t::multiply(matrixf_t& r, const matrixf_t& lhs, const matrixf_t& rhs)$/;"	f	class:android::matrixf_t
mutable_args	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage::mutable_args() {$/;"	f	class:android::gltrace::GLMessage
mutable_args	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::android::gltrace::GLMessage_DataType* GLMessage::mutable_args(int index) {$/;"	f	class:android::gltrace::GLMessage
mutable_boolvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::mutable_boolvalue() {$/;"	f	class:android::gltrace::GLMessage_DataType
mutable_charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::mutable_charvalue() {$/;"	f	class:android::gltrace::GLMessage_DataType
mutable_charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::std::string* GLMessage_DataType::mutable_charvalue(int index) {$/;"	f	class:android::gltrace::GLMessage_DataType
mutable_contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_FrameBuffer::mutable_contents() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
mutable_contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::std::string* GLMessage_FrameBuffer::mutable_contents(int index) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
mutable_fb	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::android::gltrace::GLMessage_FrameBuffer* GLMessage::mutable_fb() {$/;"	f	class:android::gltrace::GLMessage
mutable_floatvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::mutable_floatvalue() {$/;"	f	class:android::gltrace::GLMessage_DataType
mutable_int64value	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::mutable_int64value() {$/;"	f	class:android::gltrace::GLMessage_DataType
mutable_intvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::mutable_intvalue() {$/;"	f	class:android::gltrace::GLMessage_DataType
mutable_rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::mutable_rawbytes() {$/;"	f	class:android::gltrace::GLMessage_DataType
mutable_rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::std::string* GLMessage_DataType::mutable_rawbytes(int index) {$/;"	f	class:android::gltrace::GLMessage_DataType
mutable_returnvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::android::gltrace::GLMessage_DataType* GLMessage::mutable_returnvalue() {$/;"	f	class:android::gltrace::GLMessage
mutex	include/ui/FramebufferNativeWindow.h	/^    mutable Mutex mutex;$/;"	m	class:android::FramebufferNativeWindow
mvColorHandle	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private int mvColorHandle;$/;"	f	class:TestLatencyView.Renderer	file:
mvPositionHandle	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        private int mvPositionHandle;$/;"	f	class:GL2JavaView.Renderer	file:
mvPositionHandle	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        private int mvPositionHandle;$/;"	f	class:TestLatencyView.Renderer	file:
mv_transform	opengl/libagl/context.h	/^    void (*mv_transform)(transform_t const*, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::array_machine_t
mvit4	opengl/libagl/context.h	/^    transform_t         mvit4;$/;"	m	struct:android::gl::transform_state_t
mvp	opengl/libagl/context.h	/^    transform_t         mvp     __attribute__((aligned(32)));$/;"	m	struct:android::gl::transform_state_t
mvp4	opengl/libagl/context.h	/^    transform_t         mvp4;$/;"	m	struct:android::gl::transform_state_t
mvp_transform	opengl/libagl/context.h	/^    void (*mvp_transform)(transform_t const*, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::array_machine_t
mvui	opengl/libagl/context.h	/^    mvui_transform_t    mvui;$/;"	m	struct:android::gl::transform_state_t
mvui_transform_t	opengl/libagl/context.h	/^struct mvui_transform_t : public transform_t$/;"	s	namespace:android::gl
nAACERtools	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nAACERtools;           \/**< MPEG-4 AAC error resilience tool usage *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nAACtools	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nAACtools;             \/**< AAC tool usage *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nARGBColor	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nARGBColor;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE
nARGBMask	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nARGBMask;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE
nAirMBs	include/media/openmax/OMX_Video.h	/^    OMX_U32 nAirMBs;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nAirRef	include/media/openmax/OMX_Video.h	/^    OMX_U32 nAirRef;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nAllocLen	include/media/openmax/OMX_Core.h	/^    OMX_U32 nAllocLen;          \/**< size of the buffer allocated, in bytes *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE
nAllowedPictureTypes	include/media/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nAllowedPictureTypes	include/media/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nAllowedPictureTypes	include/media/openmax/OMX_Video.h	/^    OMX_U32 nAllowedPictureTypes;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nAlpha	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nAlpha;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE
nApertureFNumber	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nApertureFNumber;     \/**< e.g. nApertureFNumber = 2 implies "f\/2" - Q16 format *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nAudioBandWidth	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;       \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nAudioBandWidth	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;       \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nAudioBandWidth	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nAudioBandWidth;  \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nAudioBandWidth	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nAudioBandWidth;  \/**< Audio band width (in Hz) to which an encoder should$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_OPUSTYPE
nAudioHwSync	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nAudioHwSync;       \/\/ IN$/;"	m	struct:android::ConfigureVideoTunnelModeParams
nBFrames	include/media/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nBFrames	include/media/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nBFrames	include/media/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
nBFrames	include/media/openmax/OMX_Video.h	/^    OMX_U32 nBFrames;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nBacklight	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nBacklight;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE
nBalance	include/media/openmax/OMX_Audio.h	/^    OMX_S32 nBalance;           \/**< balance setting for this port$/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE
nBass	include/media/openmax/OMX_Audio.h	/^    OMX_S32 nBass;             \/**< bass setting for the port, as a$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE
nBitPerSample	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitPerSample;            \/**< Bit per sample *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nBitPool	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitPool;          \/**< Bitpool value *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;                       \/**< Bit rate read only field *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
nBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;              \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;              \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;             \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;          \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;         \/**< Bit rate of the encoded data data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitRate;         \/**< Bit rate of the input data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nBitRate	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nBitRate;         \/**< Bit rate of the encoded data data.  Use 0 for variable$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_OPUSTYPE
nBitrate	include/media/openmax/OMX_Video.h	/^    OMX_U32 nBitrate;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
nBitsPerFrame	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitsPerFrame;      \/**< is the value for bits per frame  *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nBitsPerPixel	include/media/openmax/OMX_Video.h	/^    OMX_U16 nBitsPerPixel;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nBitsPerSample	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBitsPerSample;     \/**< Number of bits in each sample *\/$/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nBitstreamFlags	include/media/openmax/OMX_Video.h	/^    OMX_U32 nBitstreamFlags;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nBitstreamVersion	include/media/openmax/OMX_Video.h	/^    OMX_U32 nBitstreamVersion;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nBlockAlign	include/media/openmax/OMX_Audio.h	/^    OMX_U16 nBlockAlign;      \/**< is the block alignment, or block size, in bytes of the audio codec *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nBlocks	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nBlocks;           \/**< Number of blocks *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nBrightness	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nBrightness;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE
nBufferAlignment	include/media/openmax/OMX_Component.h	/^    OMX_U32 nBufferAlignment;$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nBufferCountActual	include/media/openmax/OMX_Component.h	/^    OMX_U32 nBufferCountActual;    \/**< The actual number of buffers allocated on this port *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nBufferCountMin	include/media/openmax/OMX_Component.h	/^    OMX_U32 nBufferCountMin;       \/**< The minimum number of buffers this port requires *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nBufferSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nBufferSize;           \/**< Size, in bytes, for buffers to be used for this channel *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nCabacInitIdc	include/media/openmax/OMX_Video.h	/^    OMX_U32 nCabacInitIdc;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nChannel	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< Valid channel values range from 1 to 16 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nChannel	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< channel to select from 0 to N-1,$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
nChannel	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannel;           \/**< channel to select from 0 to N-1,$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
nChannelMuteMask	include/media/openmax/OMX_Audio.h	/^    OMX_U16 nChannelMuteMask;     \/**< 16 bit mask for channel mute status *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nChannelSoloMask	include/media/openmax/OMX_Audio.h	/^    OMX_U16 nChannelSoloMask;     \/**< 16 bit mask for channel solo status *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U16 nChannels;        \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;                      \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;                \/**< Number of channels (e.g. 2 for stereo) *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;             \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;             \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;            \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;          \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;         \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;        \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_FLACTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;        \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nChannels	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nChannels;        \/**< Number of channels in the data stream (not$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
nChannels	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nChannels;             \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AC3TYPE
nChannels	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nChannels;             \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_EAC3TYPE
nChannels	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nChannels;        \/**< Number of channels *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_OPUSTYPE
nCirMBs	include/media/openmax/OMX_Video.h	/^    OMX_U32 nCirMBs;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nClientPrivate	include/media/openmax/OMX_Other.h	/^    OMX_U32 nClientPrivate;         \/**< Client private data to disabiguate this media time$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nCompressionLevel	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nCompressionLevel;\/**< FLAC compression level, from 0 (fastest compression)$/;"	m	struct:OMX_AUDIO_PARAM_FLACTYPE
nContrast	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 nContrast;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE
nCouplingQuantBits	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nCouplingQuantBits; \/**< is the number of coupling quantization bits in the stream *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nCouplingStartRegion	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nCouplingStartRegion;   \/**< is the coupling start region in the stream  *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nCustomizedU	include/media/openmax/OMX_IVCommon.h	/^    OMX_U8 nCustomizedU;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
nCustomizedV	include/media/openmax/OMX_IVCommon.h	/^    OMX_U8 nCustomizedV;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
nDCTPartitions	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nDCTPartitions;$/;"	m	struct:OMX_VIDEO_PARAM_VP8TYPE
nDLSIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nDLSIndex;        \/**< DLS file index to be loaded *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
nDLSSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nDLSSize;         \/**< Size in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
nData	include/media/openmax/OMX_Audio.h	/^    OMX_U8 nData[1];          \/**< array of one or more bytes of meta data$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nDataSize	include/media/openmax/OMX_Core.h	/^    OMX_U32 nDataSize;   \/* Size of the supporting data to follow *\/$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
nDecayHighFreqRatio	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 nDecayHighFreqRatio; \/**< Ratio of high frequency decay time relative$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nDensity	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nDensity;             \/**< Modal density in the late reverberation decay,$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nDepth	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nDepth;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE
nDiffusion	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nDiffusion;           \/**< Echo density in the late reverberation decay,$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nDrcBoost	include/media/openmax/OMX_AudioExt.h	/^    OMX_S32 nDrcBoost;             \/**< The DRC amplification factor, between 0 and 127, -1 if unspecified *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE
nDrcCut	include/media/openmax/OMX_AudioExt.h	/^    OMX_S32 nDrcCut;               \/**< The DRC attenuation factor, between 0 and 127, -1 if unspecified *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE
nDuration	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nDuration;          \/**< The length of the currently open MIDI resource$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nEncodeBitrate	include/media/openmax/OMX_Video.h	/^    OMX_U32 nEncodeBitrate;$/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE
nEncodeOptions	include/media/openmax/OMX_Audio.h	/^    OMX_U16 nEncodeOptions;   \/**< WMA Type-specific data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nEncodedTargetLevel	include/media/openmax/OMX_AudioExt.h	/^    OMX_S32 nEncodedTargetLevel;   \/**< Target reference level assumed at the encoder, between 0 and 127, -1 if unspecified *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE
nErrMapSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nErrMapSize;           \/* Size of the Error Map in bytes *\/$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
nFeedback	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 nFeedback;        \/**< Feedback from chorus output to input in percentage *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
nFileSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nFileSize;             \/**< size of the MIDI file in bytes, where the entire$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
nFilledLen	include/media/openmax/OMX_Core.h	/^    OMX_U32 nFilledLen;         \/**< number of bytes currently in the$/;"	m	struct:OMX_BUFFERHEADERTYPE
nFirstGOB	include/media/openmax/OMX_Video.h	/^    OMX_U32 nFirstGOB;$/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nFirstMB	include/media/openmax/OMX_Video.h	/^    OMX_U32 nFirstMB;$/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nFlags	include/media/openmax/OMX_Core.h	/^  OMX_U32     nFlags;           \/**< buffer specific flags *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE
nFocusStepIndex	include/media/openmax/OMX_Image.h	/^    OMX_U32 nFocusStepIndex;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
nFocusSteps	include/media/openmax/OMX_Image.h	/^    OMX_U32 nFocusSteps;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
nFrameHeight	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nFrameHeight;$/;"	m	struct:android::DescribeColorFormatParams
nFrameHeight	include/media/openmax/OMX_Image.h	/^    OMX_U32 nFrameHeight;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
nFrameHeight	include/media/openmax/OMX_Video.h	/^    OMX_U32 nFrameHeight;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
nFrameLength	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nFrameLength;          \/**< Frame length (in audio samples per channel) of the codec.$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nFrameLimit	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nFrameLimit;      \/**< Limit on number of frames emitted during a capture (only$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
nFrameRate	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nFrameRate;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
nFrameRate	include/media/openmax/OMX_Video.h	/^    OMX_U32 nFrameRate;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nFrameWidth	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nFrameWidth;$/;"	m	struct:android::DescribeColorFormatParams
nFrameWidth	include/media/openmax/OMX_Image.h	/^    OMX_U32 nFrameWidth;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
nFrameWidth	include/media/openmax/OMX_Video.h	/^    OMX_U32 nFrameWidth;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
nGOBHeaderInterval	include/media/openmax/OMX_Video.h	/^    OMX_U32 nGOBHeaderInterval;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nGamma	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 nGamma;$/;"	m	struct:OMX_CONFIG_GAMMATYPE
nGroupID	include/media/openmax/OMX_Core.h	/^ OMX_U32 nGroupID;                  \/**< ID of the component group *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE
nGroupPriority	include/media/openmax/OMX_Core.h	/^ OMX_U32 nGroupPriority;            \/**< Priority of the component group *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE
nHeaderExtension	include/media/openmax/OMX_Video.h	/^    OMX_U32 nHeaderExtension;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nHeavyCompression	include/media/openmax/OMX_AudioExt.h	/^    OMX_S32 nHeavyCompression;     \/**< 0 for light compression, 1 for heavy compression, -1 if unspecified *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE
nHeight	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nHeight;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nHeight	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nHeight;$/;"	m	struct:OMX_FRAMESIZETYPE
nHighPart	include/media/openmax/OMX_Types.h	/^    OMX_U32 nHighPart;   \/** high bits of the signed 64 bit tick value *\/$/;"	m	struct:OMX_TICKS
nHuffmanTable	include/media/openmax/OMX_Image.h	/^    OMX_U8 nHuffmanTable[256];$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
nIDCVLCThreshold	include/media/openmax/OMX_Video.h	/^    OMX_U32 nIDCVLCThreshold;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nIDProgram	include/media/openmax/OMX_Audio.h	/^    OMX_U16 nIDProgram;         \/**< Valid program ID range is 1 to 128 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nIDRPeriod	include/media/openmax/OMX_Video.h	/^    OMX_U32 nIDRPeriod;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
nIDSoundBank	include/media/openmax/OMX_Audio.h	/^    OMX_U16 nIDSoundBank;       \/**< Sound bank ID *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;                 \/**< Indicates the enumeration index for the format from 0x0 to N-1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
nIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;           \/**< Index of Meta Event *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nIndex;           \/**< Index of Meta Event *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nIndex	include/media/openmax/OMX_Image.h	/^    OMX_U32 nIndex;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
nIndex	include/media/openmax/OMX_Other.h	/^    OMX_U32 nIndex; \/**< Indicates the enumeration index for the format from 0x0 to N-1 *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE
nIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nIndex;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
nInputPortIndex	include/media/openmax/OMX_Core.h	/^  OMX_U32 nInputPortIndex;      \/**< The index of the input port (if any) using$/;"	m	struct:OMX_BUFFERHEADERTYPE
nInterleavePortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nInterleavePortIndex;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE
nKey	include/media/openmax/OMX_Component.h	/^    OMX_U8   nKey [128];$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nKey	include/media/openmax/OMX_Component.h	/^    OMX_U8 nKey[128];$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nKeyFrameInterval	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nKeyFrameInterval;$/;"	m	struct:OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE
nKeySizeUsed	include/media/openmax/OMX_Component.h	/^    OMX_U32 nKeySizeUsed;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nKeySizeUsed	include/media/openmax/OMX_Component.h	/^    OMX_U8 nKeySizeUsed;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nLanguageCountry	include/media/openmax/OMX_Component.h	/^    OMX_U8 nLanguageCountry[128];$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nLanguageCountrySizeUsed	include/media/openmax/OMX_Component.h	/^    OMX_U32 nLanguageCountrySizeUsed;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nLeft	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 nLeft;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nLightness	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 nLightness;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE
nLowPart	include/media/openmax/OMX_Types.h	/^    OMX_U32 nLowPart;    \/** low bits of the signed 64 bit tick value *\/$/;"	m	struct:OMX_TICKS
nMacroblocks	include/media/openmax/OMX_Video.h	/^    OMX_U32 nMacroblocks;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE
nMax	include/media/openmax/OMX_Types.h	/^    OMX_S32 nMax;   \/**< maximum for value (i.e. nValue <= nMax) *\/$/;"	m	struct:OMX_BS32
nMax	include/media/openmax/OMX_Types.h	/^    OMX_U32 nMax;   \/**< maximum for value (i.e. nValue <= nMax) *\/$/;"	m	struct:OMX_BU32
nMaxBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nMaxBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nMaxBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nMaxBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;          \/**< maximal rate for the encoder = 1,2,3,4, default = 4 ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nMaxBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMaxBitRate;      \/**< Sets maximum bitrate (in bps). *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nMaxEncodeFrameSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nMaxEncodeFrameSize;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nMaxFrameHeight	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nMaxFrameHeight;$/;"	m	struct:android::PrepareForAdaptivePlaybackParams
nMaxFrameWidth	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nMaxFrameWidth;$/;"	m	struct:android::PrepareForAdaptivePlaybackParams
nMaxOutputChannels	include/media/openmax/OMX_AudioExt.h	/^    OMX_S32 nMaxOutputChannels;    \/**< Maximum channel count to be output, -1 if unspecified, 0 if downmixing disabled *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE
nMaxPacketSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nMaxPacketSize;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nMaxPolyphony	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMaxPolyphony;        \/**< Specifies the maximum simultaneous polyphonic$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nMaxQuantizer	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nMaxQuantizer;$/;"	m	struct:OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE
nMediaTimestamp	include/media/openmax/OMX_Other.h	/^    OMX_TICKS nMediaTimestamp;      \/**< Media time requested. If no media time was$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nMediaTimestamp	include/media/openmax/OMX_Other.h	/^    OMX_TICKS nMediaTimestamp;  \/**< Media timestamp requested.*\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
nMetaEventSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMetaEventSize;   \/**< size of the Meta Event in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nMetaEventSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMetaEventSize;   \/**< size of the Meta Event in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nMetaEventType	include/media/openmax/OMX_Audio.h	/^    OMX_U8 nMetaEventType;    \/**< Meta Event Type, 7bits (i.e. 0 - 127) *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nMetadataItemCount	include/media/openmax/OMX_Component.h	/^    OMX_U32 nMetadataItemCount;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
nMetadataItemIndex	include/media/openmax/OMX_Component.h	/^    OMX_U32 nMetadataItemIndex;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nMidiEventSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMidiEventSize;   \/**< Size of immediate MIDI events or MIP message in bytes  *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
nMidiEvents	include/media/openmax/OMX_Audio.h	/^    OMX_U8 nMidiEvents[1];    \/**< MIDI event array to be rendered immediately, or an$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
nMin	include/media/openmax/OMX_Types.h	/^    OMX_S32 nMin;   \/**< minimum for value (i.e. nValue >= nMin) *\/$/;"	m	struct:OMX_BS32
nMin	include/media/openmax/OMX_Types.h	/^    OMX_U32 nMin;   \/**< minimum for value (i.e. nValue >= nMin) *\/$/;"	m	struct:OMX_BU32
nMinBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nMinBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nMinBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nMinBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;          \/**< minmal rate for the encoder = 1,2,3,4, default = 1 ??*\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nMinBitRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nMinBitRate;      \/**< Sets minimum bitrate (in bps). *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nMinQuantizer	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nMinQuantizer;$/;"	m	struct:OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE
nModulationDepth	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nModulationDepth;  \/**< depth of modulation as a percentage of$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
nNaluBytes	include/media/openmax/OMX_Video.h	/^    OMX_U32 nNaluBytes;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE
nNodeID	include/media/openmax/OMX_Component.h	/^    OMX_U32 nNodeID;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
nNodeIndex	include/media/openmax/OMX_Component.h	/^    OMX_U32 nNodeIndex;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
nNumActiveVoices	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nNumActiveVoices;   \/**< Number of active voices in the currently playing$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nNumMBs	include/media/openmax/OMX_Video.h	/^    OMX_U32 nNumMBs;$/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nNumMetaEvents	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nNumMetaEvents;     \/**< Total number of MIDI Meta Events in the currently$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nNumNodes	include/media/openmax/OMX_Component.h	/^    OMX_U32 nNumNodes;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
nNumRegions	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nNumRegions;        \/**< is the number of regions value *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nNumRepeat	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nNumRepeat;           \/**< Number of times to repeat playback *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nNumSliceGroups	include/media/openmax/OMX_Video.h	/^    OMX_U8 nNumSliceGroups;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nNumTracks	include/media/openmax/OMX_Audio.h	/^    OMX_U16 nNumTracks;         \/**< Number of MIDI tracks in the file, read only field.$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nNumberOfHuffmanCodeOfLength	include/media/openmax/OMX_Image.h	/^    OMX_U8 nNumberOfHuffmanCodeOfLength[16];$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
nOffset	include/media/openmax/OMX_Core.h	/^    OMX_U32 nOffset;            \/**< start offset of valid data in bytes from$/;"	m	struct:OMX_BUFFERHEADERTYPE
nOffset	include/media/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;              \/**< Amount of wall clock time by which this$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nOffset	include/media/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;          \/**< Amount of wall clock time by which this$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
nOffset	include/media/openmax/OMX_Other.h	/^    OMX_TICKS nOffset;          \/**< Time to offset the media time by$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
nOutputPortIndex	include/media/openmax/OMX_Core.h	/^  OMX_U32 nOutputPortIndex;     \/**< The index of the output port (if any) using$/;"	m	struct:OMX_BUFFERHEADERTYPE
nPCMLimiterEnable	include/media/openmax/OMX_AudioExt.h	/^    OMX_S32 nPCMLimiterEnable;     \/**< Signal level limiting, 0 for disable, 1 for enable, -1 if unspecified *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE
nPFrames	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
nPFrames	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nPFrames	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nPFrames	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
nPFrames	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPFrames;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nPaddedHeight	include/media/openmax/OMX_Video.h	/^    OMX_U16 nPaddedHeight;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nPaddedWidth	include/media/openmax/OMX_Video.h	/^    OMX_U16 nPaddedWidth;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nParentNodeID	include/media/openmax/OMX_Component.h	/^    OMX_U32 nParentNodeID;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
nParentNodeID	include/media/openmax/OMX_Component.h	/^    OMX_U32 nParentNodeID;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
nPictureHeaderRepetition	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPictureHeaderRepetition;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nPortIndex	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nPortIndex;         \/\/ IN$/;"	m	struct:android::ConfigureVideoTunnelModeParams
nPortIndex	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nPortIndex;         \/\/ IN$/;"	m	struct:android::GetAndroidNativeBufferUsageParams
nPortIndex	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:android::EnableAndroidNativeBuffersParams
nPortIndex	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:android::PrepareForAdaptivePlaybackParams
nPortIndex	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:android::StoreMetaDataInBuffersParams
nPortIndex	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:android::UseAndroidNativeBufferParams
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;                     \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;               \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;             \/**< Indicates which port to set *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;            \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;           \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to$/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port index indicating which port to$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;        \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_FLACTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nPortIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nPortIndex	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nPortIndex;            \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AC3TYPE
nPortIndex	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nPortIndex;            \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_EAC3TYPE
nPortIndex	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nPortIndex;       \/**< port that this structure applies to *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_OPUSTYPE
nPortIndex	include/media/openmax/OMX_Component.h	/^    OMX_U32 nPortIndex;               \/**< port that this structure applies to *\/$/;"	m	struct:OMX_PARAM_U32TYPE
nPortIndex	include/media/openmax/OMX_Component.h	/^    OMX_U32 nPortIndex;            \/**< Port number the structure applies to *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nPortIndex	include/media/openmax/OMX_Core.h	/^    OMX_U32 nPortIndex; \/**< port that this structure applies to *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE
nPortIndex	include/media/openmax/OMX_Core.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;         \/**< Port that this struct applies to *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this struct applies to *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;       \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_PARAM_DATAUNITTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;     \/**< Port that this structure applies to *\/$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_GAMMATYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_POINTTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_FRAMESIZETYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE
nPortIndex	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
nPortIndex	include/media/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
nPortIndex	include/media/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
nPortIndex	include/media/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
nPortIndex	include/media/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
nPortIndex	include/media/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE
nPortIndex	include/media/openmax/OMX_Image.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
nPortIndex	include/media/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex;          \/**< port that this structure applies to *\/$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
nPortIndex	include/media/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex;         \/**< port that this structure applies to *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
nPortIndex	include/media/openmax/OMX_Other.h	/^    OMX_U32 nPortIndex; \/**< Indicates which port to set *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE
nPortIndex	include/media/openmax/OMX_Video.h	/^   OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
nPortIndex	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE
nPortIndex	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE
nPortIndex	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_HEVCTYPE
nPortIndex	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_PARAM_VP8TYPE
nPortIndex	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_SLICESEGMENTSTYPE
nPortIndex	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE
nPortIndex	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nPortIndex;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMETYPE
nPorts	include/media/openmax/OMX_Core.h	/^    OMX_U32 nPorts;             \/**< The number of ports for this component *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE
nPosition	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPosition;          \/**< Current Position of the MIDI resource being played$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nPosition	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nPosition;        \/**< Position of the meta-event in milliseconds *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nProfileIndex	include/media/openmax/OMX_Video.h	/^   OMX_U32 nProfileIndex; \/**< Used to query for individual profile support information,$/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
nQFactor	include/media/openmax/OMX_Image.h	/^    OMX_U32 nQFactor;$/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE
nQpB	include/media/openmax/OMX_Video.h	/^    OMX_U32 nQpB;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nQpI	include/media/openmax/OMX_Video.h	/^    OMX_U32 nQpI;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nQpP	include/media/openmax/OMX_Video.h	/^    OMX_U32 nQpP;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nQuality	include/media/openmax/OMX_Audio.h	/^    OMX_S32 nQuality;         \/**< Sets encoding quality to n, between -1 (low) and 10 (high).$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nQuantizationMatrix	include/media/openmax/OMX_Image.h	/^    OMX_U8 nQuantizationMatrix[64];$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
nRGBAlphaConstant	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nRGBAlphaConstant;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE
nRefFrames	include/media/openmax/OMX_Video.h	/^    OMX_U32 nRefFrames;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nRefIdx10ActiveMinus1	include/media/openmax/OMX_Video.h	/^    OMX_U32 nRefIdx10ActiveMinus1;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nRefIdx11ActiveMinus1	include/media/openmax/OMX_Video.h	/^    OMX_U32 nRefIdx11ActiveMinus1;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nResynchMarkerSpacing	include/media/openmax/OMX_Video.h	/^    OMX_U32  nResynchMarkerSpacing;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
nRevision	include/media/openmax/OMX_Types.h	/^        OMX_U8 nRevision;       \/**< Revision version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon128
nRotation	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 nRotation;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE
nSamplePerFrame	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSamplePerFrame;    \/**< is the value for samples per frame *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nSampleRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;           \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nSampleRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;           \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nSampleRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;        \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nSampleRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;       \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nSampleRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;      \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_FLACTYPE
nSampleRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSampleRate;      \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nSampleRate	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nSampleRate;           \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AC3TYPE
nSampleRate	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nSampleRate;           \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_EAC3TYPE
nSampleRate	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nSampleRate;      \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_OPUSTYPE
nSamplingRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;            \/**< Sampling rate of the source data.  Use 0 for$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nSamplingRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;      \/**< is the sampling rate of the source data *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nSamplingRate	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSamplingRate;    \/**< Sampling rate of the source data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nSaturation	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 nSaturation;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE
nScopeSpecifier	include/media/openmax/OMX_Component.h	/^    OMX_U32 nScopeSpecifier;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
nScopeSpecifier	include/media/openmax/OMX_Component.h	/^    OMX_U32 nScopeSpecifier;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nSensitivity	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSensitivity;         \/**< e.g. nSensitivity = 100 implies "ISO 100" *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nShutterSpeedMsec	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nShutterSpeedMsec;    \/**< Shutterspeed in milliseconds *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nSize	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nSize;              \/\/ IN$/;"	m	struct:android::ConfigureVideoTunnelModeParams
nSize	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nSize;              \/\/ IN$/;"	m	struct:android::GetAndroidNativeBufferUsageParams
nSize	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nSize;$/;"	m	struct:android::DescribeColorFormatParams
nSize	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nSize;$/;"	m	struct:android::EnableAndroidNativeBuffersParams
nSize	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nSize;$/;"	m	struct:android::PrepareForAdaptivePlaybackParams
nSize	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nSize;$/;"	m	struct:android::PrependSPSPPSToIDRFramesParams
nSize	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nSize;$/;"	m	struct:android::StoreMetaDataInBuffersParams
nSize	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nSize;$/;"	m	struct:android::UseAndroidNativeBufferParams
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                          \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                    \/**< Size of this structure, in Bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< Size of this structure, in Bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                 \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;                \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< Size of this structure, in Bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_FLACTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nSize	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nSize	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nSize;                 \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AC3TYPE
nSize	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nSize;                 \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_EAC3TYPE
nSize	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE
nSize	include/media/openmax/OMX_AudioExt.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_OPUSTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;                      \/**< size of the structure in bytes, including$/;"	m	struct:OMX_PARAM_CONTENTURITYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;                    \/**< Size of this structure, in Bytes *\/$/;"	m	struct:OMX_PARAM_U32TYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;                 \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_COMPONENTTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BOOLEANTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE
nSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE
nSize	include/media/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE
nSize	include/media/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE
nSize	include/media/openmax/OMX_Core.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE
nSize	include/media/openmax/OMX_Core.h	/^    OMX_U32 nSize; \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE
nSize	include/media/openmax/OMX_Core.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
nSize	include/media/openmax/OMX_Core.h	/^ OMX_U32 nSize;             \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;              \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;            \/**< Size of the structure in bytes *\/$/;"	m	struct:OMX_PARAM_DATAUNITTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_GAMMATYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_POINTTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_FRAMESIZETYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE
nSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
nSize	include/media/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
nSize	include/media/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
nSize	include/media/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
nSize	include/media/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
nSize	include/media/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE
nSize	include/media/openmax/OMX_Image.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
nSize	include/media/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE
nSize	include/media/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE
nSize	include/media/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE
nSize	include/media/openmax/OMX_Other.h	/^    OMX_U32 nSize;                  \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nSize	include/media/openmax/OMX_Other.h	/^    OMX_U32 nSize;               \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
nSize	include/media/openmax/OMX_Other.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
nSize	include/media/openmax/OMX_Other.h	/^    OMX_U32 nSize;              \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
nSize	include/media/openmax/OMX_Other.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE
nSize	include/media/openmax/OMX_Other.h	/^    OMX_U32 nSize;            \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_CONFIG_STATSTYPE
nSize	include/media/openmax/OMX_Other.h	/^    OMX_U32 nSize; \/**< size of the structure in bytes *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nSize	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE
nSize	include/media/openmax/OMX_Video.h	/^   OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
nSize	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE
nSize	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE
nSize	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_HEVCTYPE
nSize	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_PARAM_VP8TYPE
nSize	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_SLICESEGMENTSTYPE
nSize	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE
nSize	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nSize;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMETYPE
nSliceGroupMapType	include/media/openmax/OMX_Video.h	/^    OMX_U8 nSliceGroupMapType;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nSliceHeaderSpacing	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeaderSpacing;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nSliceHeaderSpacing	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeaderSpacing;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nSliceHeight	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nSliceHeight;$/;"	m	struct:android::DescribeColorFormatParams
nSliceHeight	include/media/openmax/OMX_Image.h	/^    OMX_U32 nSliceHeight;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
nSliceHeight	include/media/openmax/OMX_Video.h	/^    OMX_U32 nSliceHeight;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
nStartPortNumber	include/media/openmax/OMX_Core.h	/^    OMX_U32 nStartPortNumber;   \/** first port number for this type of port *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE
nStartTime	include/media/openmax/OMX_Other.h	/^    OMX_TICKS nStartTime;       \/**< Start time of the media time. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
nStep	include/media/openmax/OMX_Types.h	/^        OMX_U8 nStep;           \/**< Step version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon128
nStereoWidening	include/media/openmax/OMX_Audio.h	/^    OMX_U32  nStereoWidening;  \/**< stereo widening setting for the port,$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
nStopTime	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nStopTime;            \/**< Time in milliseconds to indicate when playback$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nStride	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nStride;$/;"	m	struct:android::DescribeColorFormatParams
nStride	include/media/openmax/OMX_Image.h	/^    OMX_S32 nStride;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
nStride	include/media/openmax/OMX_Video.h	/^    OMX_S32 nStride;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
nSubbands	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSubbands;         \/**< Number of subbands *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nSuperBlockAlign	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nSuperBlockAlign; \/**< WMA Type-specific data *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nTargetBitrate	include/media/openmax/OMX_Video.h	/^    OMX_U32 nTargetBitrate;$/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE
nTargetReferenceLevel	include/media/openmax/OMX_AudioExt.h	/^    OMX_S32 nTargetReferenceLevel; \/**< Target reference level, between 0 and 127, -1 if unspecified *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE
nTemporalLayerBitrateRatio	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nTemporalLayerBitrateRatio[OMX_VIDEO_ANDROID_MAXVP8TEMPORALLAYERS];$/;"	m	struct:OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE
nTemporalLayerCount	include/media/openmax/OMX_VideoExt.h	/^    OMX_U32 nTemporalLayerCount;$/;"	m	struct:OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE
nTickCount	include/media/openmax/OMX_Core.h	/^    OMX_U32 nTickCount;         \/**< Optional entry that the component and$/;"	m	struct:OMX_BUFFERHEADERTYPE
nTimeIncRes	include/media/openmax/OMX_Video.h	/^    OMX_U32 nTimeIncRes;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nTimeStamp	include/media/openmax/OMX_Core.h	/^ OMX_TICKS nTimeStamp;          \/**< Timestamp corresponding to the sample$/;"	m	struct:OMX_BUFFERHEADERTYPE
nTimeout	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nTimeout;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE
nTimestamp	include/media/openmax/OMX_Other.h	/^    OMX_TICKS nTimestamp;        \/**< timestamp .*\/$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
nTop	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 nTop;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nTrack	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nTrack;           \/**< track number for the meta event *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nTrack0031MuteMask	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nTrack0031MuteMask;   \/**< 32 bit mask for track mute status. Note: This is for tracks 0-31 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nTrack0031SoloMask	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nTrack0031SoloMask;   \/**< 32 bit mask for track solo status. Note: This is for tracks 0-31 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nTrack3263MuteMask	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nTrack3263MuteMask;   \/**< 32 bit mask for track mute status. Note: This is for tracks 32-63 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nTrack3263SoloMask	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nTrack3263SoloMask;   \/**< 32 bit mask for track solo status. Note: This is for tracks 32-63 *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nTreble	include/media/openmax/OMX_Audio.h	/^    OMX_S32  nTreble;          \/**< treble setting for the port, as a$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE
nTunnelFlags	include/media/openmax/OMX_Core.h	/^    OMX_U32 nTunnelFlags;             \/**< bit flags for tunneling *\/$/;"	m	struct:OMX_TUNNELSETUPTYPE
nU32	include/media/openmax/OMX_Component.h	/^    OMX_U32 nU32;                     \/**< U32 value *\/$/;"	m	struct:OMX_PARAM_U32TYPE
nUsage	include/media/hardware/HardwareAPI.h	/^    OMX_U32 nUsage;             \/\/ OUT$/;"	m	struct:android::GetAndroidNativeBufferUsageParams
nUserSoundBankIndex	include/media/openmax/OMX_Audio.h	/^    OMX_U32 nUserSoundBankIndex;\/**< User soundbank index, easier to access soundbanks$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nValue	include/media/openmax/OMX_Component.h	/^    OMX_U8 nValue[1];$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nValue	include/media/openmax/OMX_Types.h	/^    OMX_S32 nValue; \/**< actual value *\/$/;"	m	struct:OMX_BS32
nValue	include/media/openmax/OMX_Types.h	/^    OMX_U32 nValue; \/**< actual value *\/$/;"	m	struct:OMX_BU32
nValueMaxSize	include/media/openmax/OMX_Component.h	/^    OMX_U32 nValueMaxSize;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nValueSizeUsed	include/media/openmax/OMX_Component.h	/^    OMX_U32 nValueSizeUsed;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nVersion	include/media/hardware/HardwareAPI.h	/^    OMX_VERSIONTYPE nVersion;   \/\/ IN$/;"	m	struct:android::ConfigureVideoTunnelModeParams
nVersion	include/media/hardware/HardwareAPI.h	/^    OMX_VERSIONTYPE nVersion;   \/\/ IN$/;"	m	struct:android::GetAndroidNativeBufferUsageParams
nVersion	include/media/hardware/HardwareAPI.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:android::DescribeColorFormatParams
nVersion	include/media/hardware/HardwareAPI.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:android::EnableAndroidNativeBuffersParams
nVersion	include/media/hardware/HardwareAPI.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:android::PrepareForAdaptivePlaybackParams
nVersion	include/media/hardware/HardwareAPI.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:android::PrependSPSPPSToIDRFramesParams
nVersion	include/media/hardware/HardwareAPI.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:android::StoreMetaDataInBuffersParams
nVersion	include/media/hardware/HardwareAPI.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:android::UseAndroidNativeBufferParams
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;               \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_AMRTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;         \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PCMMODETYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PORTFORMATTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_AACPROFILETYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MP3TYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_EVRCTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_G723TYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCEFRTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCFRTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_PDCHRTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP13TYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_QCELP8TYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_SMVTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAEFRTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;     \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_TDMAFRTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BALANCETYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELMUTETYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISOUNDBANKPROGRAMTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDISTATUSTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MUTETYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_ADPCMTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_G726TYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_RATYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_BASSTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_ECHOCANCELATIONTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_LOUDNESSTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_NOISEREDUCTIONTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_STEREOWIDENINGTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_TREBLETYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_SBCTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIIMMEDIATEEVENTTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTDATATYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_CONFIG_MIDIMETAEVENTTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_FLACTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_G729TYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMEFRTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMFRTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_GSMHRTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_VORBISTYPE
nVersion	include/media/openmax/OMX_Audio.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_WMATYPE
nVersion	include/media/openmax/OMX_AudioExt.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AC3TYPE
nVersion	include/media/openmax/OMX_AudioExt.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_EAC3TYPE
nVersion	include/media/openmax/OMX_AudioExt.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_AACPRESENTATIONTYPE
nVersion	include/media/openmax/OMX_AudioExt.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_AUDIO_PARAM_ANDROID_OPUSTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;           \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_CONTENTURITYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;         \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_U32TYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;      \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_PORTDEFINITIONTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_CONTENTPIPETYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_RESOURCECONCEALMENTTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_COMPONENTTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BOOLEANTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTAINERNODECOUNTTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTAINERNODEIDTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_METADATAITEMCOUNTTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_METADATAFILTERTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_SUSPENSIONPOLICYTYPE
nVersion	include/media/openmax/OMX_Component.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_SUSPENSIONTYPE
nVersion	include/media/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_BUFFERHEADERTYPE
nVersion	include/media/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_COMPONENTROLETYPE
nVersion	include/media/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_PORT_PARAM_TYPE
nVersion	include/media/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_BUFFERSUPPLIERTYPE
nVersion	include/media/openmax/OMX_Core.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_OTHER_EXTRADATATYPE
nVersion	include/media/openmax/OMX_Core.h	/^ OMX_VERSIONTYPE nVersion;  \/**< OMX specification version information *\/$/;"	m	struct:OMX_PRIORITYMGMTTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version info *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version info *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_CONFIG_DITHERTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_PARAM_DATAUNITTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BACKLIGHTTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_BRIGHTNESSTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CAPTUREMODETYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COLORBLENDTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COLORENHANCEMENTTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_COLORKEYTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_CONTRASTTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_EXPOSURECONTROLTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FOCUSREGIONTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FRAMESTABTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_GAMMATYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_IMAGEFILTERTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_LIGHTNESSTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_MIRRORTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_PLANEBLENDTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_POINTTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_ROTATIONTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_SATURATIONTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_TRANSITIONEFFECTTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_WHITEBALCONTROLTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_FRAMESIZETYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_DEBLOCKINGTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_FOCUSSTATUSTYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_INTERLEAVETYPE
nVersion	include/media/openmax/OMX_IVCommon.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
nVersion	include/media/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE
nVersion	include/media/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_FLASHCONTROLTYPE
nVersion	include/media/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_HUFFMANTTABLETYPE
nVersion	include/media/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_PORTFORMATTYPE
nVersion	include/media/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_QFACTORTYPE
nVersion	include/media/openmax/OMX_Image.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE
nVersion	include/media/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_ACTIVEREFCLOCKTYPE
nVersion	include/media/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE
nVersion	include/media/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_SEEKMODETYPE
nVersion	include/media/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;       \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nVersion	include/media/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;    \/**< OMX specification version$/;"	m	struct:OMX_TIME_CONFIG_TIMESTAMPTYPE
nVersion	include/media/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version information *\/$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
nVersion	include/media/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion;   \/**< OMX specification version$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
nVersion	include/media/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_CONFIG_POWERTYPE
nVersion	include/media/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_CONFIG_STATSTYPE
nVersion	include/media/openmax/OMX_Other.h	/^    OMX_VERSIONTYPE nVersion; \/**< OMX specification version information *\/$/;"	m	struct:OMX_OTHER_PARAM_PORTFORMATTYPE
nVersion	include/media/openmax/OMX_Types.h	/^    OMX_U32 nVersion;           \/**< 32 bit value to make accessing the$/;"	m	union:OMX_VERSIONTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_INTRAREFRESHVOPTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_MACROBLOCKERRORMAPTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_CONFIG_MBERRORREPORTINGTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_PARAM_MACROBLOCKSTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_CONFIG_AVCINTRAPERIOD
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_CONFIG_BITRATETYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_CONFIG_NALSIZE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_AVCSLICEFMO
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_BITRATETYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_ERRORCORRECTIONTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_H263TYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_INTRAREFRESHTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG2TYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_MPEG4TYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_QUANTIZATIONTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_RVTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_VBSMCTYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_VIDEOFASTUPDATETYPE
nVersion	include/media/openmax/OMX_Video.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_WMVTYPE
nVersion	include/media/openmax/OMX_Video.h	/^   OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_PROFILELEVELTYPE
nVersion	include/media/openmax/OMX_VideoExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_NALSTREAMFORMATTYPE
nVersion	include/media/openmax/OMX_VideoExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_ANDROID_VP8ENCODERTYPE
nVersion	include/media/openmax/OMX_VideoExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_HEVCTYPE
nVersion	include/media/openmax/OMX_VideoExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_PARAM_VP8TYPE
nVersion	include/media/openmax/OMX_VideoExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_SLICESEGMENTSTYPE
nVersion	include/media/openmax/OMX_VideoExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMEINFOTYPE
nVersion	include/media/openmax/OMX_VideoExt.h	/^    OMX_VERSIONTYPE nVersion;$/;"	m	struct:OMX_VIDEO_VP8REFERENCEFRAMETYPE
nVersionMajor	include/media/openmax/OMX_Types.h	/^        OMX_U8 nVersionMajor;   \/**< Major version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon128
nVersionMinor	include/media/openmax/OMX_Types.h	/^        OMX_U8 nVersionMinor;   \/**< Minor version accessor element *\/$/;"	m	struct:OMX_VERSIONTYPE::__anon128
nWaitMask	include/media/openmax/OMX_Other.h	/^    OMX_U32 nWaitMask;          \/**< Mask of OMX_CLOCKPORT values. *\/$/;"	m	struct:OMX_TIME_CONFIG_CLOCKSTATETYPE
nWallTimeAtMediaTime	include/media/openmax/OMX_Other.h	/^    OMX_TICKS nWallTimeAtMediaTime; \/**< Wall time corresponding to nMediaTimeStamp.$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
nWeightedBipredicitonMode	include/media/openmax/OMX_Video.h	/^    OMX_U32 nWeightedBipredicitonMode;$/;"	m	struct:OMX_VIDEO_PARAM_AVCTYPE
nWidth	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nWidth;$/;"	m	struct:OMX_CONFIG_RECTTYPE
nWidth	include/media/openmax/OMX_IVCommon.h	/^    OMX_U32 nWidth;$/;"	m	struct:OMX_FRAMESIZETYPE
nX	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 nX;$/;"	m	struct:OMX_CONFIG_POINTTYPE
nY	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 nY;$/;"	m	struct:OMX_CONFIG_POINTTYPE
name	cmds/atrace/atrace.cpp	/^    const char* name;$/;"	m	struct:TracingCategory	file:
name	cmds/dumpstate/dumpstate.c	/^  char name[TOMBSTONE_MAX_LEN];$/;"	m	struct:__anon8	file:
name	cmds/flatland/GLHelper.h	/^    const char* name;$/;"	m	struct:android::ShaderDesc
name	cmds/flatland/Main.cpp	/^    const char* name;$/;"	m	struct:BenchmarkDesc	file:
name	cmds/installd/installd.c	/^    const char *name;$/;"	m	struct:cmdinfo	file:
name	cmds/installd/installd.h	/^    char name[];$/;"	m	struct:__anon11
name	cmds/installd/installd.h	/^    char name[];$/;"	m	struct:cache_dir_struct
name	cmds/servicemanager/service_manager.c	/^    uint16_t name[0];$/;"	m	struct:svcinfo	file:
name	include/binder/PermissionCache.h	/^        String16    name;$/;"	m	struct:android::PermissionCache::Entry
name	include/input/InputDevice.h	/^    String8 name;$/;"	m	struct:android::InputDeviceIdentifier
name	opengl/libagl/BufferObjectManager.h	/^    uint32_t        name;$/;"	m	struct:android::gl::buffer_t
name	opengl/libagl/context.h	/^    GLuint              name;$/;"	m	struct:android::gl::texture_unit_t
name	opengl/libagl/egl.cpp	/^    const char * const name;$/;"	m	struct:android::extention_map_t	file:
name	opengl/libs/EGL/eglApi.cpp	/^    const char* name;$/;"	m	struct:android::extention_map_t	file:
name	opengl/tests/configdump/configdump.cpp	/^    char const* name;$/;"	m	struct:Attribute	file:
name	opengl/tests/gl_perf/fragment_shaders.cpp	/^	const char * name;$/;"	m	struct:FragmentTestRec	file:
name	services/inputflinger/InputApplication.h	/^    String8 name;$/;"	m	struct:android::InputApplicationInfo
name	services/inputflinger/InputWindow.h	/^    String8 name;$/;"	m	struct:android::InputWindowInfo
nameBuffer	cmds/rawbu/backup.cpp	/^static char nameBuffer[PATH_MAX];$/;"	m	namespace:android	file:
nanotime	cmds/dumpstate/utils.c	/^static int64_t nanotime() {$/;"	f	file:
nativeBuffer	include/media/hardware/HardwareAPI.h	/^    const sp<ANativeWindowBuffer>& nativeBuffer;$/;"	m	struct:android::UseAndroidNativeBufferParams
nativeClassInit	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^nativeClassInit(JNIEnv *_env, jclass glImplClass)$/;"	f	file:
nativeClassInit	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^nativeClassInit(JNIEnv *_env, jclass glImplClass)$/;"	f	file:
nativeClassInit	opengl/tools/glgen/stubs/gles11/common.cpp	/^nativeClassInit(JNIEnv *_env, jclass glImplClass)$/;"	f	file:
nativeClassInit	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^nativeClassInit(JNIEnv *_env, jclass glImplClass)$/;"	f	file:
nativePixmap	opengl/libagl/egl.cpp	/^    egl_native_pixmap_t     nativePixmap;$/;"	m	struct:android::egl_pixmap_surface_t	file:
nativeRegistrations	opengl/tools/glgen/src/JniCodeEmitter.java	/^    protected List<String> nativeRegistrations = new ArrayList<String>();$/;"	f	class:JniCodeEmitter
nativeWindow	opengl/libagl/egl.cpp	/^    ANativeWindow*   nativeWindow;$/;"	m	struct:android::egl_window_surface_v2_t	file:
native_processes_to_dump	cmds/dumpstate/utils.c	/^static const char* native_processes_to_dump[] = {$/;"	v	file:
ndet22	opengl/libagl/matrix.cpp	/^GLfloat ndet22(GLfloat a, GLfloat b, GLfloat c, GLfloat d) {$/;"	f	namespace:android
needsExit	opengl/tools/glgen/src/JniCodeEmitter.java	/^    boolean needsExit;$/;"	f	class:JniCodeEmitter
needsFiltering	services/surfaceflinger/DisplayDevice.h	/^    bool                    needsFiltering() const { return mNeedsFiltering; }$/;"	f	class:android::DisplayDevice
needsFiltering	services/surfaceflinger/Layer.cpp	/^bool Layer::needsFiltering(const sp<const DisplayDevice>& hw) const {$/;"	f	class:android::Layer
needsScaling	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::needsScaling(int32_t id) {$/;"	f	class:android::HWComposer
needsWakeLock	services/sensorservice/SensorService.cpp	/^bool SensorService::SensorEventConnection::needsWakeLock() {$/;"	f	class:android::SensorService::SensorEventConnection
newDevice	services/inputflinger/tests/InputReader_test.cpp	/^    InputDevice* newDevice(int32_t deviceId, int32_t controllerNumber, const String8& name,$/;"	f	class:android::InstrumentedInputReader
newGLObject	opengl/tests/angeles/demo.c	/^static GLOBJECT * newGLObject(long vertices, int vertexComponents,$/;"	f	file:
newValue	services/inputflinger/InputReader.h	/^        float newValue; \/\/ most recent value$/;"	m	struct:android::JoystickInputMapper::Axis
newline	opengl/tools/glgen2/registry/reg.py	/^    def newline(self):$/;"	m	class:COutputGenerator
next	cmds/servicemanager/service_manager.c	/^    struct svcinfo *next;$/;"	m	struct:svcinfo	typeref:struct:svcinfo::svcinfo	file:
next	include/input/KeyCharacterMap.h	/^        Behavior* next;$/;"	m	struct:android::KeyCharacterMap::Behavior
next	include/private/ui/RegionHelper.h	/^        inline int next(TYPE& head, TYPE& tail,$/;"	f	class:android::region_operator::SpannerBase
next	include/private/ui/RegionHelper.h	/^        inline int next(TYPE& left, TYPE& right) $/;"	f	class:android::region_operator::SpannerInner
next	include/private/ui/RegionHelper.h	/^        inline int next(TYPE& top, TYPE& bottom) $/;"	f	class:android::region_operator::Spanner
next	libs/binder/MemoryDealer.cpp	/^        mutable chunk_t*    next;$/;"	m	struct:android::SimpleBestFitAllocator::chunk_t	file:
next	services/inputflinger/EventHub.h	/^        Device* next;$/;"	m	struct:android::EventHub::Device
next	services/inputflinger/InputDispatcher.h	/^        T* next;$/;"	m	struct:android::InputDispatcher::Link
nextBuffer	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^status_t FramebufferSurface::nextBuffer(sp<GraphicBuffer>& outBuffer, sp<Fence>& outFence) {$/;"	f	class:android::FramebufferSurface
nextExtension	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^nextExtension(const GLubyte* pExtensions) {$/;"	f	file:
nextRepeatTime	services/inputflinger/InputDispatcher.h	/^        nsecs_t nextRepeatTime;$/;"	m	struct:android::InputDispatcher::KeyRepeatState
nextSeq	services/inputflinger/InputDispatcher.cpp	/^uint32_t InputDispatcher::DispatchEntry::nextSeq() {$/;"	f	class:android::InputDispatcher::DispatchEntry
nextStep	services/inputflinger/InputReader.cpp	/^void VibratorInputMapper::nextStep() {$/;"	f	class:android::VibratorInputMapper
nioAccessClass	opengl/tools/glgen/stubs/gles11/common.cpp	/^static jclass nioAccessClass;$/;"	v	file:
nioAccessClass	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jclass nioAccessClass;$/;"	v	file:
no_init	include/ui/mat4.h	/^    enum no_init { NO_INIT };$/;"	g	class:android::tmat44
no_init	include/ui/vec2.h	/^    enum no_init { NO_INIT };$/;"	g	class:android::tvec2
no_init	include/ui/vec3.h	/^    enum no_init { NO_INIT };$/;"	g	class:android::tvec3
no_init	include/ui/vec4.h	/^    enum no_init { NO_INIT };$/;"	g	class:android::tvec4
nocomp	cmds/flatland/Composers.cpp	/^Composer* nocomp() {$/;"	f	namespace:android
nonce	include/input/InputDevice.h	/^    uint16_t nonce;$/;"	m	struct:android::InputDeviceIdentifier
noneStr	opengl/tools/glgen2/registry/reg.py	/^def noneStr(str):$/;"	f
nonestr	opengl/tools/glgen2/glgen.py	/^def nonestr(s):$/;"	f
normal	opengl/libagl/context.h	/^    array_t         normal;$/;"	m	struct:android::gl::array_machine_t
normalArray	opengl/tests/angeles/demo.c	/^    GLfixed *normalArray;$/;"	m	struct:__anon235	file:
normal_fct	opengl/libagl/array.cpp	/^static const fn_t normal_fct[1][16] = { \/\/ size={3}, type={b,s,f,x}$/;"	m	namespace:android	file:
normalize	include/ui/TVecHelpers.h	/^    BASE<T> PURE normalize(const BASE<T>& lv) {$/;"	f	class:android::TVecFunctions
normalize	services/sensorservice/vec.h	/^V<TYPE, SIZE> PURE normalize(const V<TYPE, SIZE>& v) {$/;"	f	namespace:android
normalize_quat	services/sensorservice/quat.h	/^vec<TYPE, 4> normalize_quat(const vec<TYPE, 4>& q) {$/;"	f	namespace:android
normalizedObjPosition	opengl/libagl/context.h	/^    vec4_t      normalizedObjPosition;$/;"	m	struct:android::gl::light_t
normalizedSpotDir	opengl/libagl/context.h	/^    vec4_t      normalizedSpotDir;$/;"	m	struct:android::gl::light_t
notOne	opengl/libagl/matrix.cpp	/^int notOne(GLfixed v) {$/;"	f	namespace:android
notZero	opengl/libagl/matrix.cpp	/^int notZero(GLfixed v) {$/;"	f	namespace:android
noteOp	libs/binder/AppOpsManager.cpp	/^int32_t AppOpsManager::noteOp(int32_t op, int32_t uid, const String16& callingPackage) {$/;"	f	class:android::AppOpsManager
noteOperation	libs/binder/IAppOpsService.cpp	/^    virtual int32_t noteOperation(int32_t code, int32_t uid, const String16& packageName) {$/;"	f	class:android::BpAppOpsService
noteResetAudio	libs/binder/IBatteryStats.cpp	/^    virtual void noteResetAudio() {$/;"	f	class:android::BpBatteryStats
noteResetVideo	libs/binder/IBatteryStats.cpp	/^    virtual void noteResetVideo() {$/;"	f	class:android::BpBatteryStats
noteStartAudio	libs/binder/IBatteryStats.cpp	/^    virtual void noteStartAudio(int uid) {$/;"	f	class:android::BpBatteryStats
noteStartSensor	libs/binder/IBatteryStats.cpp	/^    virtual void noteStartSensor(int uid, int sensor) {$/;"	f	class:android::BpBatteryStats
noteStartVideo	libs/binder/IBatteryStats.cpp	/^    virtual void noteStartVideo(int uid) {$/;"	f	class:android::BpBatteryStats
noteStopAudio	libs/binder/IBatteryStats.cpp	/^    virtual void noteStopAudio(int uid) {$/;"	f	class:android::BpBatteryStats
noteStopSensor	libs/binder/IBatteryStats.cpp	/^    virtual void noteStopSensor(int uid, int sensor) {$/;"	f	class:android::BpBatteryStats
noteStopVideo	libs/binder/IBatteryStats.cpp	/^    virtual void noteStopVideo(int uid) {$/;"	f	class:android::BpBatteryStats
notify	services/inputflinger/InputListener.cpp	/^void NotifyConfigurationChangedArgs::notify(const sp<InputListenerInterface>& listener) const {$/;"	f	class:android::NotifyConfigurationChangedArgs
notify	services/inputflinger/InputListener.cpp	/^void NotifyDeviceResetArgs::notify(const sp<InputListenerInterface>& listener) const {$/;"	f	class:android::NotifyDeviceResetArgs
notify	services/inputflinger/InputListener.cpp	/^void NotifyKeyArgs::notify(const sp<InputListenerInterface>& listener) const {$/;"	f	class:android::NotifyKeyArgs
notify	services/inputflinger/InputListener.cpp	/^void NotifyMotionArgs::notify(const sp<InputListenerInterface>& listener) const {$/;"	f	class:android::NotifyMotionArgs
notify	services/inputflinger/InputListener.cpp	/^void NotifySwitchArgs::notify(const sp<InputListenerInterface>& listener) const {$/;"	f	class:android::NotifySwitchArgs
notifyANR	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual nsecs_t notifyANR(const sp<InputApplicationHandle>& inputApplicationHandle,$/;"	f	class:android::FakeInputDispatcherPolicy	file:
notifyConfigurationChanged	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::notifyConfigurationChanged(const NotifyConfigurationChangedArgs* args) {$/;"	f	class:android::InputDispatcher
notifyConfigurationChanged	services/inputflinger/InputListener.cpp	/^void QueuedInputListener::notifyConfigurationChanged($/;"	f	class:android::QueuedInputListener
notifyConfigurationChanged	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual void notifyConfigurationChanged(nsecs_t when) {$/;"	f	class:android::FakeInputDispatcherPolicy	file:
notifyConfigurationChanged	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void notifyConfigurationChanged(const NotifyConfigurationChangedArgs* args) {$/;"	f	class:android::FakeInputListener	file:
notifyDeviceReset	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::notifyDeviceReset(const NotifyDeviceResetArgs* args) {$/;"	f	class:android::InputDispatcher
notifyDeviceReset	services/inputflinger/InputListener.cpp	/^void QueuedInputListener::notifyDeviceReset(const NotifyDeviceResetArgs* args) {$/;"	f	class:android::QueuedInputListener
notifyDeviceReset	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void notifyDeviceReset(const NotifyDeviceResetArgs* args) {$/;"	f	class:android::FakeInputListener	file:
notifyInputChannelBroken	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual void notifyInputChannelBroken(const sp<InputWindowHandle>& inputWindowHandle) {$/;"	f	class:android::FakeInputDispatcherPolicy	file:
notifyInputDevicesChanged	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void notifyInputDevicesChanged(const Vector<InputDeviceInfo>& inputDevices) {$/;"	f	class:android::FakeInputReaderPolicy	file:
notifyKey	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::notifyKey(const NotifyKeyArgs* args) {$/;"	f	class:android::InputDispatcher
notifyKey	services/inputflinger/InputListener.cpp	/^void QueuedInputListener::notifyKey(const NotifyKeyArgs* args) {$/;"	f	class:android::QueuedInputListener
notifyKey	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void notifyKey(const NotifyKeyArgs* args) {$/;"	f	class:android::FakeInputListener	file:
notifyMotion	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::notifyMotion(const NotifyMotionArgs* args) {$/;"	f	class:android::InputDispatcher
notifyMotion	services/inputflinger/InputListener.cpp	/^void QueuedInputListener::notifyMotion(const NotifyMotionArgs* args) {$/;"	f	class:android::QueuedInputListener
notifyMotion	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void notifyMotion(const NotifyMotionArgs* args) {$/;"	f	class:android::FakeInputListener	file:
notifyReset	services/inputflinger/InputReader.cpp	/^void InputDevice::notifyReset(nsecs_t when) {$/;"	f	class:android::InputDevice
notifyResolution	include/media/hardware/CryptoAPI.h	/^    virtual void notifyResolution(uint32_t width, uint32_t height) {}$/;"	f	struct:android::CryptoPlugin
notifySwitch	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::notifySwitch(const NotifySwitchArgs* args) {$/;"	f	class:android::InputDispatcher
notifySwitch	services/inputflinger/InputListener.cpp	/^void QueuedInputListener::notifySwitch(const NotifySwitchArgs* args) {$/;"	f	class:android::QueuedInputListener
notifySwitch	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual void notifySwitch(nsecs_t when,$/;"	f	class:android::FakeInputDispatcherPolicy	file:
notifySwitch	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void notifySwitch(const NotifySwitchArgs* args) {$/;"	f	class:android::FakeInputListener	file:
now	services/inputflinger/InputDispatcher.cpp	/^static inline nsecs_t now() {$/;"	f	namespace:android
numCollected	cmds/installd/installd.h	/^    size_t numCollected;$/;"	m	struct:__anon12
numDirs	cmds/installd/installd.h	/^    size_t numDirs;$/;"	m	struct:__anon12
numFiles	cmds/installd/installd.h	/^    size_t numFiles;$/;"	m	struct:__anon12
numOverlapping	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t numOverlapping(uint32_t backgroundFormat, uint32_t foregroundFormat,$/;"	f
numOverlays	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t   numOverlays;$/;"	m	struct:searchLimits	file:
numOverlays	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t numOverlays(list<Rectangle>& rectList)$/;"	f
numPendingBuffers	include/gui/IGraphicBufferProducer.h	/^        uint32_t numPendingBuffers;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferOutput
numSet	opengl/tests/hwc/hwcStress.cpp	/^static unsigned int numSet = defaultPerPassNumSet;$/;"	v	file:
num_props	cmds/dumpstate/utils.c	/^size_t num_props = 0;$/;"	v
numargs	cmds/installd/installd.c	/^    unsigned numargs;$/;"	m	struct:cmdinfo	file:
number	include/input/KeyCharacterMap.h	/^        char16_t number;$/;"	m	struct:android::KeyCharacterMap::Key
numerator	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t numerator(void) { return _n; }$/;"	f	class:Rational
obbPath	include/android/native_activity.h	/^    const char* obbPath;$/;"	m	struct:ANativeActivity
obj	opengl/libagl/context.h	/^    vec4_t          obj;$/;"	m	union:android::gl::vertex_t::__anon221
objPosition	opengl/libagl/context.h	/^    vec4_t      objPosition;$/;"	m	struct:android::gl::light_t
objViewer	opengl/libagl/context.h	/^    vec4_t              objViewer;$/;"	m	struct:android::gl::lighting_t
object	include/binder/BpBinder.h	/^            void* object;$/;"	m	struct:android::BpBinder::ObjectManager::entry_t
object_cleanup_func	include/binder/IBinder.h	/^    typedef void (*object_cleanup_func)(const void* id, void* obj, void* cleanupCookie);$/;"	t	class:android::IBinder
objects	libs/binder/Parcel.cpp	/^const binder_size_t* Parcel::objects() const$/;"	f	class:android::Parcel
objects	opengl/libs/EGL/egl_display.h	/^            SortedVector<egl_object_t*> objects;$/;"	m	class:android::egl_display_t
objectsCount	libs/binder/Parcel.cpp	/^size_t Parcel::objectsCount() const$/;"	f	class:android::Parcel
obtainPointerController	services/inputflinger/tests/InputReader_test.cpp	/^    virtual sp<PointerControllerInterface> obtainPointerController(int32_t deviceId) {$/;"	f	class:android::FakeInputReaderPolicy	file:
offs	cmds/servicemanager/binder.h	/^    binder_size_t *offs;   \/* array of offsets *\/$/;"	m	struct:binder_io
offs0	cmds/servicemanager/binder.h	/^    binder_size_t *offs0;  \/* start of offsets buffer *\/$/;"	m	struct:binder_io
offs_avail	cmds/servicemanager/binder.h	/^    size_t offs_avail;     \/* entries available in offsets array *\/$/;"	m	struct:binder_io
offset	libs/binder/IMemory.cpp	/^ssize_t IMemory::offset() const {$/;"	f	class:android::IMemory
offset	services/inputflinger/InputReader.h	/^        float offset;  \/\/ offset to add after scaling for normalization$/;"	m	struct:android::JoystickInputMapper::Axis
offsetBy	include/ui/Rect.h	/^    Rect& offsetBy(const Point& dp) {$/;"	f	class:android::Rect
offsetBy	libs/ui/Rect.cpp	/^Rect& Rect::offsetBy(int32_t x, int32_t y) {$/;"	f	class:android::Rect
offsetLocation	libs/input/Input.cpp	/^void MotionEvent::offsetLocation(float xOffset, float yOffset) {$/;"	f	class:android::MotionEvent
offsetTo	include/ui/Rect.h	/^    Rect& offsetTo(const Point& p) {$/;"	f	class:android::Rect
offsetTo	libs/ui/Rect.cpp	/^Rect& Rect::offsetTo(int32_t x, int32_t y) {$/;"	f	class:android::Rect
offsetToOrigin	include/ui/Rect.h	/^    Rect& offsetToOrigin() {$/;"	f	class:android::Rect
ogles_context_t	opengl/libagl/context.h	/^struct ogles_context_t {$/;"	s	namespace:android::gl
ogles_error	opengl/libagl/state.h	42;"	d
ogles_error	opengl/libagl/state.h	48;"	d
ogles_init	opengl/libagl/state.cpp	/^ogles_context_t *ogles_init(size_t extra)$/;"	f	namespace:android
ogles_init_array	opengl/libagl/array.cpp	/^void ogles_init_array(ogles_context_t* c)$/;"	f	namespace:android
ogles_init_light	opengl/libagl/light.cpp	/^void ogles_init_light(ogles_context_t* c)$/;"	f	namespace:android
ogles_init_matrix	opengl/libagl/matrix.cpp	/^void ogles_init_matrix(ogles_context_t* c)$/;"	f	namespace:android
ogles_init_texture	opengl/libagl/texture.cpp	/^void ogles_init_texture(ogles_context_t* c)$/;"	f	namespace:android
ogles_init_vertex	opengl/libagl/vertex.cpp	/^void ogles_init_vertex(ogles_context_t* c)$/;"	f	namespace:android
ogles_invalidate_lighting_mvui	opengl/libagl/light.cpp	/^void ogles_invalidate_lighting_mvui(ogles_context_t* c)$/;"	f	namespace:android
ogles_invalidate_perspective	opengl/libagl/matrix.cpp	/^void ogles_invalidate_perspective(ogles_context_t* c)$/;"	f	namespace:android
ogles_lock_textures	opengl/libagl/texture.cpp	/^void ogles_lock_textures(ogles_context_t* c)$/;"	f	namespace:android
ogles_scissor	opengl/libagl/matrix.cpp	/^void ogles_scissor(ogles_context_t* c, $/;"	f	namespace:android
ogles_surfaceport	opengl/libagl/matrix.cpp	/^int ogles_surfaceport(ogles_context_t* c, GLint x, GLint y)$/;"	f	namespace:android
ogles_uninit	opengl/libagl/state.cpp	/^void ogles_uninit(ogles_context_t* c)$/;"	f	namespace:android
ogles_uninit_array	opengl/libagl/array.cpp	/^void ogles_uninit_array(ogles_context_t* c)$/;"	f	namespace:android
ogles_uninit_light	opengl/libagl/light.cpp	/^void ogles_uninit_light(ogles_context_t* \/*c*\/)$/;"	f	namespace:android
ogles_uninit_matrix	opengl/libagl/matrix.cpp	/^void ogles_uninit_matrix(ogles_context_t* c)$/;"	f	namespace:android
ogles_uninit_texture	opengl/libagl/texture.cpp	/^void ogles_uninit_texture(ogles_context_t* c)$/;"	f	namespace:android
ogles_uninit_vertex	opengl/libagl/vertex.cpp	/^void ogles_uninit_vertex(ogles_context_t* \/*c*\/)$/;"	f	namespace:android
ogles_unlock_textures	opengl/libagl/texture.cpp	/^void ogles_unlock_textures(ogles_context_t* c)$/;"	f	namespace:android
ogles_validate_primitives	opengl/libagl/primitives.cpp	/^void ogles_validate_primitives(ogles_context_t* c)$/;"	f	namespace:android
ogles_validate_texture	opengl/libagl/texture.cpp	/^void ogles_validate_texture(ogles_context_t* c)$/;"	f	namespace:android
ogles_validate_transform	opengl/libagl/matrix.h	/^inline void ogles_validate_transform($/;"	f	namespace:android
ogles_validate_transform_impl	opengl/libagl/matrix.cpp	/^void ogles_validate_transform_impl(ogles_context_t* c, uint32_t want)$/;"	f	namespace:android
ogles_vertex_clipAllPerspective3D	opengl/libagl/vertex.cpp	/^void ogles_vertex_clipAllPerspective3D(ogles_context_t* c, vertex_t* v) {$/;"	f	namespace:android
ogles_vertex_clipAllPerspective3DZ	opengl/libagl/vertex.cpp	/^void ogles_vertex_clipAllPerspective3DZ(ogles_context_t* c, vertex_t* v) {$/;"	f	namespace:android
ogles_vertex_perspective2D	opengl/libagl/vertex.cpp	/^void ogles_vertex_perspective2D(ogles_context_t* c, vertex_t* v)$/;"	f	namespace:android
ogles_vertex_perspective3D	opengl/libagl/vertex.cpp	/^void ogles_vertex_perspective3D(ogles_context_t* c, vertex_t* v) {$/;"	f	namespace:android
ogles_vertex_perspective3DZ	opengl/libagl/vertex.cpp	/^void ogles_vertex_perspective3DZ(ogles_context_t* c, vertex_t* v) {$/;"	f	namespace:android
ogles_vertex_project	opengl/libagl/vertex.cpp	/^void ogles_vertex_project(ogles_context_t* c, vertex_t* v) {$/;"	f	namespace:android
ogles_viewport	opengl/libagl/matrix.cpp	/^void ogles_viewport(ogles_context_t* c,$/;"	f	namespace:android
oldDirtyRegion	opengl/libagl/egl.cpp	/^    Rect oldDirtyRegion;$/;"	m	struct:android::egl_window_surface_v2_t	file:
on	services/inputflinger/InputReader.h	/^        bool on;    \/\/ we think the led is currently on$/;"	m	struct:android::KeyboardInputMapper::LedState
onANRLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::onANRLocked($/;"	f	class:android::InputDispatcher
onAbandonedLocked	libs/gui/StreamSplitter.cpp	/^void StreamSplitter::onAbandonedLocked() {$/;"	f	class:android::StreamSplitter
onAccuracyChanged	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public void onAccuracyChanged(Sensor sensor, int accuracy) {$/;"	m	class:CamGLSurfaceView
onAsBinder	include/binder/IInterface.h	/^IBinder* BnInterface<INTERFACE>::onAsBinder()$/;"	f	class:android::BnInterface
onAsBinder	include/binder/IInterface.h	/^inline IBinder* BpInterface<INTERFACE>::onAsBinder()$/;"	f	class:android::BpInterface
onAsBinder	services/surfaceflinger/MonitoredProducer.cpp	/^IBinder* MonitoredProducer::onAsBinder() {$/;"	f	class:android::MonitoredProducer
onBufferReleased	include/gui/IProducerListener.h	/^    virtual void onBufferReleased() {}$/;"	f	class:android::DummyProducerListener
onBufferReleased	libs/gui/IProducerListener.cpp	/^    virtual void onBufferReleased() {$/;"	f	class:android::BpProducerListener
onBufferReleased	libs/gui/StreamSplitter.cpp	/^void StreamSplitter::OutputListener::onBufferReleased() {$/;"	f	class:android::StreamSplitter::OutputListener
onBufferReleasedByOutput	libs/gui/StreamSplitter.cpp	/^void StreamSplitter::onBufferReleasedByOutput($/;"	f	class:android::StreamSplitter
onBuffersReleased	include/gui/StreamSplitter.h	/^    virtual void onBuffersReleased() {}$/;"	f	class:android::StreamSplitter
onBuffersReleased	libs/gui/BufferQueue.cpp	/^void BufferQueue::ProxyConsumerListener::onBuffersReleased() {$/;"	f	class:android::BufferQueue::ProxyConsumerListener
onBuffersReleased	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::onBuffersReleased() {$/;"	f	class:android::ConsumerBase
onBuffersReleased	libs/gui/IConsumerListener.cpp	/^    virtual void onBuffersReleased() {$/;"	f	class:android::BpConsumerListener
onBuffersReleased	libs/gui/tests/BufferQueue_test.cpp	/^    virtual void onBuffersReleased() {}$/;"	f	struct:android::DummyConsumer
onBuffersReleased	libs/gui/tests/CpuConsumer_test.cpp	/^        virtual void onBuffersReleased() {$/;"	f	class:android::CpuConsumerTest::DisconnectWaiter
onBuffersReleased	libs/gui/tests/DisconnectWaiter.h	/^    virtual void onBuffersReleased() {$/;"	f	class:android::DisconnectWaiter
onBuffersReleased	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    virtual void onBuffersReleased() {}$/;"	f	struct:android::DummyConsumer
onBuffersReleased	libs/gui/tests/StreamSplitter_test.cpp	/^    virtual void onBuffersReleased() {}$/;"	f	struct:android::DummyListener
onConfigurationChanged	include/android/native_activity.h	/^    void (*onConfigurationChanged)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onContentRectChanged	include/android/native_activity.h	/^    void (*onContentRectChanged)(ANativeActivity* activity, const ARect* rect);$/;"	m	struct:ANativeActivityCallbacks
onCreate	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:GL2CameraEye
onCreate	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaActivity.java	/^    @Override protected void onCreate(Bundle icicle) {$/;"	m	class:GL2JavaActivity
onCreate	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIActivity.java	/^    @Override protected void onCreate(Bundle icicle) {$/;"	m	class:GL2JNIActivity
onCreate	opengl/tests/gl_jni/src/com/android/gljni/GLJNIActivity.java	/^    protected void onCreate(Bundle icicle) {$/;"	m	class:GLJNIActivity
onCreate	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfActivity.java	/^    @Override protected void onCreate(Bundle icicle) {$/;"	m	class:GLPerfActivity
onCreate	opengl/tests/gldual/src/com/android/gldual/GLDualActivity.java	/^    @Override protected void onCreate(Bundle icicle) {$/;"	m	class:GLDualActivity
onCreate	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:ClearActivity
onCreate	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateActivity.java	/^    @Override protected void onCreate(Bundle icicle) {$/;"	m	class:TestFramerateActivity
onCreate	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyActivity.java	/^    @Override protected void onCreate(Bundle icicle) {$/;"	m	class:TestLatencyActivity
onCreate	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^    protected void onCreate(Bundle icicle) {$/;"	m	class:TestActivity
onCreate	opengl/tests/testViewport/src/com/android/test/TestActivity.java	/^    protected void onCreate(Bundle icicle) {$/;"	m	class:TestActivity
onDestroy	include/android/native_activity.h	/^    void (*onDestroy)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onDispSyncEvent	services/surfaceflinger/DispSync.cpp	/^    virtual void onDispSyncEvent(nsecs_t \/*when*\/) {$/;"	f	class:android::ZeroPhaseTracer
onDispSyncEvent	services/surfaceflinger/SurfaceFlinger.cpp	/^    virtual void onDispSyncEvent(nsecs_t when) {$/;"	f	class:android::DispSyncSource	file:
onDispatchCycleBrokenLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::onDispatchCycleBrokenLocked($/;"	f	class:android::InputDispatcher
onDispatchCycleFinishedLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::onDispatchCycleFinishedLocked($/;"	f	class:android::InputDispatcher
onDisplayed	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void onDisplayed() {$/;"	f	class:android::HWCLayerVersion1
onDraw	services/surfaceflinger/Layer.cpp	/^void Layer::onDraw(const sp<const DisplayDevice>& hw, const Region& clip,$/;"	f	class:android::Layer
onDraw	services/surfaceflinger/LayerBlur.cpp	/^void LayerBlur::onDraw(const sp<const DisplayDevice>& hw, const Region& \/*clip*\/,$/;"	f	class:android::LayerBlur
onDraw	services/surfaceflinger/LayerDim.cpp	/^void LayerDim::onDraw(const sp<const DisplayDevice>& hw,$/;"	f	class:android::LayerDim
onDrawFrame	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public void onDrawFrame(GL10 glUnused) {$/;"	m	class:CamRenderer
onDrawFrame	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        public void onDrawFrame(GL10 gl) {$/;"	m	class:GL2JavaView.Renderer
onDrawFrame	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        public void onDrawFrame(GL10 gl) {$/;"	m	class:GL2JNIView.Renderer
onDrawFrame	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^        public void onDrawFrame(GL10 gl) {$/;"	m	class:GLJNIView.Renderer
onDrawFrame	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        public void onDrawFrame(GL10 gl) {$/;"	m	class:GLPerfView.Renderer
onDrawFrame	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        public void onDrawFrame(GL10 gl) {$/;"	m	class:GLDualGL2View.Renderer
onDrawFrame	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^    public void onDrawFrame(GL10 gl) {$/;"	m	class:TriangleRenderer
onDrawFrame	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    public void onDrawFrame(GL10 gl) {$/;"	m	class:ClearRenderer
onDrawFrame	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^        public void onDrawFrame(GL10 gl) {$/;"	m	class:TestFramerateView.Renderer
onDrawFrame	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        public void onDrawFrame(GL10 gl) {$/;"	m	class:TestLatencyView.Renderer
onDrawFrame	opengl/tests/testPauseResume/src/com/android/test/TestView.java	/^        public void onDrawFrame(GL10 gl) {$/;"	m	class:TestView.Renderer
onDrawFrame	opengl/tests/testViewport/src/com/android/test/TestView.java	/^        public void onDrawFrame(GL10 gl) {$/;"	m	class:TestView.Renderer
onFirstRef	libs/binder/Binder.cpp	/^void BpRefBase::onFirstRef()$/;"	f	class:android::BpRefBase
onFirstRef	libs/binder/BpBinder.cpp	/^void BpBinder::onFirstRef()$/;"	f	class:android::BpBinder
onFirstRef	libs/gui/SensorEventQueue.cpp	/^void SensorEventQueue::onFirstRef()$/;"	f	class:android::SensorEventQueue
onFirstRef	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::onFirstRef() {$/;"	f	class:android::SurfaceComposerClient
onFirstRef	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::onFirstRef() {$/;"	f	class:android::SensorService::SensorEventConnection
onFirstRef	services/sensorservice/SensorService.cpp	/^void SensorService::onFirstRef()$/;"	f	class:android::SensorService
onFirstRef	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::VSyncThread::onFirstRef() {$/;"	f	class:android::HWComposer::VSyncThread
onFirstRef	services/surfaceflinger/EventThread.cpp	/^void EventThread::Connection::onFirstRef() {$/;"	f	class:android::EventThread::Connection
onFirstRef	services/surfaceflinger/EventThread.cpp	/^void EventThread::onFirstRef() {$/;"	f	class:android::EventThread
onFirstRef	services/surfaceflinger/Layer.cpp	/^void Layer::onFirstRef() {$/;"	f	class:android::Layer
onFirstRef	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::onFirstRef()$/;"	f	class:android::SurfaceFlinger
onFrameAvailable	libs/gui/BufferQueue.cpp	/^void BufferQueue::ProxyConsumerListener::onFrameAvailable($/;"	f	class:android::BufferQueue::ProxyConsumerListener
onFrameAvailable	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::onFrameAvailable(const BufferItem& item) {$/;"	f	class:android::ConsumerBase
onFrameAvailable	libs/gui/IConsumerListener.cpp	/^    virtual void onFrameAvailable(const BufferItem& item) {$/;"	f	class:android::BpConsumerListener
onFrameAvailable	libs/gui/StreamSplitter.cpp	/^void StreamSplitter::onFrameAvailable(const BufferItem& \/* item *\/) {$/;"	f	class:android::StreamSplitter
onFrameAvailable	libs/gui/tests/BufferQueue_test.cpp	/^    virtual void onFrameAvailable(const BufferItem& \/* item *\/) {}$/;"	f	struct:android::DummyConsumer
onFrameAvailable	libs/gui/tests/CpuConsumer_test.cpp	/^        virtual void onFrameAvailable() {$/;"	f	class:android::CpuConsumerTest::DisconnectWaiter
onFrameAvailable	libs/gui/tests/CpuConsumer_test.cpp	/^        virtual void onFrameAvailable() {$/;"	f	class:android::CpuConsumerTest::FrameWaiter
onFrameAvailable	libs/gui/tests/DisconnectWaiter.h	/^    virtual void onFrameAvailable(const BufferItem& \/* item *\/) {$/;"	f	class:android::DisconnectWaiter
onFrameAvailable	libs/gui/tests/FrameWaiter.h	/^    virtual void onFrameAvailable(const BufferItem& \/* item *\/) {$/;"	f	class:android::FrameWaiter
onFrameAvailable	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    virtual void onFrameAvailable(const BufferItem& \/* item *\/) {}$/;"	f	struct:android::DummyConsumer
onFrameAvailable	libs/gui/tests/StreamSplitter_test.cpp	/^    virtual void onFrameAvailable(const BufferItem& \/* item *\/) {}$/;"	f	struct:android::DummyListener
onFrameAvailable	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        virtual void onFrameAvailable(const BufferItem& \/* item *\/) {$/;"	f	class:android::SurfaceTextureGLThreadToGLTest::FrameCondition
onFrameAvailable	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    synchronized public void onFrameAvailable(SurfaceTexture surface) {$/;"	m	class:CamRenderer
onFrameAvailable	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^void FramebufferSurface::onFrameAvailable(const BufferItem& \/* item *\/) {$/;"	f	class:android::FramebufferSurface
onFrameAvailable	services/surfaceflinger/Layer.cpp	/^void Layer::onFrameAvailable(const BufferItem& item) {$/;"	f	class:android::Layer
onFrameCommitted	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^void FramebufferSurface::onFrameCommitted() {$/;"	f	class:android::FramebufferSurface
onFrameCommitted	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^void VirtualDisplaySurface::onFrameCommitted() {$/;"	f	class:android::VirtualDisplaySurface
onFrameReplaced	include/gui/IConsumerListener.h	/^    virtual void onFrameReplaced(const BufferItem& \/* item *\/) {} \/* Asynchronous *\/$/;"	f	class:android::ConsumerListener
onFrameReplaced	services/surfaceflinger/Layer.cpp	/^void Layer::onFrameReplaced(const BufferItem& item) {$/;"	f	class:android::Layer
onHotplugReceived	services/surfaceflinger/EventThread.cpp	/^void EventThread::onHotplugReceived(int type, bool connected) {$/;"	f	class:android::EventThread
onHotplugReceived	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::onHotplugReceived(int type, bool connected) {$/;"	f	class:android::SurfaceFlinger
onIncStrongAttempted	libs/binder/Binder.cpp	/^bool BpRefBase::onIncStrongAttempted(uint32_t \/*flags*\/, const void* \/*id*\/)$/;"	f	class:android::BpRefBase
onIncStrongAttempted	libs/binder/BpBinder.cpp	/^bool BpBinder::onIncStrongAttempted(uint32_t \/*flags*\/, const void* \/*id*\/)$/;"	f	class:android::BpBinder
onInitializeDisplays	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::onInitializeDisplays() {$/;"	f	class:android::SurfaceFlinger
onInputQueueCreated	include/android/native_activity.h	/^    void (*onInputQueueCreated)(ANativeActivity* activity, AInputQueue* queue);$/;"	m	struct:ANativeActivityCallbacks
onInputQueueDestroyed	include/android/native_activity.h	/^    void (*onInputQueueDestroyed)(ANativeActivity* activity, AInputQueue* queue);$/;"	m	struct:ANativeActivityCallbacks
onKeyDown	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^    public boolean onKeyDown(int keyCode, KeyEvent event) {$/;"	m	class:GLJNIView
onLastStrongRef	libs/binder/Binder.cpp	/^void BpRefBase::onLastStrongRef(const void* \/*id*\/)$/;"	f	class:android::BpRefBase
onLastStrongRef	libs/binder/BpBinder.cpp	/^void BpBinder::onLastStrongRef(const void* \/*id*\/)$/;"	f	class:android::BpBinder
onLastStrongRef	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::onLastStrongRef(const void* id __attribute__((unused))) {$/;"	f	class:android::ConsumerBase
onLayerDestroyed	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::onLayerDestroyed(const wp<Layer>& layer)$/;"	f	class:android::SurfaceFlinger
onLayerDisplayed	services/surfaceflinger/Layer.cpp	/^void Layer::onLayerDisplayed(const sp<const DisplayDevice>& \/* hw *\/,$/;"	f	class:android::Layer
onLayerRemoved	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::onLayerRemoved(const sp<Client>& client, const sp<IBinder>& handle)$/;"	f	class:android::SurfaceFlinger
onLooseCurrent	opengl/libs/EGL/egl_object.cpp	/^void egl_context_t::onLooseCurrent() {$/;"	f	class:android::egl_context_t
onLowMemory	include/android/native_activity.h	/^    void (*onLowMemory)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onMakeCurrent	opengl/libs/EGL/egl_object.cpp	/^void egl_context_t::onMakeCurrent(EGLSurface draw, EGLSurface read) {$/;"	f	class:android::egl_context_t
onMessage	opengl/tools/glgen/stubs/gles11/glDebugMessageCallbackKHR.java	/^        void onMessage(int source, int type, int id, int severity, String message);$/;"	m	interface:DebugProcKHR
onMessageReceived	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::onMessageReceived(int32_t what) {$/;"	f	class:android::SurfaceFlinger
onNativeWindowCreated	include/android/native_activity.h	/^    void (*onNativeWindowCreated)(ANativeActivity* activity, ANativeWindow* window);$/;"	m	struct:ANativeActivityCallbacks
onNativeWindowDestroyed	include/android/native_activity.h	/^    void (*onNativeWindowDestroyed)(ANativeActivity* activity, ANativeWindow* window);$/;"	m	struct:ANativeActivityCallbacks
onNativeWindowRedrawNeeded	include/android/native_activity.h	/^    void (*onNativeWindowRedrawNeeded)(ANativeActivity* activity, ANativeWindow* window);$/;"	m	struct:ANativeActivityCallbacks
onNativeWindowResized	include/android/native_activity.h	/^    void (*onNativeWindowResized)(ANativeActivity* activity, ANativeWindow* window);$/;"	m	struct:ANativeActivityCallbacks
onPause	include/android/native_activity.h	/^    void (*onPause)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onPause	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    protected void onPause() {$/;"	m	class:GL2CameraEye
onPause	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public void onPause() {$/;"	m	class:CamGLSurfaceView
onPause	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaActivity.java	/^    @Override protected void onPause() {$/;"	m	class:GL2JavaActivity
onPause	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIActivity.java	/^    @Override protected void onPause() {$/;"	m	class:GL2JNIActivity
onPause	opengl/tests/gl_jni/src/com/android/gljni/GLJNIActivity.java	/^    protected void onPause() {$/;"	m	class:GLJNIActivity
onPause	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfActivity.java	/^    @Override protected void onPause() {$/;"	m	class:GLPerfActivity
onPause	opengl/tests/gldual/src/com/android/gldual/GLDualActivity.java	/^    @Override protected void onPause() {$/;"	m	class:GLDualActivity
onPause	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    protected void onPause() {$/;"	m	class:ClearActivity
onPause	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateActivity.java	/^    @Override protected void onPause() {$/;"	m	class:TestFramerateActivity
onPause	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyActivity.java	/^    @Override protected void onPause() {$/;"	m	class:TestLatencyActivity
onPause	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^    protected void onPause() {$/;"	m	class:TestActivity
onPause	opengl/tests/testViewport/src/com/android/test/TestActivity.java	/^    protected void onPause() {$/;"	m	class:TestActivity
onPostComposition	services/surfaceflinger/Layer.cpp	/^void Layer::onPostComposition() {$/;"	f	class:android::Layer
onPreComposition	services/surfaceflinger/Layer.cpp	/^bool Layer::onPreComposition() {$/;"	f	class:android::Layer
onRemoved	services/surfaceflinger/Layer.cpp	/^void Layer::onRemoved() {$/;"	f	class:android::Layer
onResume	include/android/native_activity.h	/^    void (*onResume)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onResume	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    protected void onResume() {$/;"	m	class:GL2CameraEye
onResume	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public void onResume() {$/;"	m	class:CamGLSurfaceView
onResume	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaActivity.java	/^    @Override protected void onResume() {$/;"	m	class:GL2JavaActivity
onResume	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIActivity.java	/^    @Override protected void onResume() {$/;"	m	class:GL2JNIActivity
onResume	opengl/tests/gl_jni/src/com/android/gljni/GLJNIActivity.java	/^    protected void onResume() {$/;"	m	class:GLJNIActivity
onResume	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfActivity.java	/^    @Override protected void onResume() {$/;"	m	class:GLPerfActivity
onResume	opengl/tests/gldual/src/com/android/gldual/GLDualActivity.java	/^    @Override protected void onResume() {$/;"	m	class:GLDualActivity
onResume	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    protected void onResume() {$/;"	m	class:ClearActivity
onResume	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateActivity.java	/^    @Override protected void onResume() {$/;"	m	class:TestFramerateActivity
onResume	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyActivity.java	/^    @Override protected void onResume() {$/;"	m	class:TestLatencyActivity
onResume	opengl/tests/testPauseResume/src/com/android/test/TestActivity.java	/^    protected void onResume() {$/;"	m	class:TestActivity
onResume	opengl/tests/testViewport/src/com/android/test/TestActivity.java	/^    protected void onResume() {$/;"	m	class:TestActivity
onSaveInstanceState	include/android/native_activity.h	/^    void* (*onSaveInstanceState)(ANativeActivity* activity, size_t* outSize);$/;"	m	struct:ANativeActivityCallbacks
onScreenAcquired	services/surfaceflinger/EventThread.cpp	/^void EventThread::onScreenAcquired() {$/;"	f	class:android::EventThread
onScreenReleased	services/surfaceflinger/EventThread.cpp	/^void EventThread::onScreenReleased() {$/;"	f	class:android::EventThread
onSensorChanged	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public void onSensorChanged(SensorEvent event) {$/;"	m	class:CamGLSurfaceView
onSidebandStreamChanged	include/gui/StreamSplitter.h	/^    virtual void onSidebandStreamChanged() {}$/;"	f	class:android::StreamSplitter
onSidebandStreamChanged	libs/gui/BufferQueue.cpp	/^void BufferQueue::ProxyConsumerListener::onSidebandStreamChanged() {$/;"	f	class:android::BufferQueue::ProxyConsumerListener
onSidebandStreamChanged	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::onSidebandStreamChanged() {$/;"	f	class:android::ConsumerBase
onSidebandStreamChanged	libs/gui/IConsumerListener.cpp	/^    virtual void onSidebandStreamChanged() {$/;"	f	class:android::BpConsumerListener
onSidebandStreamChanged	libs/gui/tests/BufferQueue_test.cpp	/^    virtual void onSidebandStreamChanged() {}$/;"	f	struct:android::DummyConsumer
onSidebandStreamChanged	libs/gui/tests/DisconnectWaiter.h	/^    virtual void onSidebandStreamChanged() {}$/;"	f	class:android::DisconnectWaiter
onSidebandStreamChanged	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^    virtual void onSidebandStreamChanged() {}$/;"	f	struct:android::DummyConsumer
onSidebandStreamChanged	libs/gui/tests/StreamSplitter_test.cpp	/^    virtual void onSidebandStreamChanged() {}$/;"	f	struct:android::DummyListener
onSidebandStreamChanged	services/surfaceflinger/Layer.cpp	/^void Layer::onSidebandStreamChanged() {$/;"	f	class:android::Layer
onSidebandStreamChanged	services/surfaceflinger/SurfaceFlingerConsumer.cpp	/^void SurfaceFlingerConsumer::onSidebandStreamChanged() {$/;"	f	class:android::SurfaceFlingerConsumer
onStart	include/android/native_activity.h	/^    void (*onStart)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onStop	include/android/native_activity.h	/^    void (*onStop)(ANativeActivity* activity);$/;"	m	struct:ANativeActivityCallbacks
onSurfaceChanged	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public void onSurfaceChanged(GL10 glUnused, int width, int height) {$/;"	m	class:CamRenderer
onSurfaceChanged	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:GL2JavaView.Renderer
onSurfaceChanged	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:GL2JNIView.Renderer
onSurfaceChanged	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^        public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:GLJNIView.Renderer
onSurfaceChanged	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:GLPerfView.Renderer
onSurfaceChanged	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:GLDualGL2View.Renderer
onSurfaceChanged	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^    public void onSurfaceChanged(GL10 gl, int w, int h) {$/;"	m	class:TriangleRenderer
onSurfaceChanged	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    public void onSurfaceChanged(GL10 gl, int w, int h) {$/;"	m	class:ClearRenderer
onSurfaceChanged	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^        public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:TestFramerateView.Renderer
onSurfaceChanged	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:TestLatencyView.Renderer
onSurfaceChanged	opengl/tests/testPauseResume/src/com/android/test/TestView.java	/^        public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:TestView.Renderer
onSurfaceChanged	opengl/tests/testViewport/src/com/android/test/TestView.java	/^        public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:TestView.Renderer
onSurfaceCreated	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public void onSurfaceCreated(GL10 glUnused, EGLConfig config) {$/;"	m	class:CamRenderer
onSurfaceCreated	opengl/tests/gl2_java/src/com/android/gl2java/GL2JavaView.java	/^        public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:GL2JavaView.Renderer
onSurfaceCreated	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:GL2JNIView.Renderer
onSurfaceCreated	opengl/tests/gl_jni/src/com/android/gljni/GLJNIView.java	/^        public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:GLJNIView.Renderer
onSurfaceCreated	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:GLPerfView.Renderer
onSurfaceCreated	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:GLDualGL2View.Renderer
onSurfaceCreated	opengl/tests/gldual/src/com/android/gldual/TriangleRenderer.java	/^    public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:TriangleRenderer
onSurfaceCreated	opengl/tests/lighting1709/src/com/android/lightingtest/ClearActivity.java	/^    public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:ClearRenderer
onSurfaceCreated	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^        public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:TestFramerateView.Renderer
onSurfaceCreated	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^        public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:TestLatencyView.Renderer
onSurfaceCreated	opengl/tests/testPauseResume/src/com/android/test/TestView.java	/^        public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:TestView.Renderer
onSurfaceCreated	opengl/tests/testViewport/src/com/android/test/TestView.java	/^        public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:TestView.Renderer
onSwapBuffersCompleted	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::onSwapBuffersCompleted(HWComposer& hwc) const {$/;"	f	class:DisplayDevice
onTouchEvent	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public boolean onTouchEvent(final MotionEvent event) {$/;"	m	class:CamGLSurfaceView
onTouchEvent	opengl/tests/testLatency/src/com/android/testlatency/TestLatencyView.java	/^    public boolean onTouchEvent(MotionEvent event) {$/;"	m	class:TestLatencyView
onTransact	libs/binder/Binder.cpp	/^status_t BBinder::onTransact($/;"	f	class:android::BBinder
onTransact	libs/binder/IAppOpsCallback.cpp	/^status_t BnAppOpsCallback::onTransact($/;"	f	class:android::BnAppOpsCallback
onTransact	libs/binder/IAppOpsService.cpp	/^status_t BnAppOpsService::onTransact($/;"	f	class:android::BnAppOpsService
onTransact	libs/binder/IBatteryStats.cpp	/^status_t BnBatteryStats::onTransact($/;"	f	class:android::BnBatteryStats
onTransact	libs/binder/IMemory.cpp	/^status_t BnMemory::onTransact($/;"	f	class:android::BnMemory
onTransact	libs/binder/IMemory.cpp	/^status_t BnMemoryHeap::onTransact($/;"	f	class:android::BnMemoryHeap
onTransact	libs/binder/IPermissionController.cpp	/^status_t BnPermissionController::onTransact($/;"	f	class:android::BnPermissionController
onTransact	libs/binder/IServiceManager.cpp	/^status_t BnServiceManager::onTransact($/;"	f	class:android::BnServiceManager
onTransact	libs/gui/IConsumerListener.cpp	/^status_t BnConsumerListener::onTransact($/;"	f	class:android::BnConsumerListener
onTransact	libs/gui/IDisplayEventConnection.cpp	/^status_t BnDisplayEventConnection::onTransact($/;"	f	class:android::BnDisplayEventConnection
onTransact	libs/gui/IGraphicBufferAlloc.cpp	/^status_t BnGraphicBufferAlloc::onTransact($/;"	f	class:android::BnGraphicBufferAlloc
onTransact	libs/gui/IGraphicBufferConsumer.cpp	/^status_t BnGraphicBufferConsumer::onTransact($/;"	f	class:android::BnGraphicBufferConsumer
onTransact	libs/gui/IGraphicBufferProducer.cpp	/^status_t BnGraphicBufferProducer::onTransact($/;"	f	class:android::BnGraphicBufferProducer
onTransact	libs/gui/IProducerListener.cpp	/^status_t BnProducerListener::onTransact(uint32_t code, const Parcel& data,$/;"	f	class:android::BnProducerListener
onTransact	libs/gui/ISensorEventConnection.cpp	/^status_t BnSensorEventConnection::onTransact($/;"	f	class:android::BnSensorEventConnection
onTransact	libs/gui/ISensorServer.cpp	/^status_t BnSensorServer::onTransact($/;"	f	class:android::BnSensorServer
onTransact	libs/gui/ISurfaceComposer.cpp	/^status_t BnSurfaceComposer::onTransact($/;"	f	class:android::BnSurfaceComposer
onTransact	libs/gui/ISurfaceComposerClient.cpp	/^status_t BnSurfaceComposerClient::onTransact($/;"	f	class:android::BnSurfaceComposerClient
onTransact	services/batteryservice/IBatteryPropertiesRegistrar.cpp	/^status_t BnBatteryPropertiesRegistrar::onTransact(uint32_t code,$/;"	f	class:android::BnBatteryPropertiesRegistrar
onTransact	services/surfaceflinger/Client.cpp	/^status_t Client::onTransact($/;"	f	class:android::Client
onTransact	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::onTransact($/;"	f	class:android::SurfaceFlinger
onVSyncEvent	services/surfaceflinger/EventThread.cpp	/^void EventThread::onVSyncEvent(nsecs_t timestamp) {$/;"	f	class:android::EventThread
onVSyncReceived	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::onVSyncReceived(int type, nsecs_t timestamp) {$/;"	f	class:android::SurfaceFlinger
onWindowFocusChanged	include/android/native_activity.h	/^    void (*onWindowFocusChanged)(ANativeActivity* activity, int hasFocus);$/;"	m	struct:ANativeActivityCallbacks
onWindowSurfaceCreated	opengl/libs/EGL/egl_display.h	/^    void onWindowSurfaceCreated() {$/;"	f	class:android::egl_display_t
onWindowSurfaceDestroyed	opengl/libs/EGL/egl_display.h	/^    void onWindowSurfaceDestroyed() {$/;"	f	class:android::egl_display_t
once_control	opengl/libs/EGL/egl.cpp	/^static pthread_once_t once_control = PTHREAD_ONCE_INIT;$/;"	m	namespace:android	file:
opChanged	libs/binder/IAppOpsCallback.cpp	/^    virtual void opChanged(int32_t op, const String16& packageName) {$/;"	f	class:android::BpAppOpsCallback
op_and	include/private/ui/RegionHelper.h	/^        op_and  = LHS &  RHS,$/;"	e	enum:android::region_operator::__anon103
op_and	libs/ui/Region.cpp	/^    op_and  = region_operator<Rect>::op_and,$/;"	e	enum:android::__anon244	file:
op_mask	include/private/ui/RegionHelper.h	/^    uint32_t op_mask;$/;"	m	class:android::region_operator
op_nand	include/private/ui/RegionHelper.h	/^        op_nand = LHS & ~RHS,$/;"	e	enum:android::region_operator::__anon103
op_nand	libs/ui/Region.cpp	/^    op_nand = region_operator<Rect>::op_nand,$/;"	e	enum:android::__anon244	file:
op_or	include/private/ui/RegionHelper.h	/^        op_or   = LHS |  RHS,$/;"	e	enum:android::region_operator::__anon103
op_or	libs/ui/Region.cpp	/^    op_or   = region_operator<Rect>::op_or,$/;"	e	enum:android::__anon244	file:
op_xor	include/private/ui/RegionHelper.h	/^        op_xor  = LHS ^  RHS$/;"	e	enum:android::region_operator::__anon103
op_xor	libs/ui/Region.cpp	/^    op_xor  = region_operator<Rect>::op_xor$/;"	e	enum:android::__anon244	file:
opaque	cmds/flatland/Composers.cpp	/^Composer* opaque() {$/;"	f	namespace:android
opaqueShrink	cmds/flatland/Composers.cpp	/^Composer* opaqueShrink() {$/;"	f	namespace:android
open	opengl/libs/EGL/Loader.cpp	/^void* Loader::open(egl_connection_t* cnx)$/;"	f	class:android::Loader
open	services/surfaceflinger/Barrier.h	/^    void open() {$/;"	f	class:android::Barrier
openDeviceLocked	services/inputflinger/EventHub.cpp	/^status_t EventHub::openDeviceLocked(const char *devicePath) {$/;"	f	class:android::EventHub
openGlobalTransaction	libs/gui/SurfaceComposerClient.cpp	/^    static void openGlobalTransaction() {$/;"	f	class:android::Composer
openGlobalTransaction	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::openGlobalTransaction() {$/;"	f	class:android::SurfaceComposerClient
openGlobalTransactionImpl	libs/gui/SurfaceComposerClient.cpp	/^void Composer::openGlobalTransactionImpl() {$/;"	f	class:android::Composer
openInputChannelPair	libs/input/InputTransport.cpp	/^status_t InputChannel::openInputChannelPair(const String8& name,$/;"	f	class:android::InputChannel
open_driver	libs/binder/ProcessState.cpp	/^static int open_driver()$/;"	f	namespace:android
operation	libs/ui/Region.cpp	/^const Region Region::operation(const Rect& rhs, int op) const {$/;"	f	class:android::Region
operation	libs/ui/Region.cpp	/^const Region Region::operation(const Region& rhs, int dx, int dy, int op) const {$/;"	f	class:android::Region
operation	libs/ui/Region.cpp	/^const Region Region::operation(const Region& rhs, int op) const {$/;"	f	class:android::Region
operationSelf	libs/ui/Region.cpp	/^Region& Region::operationSelf(const Rect& r, int op) {$/;"	f	class:android::Region
operationSelf	libs/ui/Region.cpp	/^Region& Region::operationSelf(const Region& rhs, int dx, int dy, int op) {$/;"	f	class:android::Region
operationSelf	libs/ui/Region.cpp	/^Region& Region::operationSelf(const Region& rhs, int op) {$/;"	f	class:android::Region
operator !=	include/input/Input.h	/^    inline bool operator!=(const PointerCoords& other) const {$/;"	f	struct:android::PointerCoords
operator !=	include/input/Input.h	/^    inline bool operator!=(const PointerProperties& other) const {$/;"	f	struct:android::PointerProperties
operator !=	include/ui/Point.h	/^    inline bool operator != (const Point& rhs) const {$/;"	f	class:android::Point
operator !=	include/ui/Rect.h	/^    inline bool operator != (const Rect& rhs) const {$/;"	f	class:android::Rect
operator !=	include/ui/TVecHelpers.h	/^    bool PURE operator !=(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecComparisonOperators
operator !=	opengl/tests/hwc/hwcCommit.cpp	/^    bool operator!=(const Rational& other) const { return !(*this == other); }$/;"	f	class:Rational
operator !=	services/inputflinger/InputReader.h	/^    bool operator!=(const DisplayViewport& other) const {$/;"	f	struct:android::DisplayViewport
operator !=	services/sensorservice/SensorDevice.h	/^      bool operator != (const BatchParams& other) {$/;"	f	struct:android::SensorDevice::BatchParams
operator !=	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        bool operator != (const LayerListIterator& rhs) const {$/;"	f	class:android::HWComposer::LayerListIterator
operator !=	services/surfaceflinger/Layer.h	/^        inline bool operator !=(const Geometry& rhs) const {$/;"	f	struct:android::Layer::Geometry
operator &	include/ui/Region.h	/^const Region Region::operator & (const Region& rhs) const {$/;"	f	class:android::Region
operator &=	include/ui/Region.h	/^Region& Region::operator &= (const Region& rhs) {$/;"	f	class:android::Region
operator ()	include/private/ui/RegionHelper.h	/^    void operator()(region_rasterizer& rasterizer) {$/;"	f	class:android::region_operator
operator ()	libs/ui/Region.cpp	/^    virtual void operator()(const Rect& rect) {$/;"	f	class:android::Region::rasterizer
operator ()	services/sensorservice/Fusion.cpp	/^    mat<TYPE, SIZE, SIZE> operator()() const {$/;"	f	class:android::Covariance
operator ()	services/surfaceflinger/Effects/Daltonizer.cpp	/^const mat4& Daltonizer::operator()() {$/;"	f	class:android::Daltonizer
operator *	include/ui/TMatHelpers.h	/^    friend BASE<T> PURE operator *(const BASE<T>& lhs, const BASE<U>& rhs) {$/;"	f	class:android::TMatProductOperators
operator *	include/ui/TVecHelpers.h	/^    BASE<T> PURE operator *(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecProductOperators
operator *	include/ui/TVecHelpers.h	/^    BASE<T> PURE operator *(const BASE<T>& lv, const BASE<T>& rv) {$/;"	f	class:android::TVecProductOperators
operator *	include/ui/mat4.h	/^tmat44<T> PURE operator *(U rv, const tmat44<T>& lv) {$/;"	f	namespace:android
operator *	include/ui/mat4.h	/^tmat44<T> PURE operator *(const tmat44<T>& lv, U rv) {$/;"	f	namespace:android
operator *	include/ui/mat4.h	/^typename tmat44<U>::col_type PURE operator *(const tmat44<T>& lv, const tvec4<U>& rv) {$/;"	f	namespace:android
operator *	include/ui/mat4.h	/^typename tmat44<U>::row_type PURE operator *(const tvec4<U>& rv, const tmat44<T>& lv) {$/;"	f	namespace:android
operator *	services/sensorservice/mat.h	/^    friend inline mat PURE operator * (const mat& lhs, pTYPE v) {$/;"	f	class:android::mat
operator *	services/sensorservice/mat.h	/^    friend inline mat PURE operator * (pTYPE v, const mat& rhs) {$/;"	f	class:android::mat
operator *	services/sensorservice/mat.h	/^    friend mat PURE operator * ($/;"	f	class:android::mat
operator *	services/sensorservice/mat.h	/^    friend vec<TYPE, R> PURE operator * ($/;"	f	class:android::mat
operator *	services/sensorservice/vec.h	/^    friend inline vec PURE operator * (const vec& lhs, pTYPE v) {$/;"	f	class:android::vec
operator *	services/sensorservice/vec.h	/^    friend inline vec PURE operator * (pTYPE v, const vec& rhs) {$/;"	f	class:android::vec
operator *	services/sensorservice/vec.h	/^inline VEC<TYPE, SIZE> PURE operator * ($/;"	f	namespace:android
operator *	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        HWCLayerInterface& operator * () { return *mLayerList; }$/;"	f	class:android::HWComposer::LayerListIterator
operator *	services/surfaceflinger/Transform.cpp	/^Transform Transform::operator * (const Transform& rhs) const$/;"	f	class:android::Transform
operator *=	include/ui/TMatHelpers.h	/^    BASE<T>& operator *= (T v) {$/;"	f	class:android::TMatProductOperators
operator *=	include/ui/TVecHelpers.h	/^    BASE<T>& operator *= (const BASE<OTHER>& v) {$/;"	f	class:android::TVecProductOperators
operator *=	include/ui/TVecHelpers.h	/^    BASE<T>& operator *= (const BASE<T>& v) {$/;"	f	class:android::TVecProductOperators
operator *=	services/sensorservice/vec.h	/^vec<TYPE, SIZE>& vec<TYPE, SIZE>::operator *= (vec<TYPE, SIZE>::pTYPE rhs) {$/;"	f	class:android::vec
operator +	include/ui/Point.h	/^    const Point operator + (const Point& rhs) const {$/;"	f	class:android::Point
operator +	include/ui/Region.h	/^const Region Region::operator + (const Point& pt) const {$/;"	f	class:android::Region
operator +	include/ui/TVecHelpers.h	/^    BASE<T> PURE operator +(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecAddOperators
operator +	include/ui/TVecHelpers.h	/^    BASE<T> PURE operator +(const BASE<T>& lv, const BASE<T>& rv) {$/;"	f	class:android::TVecAddOperators
operator +	libs/ui/Rect.cpp	/^const Rect Rect::operator +(const Point& rhs) const {$/;"	f	class:android::Rect
operator +	services/sensorservice/mat.h	/^    friend inline mat PURE operator + (const mat& lhs, const mat& rhs) {$/;"	f	class:android::mat
operator +	services/sensorservice/vec.h	/^    friend inline vec PURE operator + (const vec& lhs, const vec& rhs) {$/;"	f	class:android::vec
operator +	services/sensorservice/vec.h	/^inline VLHS<TYPE, SIZE> PURE operator + ($/;"	f	namespace:android
operator ++	include/ui/TVecHelpers.h	/^    BASE<T>& operator ++ () {$/;"	f	class:android::TVecUnaryOperators
operator ++	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        LayerListIterator& operator++() {$/;"	f	class:android::HWComposer::LayerListIterator
operator +=	include/ui/Point.h	/^    inline Point& operator += (const Point& rhs) {$/;"	f	class:android::Point
operator +=	include/ui/Rect.h	/^    Rect& operator += (const Point& rhs) {$/;"	f	class:android::Rect
operator +=	include/ui/Region.h	/^Region& Region::operator += (const Point& pt) {$/;"	f	class:android::Region
operator +=	include/ui/TVecHelpers.h	/^    BASE<T>& operator += (const BASE<OTHER>& v) {$/;"	f	class:android::TVecAddOperators
operator +=	include/ui/TVecHelpers.h	/^    BASE<T>& operator += (const BASE<T>& v) {$/;"	f	class:android::TVecAddOperators
operator +=	services/sensorservice/vec.h	/^vec<TYPE, SIZE>& vec<TYPE, SIZE>::operator += (const vec<TYPE, SIZE>& rhs) {$/;"	f	class:android::vec
operator -	include/ui/Point.h	/^    const Point operator - (const Point& rhs) const {$/;"	f	class:android::Point
operator -	include/ui/Point.h	/^    inline Point& operator - () {$/;"	f	class:android::Point
operator -	include/ui/Region.h	/^const Region Region::operator - (const Region& rhs) const {$/;"	f	class:android::Region
operator -	include/ui/TVecHelpers.h	/^    BASE<T> PURE operator -(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecAddOperators
operator -	include/ui/TVecHelpers.h	/^    BASE<T> PURE operator -(const BASE<T>& lv, const BASE<T>& rv) {$/;"	f	class:android::TVecAddOperators
operator -	include/ui/TVecHelpers.h	/^    BASE<T> operator - () const {$/;"	f	class:android::TVecUnaryOperators
operator -	libs/ui/Rect.cpp	/^const Rect Rect::operator -(const Point& rhs) const {$/;"	f	class:android::Rect
operator -	services/sensorservice/mat.h	/^    friend inline mat PURE operator - (const mat& lhs, const mat& rhs) {$/;"	f	class:android::mat
operator -	services/sensorservice/vec.h	/^    friend inline vec PURE operator - (const vec& lhs, const vec& rhs) {$/;"	f	class:android::vec
operator -	services/sensorservice/vec.h	/^inline VLHS<TYPE, SIZE> PURE operator - ($/;"	f	namespace:android
operator -	services/sensorservice/vec.h	/^vec<TYPE, SIZE> PURE operator - (const vec<TYPE, SIZE>& lhs) {$/;"	f	namespace:android
operator --	include/ui/TVecHelpers.h	/^    BASE<T>& operator -- () {$/;"	f	class:android::TVecUnaryOperators
operator -=	include/ui/Point.h	/^    inline Point& operator -= (const Point& rhs) {$/;"	f	class:android::Point
operator -=	include/ui/Rect.h	/^    Rect& operator -= (const Point& rhs) {$/;"	f	class:android::Rect
operator -=	include/ui/Region.h	/^Region& Region::operator -= (const Region& rhs) {$/;"	f	class:android::Region
operator -=	include/ui/TVecHelpers.h	/^    BASE<T>& operator -= (const BASE<OTHER>& v) {$/;"	f	class:android::TVecAddOperators
operator -=	include/ui/TVecHelpers.h	/^    BASE<T>& operator -= (const BASE<T>& v) {$/;"	f	class:android::TVecAddOperators
operator -=	services/sensorservice/vec.h	/^vec<TYPE, SIZE>& vec<TYPE, SIZE>::operator -= (const vec<TYPE, SIZE>& rhs) {$/;"	f	class:android::vec
operator ->	opengl/libs/EGL/egl_display.h	/^          egl_display_t* operator->()       { return mDpy; }$/;"	f	class:android::egl_display_ptr
operator ->	opengl/libs/EGL/egl_display.h	/^    const egl_display_t* operator->() const { return mDpy; }$/;"	f	class:android::egl_display_ptr
operator ->	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        HWCLayerInterface* operator -> () { return mLayerList; }$/;"	f	class:android::HWComposer::LayerListIterator
operator /	include/ui/TVecHelpers.h	/^    BASE<T> PURE operator \/(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecProductOperators
operator /	include/ui/TVecHelpers.h	/^    BASE<T> PURE operator \/(const BASE<T>& lv, const BASE<T>& rv) {$/;"	f	class:android::TVecProductOperators
operator /=	include/ui/TMatHelpers.h	/^    BASE<T>& operator \/= (T v) {$/;"	f	class:android::TMatProductOperators
operator /=	include/ui/TVecHelpers.h	/^    BASE<T>& operator \/= (const BASE<OTHER>& v) {$/;"	f	class:android::TVecProductOperators
operator /=	include/ui/TVecHelpers.h	/^    BASE<T>& operator \/= (const BASE<T>& v) {$/;"	f	class:android::TVecProductOperators
operator <	include/binder/PermissionCache.h	/^        inline bool operator < (const Entry& e) const {$/;"	f	struct:android::PermissionCache::Entry
operator <	include/ui/Point.h	/^    bool operator < (const Point& rhs) const {$/;"	f	class:android::Point
operator <	include/ui/TVecHelpers.h	/^    bool PURE operator <(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecComparisonOperators
operator <	libs/ui/Rect.cpp	/^bool Rect::operator <(const Rect& rhs) const {$/;"	f	class:android::Rect
operator <	opengl/tests/hwc/hwcCommit.cpp	/^bool Rational::operator<(const Rational& other) const$/;"	f	class:Rational
operator <	services/inputflinger/InputDispatcher.h	/^        bool operator<(const KeyReplacement& rhs) const {$/;"	f	struct:android::InputDispatcher::KeyReplacement
operator <	services/sensorservice/BatteryService.h	/^        bool operator < (const Info& rhs) const {$/;"	f	struct:android::BatteryService::Info
operator <	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^        bool operator < (const Attribute& other) const {$/;"	f	struct:android::EGLAttributeVector::Attribute
operator <<	include/binder/Parcel.h	/^inline TextOutput& operator<<(TextOutput& to, const Parcel& parcel)$/;"	f	namespace:android
operator <<	include/binder/TextOutput.h	/^inline TextOutput& operator<<(TextOutput& to, TextOutputManipFunc func)$/;"	f	namespace:android
operator <<	include/binder/TextOutput.h	/^inline TextOutput& operator<<(TextOutput& to, char c)$/;"	f	namespace:android
operator <<	include/binder/TextOutput.h	/^inline TextOutput& operator<<(TextOutput& to, const char* str)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, bool val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, const HexDump& val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, const String16& val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, const String8& val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, const TypeCode& val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, const void* val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, double val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, float val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, int val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, long long val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, long val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, unsigned int val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, unsigned long long val)$/;"	f	namespace:android
operator <<	libs/binder/TextOutput.cpp	/^TextOutput& operator<<(TextOutput& to, unsigned long val)$/;"	f	namespace:android
operator <<	libs/gui/tests/CpuConsumer_test.cpp	/^::std::ostream& operator<<(::std::ostream& os, const CpuConsumerTestParams& p) {$/;"	f	namespace:android
operator <<	services/sensorservice/mat.h	/^    column_builder<0> operator << (const vec<TYPE, R>& rhs) {$/;"	f	class:android::mat
operator <<	services/sensorservice/mat.h	/^    friend column_builder<PREV_COLUMN+1> operator << ($/;"	f	class:android::mat
operator <<	services/sensorservice/mat.h	/^    friend void operator << ($/;"	f	class:android::mat
operator <<	services/sensorservice/mat.h	/^    void operator << (const vec<TYPE, R>& rhs) { base::operator[](0) = rhs; }$/;"	f	class:android::mat
operator <<	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^    friend Formatter& operator << (Formatter& out, const char* in) {$/;"	f	class:android::Formatter
operator <<	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^    friend inline Formatter& operator << (Formatter& out, const String8& in) {$/;"	f	class:android::Formatter
operator <<	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^    friend inline Formatter& operator<<(Formatter& to, FormaterManipFunc func) {$/;"	f	class:android::Formatter
operator <=	include/ui/TVecHelpers.h	/^    bool PURE operator <=(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecComparisonOperators
operator =	include/ui/TVecHelpers.h	/^    Impersonator& operator = (const TYPE& rhs) {$/;"	f	struct:android::Impersonator
operator =	libs/ui/Region.cpp	/^Region& Region::operator = (const Region& rhs)$/;"	f	class:android::Region
operator =	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline GLMessage& operator=(const GLMessage& from) {$/;"	f	class:android::gltrace::GLMessage
operator =	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline GLMessage_DataType& operator=(const GLMessage_DataType& from) {$/;"	f	class:android::gltrace::GLMessage_DataType
operator =	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  inline GLMessage_FrameBuffer& operator=(const GLMessage_FrameBuffer& from) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
operator =	services/sensorservice/mat.h	/^    mat& operator=(const TYPE& rhs) { return helpers::doAssign(*this, rhs); }$/;"	f	class:android::mat
operator =	services/sensorservice/mat.h	/^    mat& operator=(const base& rhs) { base::operator=(rhs); return *this; }$/;"	f	class:android::mat
operator =	services/sensorservice/mat.h	/^    mat& operator=(const base& rhs) {$/;"	f	class:android::mat
operator =	services/sensorservice/mat.h	/^    mat& operator=(const mat& rhs) { base::operator=(rhs); return *this; }$/;"	f	class:android::mat
operator =	services/sensorservice/mat.h	/^    mat& operator=(const mat& rhs) {$/;"	f	class:android::mat
operator =	services/sensorservice/mat.h	/^    mat& operator=(pTYPE rhs) {$/;"	f	class:android::mat
operator =	services/sensorservice/vec.h	/^    vec& operator = (const VEC<TYPE, S>& rhs) {$/;"	f	class:android::vec
operator =	services/sensorservice/vec.h	/^    vec& operator = (const base& rhs) {$/;"	f	class:android::vec
operator =	services/sensorservice/vec.h	/^    vec& operator = (const vec& rhs) {$/;"	f	class:android::vec
operator =	services/sensorservice/vec.h	/^    vec& operator = (pTYPE rhs) {$/;"	f	class:android::vec
operator =	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        CompMap& operator=(const CompMap &rhs) {$/;"	f	struct:android::HWComposer::CompMap
operator =	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^        void operator = (EGLint value) {$/;"	f	class:android::EGLAttributeVector::Adder
operator ==	include/ui/Point.h	/^    inline bool operator == (const Point& rhs) const {$/;"	f	class:android::Point
operator ==	include/ui/Rect.h	/^    inline bool operator == (const Rect& rhs) const {$/;"	f	class:android::Rect
operator ==	include/ui/TVecHelpers.h	/^    bool PURE operator ==(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecComparisonOperators
operator ==	libs/input/Input.cpp	/^bool PointerCoords::operator==(const PointerCoords& other) const {$/;"	f	class:android::PointerCoords
operator ==	libs/input/Input.cpp	/^bool PointerProperties::operator==(const PointerProperties& other) const {$/;"	f	class:android::PointerProperties
operator ==	opengl/tests/hwc/hwcCommit.cpp	/^bool Rational::operator==(const Rational& other) const$/;"	f	class:Rational
operator ==	services/inputflinger/InputDispatcher.h	/^        bool operator==(const KeyReplacement& rhs) const {$/;"	f	struct:android::InputDispatcher::KeyReplacement
operator ==	services/inputflinger/InputReader.h	/^    bool operator==(const DisplayViewport& other) const {$/;"	f	struct:android::DisplayViewport
operator ==	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        bool operator == (const LayerListIterator& rhs) const {$/;"	f	class:android::HWComposer::LayerListIterator
operator ==	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        bool operator== (CompMap &rhs) {$/;"	f	struct:android::HWComposer::CompMap
operator ==	services/surfaceflinger/Layer.h	/^        inline bool operator ==(const Geometry& rhs) const {$/;"	f	struct:android::Layer::Geometry
operator >	include/ui/TVecHelpers.h	/^    bool PURE operator >(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecComparisonOperators
operator >	opengl/tests/hwc/hwcCommit.cpp	/^    bool operator>(const Rational& other) const {$/;"	f	class:Rational
operator >=	include/ui/TVecHelpers.h	/^    bool PURE operator >=(const BASE<T>& lv, const BASE<RT>& rv) {$/;"	f	class:android::TVecComparisonOperators
operator EGLint	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^        operator EGLint () const { return v.mList[attribute]; }$/;"	f	class:android::EGLAttributeVector::Adder
operator EGLint const*	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^    operator EGLint const* () const { return &mList.keyAt(0).v; }$/;"	f	class:android::EGLAttributeVector
operator IGraphicBufferConsumer::BufferItem	libs/gui/BufferItem.cpp	/^BufferItem::operator IGraphicBufferConsumer::BufferItem() const {$/;"	f	class:android::BufferItem
operator TYPE const&	include/ui/TVecHelpers.h	/^    operator TYPE const& () const {$/;"	f	struct:android::Impersonator
operator TYPE&	include/ui/TVecHelpers.h	/^    operator TYPE& () {$/;"	f	struct:android::Impersonator
operator []	include/ui/mat4.h	/^    inline col_type const& operator [] (size_t i) const { return mValue[i]; }$/;"	f	class:android::tmat44
operator []	include/ui/mat4.h	/^    inline col_type&       operator [] (size_t i)       { return mValue[i]; }$/;"	f	class:android::tmat44
operator []	include/ui/vec2.h	/^    inline T const& operator [] (size_t i) const { return (&x)[i]; }$/;"	f	class:android::tvec2
operator []	include/ui/vec2.h	/^    inline T&       operator [] (size_t i)       { return (&x)[i]; }$/;"	f	class:android::tvec2
operator []	include/ui/vec3.h	/^    inline T const& operator [] (size_t i) const { return (&x)[i]; }$/;"	f	class:android::tvec3
operator []	include/ui/vec3.h	/^    inline T&       operator [] (size_t i)       { return (&x)[i]; }$/;"	f	class:android::tvec3
operator []	include/ui/vec4.h	/^    inline T const& operator [] (size_t i) const { return (&x)[i]; }$/;"	f	class:android::tvec4
operator []	include/ui/vec4.h	/^    inline T&       operator [] (size_t i)       { return (&x)[i]; }$/;"	f	class:android::tvec4
operator []	services/sensorservice/mat.h	/^    base& operator[](size_t) { return *this; }$/;"	f	class:android::mat
operator []	services/sensorservice/mat.h	/^    const base& operator[](size_t) const { return *this; }$/;"	f	class:android::mat
operator []	services/sensorservice/vec.h	/^    inline       TYPE& operator[](size_t i)       { return v[i]; }$/;"	f	struct:android::vbase
operator []	services/sensorservice/vec.h	/^    inline       float& operator[](size_t i)       { return v[i]; }$/;"	f	struct:android::vbase
operator []	services/sensorservice/vec.h	/^    inline const TYPE& operator[](size_t i) const { return v[i]; }$/;"	f	struct:android::vbase
operator []	services/sensorservice/vec.h	/^    inline const float& operator[](size_t i) const { return v[i]; }$/;"	f	struct:android::vbase
operator []	services/surfaceflinger/RenderEngine/Mesh.h	/^        TYPE const& operator[](size_t index) const {$/;"	f	class:android::Mesh::VertexArray
operator []	services/surfaceflinger/RenderEngine/Mesh.h	/^        TYPE& operator[](size_t index) {$/;"	f	class:android::Mesh::VertexArray
operator []	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^    Adder operator [] (EGLint attribute) {$/;"	f	class:android::EGLAttributeVector
operator []	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^    EGLint operator [] (EGLint attribute) const {$/;"	f	class:android::EGLAttributeVector
operator []	services/surfaceflinger/Transform.cpp	/^const vec3& Transform::operator [] (size_t i) const {$/;"	f	class:android::Transform
operator []	services/surfaceflinger/Transform.h	/^        inline const vec3& operator [] (int i) const { return v[i]; }$/;"	f	struct:android::Transform::mat33
operator []	services/surfaceflinger/Transform.h	/^        inline vec3& operator [] (int i) { return v[i]; }$/;"	f	struct:android::Transform::mat33
operator ^	include/ui/Region.h	/^const Region Region::operator ^ (const Region& rhs) const {$/;"	f	class:android::Region
operator ^=	include/ui/Region.h	/^Region& Region::operator ^= (const Region& rhs) {$/;"	f	class:android::Region
operator bool	opengl/libs/EGL/egl_display.h	/^    operator bool() const { return mDpy != NULL; }$/;"	f	class:android::egl_display_ptr
operator double	opengl/tests/hwc/hwcCommit.cpp	/^    operator double() const { return (double) _n \/ (double) _d; }$/;"	f	class:Rational
operator hwc_rect	opengl/tests/hwc/hwcTestLib.cpp	/^HwcTestDim::operator hwc_rect() const$/;"	f	class:HwcTestDim
operator string	opengl/tests/hwc/hwcCommit.cpp	/^Range::operator string()$/;"	f	class:Range
operator string	opengl/tests/hwc/hwcCommit.cpp	/^Rational::operator string() const$/;"	f	class:Rational
operator string	opengl/tests/hwc/hwcTestLib.cpp	/^ColorFract::operator string()$/;"	f	class:ColorFract
operator string	opengl/tests/hwc/hwcTestLib.cpp	/^HwcTestDim::operator string()$/;"	f	class:HwcTestDim
operator |	include/ui/Region.h	/^const Region Region::operator | (const Region& rhs) const {$/;"	f	class:android::Region
operator |=	include/ui/Region.h	/^Region& Region::operator |= (const Region& rhs) {$/;"	f	class:android::Region
ops	opengl/libagl/context.h	/^    uint32_t        ops;$/;"	m	struct:android::gl::transform_t
ops	opengl/libagl/context.h	/^    uint8_t         *ops;$/;"	m	struct:android::gl::matrix_stack_t
opt_backupAll	cmds/rawbu/backup.cpp	/^static int opt_backupAll;$/;"	m	namespace:android	file:
orSelf	libs/ui/Region.cpp	/^Region& Region::orSelf(const Rect& r) {$/;"	f	class:android::Region
orSelf	libs/ui/Region.cpp	/^Region& Region::orSelf(const Region& rhs) {$/;"	f	class:android::Region
orSelf	libs/ui/Region.cpp	/^Region& Region::orSelf(const Region& rhs, int dx, int dy) {$/;"	f	class:android::Region
orientation	include/private/gui/LayerState.h	/^    uint32_t orientation;$/;"	m	struct:android::DisplayState
orientation	include/ui/DisplayInfo.h	/^    uint8_t orientation;$/;"	m	struct:android::DisplayInfo
orientation	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange orientation;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
orientation	services/inputflinger/InputReader.h	/^        int32_t orientation;$/;"	m	struct:android::RawPointerData::Pointer
orientation	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo orientation;$/;"	m	struct:android::RawPointerAxes
orientation	services/inputflinger/InputReader.h	/^    int32_t orientation;$/;"	m	struct:android::DisplayViewport
orientation	services/surfaceflinger/SurfaceFlinger.h	/^        uint8_t orientation;$/;"	m	struct:android::SurfaceFlinger::DisplayDeviceState
orientationAware	services/inputflinger/InputReader.h	/^        bool orientationAware;$/;"	m	struct:android::CursorInputMapper::Parameters
orientationAware	services/inputflinger/InputReader.h	/^        bool orientationAware;$/;"	m	struct:android::KeyboardInputMapper::Parameters
orientationAware	services/inputflinger/InputReader.h	/^        bool orientationAware;$/;"	m	struct:android::TouchInputMapper::Parameters
orientationCalibration	services/inputflinger/InputReader.h	/^        OrientationCalibration orientationCalibration;$/;"	m	struct:android::TouchInputMapper::Calibration
orientationToTransfrom	services/surfaceflinger/DisplayDevice.cpp	/^status_t DisplayDevice::orientationToTransfrom($/;"	f	class:DisplayDevice
orientation_flags	services/surfaceflinger/Transform.h	/^            enum orientation_flags {$/;"	g	class:android::Transform
original	opengl/tools/glgen/src/CFunc.java	/^    String original;$/;"	f	class:CFunc
ortho	include/ui/mat4.h	/^tmat44<T> tmat44<T>::ortho(T left, T right, T bottom, T top, T near, T far) {$/;"	f	class:android::tmat44
orthof	opengl/libagl/matrix.cpp	/^static void orthof( $/;"	f	namespace:android
other	include/media/openmax/OMX_Component.h	/^        OMX_OTHER_PORTDEFINITIONTYPE other;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon129
outboundQueue	services/inputflinger/InputDispatcher.h	/^        Queue<DispatchEntry> outboundQueue;$/;"	m	class:android::InputDispatcher::Connection
outbufAcquireFence	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        sp<Fence> outbufAcquireFence;$/;"	m	struct:android::HWComposer::DisplayData
outbufHandle	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        buffer_handle_t outbufHandle;$/;"	m	struct:android::HWComposer::DisplayData
overlapBlendCoverage	opengl/tests/hwc/hwcCommit.cpp	/^    vector<uint32_t> overlapBlendCoverage;$/;"	m	struct:meas	file:
overlapBlendNone	opengl/tests/hwc/hwcCommit.cpp	/^    vector<uint32_t> overlapBlendNone;$/;"	m	struct:meas	file:
overlapBlendPremult	opengl/tests/hwc/hwcCommit.cpp	/^    vector<uint32_t> overlapBlendPremult;$/;"	m	struct:meas	file:
overlayKeyMap	services/inputflinger/EventHub.h	/^        sp<KeyCharacterMap> overlayKeyMap;$/;"	m	struct:android::EventHub::Device
overrideSymbolName	opengl/tools/glgen2/glgen.py	/^def overrideSymbolName(sym):$/;"	f
ownData	include/ui/GraphicBuffer.h	/^        ownData   = 2,$/;"	e	enum:android::GraphicBuffer::__anon95
ownHandle	include/ui/GraphicBuffer.h	/^        ownHandle = 1,$/;"	e	enum:android::GraphicBuffer::__anon95
ownNone	include/ui/GraphicBuffer.h	/^        ownNone   = 0,$/;"	e	enum:android::GraphicBuffer::__anon95
ownerPid	services/inputflinger/InputWindow.h	/^    int32_t ownerPid;$/;"	m	struct:android::InputWindowInfo
ownerUid	services/inputflinger/InputWindow.h	/^    int32_t ownerUid;$/;"	m	struct:android::InputWindowInfo
p	include/ui/vec3.h	/^        struct { T s, t, p; };$/;"	m	struct:android::tvec3::__anon89::__anon91
p	include/ui/vec4.h	/^        struct { T s, t, p, q; };$/;"	m	struct:android::tvec4::__anon96::__anon98
p	opengl/tools/glgen2/registry/genheaders.py	/^    p = pstats.Stats('profile.txt')$/;"	v
pAppPrivate	include/media/hardware/HardwareAPI.h	/^    OMX_PTR pAppPrivate;$/;"	m	struct:android::UseAndroidNativeBufferParams
pAppPrivate	include/media/openmax/OMX_Core.h	/^    OMX_PTR pAppPrivate;        \/**< pointer to any data the application$/;"	m	struct:OMX_BUFFERHEADERTYPE
pApplicationPrivate	include/media/openmax/OMX_Component.h	/^    OMX_PTR pApplicationPrivate;$/;"	m	struct:OMX_COMPONENTTYPE
pBuffer	include/media/openmax/OMX_Core.h	/^    OMX_U8* pBuffer;            \/**< Pointer to actual block of memory$/;"	m	struct:OMX_BUFFERHEADERTYPE
pClientPrivate	include/media/openmax/OMX_Other.h	/^    OMX_PTR pClientPrivate;     \/**< Client private data to disabiguate this media time$/;"	m	struct:OMX_TIME_CONFIG_MEDIATIMEREQUESTTYPE
pComponentPrivate	include/media/openmax/OMX_Component.h	/^    OMX_PTR pComponentPrivate;$/;"	m	struct:OMX_COMPONENTTYPE
pDLSData	include/media/openmax/OMX_Audio.h	/^    OMX_PTR pDLSData;         \/**< Pointer to DLS file data *\/$/;"	m	struct:OMX_AUDIO_PARAM_MIDILOADUSERSOUNDTYPE
pData	opengl/include/EGL/eglext.h	/^	void*		pData;$/;"	m	struct:EGLClientPixmapHI
pFlag	opengl/tests/hwc/hwcStress.cpp	/^bool eFlag, sFlag, pFlag;$/;"	v
pHandle	include/media/hardware/HardwareAPI.h	/^  buffer_handle_t pHandle;$/;"	m	struct:android::VideoDecoderOutputMetaData
pInitialize	include/media/openmax/OMX_Core.h	/^  OMX_COMPONENTINITTYPE pInitialize; \/* Component instance initialization function *\/$/;"	m	struct:OMX_COMPONENTREGISTERTYPE
pInputPortPrivate	include/media/openmax/OMX_Core.h	/^    OMX_PTR pInputPortPrivate;  \/**< pointer to any data the input port$/;"	m	struct:OMX_BUFFERHEADERTYPE
pMarkData	include/media/openmax/OMX_Core.h	/^    OMX_PTR pMarkData;          \/**< Application specific data associated with$/;"	m	struct:OMX_BUFFERHEADERTYPE
pMarkData	include/media/openmax/OMX_Types.h	/^    OMX_PTR pMarkData;   \/**< Application specific data associated with$/;"	m	struct:OMX_MARKTYPE
pName	include/media/openmax/OMX_Core.h	/^  const char          * pName;       \/* Component name, 128 byte limit (including '\\0') applies *\/$/;"	m	struct:OMX_COMPONENTREGISTERTYPE
pNativeRender	include/media/openmax/OMX_Audio.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender; \/** < platform specific reference$/;"	m	struct:OMX_AUDIO_PORTDEFINITIONTYPE
pNativeRender	include/media/openmax/OMX_Image.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
pNativeRender	include/media/openmax/OMX_Video.h	/^    OMX_NATIVE_DEVICETYPE pNativeRender;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
pNativeWindow	include/media/openmax/OMX_Image.h	/^    OMX_NATIVE_WINDOWTYPE pNativeWindow;$/;"	m	struct:OMX_IMAGE_PORTDEFINITIONTYPE
pNativeWindow	include/media/openmax/OMX_Video.h	/^    OMX_NATIVE_WINDOWTYPE pNativeWindow;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
pOutputPortPrivate	include/media/openmax/OMX_Core.h	/^    OMX_PTR pOutputPortPrivate; \/**< pointer to any data the output port$/;"	m	struct:OMX_BUFFERHEADERTYPE
pPlatformPrivate	include/media/openmax/OMX_Core.h	/^    OMX_PTR pPlatformPrivate;   \/**< pointer to any data the platform$/;"	m	struct:OMX_BUFFERHEADERTYPE
pSidebandWindow	include/media/hardware/HardwareAPI.h	/^    OMX_PTR pSidebandWindow;    \/\/ OUT$/;"	m	struct:android::ConfigureVideoTunnelModeParams
pTYPE	services/sensorservice/mat.h	/^    typedef typename TypeTraits<TYPE>::ParameterType pTYPE;$/;"	t	class:android::mat
pTYPE	services/sensorservice/vec.h	/^    typedef typename TypeTraits<TYPE>::ParameterType pTYPE;$/;"	t	class:android::vec
packAlignment	opengl/libagl/context.h	/^    uint8_t             packAlignment;$/;"	m	struct:android::gl::texture_state_t
pad	opengl/libagl/context.h	/^    GLboolean       pad;$/;"	m	struct:android::gl::array_t
padding	include/input/InputTransport.h	/^        uint32_t padding;$/;"	m	struct:android::InputMessage::Header
parent	cmds/installd/installd.h	/^    struct cache_dir_struct* parent;$/;"	m	struct:cache_dir_struct	typeref:struct:cache_dir_struct::cache_dir_struct
parse	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::Parser::parse() {$/;"	f	class:android::KeyCharacterMap::Parser
parse	libs/input/KeyLayoutMap.cpp	/^status_t KeyLayoutMap::Parser::parse() {$/;"	f	class:android::KeyLayoutMap::Parser
parse	libs/input/VirtualKeyMap.cpp	/^status_t VirtualKeyMap::Parser::parse() {$/;"	f	class:android::VirtualKeyMap::Parser
parseAllSpecs	opengl/libs/GLES_trace/tools/genapi.py	/^def parseAllSpecs(specs):$/;"	f
parseArgs	opengl/libs/GLES_trace/tools/genapi.py	/^def parseArgs(arglist):$/;"	f
parseAxis	libs/input/KeyLayoutMap.cpp	/^status_t KeyLayoutMap::Parser::parseAxis() {$/;"	f	class:android::KeyLayoutMap::Parser
parseCFunc	opengl/tools/glgen/src/CFunc.java	/^    public static CFunc parseCFunc(String s) {$/;"	m	class:CFunc
parseCalibration	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::parseCalibration() {$/;"	f	class:android::TouchInputMapper
parseCallSite	opengl/libs/GLES_trace/tools/genapi.py	/^    def parseCallSite(self, callsite):$/;"	m	class:ApiCall
parseCharacterLiteral	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::Parser::parseCharacterLiteral(char16_t* outCharacter) {$/;"	f	class:android::KeyCharacterMap::Parser
parseGlesVersion	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceContext::parseGlesVersion() {$/;"	f	class:android::gltrace::GLTraceContext
parseGlesVersion	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^RenderEngine::GlesVersion RenderEngine::parseGlesVersion(const char* str) {$/;"	f	class:android::RenderEngine
parseKey	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::Parser::parseKey() {$/;"	f	class:android::KeyCharacterMap::Parser
parseKey	libs/input/KeyLayoutMap.cpp	/^status_t KeyLayoutMap::Parser::parseKey() {$/;"	f	class:android::KeyLayoutMap::Parser
parseKeyProperty	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::Parser::parseKeyProperty() {$/;"	f	class:android::KeyCharacterMap::Parser
parseLed	libs/input/KeyLayoutMap.cpp	/^status_t KeyLayoutMap::Parser::parseLed() {$/;"	f	class:android::KeyLayoutMap::Parser
parseMap	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::Parser::parseMap() {$/;"	f	class:android::KeyCharacterMap::Parser
parseMapKey	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::Parser::parseMapKey() {$/;"	f	class:android::KeyCharacterMap::Parser
parseModifier	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::Parser::parseModifier(const String8& token, int32_t* outMetaState) {$/;"	f	class:android::KeyCharacterMap::Parser
parseNextIntField	libs/input/VirtualKeyMap.cpp	/^bool VirtualKeyMap::Parser::parseNextIntField(int32_t* outValue) {$/;"	f	class:android::VirtualKeyMap::Parser
parseRect	opengl/tests/hwc/hwcRects.cpp	/^static Rectangle parseRect(string rectStr)$/;"	f	file:
parseTree	opengl/tools/glgen2/registry/reg.py	/^    def parseTree(self):$/;"	m	class:Registry
parseType	libs/input/KeyCharacterMap.cpp	/^status_t KeyCharacterMap::Parser::parseType() {$/;"	f	class:android::KeyCharacterMap::Parser
parseTypedName	opengl/tools/glgen2/glgen.py	/^def parseTypedName(elem):$/;"	f
passesPerGroup	opengl/tests/hwc/hwcStress.cpp	/^const unsigned int passesPerGroup = 10; \/\/ A group of passes all use the same$/;"	v
path	cmds/atrace/atrace.cpp	/^        const char* path;$/;"	m	struct:TracingCategory::__anon3	file:
path	cmds/installd/installd.h	/^    char* path;$/;"	m	struct:__anon9
path	cmds/rawbu/backup.cpp	/^    const char* path;$/;"	m	struct:android::special_dir	file:
path	services/inputflinger/EventHub.h	/^        const String8 path;$/;"	m	struct:android::EventHub::Device
paused	services/inputflinger/InputWindow.h	/^    bool paused;$/;"	m	struct:android::InputWindowInfo
pbuffer	opengl/libagl/egl.cpp	/^    GGLSurface  pbuffer;$/;"	m	struct:android::egl_pbuffer_surface_t	file:
peekTransactionFlags	services/surfaceflinger/SurfaceFlinger.cpp	/^uint32_t SurfaceFlinger::peekTransactionFlags(uint32_t \/* flags *\/) {$/;"	f	class:android::SurfaceFlinger
pendingForegroundDispatches	services/inputflinger/InputDispatcher.h	/^        int32_t pendingForegroundDispatches; \/\/ the number of foreground dispatches in progress$/;"	m	struct:android::InputDispatcher::InjectionState
perSetDelay	opengl/tests/hwc/hwcStress.cpp	/^static float perSetDelay = defaultPerSetDelay;$/;"	v	file:
perform	libs/gui/Surface.cpp	/^int Surface::perform(int operation, va_list args)$/;"	f	class:android::Surface
perform	libs/ui/FramebufferNativeWindow.cpp	/^int FramebufferNativeWindow::perform(ANativeWindow* \/*window*\/,$/;"	f	class:android::FramebufferNativeWindow
perspective	opengl/libagl/context.h	/^    uint32_t                perspective : 1;$/;"	m	struct:android::gl::ogles_context_t
perspective	opengl/libagl/context.h	/^    void (*perspective)(ogles_context_t*c, vertex_t* v);$/;"	m	struct:android::gl::array_machine_t
perspective	opengl/libagl/vertex.cpp	/^void perspective(ogles_context_t* c, vertex_t* v, uint32_t enables)$/;"	f	namespace:android
pgm	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^int pgm;$/;"	v
physicalBottom	services/inputflinger/InputReader.h	/^    int32_t physicalBottom;$/;"	m	struct:android::DisplayViewport
physicalLeft	services/inputflinger/InputReader.h	/^    int32_t physicalLeft;$/;"	m	struct:android::DisplayViewport
physicalRight	services/inputflinger/InputReader.h	/^    int32_t physicalRight;$/;"	m	struct:android::DisplayViewport
physicalTop	services/inputflinger/InputReader.h	/^    int32_t physicalTop;$/;"	m	struct:android::DisplayViewport
physical_pointer	opengl/libagl/context.h	/^    GLvoid const*   physical_pointer;$/;"	m	struct:android::gl::array_t
picker	opengl/libagl/matrix.cpp	/^void mvui_transform_t::picker()$/;"	f	class:android::mvui_transform_t
picker	opengl/libagl/matrix.cpp	/^void transform_t::picker()$/;"	f	class:android::transform_t
pingBinder	libs/binder/Binder.cpp	/^status_t BBinder::pingBinder()$/;"	f	class:android::BBinder
pingBinder	libs/binder/BpBinder.cpp	/^status_t BpBinder::pingBinder()$/;"	f	class:android::BpBinder
pitch	include/android/sensor.h	/^            float pitch;$/;"	m	struct:ASensorVector::__anon180::__anon182
pixelFormatInfo	include/ui/DisplayInfo.h	/^    PixelFormatInfo pixelFormatInfo;$/;"	m	struct:android::DisplayInfo
pixelFormatTable	opengl/libagl/egl.cpp	/^    GGLFormat const* pixelFormatTable;$/;"	m	struct:android::egl_window_surface_v2_t	file:
plane	opengl/libagl/context.h	/^    clip_plane_t    plane[OGLES_MAX_CLIP_PLANES];$/;"	m	struct:android::gl::user_clip_planes_t
point	opengl/libagl/context.h	/^    point_size_t            point;$/;"	m	struct:android::gl::ogles_context_t
point2	opengl/libagl/context.h	/^            void (*point2)(transform_t const* t, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::transform_t::__anon225::__anon226
point2__generic	opengl/libagl/matrix.cpp	/^void point2__generic(transform_t const* mx, vec4_t* lhs, vec4_t const* rhs) {$/;"	f	namespace:android
point2__nop	opengl/libagl/matrix.cpp	/^void point2__nop(transform_t const*, vec4_t* lhs, vec4_t const* rhs) {$/;"	f	namespace:android
point3	opengl/libagl/context.h	/^            void (*point3)(transform_t const* t, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::transform_t::__anon225::__anon226
point3__generic	opengl/libagl/matrix.cpp	/^void point3__generic(transform_t const* mx, vec4_t* lhs, vec4_t const* rhs) {$/;"	f	namespace:android
point3__mvui	opengl/libagl/matrix.cpp	/^void point3__mvui(transform_t const* mx, vec4_t* lhs, vec4_t const* rhs) {$/;"	f	namespace:android
point3__nop	opengl/libagl/matrix.cpp	/^void point3__nop(transform_t const*, vec4_t* lhs, vec4_t const* rhs) {$/;"	f	namespace:android
point4	opengl/libagl/context.h	/^            void (*point4)(transform_t const* t, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::transform_t::__anon225::__anon226
point4__generic	opengl/libagl/matrix.cpp	/^void point4__generic(transform_t const* mx, vec4_t* lhs, vec4_t const* rhs) {$/;"	f	namespace:android
point4__mvui	opengl/libagl/matrix.cpp	/^void point4__mvui(transform_t const* mx, vec4_t* lhs, vec4_t const* rhs) {$/;"	f	namespace:android
point4__nop	opengl/libagl/matrix.cpp	/^void point4__nop(transform_t const*, vec4_t* lhs, vec4_t const* rhs) {$/;"	f	namespace:android
point_size_t	opengl/libagl/context.h	/^struct point_size_t {$/;"	s	namespace:android::gl
pointer	libs/binder/IMemory.cpp	/^void* IMemory::pointer() const {$/;"	f	class:android::IMemory
pointer	opengl/libagl/context.h	/^    GLvoid const*   pointer;$/;"	m	struct:android::gl::array_t
pointerCoords	services/inputflinger/InputDispatcher.h	/^            PointerCoords pointerCoords[MAX_POINTERS];$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
pointerCoords	services/inputflinger/InputDispatcher.h	/^        PointerCoords pointerCoords[MAX_POINTERS];$/;"	m	struct:android::InputDispatcher::MotionEntry
pointerCoords	services/inputflinger/InputListener.h	/^    PointerCoords pointerCoords[MAX_POINTERS];$/;"	m	struct:android::NotifyMotionArgs
pointerCoords	services/inputflinger/InputReader.h	/^    PointerCoords pointerCoords[MAX_POINTERS];$/;"	m	struct:android::CookedPointerData
pointerCoordsForId	services/inputflinger/InputReader.h	/^    inline const PointerCoords& pointerCoordsForId(uint32_t id) const {$/;"	f	struct:android::CookedPointerData
pointerCount	include/input/InputTransport.h	/^            uint32_t pointerCount;$/;"	m	struct:android::InputMessage::Body::Motion
pointerCount	services/inputflinger/InputDispatcher.h	/^            uint32_t pointerCount;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
pointerCount	services/inputflinger/InputDispatcher.h	/^        uint32_t pointerCount;$/;"	m	struct:android::InputDispatcher::MotionEntry
pointerCount	services/inputflinger/InputListener.h	/^    uint32_t pointerCount;$/;"	m	struct:android::NotifyMotionArgs
pointerCount	services/inputflinger/InputReader.h	/^    uint32_t pointerCount;$/;"	m	struct:android::CookedPointerData
pointerCount	services/inputflinger/InputReader.h	/^    uint32_t pointerCount;$/;"	m	struct:android::RawPointerData
pointerForId	services/inputflinger/InputReader.h	/^    inline const Pointer& pointerForId(uint32_t id) const {$/;"	f	struct:android::RawPointerData
pointerGestureDragMinSwitchSpeed	services/inputflinger/InputReader.h	/^    float pointerGestureDragMinSwitchSpeed; \/\/ in pixels per second$/;"	m	struct:android::InputReaderConfiguration
pointerGestureMovementSpeedRatio	services/inputflinger/InputReader.h	/^    float pointerGestureMovementSpeedRatio;$/;"	m	struct:android::InputReaderConfiguration
pointerGestureMultitouchMinDistance	services/inputflinger/InputReader.h	/^    float pointerGestureMultitouchMinDistance; \/\/ in pixels$/;"	m	struct:android::InputReaderConfiguration
pointerGestureMultitouchSettleInterval	services/inputflinger/InputReader.h	/^    nsecs_t pointerGestureMultitouchSettleInterval;$/;"	m	struct:android::InputReaderConfiguration
pointerGestureQuietInterval	services/inputflinger/InputReader.h	/^    nsecs_t pointerGestureQuietInterval;$/;"	m	struct:android::InputReaderConfiguration
pointerGestureSwipeMaxWidthRatio	services/inputflinger/InputReader.h	/^    float pointerGestureSwipeMaxWidthRatio;$/;"	m	struct:android::InputReaderConfiguration
pointerGestureSwipeTransitionAngleCosine	services/inputflinger/InputReader.h	/^    float pointerGestureSwipeTransitionAngleCosine;$/;"	m	struct:android::InputReaderConfiguration
pointerGestureTapDragInterval	services/inputflinger/InputReader.h	/^    nsecs_t pointerGestureTapDragInterval;$/;"	m	struct:android::InputReaderConfiguration
pointerGestureTapInterval	services/inputflinger/InputReader.h	/^    nsecs_t pointerGestureTapInterval;$/;"	m	struct:android::InputReaderConfiguration
pointerGestureTapSlop	services/inputflinger/InputReader.h	/^    float pointerGestureTapSlop; \/\/ in pixels$/;"	m	struct:android::InputReaderConfiguration
pointerGestureZoomSpeedRatio	services/inputflinger/InputReader.h	/^    float pointerGestureZoomSpeedRatio;$/;"	m	struct:android::InputReaderConfiguration
pointerGesturesEnabled	services/inputflinger/InputReader.h	/^    bool pointerGesturesEnabled;$/;"	m	struct:android::InputReaderConfiguration
pointerIds	services/inputflinger/InputDispatcher.h	/^        BitSet32 pointerIds;        \/\/ zero unless target flag FLAG_SPLIT is set$/;"	m	struct:android::InputDispatcher::TouchedWindow
pointerIds	services/inputflinger/InputDispatcher.h	/^    BitSet32 pointerIds;$/;"	m	struct:android::InputTarget
pointerProperties	services/inputflinger/InputDispatcher.h	/^            PointerProperties pointerProperties[MAX_POINTERS];$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
pointerProperties	services/inputflinger/InputDispatcher.h	/^        PointerProperties pointerProperties[MAX_POINTERS];$/;"	m	struct:android::InputDispatcher::MotionEntry
pointerProperties	services/inputflinger/InputListener.h	/^    PointerProperties pointerProperties[MAX_POINTERS];$/;"	m	struct:android::NotifyMotionArgs
pointerProperties	services/inputflinger/InputReader.h	/^    PointerProperties pointerProperties[MAX_POINTERS];$/;"	m	struct:android::CookedPointerData
pointerVelocityControlParameters	services/inputflinger/InputReader.h	/^    VelocityControlParameters pointerVelocityControlParameters;$/;"	m	struct:android::InputReaderConfiguration
pointers	include/input/InputTransport.h	/^            } pointers[MAX_POINTERS];$/;"	m	struct:android::InputMessage::Body::Motion	typeref:struct:android::InputMessage::Body::Motion::Pointer
pointers	include/input/InputTransport.h	/^        PointerCoords pointers[MAX_POINTERS];$/;"	m	struct:android::InputConsumer::History
pointers	services/inputflinger/InputReader.h	/^    Pointer pointers[MAX_POINTERS];$/;"	m	struct:android::RawPointerData
pointv	opengl/libagl/context.h	/^        void (*pointv[3])(transform_t const* t, vec4_t*, vec4_t const*);$/;"	m	union:android::gl::transform_t::__anon225
pokeBinderServices	cmds/atrace/atrace.cpp	/^static bool pokeBinderServices()$/;"	f	file:
pokeUserActivity	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual void pokeUserActivity(nsecs_t eventTime, int32_t eventType) {$/;"	f	class:android::FakeInputDispatcherPolicy	file:
pokeUserActivityLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::pokeUserActivityLocked(const EventEntry* eventEntry) {$/;"	f	class:android::InputDispatcher
policyFlags	services/inputflinger/InputDispatcher.h	/^            uint32_t policyFlags;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
policyFlags	services/inputflinger/InputDispatcher.h	/^            uint32_t policyFlags;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
policyFlags	services/inputflinger/InputDispatcher.h	/^        uint32_t policyFlags;$/;"	m	struct:android::InputDispatcher::EventEntry
policyFlags	services/inputflinger/InputListener.h	/^    uint32_t policyFlags;$/;"	m	struct:android::NotifyKeyArgs
policyFlags	services/inputflinger/InputListener.h	/^    uint32_t policyFlags;$/;"	m	struct:android::NotifyMotionArgs
policyFlags	services/inputflinger/InputListener.h	/^    uint32_t policyFlags;$/;"	m	struct:android::NotifySwitchArgs
poll	services/sensorservice/SensorDevice.cpp	/^ssize_t SensorDevice::poll(sensors_event_t* buffer, size_t count) {$/;"	f	class:android::SensorDevice
polygonOffset	opengl/libagl/context.h	/^    polygon_offset_t        polygonOffset;$/;"	m	struct:android::gl::ogles_context_t
polygon_offset_t	opengl/libagl/context.h	/^struct polygon_offset_t {$/;"	s	namespace:android::gl
pop	opengl/libagl/matrix.cpp	/^GLint matrix_stack_t::pop()$/;"	f	class:android::matrix_stack_t
popBundle	libs/binder/BufferedTextOutput.cpp	/^void BufferedTextOutput::popBundle()$/;"	f	class:android::BufferedTextOutput
populateActiveConnections	services/sensorservice/SensorService.cpp	/^void SensorService::populateActiveConnections($/;"	f	class:android::SensorService
populateDeviceInfo	services/inputflinger/InputReader.cpp	/^void CursorInputMapper::populateDeviceInfo(InputDeviceInfo* info) {$/;"	f	class:android::CursorInputMapper
populateDeviceInfo	services/inputflinger/InputReader.cpp	/^void InputMapper::populateDeviceInfo(InputDeviceInfo* info) {$/;"	f	class:android::InputMapper
populateDeviceInfo	services/inputflinger/InputReader.cpp	/^void JoystickInputMapper::populateDeviceInfo(InputDeviceInfo* info) {$/;"	f	class:android::JoystickInputMapper
populateDeviceInfo	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::populateDeviceInfo(InputDeviceInfo* info) {$/;"	f	class:android::KeyboardInputMapper
populateDeviceInfo	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::populateDeviceInfo(InputDeviceInfo* info) {$/;"	f	class:android::TouchInputMapper
populateDeviceInfo	services/inputflinger/InputReader.cpp	/^void VibratorInputMapper::populateDeviceInfo(InputDeviceInfo* info) {$/;"	f	class:android::VibratorInputMapper
populateDeviceInfo	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void populateDeviceInfo(InputDeviceInfo* deviceInfo) {$/;"	f	class:android::FakeInputMapper	file:
populateEstimator	libs/input/VelocityTracker.cpp	/^void IntegratingVelocityTrackerStrategy::populateEstimator(const State& state,$/;"	f	class:android::IntegratingVelocityTrackerStrategy
position	opengl/libagl/context.h	/^    vec4_t      position;       \/\/ position in eye space$/;"	m	struct:android::gl::light_t
position	services/surfaceflinger/RenderEngine/Program.h	/^    enum { position=0, texCoords=1 };$/;"	e	enum:android::Program::__anon32
positionID	opengl/tools/glgen/stubs/gles11/common.cpp	/^static jfieldID positionID;$/;"	v	file:
positionID	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^static jfieldID positionID;$/;"	v	file:
positions	include/input/VelocityTracker.h	/^        VelocityTracker::Position positions[MAX_POINTERS];$/;"	m	struct:android::LeastSquaresVelocityTrackerStrategy::Movement
positions	include/input/VelocityTracker.h	/^        VelocityTracker::Position positions[MAX_POINTERS];$/;"	m	struct:android::LegacyVelocityTrackerStrategy::Movement
postCommandLocked	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::CommandEntry* InputDispatcher::postCommandLocked(Command command) {$/;"	f	class:android::InputDispatcher
postComposition	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::postComposition()$/;"	f	class:android::SurfaceFlinger
postEvent	services/surfaceflinger/EventThread.cpp	/^status_t EventThread::Connection::postEvent($/;"	f	class:android::EventThread::Connection
postFramebuffer	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::postFramebuffer()$/;"	f	class:android::SurfaceFlinger
postMessage	services/surfaceflinger/MessageQueue.cpp	/^status_t MessageQueue::postMessage($/;"	f	class:android::MessageQueue
postMessageAsync	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::postMessageAsync(const sp<MessageBase>& msg,$/;"	f	class:android::SurfaceFlinger
postMessageSync	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::postMessageSync(const sp<MessageBase>& msg,$/;"	f	class:android::SurfaceFlinger
powerHint	services/powermanager/IPowerManager.cpp	/^    virtual status_t powerHint(int hintId, int param)$/;"	f	class:android::BpPowerManager
preComposition	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::preComposition()$/;"	f	class:android::SurfaceFlinger
predict	services/sensorservice/Fusion.cpp	/^void Fusion::predict(const vec3_t& w, float dT) {$/;"	f	class:android::Fusion
prefixStrings	opengl/tools/glgen2/registry/genheaders.py	/^prefixStrings = [$/;"	v
prepare	include/private/ui/RegionHelper.h	/^        inline void prepare(int inside) {$/;"	f	class:android::region_operator::SpannerInner
prepare	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::prepare() {$/;"	f	class:android::HWComposer
prepareAxes	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::prepareAxes(int axes) {$/;"	f	class:android::MultiTouchInputMapperTest
prepareAxes	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::prepareAxes(int axes) {$/;"	f	class:android::SingleTouchInputMapperTest
prepareButtons	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::prepareButtons() {$/;"	f	class:android::SingleTouchInputMapperTest
prepareComposition	cmds/flatland/Main.cpp	/^    bool prepareComposition() {$/;"	f	class:Layer
prepareDispatchCycleLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::prepareDispatchCycleLocked(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher
prepareDisplay	services/inputflinger/tests/InputReader_test.cpp	/^void TouchInputMapperTest::prepareDisplay(int32_t orientation) {$/;"	f	class:android::TouchInputMapperTest
prepareFrame	opengl/tests/angeles/demo.c	/^static void prepareFrame(int width, int height)$/;"	f	file:
prepareFrame	services/surfaceflinger/DisplayDevice.cpp	/^status_t DisplayDevice::prepareFrame(const HWComposer& hwc) const {$/;"	f	class:DisplayDevice
prepareFrame	services/surfaceflinger/DisplayHardware/FramebufferSurface.cpp	/^status_t FramebufferSurface::prepareFrame(CompositionType \/*compositionType*\/) {$/;"	f	class:android::FramebufferSurface
prepareFrame	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::prepareFrame(CompositionType compositionType) {$/;"	f	class:android::VirtualDisplaySurface
prepareLocationCalibration	services/inputflinger/tests/InputReader_test.cpp	/^void TouchInputMapperTest::prepareLocationCalibration() {$/;"	f	class:android::TouchInputMapperTest
preparePointerGestures	services/inputflinger/InputReader.cpp	/^bool TouchInputMapper::preparePointerGestures(nsecs_t when,$/;"	f	class:android::TouchInputMapper
prepareVirtualKeys	services/inputflinger/tests/InputReader_test.cpp	/^void TouchInputMapperTest::prepareVirtualKeys() {$/;"	f	class:android::TouchInputMapperTest
presentationDeadline	include/ui/DisplayInfo.h	/^    nsecs_t presentationDeadline;$/;"	m	struct:android::DisplayInfo
preserveRects	services/surfaceflinger/Transform.cpp	/^bool Transform::preserveRects() const$/;"	f	class:android::Transform
pressure	include/android/sensor.h	/^            float           pressure;$/;"	m	union:ASensorEvent::__anon187::__anon188
pressure	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange pressure;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
pressure	services/inputflinger/InputReader.h	/^        int32_t pressure;$/;"	m	struct:android::RawPointerData::Pointer
pressure	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo pressure;$/;"	m	struct:android::RawPointerAxes
pressureCalibration	services/inputflinger/InputReader.h	/^        PressureCalibration pressureCalibration;$/;"	m	struct:android::TouchInputMapper::Calibration
pressureScale	services/inputflinger/InputReader.h	/^        float pressureScale;$/;"	m	struct:android::TouchInputMapper::Calibration
prev	libs/binder/MemoryDealer.cpp	/^        mutable chunk_t*    prev;$/;"	m	struct:android::SimpleBestFitAllocator::chunk_t	file:
prev	services/inputflinger/InputDispatcher.h	/^        T* prev;$/;"	m	struct:android::InputDispatcher::Link
prev_comp_map	services/surfaceflinger/DisplayHardware/HWComposer.h	/^    CompMap prev_comp_map[MAX_HWC_DISPLAYS], current_comp_map[MAX_HWC_DISPLAYS];$/;"	m	class:android::HWComposer
previousBuffer	opengl/libagl/egl.cpp	/^    ANativeWindowBuffer*   previousBuffer;$/;"	m	struct:android::egl_window_surface_v2_t	file:
primeCache	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^void ProgramCache::primeCache() {$/;"	f	class:android::ProgramCache
primitive_clip_triangle	opengl/libagl/primitives.cpp	/^void primitive_clip_triangle(ogles_context_t* c,$/;"	f	namespace:android
primitive_line	opengl/libagl/primitives.cpp	/^void primitive_line(ogles_context_t* c, vertex_t* v0, vertex_t* v1)$/;"	f	namespace:android
primitive_nop_line	opengl/libagl/primitives.cpp	/^void primitive_nop_line(ogles_context_t*, vertex_t*, vertex_t*) {$/;"	f	namespace:android
primitive_nop_point	opengl/libagl/primitives.cpp	/^void primitive_nop_point(ogles_context_t*, vertex_t*) {$/;"	f	namespace:android
primitive_nop_triangle	opengl/libagl/primitives.cpp	/^void primitive_nop_triangle(ogles_context_t* \/*c*\/,$/;"	f	namespace:android
primitive_point	opengl/libagl/primitives.cpp	/^void primitive_point(ogles_context_t* c, vertex_t* v)$/;"	f	namespace:android
prims	opengl/libagl/context.h	/^    prims_t                 prims;$/;"	m	struct:android::gl::ogles_context_t
prims_t	opengl/libagl/context.h	/^struct prims_t {$/;"	s	namespace:android::gl
print	libs/binder/BufferedTextOutput.cpp	/^status_t BufferedTextOutput::print(const char* txt, size_t len)$/;"	f	class:android::BufferedTextOutput
print	libs/binder/Parcel.cpp	/^void Parcel::print(TextOutput& to, uint32_t \/*flags*\/) const$/;"	f	class:android::Parcel
printBinderTransactionData	libs/binder/IPCThreadState.cpp	/^static const void* printBinderTransactionData(TextOutput& out, const void* data)$/;"	f	namespace:android
printCommand	libs/binder/IPCThreadState.cpp	/^static const void* printCommand(TextOutput& out, const void* _cmd)$/;"	f	namespace:android
printConfig	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        private void printConfig(EGL10 egl, EGLDisplay display,$/;"	m	class:GL2JNIView.ConfigChooser	file:
printConfig	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        private void printConfig(EGL10 egl, EGLDisplay display,$/;"	m	class:GLPerfView.ConfigChooser	file:
printConfig	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        private void printConfig(EGL10 egl, EGLDisplay display,$/;"	m	class:GLDualGL2View.ConfigChooser	file:
printConfigs	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        private void printConfigs(EGL10 egl, EGLDisplay display,$/;"	m	class:GL2JNIView.ConfigChooser	file:
printConfigs	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        private void printConfigs(EGL10 egl, EGLDisplay display,$/;"	m	class:GLPerfView.ConfigChooser	file:
printConfigs	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        private void printConfigs(EGL10 egl, EGLDisplay display,$/;"	m	class:GLDualGL2View.ConfigChooser	file:
printEGLConfiguration	opengl/tests/gl2_basic/gl2_basic.cpp	/^void printEGLConfiguration(EGLDisplay dpy, EGLConfig config) {$/;"	f
printEGLConfiguration	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^void printEGLConfiguration(EGLDisplay dpy, EGLConfig config) {$/;"	f
printEGLConfiguration	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^void printEGLConfiguration(EGLDisplay dpy, EGLConfig config) {$/;"	f
printEGLConfiguration	opengl/tests/gl_basic/gl_basic.cpp	/^void printEGLConfiguration(EGLDisplay dpy, EGLConfig config) {$/;"	f
printEGLConfiguration	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^void printEGLConfiguration(EGLDisplay dpy, EGLConfig config) {$/;"	f
printEGLConfiguration	opengl/tests/hwc/hwcTestLib.cpp	/^static void printEGLConfiguration(EGLDisplay dpy, EGLConfig config)$/;"	f	file:
printEGLConfigurations	opengl/tests/gl2_basic/gl2_basic.cpp	/^int printEGLConfigurations(EGLDisplay dpy) {$/;"	f
printEGLConfigurations	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^int printEGLConfigurations(EGLDisplay dpy) {$/;"	f
printEGLConfigurations	opengl/tests/gl_basic/gl_basic.cpp	/^int printEGLConfigurations(EGLDisplay dpy) {$/;"	f
printFieldWidth	opengl/tests/hwc/hwcCommit.cpp	/^const uint32_t printFieldWidth = 2;$/;"	v
printFormatHeadings	opengl/tests/hwc/hwcCommit.cpp	/^void printFormatHeadings(size_t indent)$/;"	f
printGLString	opengl/tests/gl2_basic/gl2_basic.cpp	/^static void printGLString(const char *name, GLenum s) {$/;"	f	file:
printGLString	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^static void printGLString(const char *name, GLenum s) {$/;"	f	file:
printGLString	opengl/tests/gl2_jni/jni/gl_code.cpp	/^static void printGLString(const char *name, GLenum s) {$/;"	f	file:
printGLString	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^static void printGLString(const char *name, GLenum s) {$/;"	f	file:
printGLString	opengl/tests/gl_basic/gl_basic.cpp	/^static void printGLString(const char *name, GLenum s) {$/;"	f	file:
printGLString	opengl/tests/gl_jni/jni/gl_code.cpp	/^static void printGLString(const char *name, GLenum s) {$/;"	f	file:
printGLString	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^static void printGLString(const char *name, GLenum s) {$/;"	f	file:
printGLString	opengl/tests/gldual/jni/gl_code.cpp	/^static void printGLString(const char *name, GLenum s) {$/;"	f	file:
printGLString	opengl/tests/hwc/hwcTestLib.cpp	/^static void printGLString(const char *name, GLenum s)$/;"	f	file:
printHexData	libs/binder/Debug.cpp	/^void printHexData(int32_t indent, const void *buf, size_t length,$/;"	f	namespace:android
printIfcheckPostamble	opengl/tools/glgen/src/JniCodeEmitter.java	/^    void printIfcheckPostamble(PrintStream out, boolean isBuffer, boolean emitExceptionCheck,$/;"	m	class:JniCodeEmitter
printOverlapLine	opengl/tests/hwc/hwcCommit.cpp	/^void printOverlapLine(size_t indent, const string formatStr,$/;"	f
printResultsTableHeader	cmds/flatland/Main.cpp	/^static void printResultsTableHeader() {$/;"	f	file:
printReturnCommand	libs/binder/IPCThreadState.cpp	/^static const void* printReturnCommand(TextOutput& out, const void* _cmd)$/;"	f	namespace:android
printShaderSource	cmds/flatland/GLHelper.cpp	/^static void printShaderSource(const char* const* src) {$/;"	f	namespace:android
printSyntax	opengl/tests/hwc/hwcColorEquiv.cpp	/^void printSyntax(const char *cmd)$/;"	f
printSyntax	opengl/tests/hwc/hwcCommit.cpp	/^void printSyntax(const char *cmd)$/;"	f
printSyntax	opengl/tests/hwc/hwcRects.cpp	/^void printSyntax(const char *cmd)$/;"	f
printTypeCode	libs/binder/Debug.cpp	/^void printTypeCode(uint32_t typeCode, debugPrintFunc func, void* cookie)$/;"	f	namespace:android
print_float	libs/binder/TextOutput.cpp	/^static TextOutput& print_float(TextOutput& to, double value)$/;"	f	namespace:android
print_prop	cmds/dumpstate/utils.c	/^static void print_prop(const char *key, const char *name, void *user) {$/;"	f	file:
print_properties	cmds/dumpstate/utils.c	/^void print_properties() {$/;"	f
probeKeyMap	libs/input/Keyboard.cpp	/^bool KeyMap::probeKeyMap(const InputDeviceIdentifier& deviceIdentifier,$/;"	f	class:android::KeyMap
process	libs/binder/IPCThreadState.cpp	/^sp<ProcessState> IPCThreadState::process()$/;"	f	class:android::IPCThreadState
process	services/inputflinger/InputReader.cpp	/^void CursorButtonAccumulator::process(const RawEvent* rawEvent) {$/;"	f	class:android::CursorButtonAccumulator
process	services/inputflinger/InputReader.cpp	/^void CursorInputMapper::process(const RawEvent* rawEvent) {$/;"	f	class:android::CursorInputMapper
process	services/inputflinger/InputReader.cpp	/^void CursorMotionAccumulator::process(const RawEvent* rawEvent) {$/;"	f	class:android::CursorMotionAccumulator
process	services/inputflinger/InputReader.cpp	/^void CursorScrollAccumulator::process(const RawEvent* rawEvent) {$/;"	f	class:android::CursorScrollAccumulator
process	services/inputflinger/InputReader.cpp	/^void InputDevice::process(const RawEvent* rawEvents, size_t count) {$/;"	f	class:android::InputDevice
process	services/inputflinger/InputReader.cpp	/^void JoystickInputMapper::process(const RawEvent* rawEvent) {$/;"	f	class:android::JoystickInputMapper
process	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::process(const RawEvent* rawEvent) {$/;"	f	class:android::KeyboardInputMapper
process	services/inputflinger/InputReader.cpp	/^void MultiTouchInputMapper::process(const RawEvent* rawEvent) {$/;"	f	class:android::MultiTouchInputMapper
process	services/inputflinger/InputReader.cpp	/^void MultiTouchMotionAccumulator::process(const RawEvent* rawEvent) {$/;"	f	class:android::MultiTouchMotionAccumulator
process	services/inputflinger/InputReader.cpp	/^void SingleTouchInputMapper::process(const RawEvent* rawEvent) {$/;"	f	class:android::SingleTouchInputMapper
process	services/inputflinger/InputReader.cpp	/^void SingleTouchMotionAccumulator::process(const RawEvent* rawEvent) {$/;"	f	class:android::SingleTouchMotionAccumulator
process	services/inputflinger/InputReader.cpp	/^void SwitchInputMapper::process(const RawEvent* rawEvent) {$/;"	f	class:android::SwitchInputMapper
process	services/inputflinger/InputReader.cpp	/^void TouchButtonAccumulator::process(const RawEvent* rawEvent) {$/;"	f	class:android::TouchButtonAccumulator
process	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::process(const RawEvent* rawEvent) {$/;"	f	class:android::TouchInputMapper
process	services/inputflinger/InputReader.cpp	/^void VibratorInputMapper::process(const RawEvent* rawEvent) {$/;"	f	class:android::VibratorInputMapper
process	services/inputflinger/tests/InputReader_test.cpp	/^    static void process(InputMapper* mapper, nsecs_t when, int32_t deviceId, int32_t type,$/;"	f	class:android::InputMapperTest
process	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void process(const RawEvent* rawEvent) {$/;"	f	class:android::FakeInputMapper	file:
process	services/sensorservice/CorrectedGyroSensor.cpp	/^bool CorrectedGyroSensor::process(sensors_event_t* outEvent,$/;"	f	class:android::CorrectedGyroSensor
process	services/sensorservice/GravitySensor.cpp	/^bool GravitySensor::process(sensors_event_t* outEvent,$/;"	f	class:android::GravitySensor
process	services/sensorservice/LinearAccelerationSensor.cpp	/^bool LinearAccelerationSensor::process(sensors_event_t* outEvent,$/;"	f	class:android::LinearAccelerationSensor
process	services/sensorservice/OrientationSensor.cpp	/^bool OrientationSensor::process(sensors_event_t* outEvent,$/;"	f	class:android::OrientationSensor
process	services/sensorservice/RotationVectorSensor.cpp	/^bool GyroDriftSensor::process(sensors_event_t* outEvent,$/;"	f	class:android::GyroDriftSensor
process	services/sensorservice/RotationVectorSensor.cpp	/^bool RotationVectorSensor::process(sensors_event_t* outEvent,$/;"	f	class:android::RotationVectorSensor
process	services/sensorservice/SensorFusion.cpp	/^void SensorFusion::process(const sensors_event_t& event) {$/;"	f	class:android::SensorFusion
process	services/sensorservice/SensorInterface.cpp	/^bool HardwareSensor::process(sensors_event_t* outEvent,$/;"	f	class:android::HardwareSensor
processDistance	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processDistance($/;"	f	class:android::MultiTouchInputMapperTest
processDistance	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::processDistance($/;"	f	class:android::SingleTouchInputMapperTest
processDown	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::processDown(SingleTouchInputMapper* mapper, int32_t x, int32_t y) {$/;"	f	class:android::SingleTouchInputMapperTest
processEventsForDeviceLocked	services/inputflinger/InputReader.cpp	/^void InputReader::processEventsForDeviceLocked(int32_t deviceId,$/;"	f	class:android::InputReader
processEventsLocked	services/inputflinger/InputReader.cpp	/^void InputReader::processEventsLocked(const RawEvent* rawEvents, size_t count) {$/;"	f	class:android::InputReader
processFencesLocked	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::processFencesLocked() const {$/;"	f	class:android::FrameTracker
processId	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processId($/;"	f	class:android::MultiTouchInputMapperTest
processKey	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::processKey(nsecs_t when, bool down, int32_t keyCode,$/;"	f	class:android::KeyboardInputMapper
processKey	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processKey($/;"	f	class:android::MultiTouchInputMapperTest
processKey	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::processKey($/;"	f	class:android::SingleTouchInputMapperTest
processMTSync	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processMTSync(MultiTouchInputMapper* mapper) {$/;"	f	class:android::MultiTouchInputMapperTest
processMove	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::processMove(SingleTouchInputMapper* mapper, int32_t x, int32_t y) {$/;"	f	class:android::SingleTouchInputMapperTest
processOrientation	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processOrientation($/;"	f	class:android::MultiTouchInputMapperTest
processPendingDerefs	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::processPendingDerefs()$/;"	f	class:android::IPCThreadState
processPosition	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processPosition($/;"	f	class:android::MultiTouchInputMapperTest
processPressure	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processPressure($/;"	f	class:android::MultiTouchInputMapperTest
processPressure	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::processPressure($/;"	f	class:android::SingleTouchInputMapperTest
processSlot	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processSlot($/;"	f	class:android::MultiTouchInputMapperTest
processSwitch	services/inputflinger/InputReader.cpp	/^void SwitchInputMapper::processSwitch(int32_t switchCode, int32_t switchValue) {$/;"	f	class:android::SwitchInputMapper
processSync	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processSync(MultiTouchInputMapper* mapper) {$/;"	f	class:android::MultiTouchInputMapperTest
processSync	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::processSync(SingleTouchInputMapper* mapper) {$/;"	f	class:android::SingleTouchInputMapperTest
processTilt	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::processTilt($/;"	f	class:android::SingleTouchInputMapperTest
processToolMajor	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processToolMajor($/;"	f	class:android::MultiTouchInputMapperTest
processToolMajor	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::processToolMajor($/;"	f	class:android::SingleTouchInputMapperTest
processToolMinor	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processToolMinor($/;"	f	class:android::MultiTouchInputMapperTest
processToolType	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processToolType($/;"	f	class:android::MultiTouchInputMapperTest
processTouchMajor	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processTouchMajor($/;"	f	class:android::MultiTouchInputMapperTest
processTouchMinor	services/inputflinger/tests/InputReader_test.cpp	/^void MultiTouchInputMapperTest::processTouchMinor($/;"	f	class:android::MultiTouchInputMapperTest
processUp	services/inputflinger/tests/InputReader_test.cpp	/^void SingleTouchInputMapperTest::processUp(SingleTouchInputMapper* mapper) {$/;"	f	class:android::SingleTouchInputMapperTest
procs	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    callbacks procs;$/;"	m	struct:android::HWComposer::cb_context	file:
produceOneFrame	libs/gui/tests/CpuConsumer_test.cpp	/^void produceOneFrame(const sp<ANativeWindow>& anw,$/;"	f	namespace:android
produceOneRGBA8Frame	libs/gui/tests/FillBuffer.cpp	/^void produceOneRGBA8Frame(const sp<ANativeWindow>& anw) {$/;"	f	namespace:android
product	include/input/InputDevice.h	/^    uint16_t product;$/;"	m	struct:android::InputDeviceIdentifier
profile	opengl/tools/glgen2/registry/genheaders.py	/^            profile = True$/;"	v
profile	opengl/tools/glgen2/registry/genheaders.py	/^profile = False$/;"	v
projection	opengl/libagl/context.h	/^    matrix_stack_t      projection;$/;"	m	struct:android::gl::transform_state_t
propBitmask	services/inputflinger/EventHub.h	/^        uint8_t propBitmask[(INPUT_PROP_MAX + 1) \/ 8];$/;"	m	struct:android::EventHub::Device
properties	include/input/InputTransport.h	/^                PointerProperties properties;$/;"	m	struct:android::InputMessage::Body::Motion::Pointer
property	include/input/KeyCharacterMap.h	/^            int32_t property;$/;"	m	struct:android::KeyCharacterMap::Parser::Property
props	cmds/dumpstate/utils.c	/^static char* props[2000];$/;"	v	file:
protanomaly	services/surfaceflinger/Effects/Daltonizer.h	/^        protanomaly,        \/\/ L (red) cone deficient$/;"	e	enum:android::Daltonizer::ColorBlindnessTypes
protanopia	services/surfaceflinger/Effects/Daltonizer.h	/^        protanopia,         \/\/ L (red) cone missing$/;"	e	enum:android::Daltonizer::ColorBlindnessTypes
protect	opengl/tools/glgen2/registry/genheaders.py	/^            protect = False$/;"	v
protect	opengl/tools/glgen2/registry/genheaders.py	/^protect = True$/;"	v
protectFeature	opengl/tools/glgen2/registry/genheaders.py	/^protectFeature = protect$/;"	v
protectFile	opengl/tools/glgen2/registry/genheaders.py	/^protectFile = protect$/;"	v
protectProto	opengl/tools/glgen2/registry/genheaders.py	/^protectProto = protect$/;"	v
protobuf_AddDesc_gltrace_2eproto	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void protobuf_AddDesc_gltrace_2eproto() {$/;"	f	namespace:android::gltrace
protobuf_ShutdownFile_gltrace_2eproto	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^void protobuf_ShutdownFile_gltrace_2eproto() {$/;"	f	namespace:android::gltrace
pruneAxes	services/inputflinger/InputReader.cpp	/^void JoystickInputMapper::pruneAxes(bool ignoreExplicitlyMappedAxes) {$/;"	f	class:android::JoystickInputMapper
ptSwap	opengl/tests/gl_perf/gl2_perf.cpp	/^void ptSwap() {$/;"	f
ptSwap	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^void ptSwap() {$/;"	f
ptr	cmds/servicemanager/binder.h	/^    void *ptr;$/;"	m	struct:binder_death
publish	include/binder/BinderService.h	/^    static status_t publish(bool allowIsolated = false) {$/;"	f	class:android::BinderService
publishAndJoinThreadPool	include/binder/BinderService.h	/^    static void publishAndJoinThreadPool(bool allowIsolated = false) {$/;"	f	class:android::BinderService
publishKeyEvent	libs/input/InputTransport.cpp	/^status_t InputPublisher::publishKeyEvent($/;"	f	class:android::InputPublisher
publishMotionEvent	libs/input/InputTransport.cpp	/^status_t InputPublisher::publishMotionEvent($/;"	f	class:android::InputPublisher
purge	libs/binder/PermissionCache.cpp	/^void PermissionCache::purge() {$/;"	f	class:android::PermissionCache
push	opengl/libagl/matrix.cpp	/^GLint matrix_stack_t::push()$/;"	f	class:android::matrix_stack_t
pushAllowFds	libs/binder/Parcel.cpp	/^bool Parcel::pushAllowFds(bool allowFds)$/;"	f	class:android::Parcel
pushBundle	libs/binder/BufferedTextOutput.cpp	/^void BufferedTextOutput::pushBundle()$/;"	f	class:android::BufferedTextOutput
putGroup	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::putGroup(Group group) {$/;"	f	class:android::GLES20RenderEngine
q	include/ui/vec4.h	/^        struct { T s, t, p, q; };$/;"	m	struct:android::tvec4::__anon96::__anon98
q	services/sensorservice/vec.h	/^        struct { float s, t, r, q; };$/;"	m	struct:android::vbase::__anon59::__anon61
quatToMatrix	services/sensorservice/quat.h	/^mat<TYPE, 3, 3> quatToMatrix(const vec<TYPE, 4>& q) {$/;"	f	namespace:android
quat_t	services/sensorservice/quat.h	/^typedef vec4_t quat_t;$/;"	t	namespace:android
query	libs/gui/BufferQueueProducer.cpp	/^int BufferQueueProducer::query(int what, int *outValue) {$/;"	f	class:android::BufferQueueProducer
query	libs/gui/IGraphicBufferProducer.cpp	/^    virtual int query(int what, int* value) {$/;"	f	class:android::BpGraphicBufferProducer
query	libs/gui/Surface.cpp	/^int Surface::query(int what, int* value) const {$/;"	f	class:android::Surface
query	libs/ui/FramebufferNativeWindow.cpp	/^int FramebufferNativeWindow::query(const ANativeWindow* window,$/;"	f	class:android::FramebufferNativeWindow
query	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^int VirtualDisplaySurface::query(int what, int* value) {$/;"	f	class:android::VirtualDisplaySurface
query	services/surfaceflinger/MonitoredProducer.cpp	/^int MonitoredProducer::query(int what, int* value) {$/;"	f	class:android::MonitoredProducer
queryDisplayProperties	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::queryDisplayProperties(int disp) {$/;"	f	class:android::HWComposer
queryLocalInterface	include/binder/IInterface.h	/^inline sp<IInterface> BnInterface<INTERFACE>::queryLocalInterface($/;"	f	class:android::BnInterface
queryLocalInterface	libs/binder/Binder.cpp	/^sp<IInterface>  IBinder::queryLocalInterface(const String16& \/*descriptor*\/)$/;"	f	class:android::IBinder
queryString	opengl/libs/EGL/egl_display.h	/^        strings_t   queryString;$/;"	m	struct:android::egl_display_t::DisplayImpl
queueBuffer	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::queueBuffer(int slot,$/;"	f	class:android::BufferQueueProducer
queueBuffer	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t queueBuffer(int buf,$/;"	f	class:android::BpGraphicBufferProducer
queueBuffer	libs/gui/Surface.cpp	/^int Surface::queueBuffer(android_native_buffer_t* buffer, int fenceFd) {$/;"	f	class:android::Surface
queueBuffer	libs/ui/FramebufferNativeWindow.cpp	/^int FramebufferNativeWindow::queueBuffer(ANativeWindow* window, $/;"	f	class:android::FramebufferNativeWindow
queueBuffer	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::queueBuffer(int pslot,$/;"	f	class:android::VirtualDisplaySurface
queueBuffer	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::queueBuffer(int slot, const QueueBufferInput& input,$/;"	f	class:android::MonitoredProducer
queueBuffer_DEPRECATED	libs/ui/FramebufferNativeWindow.cpp	/^int FramebufferNativeWindow::queueBuffer_DEPRECATED(ANativeWindow* window, $/;"	f	class:android::FramebufferNativeWindow
queueSync	opengl/libs/EGL/eglApi.cpp	/^    static void queueSync(EGLSyncKHR sync) {$/;"	f	class:FrameCompletionThread
quietTime	services/inputflinger/InputReader.h	/^        nsecs_t quietTime;$/;"	m	struct:android::TouchInputMapper::PointerGesture
r	include/ui/vec2.h	/^        struct { T r, g; };$/;"	m	struct:android::tvec2::__anon82::__anon85
r	include/ui/vec3.h	/^        struct { T r, g, b; };$/;"	m	struct:android::tvec3::__anon89::__anon92
r	include/ui/vec4.h	/^        struct { T r, g, b, a; };$/;"	m	struct:android::tvec4::__anon96::__anon99
r	opengl/libagl/context.h	/^        struct { GLfixed r, g, b, a; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon218
r	opengl/libagl/context.h	/^        struct { GLfixed r, g, b; };$/;"	m	struct:android::gl::vec3_t::__anon212::__anon214
r	opengl/tests/hwc/hwcTestLib.h	/^    float r(void) const { return _r; }$/;"	f	class:ColorRGB
r	services/sensorservice/vec.h	/^        struct { float s, t, r, q; };$/;"	m	struct:android::vbase::__anon59::__anon61
r	services/sensorservice/vec.h	/^        struct { float s, t, r; };$/;"	m	struct:android::vbase::__anon56::__anon58
rConstAttenuation	opengl/libagl/context.h	/^    GLfixed     rConstAttenuation;$/;"	m	struct:android::gl::light_t
randUniform	opengl/tests/gl_perf/fill_common.cpp	/^static void randUniform(int pgm, const char *var) {$/;"	f	file:
randomUInt	opengl/tests/angeles/demo.c	/^static unsigned long randomUInt()$/;"	f	file:
rareRatio	opengl/tests/hwc/hwcStress.cpp	/^const float rareRatio = 0.1;$/;"	v
rasterizer	libs/ui/Region.cpp	/^    rasterizer(Region& reg) $/;"	f	class:android::Region::rasterizer
rasterizer	libs/ui/Region.cpp	/^class Region::rasterizer : public region_operator<Rect>::region_rasterizer $/;"	c	class:android::Region	file:
rasterizer	opengl/libagl/context.h	/^    context_t               rasterizer;$/;"	m	struct:android::gl::ogles_context_t
rawAxisInfo	services/inputflinger/InputReader.h	/^        RawAbsoluteAxisInfo rawAxisInfo;$/;"	m	struct:android::JoystickInputMapper::Axis
rawTestSets	libs/gui/tests/CpuConsumer_test.cpp	/^CpuConsumerTestParams rawTestSets[] = {$/;"	m	namespace:android	file:
rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^GLMessage_DataType::rawbytes() const {$/;"	f	class:android::gltrace::GLMessage_DataType
rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline const ::std::string& GLMessage_DataType::rawbytes(int index) const {$/;"	f	class:android::gltrace::GLMessage_DataType
rawbytes_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> rawbytes_;$/;"	m	class:android::gltrace::GLMessage_DataType
rawbytes_size	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline int GLMessage_DataType::rawbytes_size() const {$/;"	f	class:android::gltrace::GLMessage_DataType
reAllocateCacheLocked	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::reAllocateCacheLocked(sensors_event_t const* scratch,$/;"	f	class:android::SensorService::SensorEventConnection
read	include/binder/Parcel.h	/^status_t Parcel::read(Flattenable<T>& val) const {$/;"	f	class:android::Parcel
read	include/binder/Parcel.h	/^status_t Parcel::read(LightFlattenable<T>& val) const {$/;"	f	class:android::Parcel
read	libs/binder/Parcel.cpp	/^status_t Parcel::read(FlattenableHelperInterface& val) const$/;"	f	class:android::Parcel
read	libs/binder/Parcel.cpp	/^status_t Parcel::read(void* outData, size_t len) const$/;"	f	class:android::Parcel
read	libs/gui/BitTube.cpp	/^ssize_t BitTube::read(void* vaddr, size_t size)$/;"	f	class:android::BitTube
read	libs/gui/LayerState.cpp	/^status_t ComposerState::read(const Parcel& input) {$/;"	f	class:android::ComposerState
read	libs/gui/LayerState.cpp	/^status_t DisplayState::read(const Parcel& input) {$/;"	f	class:android::DisplayState
read	libs/gui/LayerState.cpp	/^status_t layer_state_t::read(const Parcel& input)$/;"	f	class:android::layer_state_t
read	libs/gui/SensorEventQueue.cpp	/^ssize_t SensorEventQueue::read(ASensorEvent* events, size_t numEvents) {$/;"	f	class:android::SensorEventQueue
read	opengl/libagl/egl.cpp	/^    EGLSurface          read;$/;"	m	struct:android::egl_context_t	file:
read	opengl/libs/EGL/egl_object.h	/^    EGLSurface read;$/;"	m	class:android::egl_context_t
readAligned	libs/binder/Parcel.cpp	/^T Parcel::readAligned() const {$/;"	f	class:android::Parcel
readAligned	libs/binder/Parcel.cpp	/^status_t Parcel::readAligned(T *pArg) const {$/;"	f	class:android::Parcel
readBEUint16	opengl/libs/ETC1/etc1.cpp	/^static etc1_uint32 readBEUint16(const etc1_byte* pIn) {$/;"	f	file:
readBlob	libs/binder/Parcel.cpp	/^status_t Parcel::readBlob(size_t len, ReadableBlob* outBlob) const$/;"	f	class:android::Parcel
readBoolFromInt	libs/gui/IGraphicBufferConsumer.cpp	/^static bool readBoolFromInt(void const*& buffer, size_t& size) {$/;"	f	namespace:android
readCString	libs/binder/Parcel.cpp	/^const char* Parcel::readCString() const$/;"	f	class:android::Parcel
readDouble	libs/binder/Parcel.cpp	/^double Parcel::readDouble() const$/;"	f	class:android::Parcel
readDouble	libs/binder/Parcel.cpp	/^status_t Parcel::readDouble(double *pArg) const$/;"	f	class:android::Parcel
readExceptionCode	libs/binder/Parcel.cpp	/^int32_t Parcel::readExceptionCode() const$/;"	f	class:android::Parcel
readFileDescriptor	libs/binder/Parcel.cpp	/^int Parcel::readFileDescriptor() const$/;"	f	class:android::Parcel
readFloat	libs/binder/Parcel.cpp	/^float Parcel::readFloat() const$/;"	f	class:android::Parcel
readFloat	libs/binder/Parcel.cpp	/^status_t Parcel::readFloat(float *pArg) const$/;"	f	class:android::Parcel
readFromParcel	libs/input/Input.cpp	/^status_t MotionEvent::readFromParcel(Parcel* parcel) {$/;"	f	class:android::MotionEvent
readFromParcel	libs/input/Input.cpp	/^status_t PointerCoords::readFromParcel(Parcel* parcel) {$/;"	f	class:android::PointerCoords
readFromParcel	libs/input/KeyCharacterMap.cpp	/^sp<KeyCharacterMap> KeyCharacterMap::readFromParcel(Parcel* parcel) {$/;"	f	class:android::KeyCharacterMap
readFromParcel	services/batteryservice/BatteryProperties.cpp	/^status_t BatteryProperties::readFromParcel(Parcel* p) {$/;"	f	class:android::BatteryProperties
readFromParcel	services/batteryservice/BatteryProperty.cpp	/^status_t BatteryProperty::readFromParcel(Parcel* p) {$/;"	f	class:android::BatteryProperty
readInplace	libs/binder/Parcel.cpp	/^const void* Parcel::readInplace(size_t len) const$/;"	f	class:android::Parcel
readInt32	libs/binder/Parcel.cpp	/^int32_t Parcel::readInt32() const$/;"	f	class:android::Parcel
readInt32	libs/binder/Parcel.cpp	/^status_t Parcel::readInt32(int32_t *pArg) const$/;"	f	class:android::Parcel
readInt64	libs/binder/Parcel.cpp	/^int64_t Parcel::readInt64() const$/;"	f	class:android::Parcel
readInt64	libs/binder/Parcel.cpp	/^status_t Parcel::readInt64(int64_t *pArg) const$/;"	f	class:android::Parcel
readIntPtr	libs/binder/Parcel.cpp	/^intptr_t Parcel::readIntPtr() const$/;"	f	class:android::Parcel
readIntPtr	libs/binder/Parcel.cpp	/^status_t Parcel::readIntPtr(intptr_t *pArg) const$/;"	f	class:android::Parcel
readNativeHandle	libs/binder/Parcel.cpp	/^native_handle* Parcel::readNativeHandle() const$/;"	f	class:android::Parcel
readNotifyLocked	services/inputflinger/EventHub.cpp	/^status_t EventHub::readNotifyLocked() {$/;"	f	class:android::EventHub
readObject	libs/binder/Parcel.cpp	/^const flat_binder_object* Parcel::readObject(bool nullMetaData) const$/;"	f	class:android::Parcel
readParcelFileDescriptor	libs/binder/Parcel.cpp	/^int Parcel::readParcelFileDescriptor(int& outCommChannel) const {$/;"	f	class:android::Parcel
readPixels	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::readPixels(size_t l, size_t b, size_t w, size_t h, uint32_t* pixels) {$/;"	f	class:android::RenderEngine
readPointer	libs/binder/Parcel.cpp	/^status_t Parcel::readPointer(uintptr_t *pArg) const$/;"	f	class:android::Parcel
readPointer	libs/binder/Parcel.cpp	/^uintptr_t Parcel::readPointer() const$/;"	f	class:android::Parcel
readSignal	libs/input/tests/TestHelpers.h	/^    status_t readSignal() {$/;"	f	class:android::Pipe
readString16	libs/binder/Parcel.cpp	/^String16 Parcel::readString16() const$/;"	f	class:android::Parcel
readString16Inplace	libs/binder/Parcel.cpp	/^const char16_t* Parcel::readString16Inplace(size_t* outLen) const$/;"	f	class:android::Parcel
readString8	libs/binder/Parcel.cpp	/^String8 Parcel::readString8() const$/;"	f	class:android::Parcel
readStrongBinder	libs/binder/Parcel.cpp	/^sp<IBinder> Parcel::readStrongBinder() const$/;"	f	class:android::Parcel
readWeakBinder	libs/binder/Parcel.cpp	/^wp<IBinder> Parcel::readWeakBinder() const$/;"	f	class:android::Parcel
read_header	cmds/rawbu/backup.cpp	/^static int read_header(FILE* fh, int* type, char** path, struct stat* st)$/;"	f	namespace:android
read_index	opengl/libagl/array.cpp	/^static inline unsigned int read_index(int type, const GLvoid*& p) {$/;"	f	namespace:android
read_int32	cmds/rawbu/backup.cpp	/^static int32_t read_int32(FILE* fh, int32_t defVal)$/;"	f	namespace:android
read_int64	cmds/rawbu/backup.cpp	/^static int64_t read_int64(FILE* fh, int64_t defVal)$/;"	f	namespace:android
readuInt64	libs/binder/Parcel.cpp	/^status_t Parcel::readuInt64(uint64_t *pArg) const$/;"	f	class:android::Parcel
readx	cmds/installd/installd.c	/^static int readx(int s, void *_buf, int count)$/;"	f	file:
reallocate	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::reallocate(uint32_t w, uint32_t h, PixelFormat f,$/;"	f	class:android::GraphicBuffer
reallocate	opengl/libagl/TextureObjectManager.cpp	/^status_t EGLTextureObject::reallocate($/;"	f	class:android::EGLTextureObject
reason	services/inputflinger/InputDispatcher.h	/^        String8 reason;$/;"	m	struct:android::InputDispatcher::CommandEntry
reason	services/inputflinger/InputDispatcher.h	/^        const char* reason;$/;"	m	struct:android::InputDispatcher::CancelationOptions
rebuildLayerStacks	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::rebuildLayerStacks() {$/;"	f	class:android::SurfaceFlinger
receive	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^int TCPStream::receive(void *data, size_t len) {$/;"	f	class:android::gltrace::TCPStream
receiveFd	libs/input/tests/TestHelpers.h	/^    int receiveFd;$/;"	m	class:android::Pipe
receiveFinishedSignal	libs/input/InputTransport.cpp	/^status_t InputPublisher::receiveFinishedSignal(uint32_t* outSeq, bool* outHandled) {$/;"	f	class:android::InputPublisher
receiveMessage	libs/input/InputTransport.cpp	/^status_t InputChannel::receiveMessage(InputMessage* msg) {$/;"	f	class:android::InputChannel
receiver	services/sensorservice/tests/sensorservicetest.cpp	/^int receiver(int fd, int events, void* data)$/;"	f
receiver	services/surfaceflinger/tests/vsync/vsync.cpp	/^int receiver(int fd, int events, void* data)$/;"	f
recipient	include/binder/BpBinder.h	/^        wp<DeathRecipient> recipient;$/;"	m	struct:android::BpBinder::Obituary
reciprocalf	opengl/libagl/fp.h	/^GLfloat reciprocalf(GLfloat v) {$/;"	f	namespace:android::gl
recordLastValueLocked	services/sensorservice/SensorService.cpp	/^void SensorService::recordLastValueLocked($/;"	f	class:android::SensorService
rectangle	opengl/tests/hwc/hwcRects.cpp	/^list<Rectangle> rectangle;$/;"	v
rects	include/private/ui/RegionHelper.h	/^        RECT const* rects;$/;"	m	struct:android::region_operator::region
recvObjects	include/gui/BitTube.h	/^    static ssize_t recvObjects(const sp<BitTube>& tube,$/;"	f	class:android::BitTube
recvObjects	libs/gui/BitTube.cpp	/^ssize_t BitTube::recvObjects(const sp<BitTube>& tube,$/;"	f	class:android::BitTube
recycle	libs/input/Input.cpp	/^void PooledInputEventFactory::recycle(InputEvent* event) {$/;"	f	class:android::PooledInputEventFactory
recycle	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::KeyEntry::recycle() {$/;"	f	class:android::InputDispatcher::KeyEntry
recycleTokens	opengl/libagl/TokenManager.cpp	/^void TokenManager::recycleTokens(GLsizei n, const GLuint *tokens)$/;"	f	class:android::TokenManager
red	opengl/libagl/dxt.cpp	52;"	d	file:
redirect_to_file	cmds/dumpstate/utils.c	/^pid_t redirect_to_file(FILE *redirect, char *path, int gzip_level) {$/;"	f
redirect_to_socket	cmds/dumpstate/utils.c	/^void redirect_to_socket(FILE *redirect, const char *service) {$/;"	f
reduce	libs/ui/Rect.cpp	/^Rect Rect::reduce(const Rect& exclude) const {$/;"	f	class:android::Rect
reduce	services/surfaceflinger/Layer.cpp	/^static Rect reduce(const Rect& win, const Region& exclude) {$/;"	f	namespace:android
ref	opengl/libs/EGL/egl_object.h	/^        egl_object_t* ref;$/;"	m	class:android::egl_object_t::LocalRef
refCond	opengl/libs/EGL/egl_display.h	/^    mutable Condition                   refCond;$/;"	m	class:android::egl_display_t
refCount	services/inputflinger/InputDispatcher.h	/^        mutable int32_t refCount;$/;"	m	struct:android::InputDispatcher::EventEntry
refCount	services/inputflinger/InputDispatcher.h	/^        mutable int32_t refCount;$/;"	m	struct:android::InputDispatcher::InjectionState
refFormat	opengl/tests/hwc/hwcColorEquiv.cpp	/^static const struct hwcTestGraphicFormat *refFormat$/;"	v	typeref:struct:hwcTestGraphicFormat	file:
refLock	opengl/libs/EGL/egl_display.h	/^    mutable Mutex                       lock, refLock;$/;"	m	class:android::egl_display_t
reference	include/ui/mat4.h	/^    typedef T& reference;$/;"	t	class:android::tmat44
reference	include/ui/vec2.h	/^    typedef T& reference;$/;"	t	class:android::tvec2
reference	include/ui/vec3.h	/^    typedef T& reference;$/;"	t	class:android::tvec3
reference	include/ui/vec4.h	/^    typedef T& reference;$/;"	t	class:android::tvec4
reference	services/sensorservice/mat.h	/^    typedef TYPE& reference;$/;"	t	class:android::mat
reference	services/sensorservice/vec.h	/^    typedef TYPE& reference;$/;"	t	class:android::vec
referenceDeltas	services/inputflinger/InputReader.h	/^        Delta referenceDeltas[MAX_POINTER_ID + 1];$/;"	m	struct:android::TouchInputMapper::PointerGesture
referenceGestureX	services/inputflinger/InputReader.h	/^        float referenceGestureX;  \/\/ reference gesture X\/Y coordinates in pixels$/;"	m	struct:android::TouchInputMapper::PointerGesture
referenceGestureY	services/inputflinger/InputReader.h	/^        float referenceGestureY;$/;"	m	struct:android::TouchInputMapper::PointerGesture
referenceIdBits	services/inputflinger/InputReader.h	/^        BitSet32 referenceIdBits;$/;"	m	struct:android::TouchInputMapper::PointerGesture
referenceTouchX	services/inputflinger/InputReader.h	/^        float referenceTouchX;    \/\/ reference touch X\/Y coordinates in surface units$/;"	m	struct:android::TouchInputMapper::PointerGesture
referenceTouchY	services/inputflinger/InputReader.h	/^        float referenceTouchY;$/;"	m	struct:android::TouchInputMapper::PointerGesture
refresh	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        nsecs_t refresh;$/;"	m	struct:android::HWComposer::DisplayConfig
refresh	services/surfaceflinger/MessageQueue.cpp	/^void MessageQueue::refresh() {$/;"	f	class:android::MessageQueue
refreshConfigurationLocked	services/inputflinger/InputReader.cpp	/^void InputReader::refreshConfigurationLocked(uint32_t changes) {$/;"	f	class:android::InputReader
refreshOutputBuffer	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::refreshOutputBuffer() {$/;"	f	class:android::VirtualDisplaySurface
refreshPeriodNano	include/ui/FrameStats.h	/^    nsecs_t refreshPeriodNano;$/;"	m	class:android::FrameStats
refs	include/binder/ProcessState.h	/^                RefBase::weakref_type* refs;$/;"	m	struct:android::ProcessState::handle_entry
refs	opengl/libs/EGL/egl_display.h	/^            uint32_t                    refs;$/;"	m	class:android::egl_display_t
reg	opengl/tools/glgen2/registry/genheaders.py	/^reg = Registry()$/;"	v
regFilename	opengl/tools/glgen2/registry/genheaders.py	/^            regFilename = sys.argv[i]$/;"	v
regFilename	opengl/tools/glgen2/registry/genheaders.py	/^regFilename = 'gl.xml'$/;"	v
regSortCategoryKey	opengl/tools/glgen2/registry/reg.py	/^def regSortCategoryKey(feature):$/;"	f
regSortFeatures	opengl/tools/glgen2/registry/reg.py	/^def regSortFeatures(featureList):$/;"	f
regSortNameKey	opengl/tools/glgen2/registry/reg.py	/^def regSortNameKey(feature):$/;"	f
regSortNumberKey	opengl/tools/glgen2/registry/reg.py	/^def regSortNumberKey(feature):$/;"	f
region	include/private/ui/RegionHelper.h	/^        inline region(RECT const* r, size_t c) $/;"	f	struct:android::region_operator::region
region	include/private/ui/RegionHelper.h	/^        inline region(RECT const* r, size_t c, TYPE dx, TYPE dy) $/;"	f	struct:android::region_operator::region
region	include/private/ui/RegionHelper.h	/^        inline region(const region& rhs) $/;"	f	struct:android::region_operator::region
region	include/private/ui/RegionHelper.h	/^    struct region {$/;"	s	class:android::region_operator
region_operator	include/private/ui/RegionHelper.h	/^    inline region_operator(int op, const region& lhs, const region& rhs) $/;"	f	class:android::region_operator
region_operator	include/private/ui/RegionHelper.h	/^class region_operator$/;"	c	namespace:android
region_rasterizer	include/private/ui/RegionHelper.h	/^    class region_rasterizer {$/;"	c	class:android::region_operator
registerBuffer	libs/ui/GraphicBufferMapper.cpp	/^status_t GraphicBufferMapper::registerBuffer(buffer_handle_t handle)$/;"	f	class:android::GraphicBufferMapper
registerDisplayEventConnection	services/surfaceflinger/EventThread.cpp	/^status_t EventThread::registerDisplayEventConnection($/;"	f	class:android::EventThread
registerInputChannel	services/inputflinger/InputDispatcher.cpp	/^status_t InputDispatcher::registerInputChannel(const sp<InputChannel>& inputChannel,$/;"	f	class:android::InputDispatcher
registerListener	services/batteryservice/IBatteryPropertiesRegistrar.cpp	/^        void registerListener(const sp<IBatteryPropertiesListener>& listener) {$/;"	f	class:android::BpBatteryPropertiesRegistrar
registerSensor	services/sensorservice/SensorService.cpp	/^Sensor SensorService::registerSensor(SensorInterface* s)$/;"	f	class:android::SensorService
registerSigHandler	cmds/atrace/atrace.cpp	/^static void registerSigHandler()$/;"	f	file:
registerTime	opengl/tests/testFramerate/src/com/android/testframerate/TestFramerateView.java	/^    private void registerTime(long now_us) {$/;"	m	class:TestFramerateView	file:
registerVirtualSensor	services/sensorservice/SensorService.cpp	/^Sensor SensorService::registerVirtualSensor(SensorInterface* s)$/;"	f	class:android::SensorService
registry	opengl/tools/glgen2/glgen.py	/^    registry = reg.Registry()$/;"	v	class:SpecGenerator
regpath	opengl/tools/glgen2/glgen.py	/^regpath = os.path.join(sys.path[0], "registry")$/;"	v
rejectPalm	services/inputflinger/InputReader.cpp	/^bool TouchInputMapper::rejectPalm(nsecs_t when) {$/;"	f	class:android::TouchInputMapper
relBitmask	services/inputflinger/EventHub.h	/^        uint8_t relBitmask[(REL_MAX + 1) \/ 8];$/;"	m	struct:android::EventHub::Device
relativeAxes	services/inputflinger/tests/InputReader_test.cpp	/^        KeyedVector<int, bool> relativeAxes;$/;"	m	struct:android::FakeEventHub::Device	file:
relative_humidity	include/android/sensor.h	/^            float           relative_humidity;$/;"	m	union:ASensorEvent::__anon187::__anon188
release	libs/binder/Parcel.cpp	/^void Parcel::Blob::release() {$/;"	f	class:android::Parcel::Blob
release	libs/gui/SurfaceComposerClient.cpp	/^void ScreenshotClient::release() {$/;"	f	class:android::ScreenshotClient
release	opengl/libagl/Tokenizer.cpp	/^status_t Tokenizer::release(uint32_t token)$/;"	f	class:android::Tokenizer
release	opengl/libs/EGL/egl_object.h	/^void egl_object_t::LocalRef<N,T>::release() const {$/;"	f	class:android::egl_object_t::LocalRef
release	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::EventEntry::release() {$/;"	f	class:android::InputDispatcher::EventEntry
release	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::InjectionState::release() {$/;"	f	class:android::InputDispatcher::InjectionState
releaseAcquiredBufferLocked	libs/gui/CpuConsumer.cpp	/^status_t CpuConsumer::releaseAcquiredBufferLocked(int lockedIdx) {$/;"	f	class:android::CpuConsumer
releaseBuffer	include/gui/BufferQueueConsumer.h	/^    virtual status_t releaseBuffer(int buf, uint64_t frameNumber,$/;"	f	class:android::BufferQueueConsumer
releaseBuffer	libs/gui/BufferItemConsumer.cpp	/^status_t BufferItemConsumer::releaseBuffer(const BufferItem &item,$/;"	f	class:android::BufferItemConsumer
releaseBuffer	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::releaseBuffer(int slot, uint64_t frameNumber,$/;"	f	class:android::BufferQueueConsumer
releaseBuffer	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t releaseBuffer(int buf, uint64_t frameNumber,$/;"	f	class:android::BpGraphicBufferConsumer
releaseBufferLocked	include/gui/GLConsumer.h	/^    status_t releaseBufferLocked(int slot,$/;"	f	class:android::GLConsumer
releaseBufferLocked	libs/gui/ConsumerBase.cpp	/^status_t ConsumerBase::releaseBufferLocked($/;"	f	class:android::ConsumerBase
releaseBufferLocked	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::releaseBufferLocked(int buf,$/;"	f	class:android::GLConsumer
releaseContext	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void releaseContext() {$/;"	f	namespace:android::gltrace
releaseControllerNumberLocked	services/inputflinger/EventHub.cpp	/^void EventHub::releaseControllerNumberLocked(Device* device) {$/;"	f	class:android::EventHub
releaseDispatchEntryLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::releaseDispatchEntryLocked(DispatchEntry* dispatchEntry) {$/;"	f	class:android::InputDispatcher
releaseFbo	services/surfaceflinger/LayerBlur.cpp	/^void LayerBlur::releaseFbo(FBO& fbo) {$/;"	f	class:android::LayerBlur
releaseInboundEventLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::releaseInboundEventLocked(EventEntry* entry) {$/;"	f	class:android::InputDispatcher
releaseInfo	services/inputflinger/InputApplication.cpp	/^void InputApplicationHandle::releaseInfo() {$/;"	f	class:android::InputApplicationHandle
releaseInfo	services/inputflinger/InputWindow.cpp	/^void InputWindowHandle::releaseInfo() {$/;"	f	class:android::InputWindowHandle
releaseInjectionState	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::EventEntry::releaseInjectionState() {$/;"	f	class:android::InputDispatcher::EventEntry
releaseObjects	libs/binder/Parcel.cpp	/^void Parcel::releaseObjects()$/;"	f	class:android::Parcel
releasePendingEventLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::releasePendingEventLocked() {$/;"	f	class:android::InputDispatcher
releasePointer	opengl/tools/glgen/stubs/gles11/common.cpp	/^releasePointer(JNIEnv *_env, jarray array, void *data, jboolean commit)$/;"	f	file:
releasePointer	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^releasePointer(JNIEnv *_env, jarray array, void *data, jboolean commit)$/;"	f	file:
releaseTexImage	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::releaseTexImage() {$/;"	f	class:android::GLConsumer
releaseWakeLock	services/powermanager/IPowerManager.cpp	/^    virtual status_t releaseWakeLock(const sp<IBinder>& lock, int flags, bool isOneWay)$/;"	f	class:android::BpPowerManager
release_func	include/binder/Parcel.h	/^    typedef void        (*release_func)(Parcel* parcel,$/;"	t	class:android::Parcel
release_object	libs/binder/Parcel.cpp	/^void release_object(const sp<ProcessState>& proc,$/;"	f	namespace:android
remote	include/binder/Binder.h	/^    inline  IBinder*        remote()                { return mRemote; }$/;"	f	class:android::BpRefBase
remote	include/binder/Binder.h	/^    inline  IBinder*        remote() const          { return mRemote; }$/;"	f	class:android::BpRefBase
remoteBinder	libs/binder/Binder.cpp	/^BpBinder* IBinder::remoteBinder()$/;"	f	class:android::IBinder
remoteBinder	libs/binder/BpBinder.cpp	/^BpBinder* BpBinder::remoteBinder()$/;"	f	class:android::BpBinder
remove	libs/binder/MemoryDealer.cpp	/^    NODE* remove(NODE* node) {$/;"	f	class:android::LinkedList
remove	libs/binder/MemoryHeapPmem.cpp	/^void MemoryHeapPmem::remove(const wp<MemoryPmem>& memory)$/;"	f	class:android::MemoryHeapPmem
remove	libs/binder/Parcel.cpp	/^void Parcel::remove(size_t \/*start*\/, size_t \/*amt*\/)$/;"	f	class:android::Parcel
remove	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^    void remove(EGLint attribute) {$/;"	f	class:android::EGLAttributeVector
removeBatchParamsForIdent	services/sensorservice/SensorDevice.cpp	/^ssize_t SensorDevice::Info::removeBatchParamsForIdent(void* ident) {$/;"	f	class:android::SensorDevice::Info
removeConnection	services/sensorservice/SensorService.cpp	/^bool SensorService::SensorRecord::removeConnection($/;"	f	class:android::SensorService::SensorRecord
removeDevice	services/inputflinger/tests/InputReader_test.cpp	/^    void removeDevice(int32_t deviceId) {$/;"	f	class:android::FakeEventHub
removeDeviceLocked	services/inputflinger/InputReader.cpp	/^void InputReader::removeDeviceLocked(nsecs_t when, int32_t deviceId) {$/;"	f	class:android::InputReader
removeDisplayEventConnection	services/surfaceflinger/EventThread.cpp	/^void EventThread::removeDisplayEventConnection($/;"	f	class:android::EventThread
removeDuplicates	opengl/libs/GLES_trace/tools/genapi.py	/^def removeDuplicates(apis):$/;"	f
removeEventListener	services/surfaceflinger/DispSync.cpp	/^    status_t removeEventListener(const sp<DispSync::Callback>& callback) {$/;"	f	class:android::DispSyncThread
removeEventListener	services/surfaceflinger/DispSync.cpp	/^status_t DispSync::removeEventListener(const sp<Callback>& callback) {$/;"	f	class:android::DispSync
removeFallbackKey	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::InputState::removeFallbackKey(int32_t originalKeyCode) {$/;"	f	class:android::InputDispatcher::InputState
removeFirstPendingFlushConnection	services/sensorservice/SensorService.cpp	/^void SensorService::SensorRecord::removeFirstPendingFlushConnection() {$/;"	f	class:android::SensorService::SensorRecord
removeLayer	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::removeLayer(const sp<Layer>& layer) {$/;"	f	class:android::SurfaceFlinger
removeMonitorChannelLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::removeMonitorChannelLocked(const sp<InputChannel>& inputChannel) {$/;"	f	class:android::InputDispatcher
removeObject	opengl/libs/EGL/egl_display.cpp	/^void egl_display_t::removeObject(egl_object_t* object) {$/;"	f	class:android::egl_display_t
removeSensor	services/sensorservice/BatteryService.cpp	/^bool BatteryService::removeSensor(uid_t uid, int handle) {$/;"	f	class:android::BatteryService
removeSensor	services/sensorservice/SensorService.cpp	/^bool SensorService::SensorEventConnection::removeSensor(int32_t handle) {$/;"	f	class:android::SensorService::SensorEventConnection
removeTexture	opengl/libagl/TextureObjectManager.cpp	/^sp<EGLTextureObject> EGLSurfaceManager::removeTexture(GLuint name)$/;"	f	class:android::EGLSurfaceManager
removeWindow	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::TouchState::removeWindow(const sp<InputWindowHandle>& windowHandle) {$/;"	f	class:android::InputDispatcher::TouchState
remove_profile_file	cmds/installd/utils.c	/^void remove_profile_file(const char *pkgname) {$/;"	f
renamepkg	cmds/installd/commands.c	/^int renamepkg(const char *oldpkgname, const char *newpkgname)$/;"	f
render	cmds/flatland/Main.cpp	/^    bool render() {$/;"	f	class:Layer
render	opengl/tests/gl_basic/gl_basic.cpp	/^void render()$/;"	f
render	opengl/tests/tritex/tritex.cpp	/^void render(int quads)$/;"	f
renderFrame	opengl/tests/gl2_basic/gl2_basic.cpp	/^void renderFrame() {$/;"	f
renderFrame	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^void renderFrame(GLint w, GLint h) {$/;"	f
renderFrame	opengl/tests/gl2_jni/jni/gl_code.cpp	/^void renderFrame() {$/;"	f
renderFrame	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^void renderFrame() {$/;"	f
renderFrame	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^void renderFrame(int w, int h) {$/;"	f
renderFrame	opengl/tests/gldual/jni/gl_code.cpp	/^void renderFrame() {$/;"	f
renderLine	opengl/libagl/context.h	/^    void (*renderLine)(GL, vertex_t*, vertex_t*);$/;"	m	struct:android::gl::prims_t
renderPoint	opengl/libagl/context.h	/^    void (*renderPoint)(GL, vertex_t*);$/;"	m	struct:android::gl::prims_t
renderScreenImplLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::renderScreenImplLocked($/;"	f	class:android::SurfaceFlinger
renderTriangle	opengl/libagl/context.h	/^    void (*renderTriangle)(GL, vertex_t*, vertex_t*, vertex_t*);$/;"	m	struct:android::gl::prims_t
rendererFactory	cmds/flatland/Flatland.h	/^    Renderer* (*rendererFactory)();$/;"	m	struct:android::LayerDesc
repaintEverything	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::repaintEverything() {$/;"	f	class:android::SurfaceFlinger
repeatCount	include/input/InputTransport.h	/^            int32_t repeatCount;$/;"	m	struct:android::InputMessage::Body::Key
repeatCount	services/inputflinger/InputDispatcher.h	/^        int32_t repeatCount;$/;"	m	struct:android::InputDispatcher::KeyEntry
replaceTexture	opengl/libagl/TextureObjectManager.cpp	/^sp<EGLTextureObject> EGLSurfaceManager::replaceTexture(GLuint name)$/;"	f	class:android::EGLSurfaceManager
reply	services/surfaceflinger/SurfaceFlinger.cpp	/^    Parcel* reply;$/;"	m	class:android::GraphicProducerWrapper	file:
reportOneDeath	libs/binder/BpBinder.cpp	/^void BpBinder::reportOneDeath(const Obituary& obit)$/;"	f	class:android::BpBinder
requestBuffer	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::requestBuffer(int slot, sp<GraphicBuffer>* buf) {$/;"	f	class:android::BufferQueueProducer
requestBuffer	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t requestBuffer(int bufferIdx, sp<GraphicBuffer>* buf) {$/;"	f	class:android::BpGraphicBufferProducer
requestBuffer	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::requestBuffer(int pslot,$/;"	f	class:android::VirtualDisplaySurface
requestBuffer	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::requestBuffer(int slot, sp<GraphicBuffer>* buf) {$/;"	f	class:android::MonitoredProducer
requestDeathNotification	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::requestDeathNotification(int32_t handle, BpBinder* proxy)$/;"	f	class:android::IPCThreadState
requestNextVsync	libs/gui/DisplayEventReceiver.cpp	/^status_t DisplayEventReceiver::requestNextVsync() {$/;"	f	class:android::DisplayEventReceiver
requestNextVsync	libs/gui/IDisplayEventConnection.cpp	/^    virtual void requestNextVsync() {$/;"	f	class:android::BpDisplayEventConnection
requestNextVsync	services/surfaceflinger/EventThread.cpp	/^void EventThread::Connection::requestNextVsync() {$/;"	f	class:android::EventThread::Connection
requestNextVsync	services/surfaceflinger/EventThread.cpp	/^void EventThread::requestNextVsync($/;"	f	class:android::EventThread
requestRefreshConfiguration	services/inputflinger/InputReader.cpp	/^void InputReader::requestRefreshConfiguration(uint32_t changes) {$/;"	f	class:android::InputReader
requestReopenDevices	services/inputflinger/EventHub.cpp	/^void EventHub::requestReopenDevices() {$/;"	f	class:android::EventHub
requestReopenDevices	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void requestReopenDevices() {$/;"	f	class:android::FakeEventHub	file:
requestTimeoutAtTime	services/inputflinger/InputReader.cpp	/^void InputReader::ContextImpl::requestTimeoutAtTime(nsecs_t when) {$/;"	f	class:android::InputReader::ContextImpl
requestTimeoutAtTime	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void requestTimeoutAtTime(nsecs_t when) {$/;"	f	class:android::FakeInputReaderContext	file:
requestTimeoutAtTimeLocked	services/inputflinger/InputReader.cpp	/^void InputReader::requestTimeoutAtTimeLocked(nsecs_t when) {$/;"	f	class:android::InputReader
requested	services/surfaceflinger/Layer.h	/^        Geometry requested;$/;"	m	struct:android::Layer::State
requestedTransparentRegion	services/surfaceflinger/Layer.h	/^        Region requestedTransparentRegion;$/;"	m	struct:android::Layer::State
requireAndRemoveFeatures	opengl/tools/glgen2/registry/reg.py	/^    def requireAndRemoveFeatures(self, interface, api, profile):$/;"	m	class:Registry
required	cmds/atrace/atrace.cpp	/^        requiredness required;$/;"	m	struct:TracingCategory::__anon3	file:
requiredness	cmds/atrace/atrace.cpp	/^typedef enum { OPT, REQ } requiredness  ;$/;"	t	typeref:enum:__anon2	file:
resampleTouchState	libs/input/InputTransport.cpp	/^void InputConsumer::resampleTouchState(nsecs_t sampleTime, MotionEvent* event,$/;"	f	class:android::InputConsumer
rescaleNormals	opengl/libagl/context.h	/^    GLenum              rescaleNormals;$/;"	m	struct:android::gl::transform_state_t
reserve	opengl/libagl/Tokenizer.cpp	/^status_t Tokenizer::reserve(uint32_t token)$/;"	f	class:android::Tokenizer
reserved	include/android/native_window.h	/^    uint32_t reserved[6];$/;"	m	struct:ANativeWindow_Buffer
reserved	include/android/sensor.h	/^    uint8_t reserved[3];$/;"	m	struct:ASensorVector
reserved	include/private/gui/LayerState.h	/^            uint8_t         reserved;$/;"	m	struct:android::layer_state_t
reserved	include/ui/ANativeObjectBase.h	/^    int32_t     reserved;$/;"	m	struct:egl_native_pixmap_t
reserved	opengl/libagl/context.h	/^    uint8_t         reserved;$/;"	m	struct:android::gl::matrix_stack_t
reserved	opengl/libagl/context.h	/^    uint8_t         reserved[2];$/;"	m	struct:android::gl::vertex_t
reserved	services/surfaceflinger/Layer.h	/^        uint8_t reserved[2];$/;"	m	struct:android::Layer::State
reserved0	include/android/sensor.h	/^    int32_t reserved0;$/;"	m	struct:ASensorEvent
reserved0	include/ui/PixelFormat.h	/^    uint8_t     reserved0[3];$/;"	m	struct:android::PixelFormatInfo
reserved1	include/android/sensor.h	/^    int32_t reserved1[3];$/;"	m	struct:ASensorEvent
reserved1	include/ui/PixelFormat.h	/^    uint32_t    reserved1;$/;"	m	struct:android::PixelFormatInfo
reserved1	opengl/libagl/context.h	/^    uint32_t        reserved1[2];$/;"	m	struct:android::gl::vertex_t
reserved1	opengl/libagl/context.h	/^    uint32_t        reserved1[4];$/;"	m	struct:android::gl::vertex_t
reset	libs/input/VelocityControl.cpp	/^void VelocityControl::reset() {$/;"	f	class:android::VelocityControl
reset	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::TouchState::reset() {$/;"	f	class:android::InputDispatcher::TouchState
reset	services/inputflinger/InputReader.cpp	/^void CursorButtonAccumulator::reset(InputDevice* device) {$/;"	f	class:android::CursorButtonAccumulator
reset	services/inputflinger/InputReader.cpp	/^void CursorInputMapper::reset(nsecs_t when) {$/;"	f	class:android::CursorInputMapper
reset	services/inputflinger/InputReader.cpp	/^void CursorMotionAccumulator::reset(InputDevice* device) {$/;"	f	class:android::CursorMotionAccumulator
reset	services/inputflinger/InputReader.cpp	/^void CursorScrollAccumulator::reset(InputDevice* device) {$/;"	f	class:android::CursorScrollAccumulator
reset	services/inputflinger/InputReader.cpp	/^void InputDevice::reset(nsecs_t when) {$/;"	f	class:android::InputDevice
reset	services/inputflinger/InputReader.cpp	/^void InputMapper::reset(nsecs_t when) {$/;"	f	class:android::InputMapper
reset	services/inputflinger/InputReader.cpp	/^void JoystickInputMapper::reset(nsecs_t when) {$/;"	f	class:android::JoystickInputMapper
reset	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::reset(nsecs_t when) {$/;"	f	class:android::KeyboardInputMapper
reset	services/inputflinger/InputReader.cpp	/^void MultiTouchInputMapper::reset(nsecs_t when) {$/;"	f	class:android::MultiTouchInputMapper
reset	services/inputflinger/InputReader.cpp	/^void MultiTouchMotionAccumulator::reset(InputDevice* device) {$/;"	f	class:android::MultiTouchMotionAccumulator
reset	services/inputflinger/InputReader.cpp	/^void SingleTouchInputMapper::reset(nsecs_t when) {$/;"	f	class:android::SingleTouchInputMapper
reset	services/inputflinger/InputReader.cpp	/^void SingleTouchMotionAccumulator::reset(InputDevice* device) {$/;"	f	class:android::SingleTouchMotionAccumulator
reset	services/inputflinger/InputReader.cpp	/^void TouchButtonAccumulator::reset(InputDevice* device) {$/;"	f	class:android::TouchButtonAccumulator
reset	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::reset(nsecs_t when) {$/;"	f	class:android::TouchInputMapper
reset	services/inputflinger/InputReader.h	/^        void reset() {$/;"	f	struct:android::TouchInputMapper::PointerGesture
reset	services/inputflinger/InputReader.h	/^        void reset() {$/;"	f	struct:android::TouchInputMapper::PointerSimple
reset	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void reset(nsecs_t when) {$/;"	f	class:android::FakeInputMapper	file:
reset	services/sensorservice/Fusion.cpp	/^    void reset() {$/;"	f	class:android::Covariance
reset	services/surfaceflinger/Colorizer.h	/^    void reset(String8& out) {$/;"	f	class:android::Colorizer
reset	services/surfaceflinger/DispSync.cpp	/^void DispSync::reset() {$/;"	f	class:android::DispSync
reset	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        void reset () {$/;"	f	struct:android::HWComposer::CompMap
reset	services/surfaceflinger/Transform.cpp	/^void Transform::reset() {$/;"	f	class:android::Transform
resetANRTimeoutsLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::resetANRTimeoutsLocked() {$/;"	f	class:android::InputDispatcher
resetAllWakeLockRefCounts	services/sensorservice/SensorService.cpp	/^void SensorService::resetAllWakeLockRefCounts() {$/;"	f	class:android::SensorService
resetAndDropEverythingLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::resetAndDropEverythingLocked(const char* reason) {$/;"	f	class:android::InputDispatcher
resetColorGenerator	cmds/flatland/Renderers.cpp	/^void resetColorGenerator() {$/;"	f	namespace:android
resetErrorLocked	services/surfaceflinger/DispSync.cpp	/^void DispSync::resetErrorLocked() {$/;"	f	class:android::DispSync
resetFrameCountersLocked	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::resetFrameCountersLocked() {$/;"	f	class:android::FrameTracker
resetKeyRepeatLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::resetKeyRepeatLocked() {$/;"	f	class:android::InputDispatcher
resetLedState	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::resetLedState() {$/;"	f	class:android::KeyboardInputMapper
resetPendingAppSwitchLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::resetPendingAppSwitchLocked(bool handled) {$/;"	f	class:android::InputDispatcher
resetPerFrameState	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^void VirtualDisplaySurface::resetPerFrameState() {$/;"	f	class:android::VirtualDisplaySurface
resetQuietTime	services/inputflinger/InputReader.h	/^        void resetQuietTime() {$/;"	f	struct:android::TouchInputMapper::PointerGesture
resetState	opengl/tools/glgen2/registry/reg.py	/^    def resetState(self):$/;"	m	class:BaseInfo
resetTap	services/inputflinger/InputReader.h	/^        void resetTap() {$/;"	f	struct:android::TouchInputMapper::PointerGesture
resetValue	services/inputflinger/InputReader.h	/^        void resetValue() {$/;"	f	struct:android::JoystickInputMapper::Axis
resetWakeLockRefCount	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::resetWakeLockRefCount() {$/;"	f	class:android::SensorService::SensorEventConnection
resizeBuffers	services/surfaceflinger/DisplayHardware/FramebufferSurface.h	/^    virtual void resizeBuffers(const uint32_t \/*w*\/, const uint32_t \/*h*\/) { };$/;"	f	class:android::FramebufferSurface
resizeBuffers	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^void VirtualDisplaySurface::resizeBuffers(const uint32_t w, const uint32_t h) {$/;"	f	class:android::VirtualDisplaySurface
resizeFBMemory	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceContext::resizeFBMemory(unsigned minSize) {$/;"	f	class:android::gltrace::GLTraceContext
resolution	include/input/InputDevice.h	/^        float resolution;$/;"	m	struct:android::InputDeviceInfo::MotionRange
resolution	services/inputflinger/EventHub.h	/^    int32_t resolution; \/\/ resolution in units per mm or radians per mm$/;"	m	struct:android::RawAbsoluteAxisInfo
resolution	services/inputflinger/InputReader.h	/^        float resolution; \/\/ normalized resolution in units\/mm$/;"	m	struct:android::JoystickInputMapper::Axis
resolve	opengl/libagl/array.cpp	/^inline void array_t::resolve()$/;"	f	class:android::array_t
resolveCalibration	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::resolveCalibration() {$/;"	f	class:android::TouchInputMapper
resolvedAction	services/inputflinger/InputDispatcher.h	/^        int32_t resolvedAction;$/;"	m	struct:android::InputDispatcher::DispatchEntry
resolvedFlags	services/inputflinger/InputDispatcher.h	/^        int32_t resolvedFlags;$/;"	m	struct:android::InputDispatcher::DispatchEntry
restart	libs/binder/BufferedTextOutput.cpp	/^    void restart() {$/;"	f	struct:android::BufferedTextOutput::BufferState
restartWrite	libs/binder/Parcel.cpp	/^status_t Parcel::restartWrite(size_t desired)$/;"	f	class:android::Parcel
restoreAllowFds	libs/binder/Parcel.cpp	/^void Parcel::restoreAllowFds(bool lastValue)$/;"	f	class:android::Parcel
restoreCallingIdentity	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::restoreCallingIdentity(int64_t token)$/;"	f	class:android::IPCThreadState
restore_data	cmds/rawbu/backup.cpp	/^static int restore_data(const char* srcPath)$/;"	f	namespace:android
restorecon_data	cmds/installd/commands.c	/^int restorecon_data(const char* pkgName, const char* seinfo, uid_t uid)$/;"	f
result	services/sensorservice/traits.h	/^        enum { result = false };$/;"	e	enum:android::TypeTraits::PointerTraits::__anon66
result	services/sensorservice/traits.h	/^        enum { result = true };$/;"	e	enum:android::TypeTraits::PointerTraits::__anon67
result	services/surfaceflinger/SurfaceFlinger.cpp	/^    status_t result;$/;"	m	class:android::GraphicProducerWrapper	file:
resumeAfterTargetsNotReadyTimeoutLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::resumeAfterTargetsNotReadyTimeoutLocked(nsecs_t newTimeout,$/;"	f	class:android::InputDispatcher
resyncToHardwareVsync	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::resyncToHardwareVsync(bool makeAvailable) {$/;"	f	class:android::SurfaceFlinger
returnvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline const ::android::gltrace::GLMessage_DataType& GLMessage::returnvalue() const {$/;"	f	class:android::gltrace::GLMessage
returnvalue_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::android::gltrace::GLMessage_DataType* returnvalue_;$/;"	m	class:android::gltrace::GLMessage
reverseRectsResolvingJunctions	libs/ui/Region.cpp	/^static void reverseRectsResolvingJunctions(const Rect* begin, const Rect* end,$/;"	f	namespace:android
revoke	libs/binder/MemoryHeapPmem.cpp	/^void MemoryHeapPmem::revoke()$/;"	f	class:android::MemoryHeapPmem
revoke	libs/binder/MemoryHeapPmem.cpp	/^void SubRegionMemory::revoke()$/;"	f	class:android::SubRegionMemory
rewriteMessage	libs/input/InputTransport.cpp	/^void InputConsumer::rewriteMessage(const TouchState& state, InputMessage* msg) {$/;"	f	class:android::InputConsumer
rfu	include/ui/ANativeObjectBase.h	/^    uint8_t     rfu[3];$/;"	m	struct:egl_native_pixmap_t
rg	include/ui/vec3.h	/^        Impersonator< tvec2<T> > rg;$/;"	m	union:android::tvec3::__anon89
rg	include/ui/vec4.h	/^        Impersonator< tvec2<T> > rg;$/;"	m	union:android::tvec4::__anon96
rgb	include/ui/vec4.h	/^        Impersonator< tvec3<T> > rgb;$/;"	m	union:android::tvec4::__anon96
rgb	opengl/tests/gl_perf/fill_common.cpp	/^static uint32_t rgb(uint32_t r, uint32_t g, uint32_t b)$/;"	f	file:
rgb565SepTo888	opengl/libagl/dxt.cpp	/^inline static int rgb565SepTo888(int r, int g, int b)$/;"	f	namespace:android
rgb565To888	opengl/libagl/dxt.cpp	/^inline static int rgb565To888(int rgb)$/;"	f	namespace:android
rgba8888TestSets	libs/gui/tests/CpuConsumer_test.cpp	/^CpuConsumerTestParams rgba8888TestSets[] = {$/;"	m	namespace:android	file:
rh	libs/ui/PixelFormat.cpp	/^        uint8_t     rh;$/;"	m	struct:android::Info::__anon243	file:
rhs	include/private/ui/RegionHelper.h	/^        region rhs;$/;"	m	class:android::region_operator::Spanner
rhs	include/private/ui/RegionHelper.h	/^        region rhs;$/;"	m	class:android::region_operator::SpannerInner
rhs_head	include/private/ui/RegionHelper.h	/^        TYPE rhs_head;$/;"	m	class:android::region_operator::SpannerBase
rhs_tail	include/private/ui/RegionHelper.h	/^        TYPE rhs_tail;$/;"	m	class:android::region_operator::SpannerBase
right	include/android/rect.h	/^    int32_t right;$/;"	m	struct:ARect
right	opengl/libagl/egl.cpp	/^        int32_t right;$/;"	m	struct:android::egl_window_surface_v2_t::Rect	file:
right	services/surfaceflinger/DisplayHardware/FloatRect.h	/^    float right;$/;"	m	class:android::FloatRect
rightBottom	include/ui/Rect.h	/^    Point rightBottom() const {$/;"	f	class:android::Rect
rightTop	include/ui/Rect.h	/^    Point rightTop() const {$/;"	f	class:android::Rect
rl	libs/ui/PixelFormat.cpp	/^        uint8_t     rl;$/;"	m	struct:android::Info::__anon243	file:
rm_dex	cmds/installd/commands.c	/^int rm_dex(const char *path, const char *instruction_set)$/;"	f
roll	include/android/sensor.h	/^            float roll;$/;"	m	struct:ASensorVector::__anon180::__anon182
rotate	include/ui/mat4.h	/^tmat44<T> tmat44<T>::rotate(A radian, const tvec3<B>& about) {$/;"	f	class:android::tmat44
rotate	opengl/libagl/matrix.cpp	/^void matrix_stack_t::rotate(GLfloat a, GLfloat x, GLfloat y, GLfloat z)$/;"	f	class:android::matrix_stack_t
rotate	opengl/libagl/matrix.cpp	/^void matrixf_t::rotate(GLfloat a, GLfloat x, GLfloat y, GLfloat z)$/;"	f	class:android::matrixf_t
rotateDelta	services/inputflinger/InputReader.cpp	/^static void rotateDelta(int32_t orientation, float* deltaX, float* deltaY) {$/;"	f	namespace:android
rotateKeyCode	services/inputflinger/InputReader.cpp	/^static int32_t rotateKeyCode(int32_t keyCode, int32_t orientation, int32_t rotationMapOffset) {$/;"	f	namespace:android
rotateValueUsingRotationMap	services/inputflinger/InputReader.cpp	/^static int32_t rotateValueUsingRotationMap(int32_t value, int32_t orientation,$/;"	f	namespace:android
row_size	include/ui/mat4.h	/^    static inline size_t row_size() { return ROW_SIZE; }$/;"	f	class:android::tmat44
row_type	include/ui/mat4.h	/^    typedef tvec4<T> row_type;$/;"	t	class:android::tmat44
rsqrtf	opengl/libagl/fp.h	/^GLfloat rsqrtf(GLfloat v) {$/;"	f	namespace:android::gl
rtrim	opengl/libs/tools/glapigen	/^sub rtrim($)$/;"	s
rtrim	opengl/libs/tools/glentrygen	/^sub rtrim($)$/;"	s
rtrim	opengl/libs/tools/gltracegen	/^sub rtrim($)$/;"	s
run	cmds/flatland/Main.cpp	/^    nsecs_t run(uint32_t warmUpFrames, uint32_t totalFrames) {$/;"	f	class:BenchmarkRunner
run	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::run() {$/;"	f	class:android::SurfaceFlinger
runCommandsLockedInterruptible	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::runCommandsLockedInterruptible() {$/;"	f	class:android::InputDispatcher
runHeights	cmds/flatland/Main.cpp	/^    uint32_t runHeights[MAX_TEST_RUNS];$/;"	m	struct:BenchmarkDesc	file:
runProducerThread	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^    void runProducerThread(const sp<ProducerThread> producerThread) {$/;"	f	class:android::SurfaceTextureGLThreadToGLTest
runTest	cmds/flatland/Main.cpp	/^static bool runTest(const BenchmarkDesc b, size_t run) {$/;"	f	file:
runTests	cmds/flatland/Main.cpp	/^static bool runTests() {$/;"	f	file:
run_aapt	cmds/installd/commands.c	/^static void run_aapt(const char *source_apk, const char *internal_path,$/;"	f	file:
run_command	cmds/dumpstate/utils.c	/^int run_command(const char *title, int timeout_seconds, const char *command, ...) {$/;"	f
run_dex2oat	cmds/installd/commands.c	/^static void run_dex2oat(int zip_fd, int oat_fd, const char* input_file_name,$/;"	f	file:
run_dexopt	cmds/installd/commands.c	/^static void run_dexopt(int zip_fd, int odex_fd, const char* input_file_name,$/;"	f	file:
run_idmap	cmds/installd/commands.c	/^static void run_idmap(const char *target_apk, const char *overlay_apk, const char *cache_path,$/;"	f	file:
run_patchoat	cmds/installd/commands.c	/^static void run_patchoat(int input_fd, int oat_fd, const char* input_file_name,$/;"	f	file:
run_t	opengl/libagl/Tokenizer.h	/^        run_t() {};$/;"	f	struct:android::Tokenizer::run_t
run_t	opengl/libagl/Tokenizer.h	/^        run_t(uint32_t f, uint32_t l) : first(f), length(l) {}$/;"	f	struct:android::Tokenizer::run_t
run_t	opengl/libagl/Tokenizer.h	/^    struct run_t {$/;"	s	class:android::Tokenizer
s	include/media/openmax/OMX_Types.h	/^    } s;$/;"	m	union:OMX_VERSIONTYPE	typeref:struct:OMX_VERSIONTYPE::__anon128
s	include/ui/GraphicBufferAllocator.h	/^        uint32_t s;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
s	include/ui/vec2.h	/^        struct { T s, t; };$/;"	m	struct:android::tvec2::__anon82::__anon84
s	include/ui/vec3.h	/^        struct { T s, t, p; };$/;"	m	struct:android::tvec3::__anon89::__anon91
s	include/ui/vec4.h	/^        struct { T s, t, p, q; };$/;"	m	struct:android::tvec4::__anon96::__anon98
s	opengl/libs/EGL/trace.cpp	/^    const char* s;$/;"	m	struct:android::GLenumString	file:
s	services/sensorservice/vec.h	/^        struct { float s, t, r, q; };$/;"	m	struct:android::vbase::__anon59::__anon61
s	services/sensorservice/vec.h	/^        struct { float s, t, r; };$/;"	m	struct:android::vbase::__anon56::__anon58
s	services/sensorservice/vec.h	/^        struct { float s, t; };$/;"	m	struct:android::vbase::__anon53::__anon55
sAllocList	include/ui/GraphicBufferAllocator.h	/^    static KeyedVector<buffer_handle_t, alloc_rec_t> sAllocList;$/;"	m	class:android::GraphicBufferAllocator
sAllocList	libs/ui/GraphicBufferAllocator.cpp	/^    GraphicBufferAllocator::alloc_rec_t> GraphicBufferAllocator::sAllocList;$/;"	m	class:android::GraphicBufferAllocator	file:
sAppName	opengl/tests/angeles/app-linux.cpp	/^static const char sAppName[] =$/;"	v	file:
sBandIndex	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sBandIndex;       \/**< Band number to be set.  Upper Limit is$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
sBandLevel	include/media/openmax/OMX_Audio.h	/^    OMX_BS32 sBandLevel;       \/**< band level in millibels *\/$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
sCache	opengl/libs/EGL/egl_cache.cpp	/^egl_cache_t egl_cache_t::sCache;$/;"	m	class:android::egl_cache_t	file:
sCache	opengl/libs/EGL/egl_cache.h	/^    static egl_cache_t sCache;$/;"	m	class:android::egl_cache_t
sCamTracks	opengl/tests/angeles/cams.h	/^static CAMTRACK sCamTracks[] =$/;"	v
sCenterFreq	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sCenterFreq;      \/**< Center frequecies in Hz.  This is a$/;"	m	struct:OMX_AUDIO_CONFIG_EQUALIZERTYPE
sClientApiString	opengl/libs/EGL/egl_display.cpp	/^static char const * const sClientApiString  = "OpenGL_ES";$/;"	m	namespace:android	file:
sCurrentCamTrack	opengl/tests/angeles/demo.c	/^static int sCurrentCamTrack = 0;$/;"	v	file:
sCurrentCamTrackStartTick	opengl/tests/angeles/demo.c	/^static long sCurrentCamTrackStartTick = 0;$/;"	v	file:
sDecayTime	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sDecayTime;          \/**< Late reverberation decay time at low$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sDelay	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sDelay;           \/**< average delay in milliseconds *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
sDisplay	opengl/libs/EGL/egl_display.cpp	/^egl_display_t egl_display_t::sDisplay[NUM_DISPLAYS];$/;"	m	class:android::egl_display_t	file:
sDisplay	opengl/libs/EGL/egl_display.h	/^    static egl_display_t sDisplay[NUM_DISPLAYS];$/;"	m	class:android::egl_display_t
sEGLApplicationTraceLevel	opengl/libs/EGL/egl.cpp	/^static int sEGLApplicationTraceLevel;$/;"	m	namespace:android	file:
sEGLDebugLevel	opengl/libs/EGL/egl.cpp	/^static volatile int sEGLDebugLevel;$/;"	m	namespace:android	file:
sEGLGetErrorEnabled	opengl/libs/EGL/egl.cpp	/^static bool sEGLGetErrorEnabled;$/;"	m	namespace:android	file:
sEGLSystraceEnabled	opengl/libs/EGL/egl.cpp	/^static bool sEGLSystraceEnabled;$/;"	m	namespace:android	file:
sEGLTraceLevel	opengl/libs/EGL/egl.cpp	/^static int sEGLTraceLevel;$/;"	m	namespace:android	file:
sEarlyInitState	opengl/libs/EGL/egl.cpp	/^static int sEarlyInitState = pthread_once(&once_control, &early_egl_init);$/;"	m	namespace:android	file:
sEglContext	opengl/tests/angeles/app-linux.cpp	/^static EGLContext sEglContext = EGL_NO_CONTEXT;$/;"	v	file:
sEglDisplay	opengl/tests/angeles/app-linux.cpp	/^static EGLDisplay sEglDisplay = EGL_NO_DISPLAY;$/;"	v	file:
sEglSurface	opengl/tests/angeles/app-linux.cpp	/^static EGLSurface sEglSurface = EGL_NO_SURFACE;$/;"	v	file:
sEmpty	include/input/KeyCharacterMap.h	/^    static sp<KeyCharacterMap> sEmpty;$/;"	m	class:android::KeyCharacterMap
sEmpty	libs/input/KeyCharacterMap.cpp	/^sp<KeyCharacterMap> KeyCharacterMap::sEmpty = new KeyCharacterMap();$/;"	m	class:android::KeyCharacterMap	file:
sExtendedMode	services/surfaceflinger/SurfaceFlinger.cpp	/^bool SurfaceFlinger::sExtendedMode = false;$/;"	m	class:android::SurfaceFlinger	file:
sExtendedMode	services/surfaceflinger/SurfaceFlinger.h	/^    static bool sExtendedMode;$/;"	m	class:android::SurfaceFlinger
sExtensionMap	opengl/libs/EGL/eglApi.cpp	/^static const extention_map_t sExtensionMap[] = {$/;"	m	namespace:android	file:
sExtensionMapMutex	opengl/libs/EGL/eglApi.cpp	/^static pthread_mutex_t sExtensionMapMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:android	file:
sFlag	opengl/tests/hwc/hwcStress.cpp	/^bool eFlag, sFlag, pFlag;$/;"	v
sFrameSize	include/media/openmax/OMX_IVCommon.h	/^    OMX_FRAMESIZETYPE sFrameSize;$/;"	m	struct:OMX_PARAM_SENSORMODETYPE
sGLExtentionMap	opengl/libs/EGL/eglApi.cpp	/^static DefaultKeyedVector<String8, __eglMustCastToProperFunctionPointerType> sGLExtentionMap;$/;"	m	namespace:android	file:
sGLExtentionSlot	opengl/libs/EGL/eglApi.cpp	/^static int sGLExtentionSlot = 0;$/;"	m	namespace:android	file:
sGLTraceState	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^static GLTraceState *sGLTraceState;$/;"	m	namespace:android	file:
sGlTraceInProgress	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^static int sGlTraceInProgress;$/;"	m	namespace:android	file:
sGlTraceStateLock	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^static pthread_mutex_t sGlTraceStateLock = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:android	file:
sGroundPlane	opengl/tests/angeles/demo.c	/^static GLOBJECT *sGroundPlane = NULL;$/;"	v	file:
sInitDriverMutex	opengl/libs/EGL/egl.cpp	/^static pthread_mutex_t sInitDriverMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:android	file:
sKey	opengl/libs/EGL/egl_tls.cpp	/^pthread_key_t egl_tls_t::sKey = TLS_KEY_NOT_INITIALIZED;$/;"	m	class:android::egl_tls_t	file:
sKey	opengl/libs/EGL/egl_tls.h	/^    static pthread_key_t sKey;$/;"	m	class:android::egl_tls_t
sLanguageCountry	include/media/openmax/OMX_Component.h	/^    OMX_STRING sLanguageCountry;$/;"	m	struct:OMX_CONFIG_METADATAITEMTYPE
sLock	include/ui/GraphicBufferAllocator.h	/^    static Mutex sLock;$/;"	m	class:android::GraphicBufferAllocator
sLock	libs/ui/GraphicBufferAllocator.cpp	/^Mutex GraphicBufferAllocator::sLock;$/;"	m	class:android::GraphicBufferAllocator	file:
sLogPrintMutex	opengl/libs/EGL/egl.cpp	/^static pthread_mutex_t sLogPrintMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:android	file:
sLogPrintTime	opengl/libs/EGL/egl.cpp	/^static nsecs_t sLogPrintTime = 0;$/;"	m	namespace:android	file:
sMaxPolyphony	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sMaxPolyphony;        \/**< Specifies the maximum simultaneous polyphonic$/;"	m	struct:OMX_AUDIO_PARAM_MIDITYPE
sMediaImage	include/media/hardware/HardwareAPI.h	/^    MediaImage sMediaImage;$/;"	m	struct:android::DescribeColorFormatParams
sModulationRate	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sModulationRate;  \/**< rate of modulation in millihertz *\/$/;"	m	struct:OMX_AUDIO_CONFIG_CHORUSTYPE
sNextCamTrackStartTick	opengl/tests/angeles/demo.c	/^static long sNextCamTrackStartTick = 0x7fffffff;$/;"	v	file:
sNextSeqAtomic	services/inputflinger/InputDispatcher.cpp	/^volatile int32_t InputDispatcher::DispatchEntry::sNextSeqAtomic;$/;"	m	class:android::InputDispatcher::DispatchEntry	file:
sNextSeqAtomic	services/inputflinger/InputDispatcher.h	/^        static volatile int32_t sNextSeqAtomic;$/;"	m	struct:android::InputDispatcher::DispatchEntry
sOnceKey	opengl/libs/EGL/egl_tls.cpp	/^pthread_once_t egl_tls_t::sOnceKey = PTHREAD_ONCE_INIT;$/;"	m	class:android::egl_tls_t	file:
sOnceKey	opengl/libs/EGL/egl_tls.h	/^    static pthread_once_t sOnceKey;$/;"	m	class:android::egl_tls_t
sPitchTransposition	include/media/openmax/OMX_Audio.h	/^    OMX_BS32 sPitchTransposition; \/**< Pitch transposition in semitones, stored as Q22.10$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
sPixelFormatInfos	libs/ui/PixelFormat.cpp	/^static Info const sPixelFormatInfos[] = {$/;"	m	namespace:android	file:
sPlayBackRate	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sPlayBackRate;       \/**< Relative playback rate, stored as Q14.17 fixed-point$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
sPthreadOnceKey	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^static pthread_once_t sPthreadOnceKey = PTHREAD_ONCE_INIT;$/;"	m	namespace:android::gltrace	file:
sRandomSeed	opengl/tests/angeles/demo.c	/^static unsigned long sRandomSeed = 0;$/;"	v	file:
sReceiveThreadId	opengl/libs/GLES_trace/src/gltrace_eglapi.cpp	/^static pthread_t sReceiveThreadId;$/;"	m	namespace:android	file:
sReferenceHighFreq	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sReferenceHighFreq;  \/**< Reference high frequency in Hertz. This is$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sReflectionsDelay	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sReflectionsDelay;   \/**< Delay time of the first reflection relative$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sReflectionsLevel	include/media/openmax/OMX_Audio.h	/^    OMX_BS32 sReflectionsLevel;   \/**< Intensity level of early reflections$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sReleasedTexImageBuffer	include/gui/GLConsumer.h	/^    static sp<GraphicBuffer> sReleasedTexImageBuffer;$/;"	m	class:android::GLConsumer
sReleasedTexImageBuffer	libs/gui/GLConsumer.cpp	/^sp<GraphicBuffer> GLConsumer::sReleasedTexImageBuffer;$/;"	m	class:android::GLConsumer	file:
sReverbDelay	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sReverbDelay;        \/**< Time delay from the first early reflection$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sReverbLevel	include/media/openmax/OMX_Audio.h	/^    OMX_BS32 sReverbLevel;        \/**< Intensity level of late reverberation$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sRoomHighFreqLevel	include/media/openmax/OMX_Audio.h	/^    OMX_BS32 sRoomHighFreqLevel;  \/**< Attenuation at high frequencies$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sRoomLevel	include/media/openmax/OMX_Audio.h	/^    OMX_BS32 sRoomLevel;          \/**< Intensity level for the whole room effect$/;"	m	struct:OMX_AUDIO_CONFIG_REVERBERATIONTYPE
sSequence	services/surfaceflinger/Layer.cpp	/^int32_t Layer::sSequence = 1;$/;"	m	class:android::Layer	file:
sSequence	services/surfaceflinger/Layer.h	/^    static int32_t sSequence;$/;"	m	class:android::Layer
sStartTick	opengl/tests/angeles/demo.c	/^static long sStartTick = 0;$/;"	v	file:
sStartTime	services/sensorservice/tests/sensorservicetest.cpp	/^static nsecs_t sStartTime = 0;$/;"	v	file:
sStaticInitLock	include/gui/GLConsumer.h	/^    static Mutex sStaticInitLock;$/;"	m	class:android::GLConsumer
sStaticInitLock	libs/gui/GLConsumer.cpp	/^Mutex GLConsumer::sStaticInitLock;$/;"	m	class:android::GLConsumer	file:
sSuperShapeObjects	opengl/tests/angeles/demo.c	/^static GLOBJECT *sSuperShapeObjects[SUPERSHAPE_COUNT] = { NULL };$/;"	v	file:
sSuperShapeParams	opengl/tests/angeles/shapes.h	/^static const float sSuperShapeParams[][SUPERSHAPE_PARAMS] =$/;"	v
sTLSKey	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^static pthread_key_t sTLSKey = -1;$/;"	m	namespace:android::gltrace	file:
sTempo	include/media/openmax/OMX_Audio.h	/^    OMX_BU32 sTempo ;             \/**< Tempo in beats per minute (BPM), stored as Q22.10$/;"	m	struct:OMX_AUDIO_CONFIG_MIDICONTROLTYPE
sTick	opengl/tests/angeles/demo.c	/^static long sTick = 0;$/;"	v	file:
sVendorString	opengl/libs/EGL/egl_display.cpp	/^static char const * const sVendorString     = "Android";$/;"	m	namespace:android	file:
sVersionString	opengl/libs/EGL/egl_display.cpp	/^static char const * const sVersionString    = "1.4 Android META-EGL";$/;"	m	namespace:android	file:
sVolume	include/media/openmax/OMX_Audio.h	/^    OMX_BS32 sVolume;           \/**< Volume linear setting in the 0..100 range, OR$/;"	m	struct:OMX_AUDIO_CONFIG_CHANNELVOLUMETYPE
sVolume	include/media/openmax/OMX_Audio.h	/^    OMX_BS32 sVolume;           \/**< Volume linear setting in the 0..100 range, OR$/;"	m	struct:OMX_AUDIO_CONFIG_VOLUMETYPE
sWindowHeight	opengl/tests/angeles/app-linux.cpp	/^static int sWindowHeight = WINDOW_DEFAULT_HEIGHT;$/;"	v	file:
sWindowWidth	opengl/tests/angeles/app-linux.cpp	/^static int sWindowWidth = WINDOW_DEFAULT_WIDTH;$/;"	v	file:
sXSearchRange	include/media/openmax/OMX_Video.h	/^    OMX_S32 sXSearchRange;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
sYSearchRange	include/media/openmax/OMX_Video.h	/^    OMX_S32 sYSearchRange;$/;"	m	struct:OMX_VIDEO_PARAM_MOTIONVECTORTYPE
s_configAttribs2	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNIView.java	/^        private static int[] s_configAttribs2 =$/;"	f	class:GL2JNIView.ConfigChooser	file:
s_configAttribs2	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfView.java	/^        private static int[] s_configAttribs2 =$/;"	f	class:GLPerfView.ConfigChooser	file:
s_configAttribs2	opengl/tests/gldual/src/com/android/gldual/GLDualGL2View.java	/^        private static int[] s_configAttribs2 =$/;"	f	class:GLDualGL2View.ConfigChooser	file:
safeGetValue	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^bool GLTraceState::safeGetValue(bool *ptr, pthread_rwlock_t *lock) {$/;"	f	class:android::gltrace::GLTraceState
safeSetValue	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceState::safeSetValue(bool *ptr, bool value, pthread_rwlock_t *lock) {$/;"	f	class:android::gltrace::GLTraceState
samples	include/input/InputTransport.h	/^        Vector<InputMessage> samples;$/;"	m	struct:android::InputConsumer::Batch
saveBlobCacheLocked	opengl/libs/EGL/egl_cache.cpp	/^void egl_cache_t::saveBlobCacheLocked() {$/;"	f	class:android::egl_cache_t
sc	opengl/tests/hwc/hwcCommit.cpp	/^    } sc;$/;"	m	struct:meas	typeref:struct:meas::sourceCrop	file:
scHScale	opengl/tests/hwc/hwcCommit.cpp	/^Rational scHScale(uint32_t format,$/;"	f
scMaxDim	opengl/tests/hwc/hwcCommit.cpp	/^HwcTestDim scMaxDim(uint32_t format, const HwcTestDim& dfDim)$/;"	f
scMaxHeight	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t scMaxHeight(uint32_t format, const HwcTestDim& dfDim)$/;"	f
scMaxWidth	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t scMaxWidth(uint32_t format, const HwcTestDim& dfDim)$/;"	f
scMinDim	opengl/tests/hwc/hwcCommit.cpp	/^HwcTestDim scMinDim(uint32_t format, const HwcTestDim& dfDim)$/;"	f
scMinHeight	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t scMinHeight(uint32_t format, const HwcTestDim& dfDim)$/;"	f
scMinWidth	opengl/tests/hwc/hwcCommit.cpp	/^uint32_t scMinWidth(uint32_t format, const HwcTestDim& dfDim)$/;"	f
scVScale	opengl/tests/hwc/hwcCommit.cpp	/^Rational scVScale(uint32_t format,$/;"	f
scale	include/input/VelocityControl.h	/^    float scale;$/;"	m	struct:android::VelocityControlParameters
scale	include/ui/mat4.h	/^tmat44<T> tmat44<T>::scale(const tvec4<A>& s) {$/;"	f	class:android::tmat44
scale	libs/input/Input.cpp	/^void MotionEvent::scale(float scaleFactor) {$/;"	f	class:android::MotionEvent
scale	libs/input/Input.cpp	/^void PointerCoords::scale(float scaleFactor) {$/;"	f	class:android::PointerCoords
scale	opengl/libagl/matrix.cpp	/^void matrix_stack_t::scale(GLfloat x, GLfloat y, GLfloat z)$/;"	f	class:android::matrix_stack_t
scale	opengl/libagl/matrix.cpp	/^void matrixf_t::scale(GLfloat x, GLfloat y, GLfloat z) {$/;"	f	class:android::matrixf_t
scale	services/inputflinger/InputReader.h	/^        float scale;   \/\/ scale factor from raw to normalized values$/;"	m	struct:android::JoystickInputMapper::Axis
scaleAxisValue	libs/input/Input.cpp	/^static inline void scaleAxisValue(PointerCoords& c, int axis, float scaleFactor) {$/;"	f	namespace:android
scaleCovariance	services/sensorservice/Fusion.cpp	/^static mat<TYPE, R, R> scaleCovariance($/;"	f	namespace:android
scaleFactor	services/inputflinger/InputDispatcher.h	/^        float scaleFactor;$/;"	m	struct:android::InputDispatcher::DispatchEntry
scaleFactor	services/inputflinger/InputDispatcher.h	/^    float scaleFactor;$/;"	m	struct:android::InputTarget
scaleFactor	services/inputflinger/InputWindow.h	/^    float scaleFactor;$/;"	m	struct:android::InputWindowInfo
scalingMode	include/gui/CpuConsumer.h	/^        uint32_t    scalingMode;$/;"	m	struct:android::CpuConsumer::LockedBuffer
scalingMode	include/gui/IGraphicBufferProducer.h	/^        int scalingMode;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferInput
scalingMode	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        int scalingMode;$/;"	m	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder	file:
scalingModeName	libs/gui/BufferItem.cpp	/^const char* BufferItem::scalingModeName(uint32_t scalingMode) {$/;"	f	class:android::BufferItem
scanCode	include/input/InputTransport.h	/^            int32_t scanCode;$/;"	m	struct:android::InputMessage::Body::Key
scanCode	include/input/VirtualKeyMap.h	/^    int32_t scanCode;$/;"	m	struct:android::VirtualKeyDefinition
scanCode	services/inputflinger/InputDispatcher.h	/^            int32_t scanCode;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
scanCode	services/inputflinger/InputDispatcher.h	/^        int32_t scanCode;$/;"	m	struct:android::InputDispatcher::KeyEntry
scanCode	services/inputflinger/InputListener.h	/^    int32_t scanCode;$/;"	m	struct:android::NotifyKeyArgs
scanCode	services/inputflinger/InputReader.h	/^        int32_t scanCode;$/;"	m	struct:android::KeyboardInputMapper::KeyDown
scanCode	services/inputflinger/InputReader.h	/^        int32_t scanCode;$/;"	m	struct:android::TouchInputMapper::CurrentVirtualKeyState
scanCode	services/inputflinger/InputReader.h	/^        int32_t scanCode;$/;"	m	struct:android::TouchInputMapper::VirtualKey
scanCodeStates	services/inputflinger/tests/InputReader_test.cpp	/^        KeyedVector<int32_t, int32_t> scanCodeStates;$/;"	m	struct:android::FakeEventHub::Device	file:
scanDevicesLocked	services/inputflinger/EventHub.cpp	/^void EventHub::scanDevicesLocked() {$/;"	f	class:android::EventHub
scanDirLocked	services/inputflinger/EventHub.cpp	/^status_t EventHub::scanDirLocked(const char *dirname)$/;"	f	class:android::EventHub
scanForFds	libs/binder/Parcel.cpp	/^void Parcel::scanForFds() const$/;"	f	class:android::Parcel
scissor	opengl/libagl/context.h	/^    } scissor;$/;"	m	struct:android::gl::viewport_t	typeref:struct:android::gl::viewport_t::__anon230
scissorEnabled	services/surfaceflinger/LayerBlur.cpp	/^    bool scissorEnabled;$/;"	m	class:android::ScopedScissorDisabler	file:
score	opengl/libs/ETC1/etc1.cpp	/^    etc1_uint32 score; \/\/ Lower is more accurate$/;"	m	struct:__anon238	file:
screenshot_path	cmds/dumpstate/dumpstate.c	/^static char screenshot_path[PATH_MAX] = "";$/;"	v	file:
sdkVersion	include/android/native_activity.h	/^    int32_t sdkVersion;$/;"	m	struct:ANativeActivity
searchLimits	opengl/tests/hwc/hwcCommit.cpp	/^const struct searchLimits {$/;"	s	file:
searchLimits	opengl/tests/hwc/hwcCommit.cpp	/^} searchLimits = {$/;"	v	typeref:struct:searchLimits
secure	include/ui/DisplayInfo.h	/^    bool secure;$/;"	m	struct:android::DisplayInfo
secure	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        bool secure;$/;"	m	struct:android::HWComposer::DisplayConfig
seedRandom	opengl/tests/angeles/demo.c	/^static void seedRandom(unsigned long seed)$/;"	f	file:
sehandle	cmds/servicemanager/service_manager.c	/^static struct selabel_handle* sehandle;$/;"	v	typeref:struct:selabel_handle	file:
selectBatchParams	services/sensorservice/SensorDevice.cpp	/^void SensorDevice::Info::selectBatchParams() {$/;"	f	class:android::SensorDevice::Info
selectConfigForAttribute	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^static status_t selectConfigForAttribute(EGLDisplay dpy, EGLint const* attrs,$/;"	f	namespace:android
selectConfigForNativeWindow	opengl/tests/include/EGLUtils.h	/^status_t EGLUtils::selectConfigForNativeWindow($/;"	f	class:android::EGLUtils
selectConfigForPixelFormat	opengl/tests/include/EGLUtils.h	/^status_t EGLUtils::selectConfigForPixelFormat($/;"	f	class:android::EGLUtils
selectEGLConfig	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^static status_t selectEGLConfig(EGLDisplay display, EGLint format,$/;"	f	namespace:android
self	libs/binder/IPCThreadState.cpp	/^IPCThreadState* IPCThreadState::self()$/;"	f	class:android::IPCThreadState
self	libs/binder/ProcessState.cpp	/^sp<ProcessState> ProcessState::self()$/;"	f	class:android::ProcessState
selfOrNull	libs/binder/IPCThreadState.cpp	/^IPCThreadState* IPCThreadState::selfOrNull()$/;"	f	class:android::IPCThreadState
selinux_enabled	cmds/servicemanager/service_manager.c	/^static int selinux_enabled;$/;"	v	file:
send	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^int BufferedOutputStream::send(GLMessage *msg) {$/;"	f	class:android::gltrace::BufferedOutputStream
send	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^int TCPStream::send(void *buf, size_t len) {$/;"	f	class:android::gltrace::TCPStream
sendAck	libs/gui/SensorEventQueue.cpp	/^void SensorEventQueue::sendAck(const ASensorEvent* events, int count) {$/;"	f	class:android::SensorEventQueue
sendEvent	include/media/drm/DrmAPI.h	/^    inline void DrmPlugin::sendEvent(EventType eventType, int extra,$/;"	f	class:android::DrmPlugin
sendEvents	libs/gui/DisplayEventReceiver.cpp	/^ssize_t DisplayEventReceiver::sendEvents(const sp<BitTube>& dataChannel,$/;"	f	class:android::DisplayEventReceiver
sendEvents	services/sensorservice/SensorService.cpp	/^status_t SensorService::SensorEventConnection::sendEvents($/;"	f	class:android::SensorService::SensorEventConnection
sendEventsFromCache	services/sensorservice/SensorService.cpp	/^void SensorService::sendEventsFromCache(const sp<SensorEventConnection>& connection) {$/;"	f	class:android::SensorService
sendFd	libs/input/tests/TestHelpers.h	/^    int sendFd;$/;"	m	class:android::Pipe
sendFinishedSignal	libs/input/InputTransport.cpp	/^status_t InputConsumer::sendFinishedSignal(uint32_t seq, bool handled) {$/;"	f	class:android::InputConsumer
sendMessage	libs/input/InputTransport.cpp	/^status_t InputChannel::sendMessage(const InputMessage* msg) {$/;"	f	class:android::InputChannel
sendObituary	libs/binder/BpBinder.cpp	/^void BpBinder::sendObituary()$/;"	f	class:android::BpBinder
sendObjects	include/gui/BitTube.h	/^    static ssize_t sendObjects(const sp<BitTube>& tube,$/;"	f	class:android::BitTube
sendObjects	libs/gui/BitTube.cpp	/^ssize_t BitTube::sendObjects(const sp<BitTube>& tube,$/;"	f	class:android::BitTube
sendPendingFlushEventsLocked	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::sendPendingFlushEventsLocked() {$/;"	f	class:android::SensorService::SensorEventConnection
sendReply	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::sendReply(const Parcel& reply, uint32_t flags)$/;"	f	class:android::IPCThreadState
sendUnchainedFinishedSignal	libs/input/InputTransport.cpp	/^status_t InputConsumer::sendUnchainedFinishedSignal(uint32_t seq, bool handled) {$/;"	f	class:android::InputConsumer
sendVsyncHintOff	services/surfaceflinger/EventThread.cpp	/^void EventThread::sendVsyncHintOff() {$/;"	f	class:android::EventThread
sendVsyncHintOnLocked	services/surfaceflinger/EventThread.cpp	/^void EventThread::sendVsyncHintOnLocked() {$/;"	f	class:android::EventThread
sensor	include/android/sensor.h	/^    int32_t sensor;$/;"	m	struct:AMetaDataEvent
sensor	include/android/sensor.h	/^    int32_t sensor;$/;"	m	struct:ASensorEvent
sensorManagerDied	libs/gui/SensorManager.cpp	/^void SensorManager::sensorManagerDied()$/;"	f	class:android::SensorManager
seq	include/input/InputTransport.h	/^            uint32_t seq;$/;"	m	struct:android::InputMessage::Body::Finished
seq	include/input/InputTransport.h	/^            uint32_t seq;$/;"	m	struct:android::InputMessage::Body::Key
seq	include/input/InputTransport.h	/^            uint32_t seq;$/;"	m	struct:android::InputMessage::Body::Motion
seq	include/input/InputTransport.h	/^        uint32_t seq;   \/\/ sequence number of batched input message$/;"	m	struct:android::InputConsumer::SeqChain
seq	libs/binder/BufferedTextOutput.cpp	/^    const int32_t seq;$/;"	m	struct:android::BufferedTextOutput::BufferState	file:
seq	services/inputflinger/InputDispatcher.h	/^        const uint32_t seq; \/\/ unique sequence number, never 0$/;"	m	struct:android::InputDispatcher::DispatchEntry
seq	services/inputflinger/InputDispatcher.h	/^        uint32_t seq;$/;"	m	struct:android::InputDispatcher::CommandEntry
sequence	opengl/libagl/context.h	/^    uint32_t        sequence;$/;"	m	struct:android::gl::vertex_cache_t
sequence	services/surfaceflinger/Layer.h	/^        int32_t sequence; \/\/ changes when visible regions can change$/;"	m	struct:android::Layer::State
sequence	services/surfaceflinger/Layer.h	/^    int32_t sequence;$/;"	m	class:android::Layer
serverChannel	libs/input/tests/InputPublisherAndConsumer_test.cpp	/^    sp<InputChannel> serverChannel, clientChannel;$/;"	m	class:android::InputPublisherAndConsumerTest	file:
service_manager_context	cmds/servicemanager/service_manager.c	/^static char *service_manager_context;$/;"	v	file:
set	include/ui/Rect.h	/^    inline void set(const Rect& rhs) { operator = (rhs); }$/;"	f	class:android::Rect
set	libs/ui/Region.cpp	/^void Region::set(const Rect& r)$/;"	f	class:android::Region
set	libs/ui/Region.cpp	/^void Region::set(uint32_t w, uint32_t h)$/;"	f	class:android::Region
set	opengl/libagl/matrix.cpp	/^void matrixf_t::set(const GLfixed* rhs) {$/;"	f	class:android::matrixf_t
set	opengl/libagl/matrix.cpp	/^void matrixf_t::set(const GLfloat* rhs) {$/;"	f	class:android::matrixf_t
set	opengl/libs/EGL/Loader.cpp	/^status_t Loader::driver_t::set(void* hnd, int32_t api)$/;"	f	class:android::Loader::driver_t
set	opengl/tests/testViewport/src/com/android/test/TestView.java	/^       public void set(int i, int j, float x, float y, float z) {$/;"	m	class:TestView.Grid
set	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        inline Key& set(key_t mask, key_t value) {$/;"	f	class:android::ProgramCache::Key
set	services/surfaceflinger/Transform.cpp	/^status_t Transform::set(uint32_t flags, float w, float h)$/;"	f	class:android::Transform
set	services/surfaceflinger/Transform.cpp	/^void Transform::set(float a, float b, float c, float d)$/;"	f	class:android::Transform
set	services/surfaceflinger/Transform.cpp	/^void Transform::set(float tx, float ty)$/;"	f	class:android::Transform
setAbsoluteAxisValue	services/inputflinger/tests/InputReader_test.cpp	/^    void setAbsoluteAxisValue(int32_t deviceId, int32_t axis, int32_t value) {$/;"	f	class:android::FakeEventHub
setAcceleration	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public void setAcceleration(float[] accelerationVector) {$/;"	m	class:CamRenderer
setAcquireFence	services/surfaceflinger/Layer.cpp	/^void Layer::setAcquireFence(const sp<const DisplayDevice>& \/* hw *\/,$/;"	f	class:android::Layer
setAcquireFenceFd	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setAcquireFenceFd(int fenceFd) {$/;"	f	class:android::HWCLayerVersion1
setAction	include/input/Input.h	/^    inline void setAction(int32_t action) { mAction = action; }$/;"	f	class:android::MotionEvent
setActiveConfig	libs/gui/ISurfaceComposer.cpp	/^    virtual status_t setActiveConfig(const sp<IBinder>& display, int id)$/;"	f	class:android::BpSurfaceComposer
setActiveConfig	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setActiveConfig(const sp<IBinder>& display, int id) {$/;"	f	class:android::SurfaceComposerClient
setActiveConfig	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::setActiveConfig(int mode) {$/;"	f	class:DisplayDevice
setActiveConfig	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::setActiveConfig(int disp, int mode) {$/;"	f	class:android::HWComposer
setActiveConfig	services/surfaceflinger/SurfaceFlinger.cpp	/^status_t SurfaceFlinger::setActiveConfig(const sp<IBinder>& display, int mode) {$/;"	f	class:android::SurfaceFlinger
setActiveConfigInternal	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::setActiveConfigInternal(const sp<DisplayDevice>& hw, int mode) {$/;"	f	class:android::SurfaceFlinger
setActualPresentFence	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::setActualPresentFence(const sp<Fence>& readyFence) {$/;"	f	class:android::FrameTracker
setActualPresentTime	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::setActualPresentTime(nsecs_t presentTime) {$/;"	f	class:android::FrameTracker
setAlignment	include/binder/TextOutput.h	/^inline HexDump& HexDump::setAlignment(size_t alignment) {$/;"	f	class:android::HexDump
setAlpha	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setAlpha(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setAlpha	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setAlpha(const sp<IBinder>& id, float alpha) {$/;"	f	class:android::SurfaceComposerClient
setAlpha	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setAlpha(float alpha) {$/;"	f	class:android::SurfaceControl
setAlpha	services/surfaceflinger/Layer.cpp	/^bool Layer::setAlpha(uint8_t alpha) {$/;"	f	class:android::Layer
setAnimating	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setAnimating(bool animating) {$/;"	f	class:android::HWCLayerVersion1
setAnimationTransaction	libs/gui/SurfaceComposerClient.cpp	/^    static void setAnimationTransaction() {$/;"	f	class:android::Composer
setAnimationTransaction	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::setAnimationTransaction() {$/;"	f	class:android::SurfaceComposerClient
setAnimationTransactionImpl	libs/gui/SurfaceComposerClient.cpp	/^void Composer::setAnimationTransactionImpl() {$/;"	f	class:android::Composer
setAppCmdlineProperty	cmds/atrace/atrace.cpp	/^static bool setAppCmdlineProperty(const char* cmdline)$/;"	f	file:
setAsync	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        QueueBufferInputBuilder& setAsync(bool async) {$/;"	f	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder
setAxisValue	libs/input/Input.cpp	/^status_t PointerCoords::setAxisValue(int32_t axis, float value) {$/;"	f	class:android::PointerCoords
setBaseType	opengl/tools/glgen/src/CType.java	/^    public void setBaseType(String baseType) {$/;"	m	class:CType
setBatchParamsForIdent	services/sensorservice/SensorDevice.cpp	/^status_t SensorDevice::Info::setBatchParamsForIdent(void* ident, int flags,$/;"	f	class:android::SensorDevice::Info
setBlending	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setBlending(uint32_t blending) {$/;"	f	class:android::HWCLayerVersion1
setBlob	opengl/libs/EGL/egl_cache.cpp	/^static void setBlob(const void* key, EGLsizeiANDROID keySize,$/;"	f	namespace:android
setBlob	opengl/libs/EGL/egl_cache.cpp	/^void egl_cache_t::setBlob(const void* key, EGLsizeiANDROID keySize,$/;"	f	class:android::egl_cache_t
setBlur	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setBlur(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setBlur	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setBlur(const sp<IBinder>& id, float blur) {$/;"	f	class:android::SurfaceComposerClient
setBlur	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setBlur(float blur) {$/;"	f	class:android::SurfaceControl
setBlur	services/surfaceflinger/Layer.cpp	/^bool Layer::setBlur(uint8_t blur) {$/;"	f	class:android::Layer
setBlurMaskAlphaThreshold	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setBlurMaskAlphaThreshold(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setBlurMaskAlphaThreshold	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setBlurMaskAlphaThreshold(const sp<IBinder>& id, float alpha) {$/;"	f	class:android::SurfaceComposerClient
setBlurMaskAlphaThreshold	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setBlurMaskAlphaThreshold(float alpha) {$/;"	f	class:android::SurfaceControl
setBlurMaskAlphaThreshold	services/surfaceflinger/Layer.h	/^    virtual bool setBlurMaskAlphaThreshold(float \/*alpha*\/) { return false; }$/;"	f	class:android::Layer
setBlurMaskAlphaThreshold	services/surfaceflinger/LayerBlur.h	/^    virtual bool setBlurMaskAlphaThreshold(float alpha) { mBlurMaskAlphaThreshold = alpha; return true; }$/;"	f	class:android::LayerBlur
setBlurMaskLayer	services/surfaceflinger/Layer.h	/^    virtual bool setBlurMaskLayer(sp<Layer>& \/*maskLayer*\/) { return false; }$/;"	f	class:android::Layer
setBlurMaskLayer	services/surfaceflinger/LayerBlur.cpp	/^bool LayerBlur::setBlurMaskLayer(sp<Layer>& maskLayer) {$/;"	f	class:android::LayerBlur
setBlurMaskSampling	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setBlurMaskSampling(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setBlurMaskSampling	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setBlurMaskSampling(const sp<IBinder>& id, int32_t blurMaskSampling) {$/;"	f	class:android::SurfaceComposerClient
setBlurMaskSampling	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setBlurMaskSampling(int32_t blurMaskSampling) {$/;"	f	class:android::SurfaceControl
setBlurMaskSampling	services/surfaceflinger/Layer.h	/^    virtual bool setBlurMaskSampling(int32_t \/*sampling*\/) { return false; }$/;"	f	class:android::Layer
setBlurMaskSampling	services/surfaceflinger/LayerBlur.h	/^    virtual bool setBlurMaskSampling(int32_t sampling) { mBlurMaskSampling = sampling; return true; }$/;"	f	class:android::LayerBlur
setBlurMaskSurface	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setBlurMaskSurface(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setBlurMaskSurface	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setBlurMaskSurface(const sp<IBinder>& id, const sp<IBinder>& maskSurfaceId) {$/;"	f	class:android::SurfaceComposerClient
setBlurMaskSurface	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setBlurMaskSurface(const sp<SurfaceControl>& maskSurface) {$/;"	f	class:android::SurfaceControl
setBounds	services/inputflinger/tests/InputReader_test.cpp	/^    void setBounds(float minX, float minY, float maxX, float maxY) {$/;"	f	class:android::FakePointerController
setBuffer	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setBuffer(const sp<GraphicBuffer>& buffer) {$/;"	f	class:android::HWCLayerVersion1
setBufferCount	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::setBufferCount(int bufferCount) {$/;"	f	class:android::BufferQueueProducer
setBufferCount	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t setBufferCount(int bufferCount)$/;"	f	class:android::BpGraphicBufferProducer
setBufferCount	libs/gui/Surface.cpp	/^int Surface::setBufferCount(int bufferCount)$/;"	f	class:android::Surface
setBufferCount	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::setBufferCount(int bufferCount) {$/;"	f	class:android::VirtualDisplaySurface
setBufferCount	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::setBufferCount(int bufferCount) {$/;"	f	class:android::MonitoredProducer
setBuffers	services/surfaceflinger/Layer.cpp	/^status_t Layer::setBuffers( uint32_t w, uint32_t h,$/;"	f	class:android::Layer
setBuffersDimensions	libs/gui/Surface.cpp	/^int Surface::setBuffersDimensions(int w, int h)$/;"	f	class:android::Surface
setBuffersFormat	libs/gui/Surface.cpp	/^int Surface::setBuffersFormat(int format)$/;"	f	class:android::Surface
setBuffersSize	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::setBuffersSize(int size) {$/;"	f	class:android::BufferQueueProducer
setBuffersSize	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t setBuffersSize(int size) {$/;"	f	class:android::BpGraphicBufferProducer
setBuffersSize	libs/gui/Surface.cpp	/^int Surface::setBuffersSize(int size)$/;"	f	class:android::Surface
setBuffersSize	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::setBuffersSize(int size) {$/;"	f	class:android::VirtualDisplaySurface
setBuffersSize	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::setBuffersSize(int size) {$/;"	f	class:android::MonitoredProducer
setBuffersStickyTransform	libs/gui/Surface.cpp	/^int Surface::setBuffersStickyTransform(int transform)$/;"	f	class:android::Surface
setBuffersTimestamp	libs/gui/Surface.cpp	/^int Surface::setBuffersTimestamp(int64_t timestamp)$/;"	f	class:android::Surface
setBuffersTransform	libs/gui/Surface.cpp	/^int Surface::setBuffersTransform(int transform)$/;"	f	class:android::Surface
setBuffersUserDimensions	libs/gui/Surface.cpp	/^int Surface::setBuffersUserDimensions(int w, int h)$/;"	f	class:android::Surface
setButtonState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void setButtonState(int32_t buttonState) {$/;"	f	class:android::FakePointerController
setButtonUnderPad	include/input/InputDevice.h	/^    inline void setButtonUnderPad(bool hasButton) { mHasButtonUnderPad = hasButton; }$/;"	f	class:android::InputDeviceInfo
setBytesPerLine	include/binder/TextOutput.h	/^inline HexDump& HexDump::setBytesPerLine(size_t bytesPerLine) {$/;"	f	class:android::HexDump
setCArrayStyle	include/binder/TextOutput.h	/^inline HexDump& HexDump::setCArrayStyle(bool enabled) {$/;"	f	class:android::HexDump
setCacheFilename	opengl/libs/EGL/egl_cache.cpp	/^void egl_cache_t::setCacheFilename(const char* filename) {$/;"	f	class:android::egl_cache_t
setCallback	services/surfaceflinger/SurfaceFlinger.cpp	/^    virtual void setCallback(const sp<VSyncSource::Callback>& callback) {$/;"	f	class:android::DispSyncSource
setCamera	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public void setCamera(Camera camera) {$/;"	m	class:CamRenderer
setCategoryEnable	cmds/atrace/atrace.cpp	/^static bool setCategoryEnable(const char* name, bool enable)$/;"	f	file:
setClassName	opengl/tools/glgen/src/JFunc.java	/^    public void setClassName(String className) {$/;"	m	class:JFunc
setClientStateLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^uint32_t SurfaceFlinger::setClientStateLocked($/;"	f	class:android::SurfaceFlinger
setCollectFbOnEglSwap	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceState::setCollectFbOnEglSwap(bool en) {$/;"	f	class:android::gltrace::GLTraceState
setCollectFbOnGlDraw	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceState::setCollectFbOnGlDraw(bool en) {$/;"	f	class:android::gltrace::GLTraceState
setCollectTextureDataOnGlTexImage	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceState::setCollectTextureDataOnGlTexImage(bool en) {$/;"	f	class:android::gltrace::GLTraceState
setColor	services/surfaceflinger/RenderEngine/Description.cpp	/^void Description::setColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha) {$/;"	f	class:android::Description
setColorMatrix	services/surfaceflinger/RenderEngine/Description.cpp	/^void Description::setColorMatrix(const mat4& mtx) {$/;"	f	class:android::Description
setConsumerName	libs/gui/BufferQueueConsumer.cpp	/^void BufferQueueConsumer::setConsumerName(const String8& name) {$/;"	f	class:android::BufferQueueConsumer
setConsumerName	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual void setConsumerName(const String8& name) {$/;"	f	class:android::BpGraphicBufferConsumer
setConsumerUsageBits	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::setConsumerUsageBits(uint32_t usage) {$/;"	f	class:android::BufferQueueConsumer
setConsumerUsageBits	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::setConsumerUsageBits(uint32_t usage) {$/;"	f	class:android::GLConsumer
setConsumerUsageBits	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t setConsumerUsageBits(uint32_t usage) {$/;"	f	class:android::BpGraphicBufferConsumer
setContentsChangedListener	services/surfaceflinger/SurfaceFlingerConsumer.cpp	/^void SurfaceFlingerConsumer::setContentsChangedListener($/;"	f	class:android::SurfaceFlingerConsumer
setContext	opengl/libs/EGL/egl_tls.cpp	/^void egl_tls_t::setContext(EGLContext ctx) {$/;"	f	class:android::egl_tls_t
setContextObject	libs/binder/ProcessState.cpp	/^void ProcessState::setContextObject(const sp<IBinder>& object)$/;"	f	class:android::ProcessState
setContextObject	libs/binder/ProcessState.cpp	/^void ProcessState::setContextObject(const sp<IBinder>& object, const String16& name)$/;"	f	class:android::ProcessState
setCoveredRegion	services/surfaceflinger/Layer.cpp	/^void Layer::setCoveredRegion(const Region& coveredRegion) {$/;"	f	class:android::Layer
setCrop	libs/gui/Surface.cpp	/^int Surface::setCrop(Rect const* rect)$/;"	f	class:android::Surface
setCrop	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setCrop(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setCrop	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setCrop(const sp<IBinder>& id, const Rect& crop) {$/;"	f	class:android::SurfaceComposerClient
setCrop	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setCrop(const Rect& crop) {$/;"	f	class:android::SurfaceControl
setCrop	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        QueueBufferInputBuilder& setCrop(Rect crop) {$/;"	f	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder
setCrop	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setCrop(const FloatRect& crop) {$/;"	f	class:android::HWCLayerVersion1
setCrop	services/surfaceflinger/Layer.cpp	/^bool Layer::setCrop(const Rect& crop) {$/;"	f	class:android::Layer
setCursorPositionAsync	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::setCursorPositionAsync(int32_t id, const Rect& pos)$/;"	f	class:android::HWComposer
setData	libs/binder/Parcel.cpp	/^status_t Parcel::setData(const uint8_t* buffer, size_t len)$/;"	f	class:android::Parcel
setDataCapacity	libs/binder/Parcel.cpp	/^status_t Parcel::setDataCapacity(size_t size)$/;"	f	class:android::Parcel
setDataPosition	libs/binder/Parcel.cpp	/^void Parcel::setDataPosition(size_t pos) const$/;"	f	class:android::Parcel
setDataSize	libs/binder/Parcel.cpp	/^status_t Parcel::setDataSize(size_t size)$/;"	f	class:android::Parcel
setDefaultBufferFormat	libs/gui/BufferItemConsumer.cpp	/^status_t BufferItemConsumer::setDefaultBufferFormat(uint32_t defaultFormat) {$/;"	f	class:android::BufferItemConsumer
setDefaultBufferFormat	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::setDefaultBufferFormat(uint32_t defaultFormat) {$/;"	f	class:android::BufferQueueConsumer
setDefaultBufferFormat	libs/gui/CpuConsumer.cpp	/^status_t CpuConsumer::setDefaultBufferFormat(uint32_t defaultFormat)$/;"	f	class:android::CpuConsumer
setDefaultBufferFormat	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::setDefaultBufferFormat(uint32_t defaultFormat) {$/;"	f	class:android::GLConsumer
setDefaultBufferFormat	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t setDefaultBufferFormat(uint32_t defaultFormat) {$/;"	f	class:android::BpGraphicBufferConsumer
setDefaultBufferSize	libs/gui/BufferItemConsumer.cpp	/^status_t BufferItemConsumer::setDefaultBufferSize(uint32_t w, uint32_t h) {$/;"	f	class:android::BufferItemConsumer
setDefaultBufferSize	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::setDefaultBufferSize(uint32_t width,$/;"	f	class:android::BufferQueueConsumer
setDefaultBufferSize	libs/gui/CpuConsumer.cpp	/^status_t CpuConsumer::setDefaultBufferSize(uint32_t width, uint32_t height)$/;"	f	class:android::CpuConsumer
setDefaultBufferSize	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::setDefaultBufferSize(uint32_t w, uint32_t h)$/;"	f	class:android::GLConsumer
setDefaultBufferSize	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t setDefaultBufferSize(uint32_t w, uint32_t h) {$/;"	f	class:android::BpGraphicBufferConsumer
setDefaultMaxBufferCount	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::setDefaultMaxBufferCount(int bufferCount) {$/;"	f	class:android::BufferQueueConsumer
setDefaultMaxBufferCount	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::setDefaultMaxBufferCount(int bufferCount) {$/;"	f	class:android::GLConsumer
setDefaultMaxBufferCount	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t setDefaultMaxBufferCount(int bufferCount) {$/;"	f	class:android::BpGraphicBufferConsumer
setDefaultMaxBufferCountLocked	libs/gui/BufferQueueCore.cpp	/^status_t BufferQueueCore::setDefaultMaxBufferCountLocked(int count) {$/;"	f	class:android::BufferQueueCore
setDefaultState	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setDefaultState() {$/;"	f	class:android::HWCLayerVersion1
setDelay	services/sensorservice/CorrectedGyroSensor.cpp	/^status_t CorrectedGyroSensor::setDelay(void* ident, int \/*handle*\/, int64_t ns) {$/;"	f	class:android::CorrectedGyroSensor
setDelay	services/sensorservice/GravitySensor.cpp	/^status_t GravitySensor::setDelay(void* ident, int \/*handle*\/, int64_t ns) {$/;"	f	class:android::GravitySensor
setDelay	services/sensorservice/LinearAccelerationSensor.cpp	/^status_t LinearAccelerationSensor::setDelay(void* ident, int handle, int64_t ns) {$/;"	f	class:android::LinearAccelerationSensor
setDelay	services/sensorservice/OrientationSensor.cpp	/^status_t OrientationSensor::setDelay(void* ident, int \/*handle*\/, int64_t ns) {$/;"	f	class:android::OrientationSensor
setDelay	services/sensorservice/RotationVectorSensor.cpp	/^status_t GyroDriftSensor::setDelay(void* ident, int \/*handle*\/, int64_t ns) {$/;"	f	class:android::GyroDriftSensor
setDelay	services/sensorservice/RotationVectorSensor.cpp	/^status_t RotationVectorSensor::setDelay(void* ident, int \/*handle*\/, int64_t ns) {$/;"	f	class:android::RotationVectorSensor
setDelay	services/sensorservice/SensorDevice.cpp	/^status_t SensorDevice::setDelay(void* ident, int handle, int64_t samplingPeriodNs)$/;"	f	class:android::SensorDevice
setDelay	services/sensorservice/SensorFusion.cpp	/^status_t SensorFusion::setDelay(void* ident, int64_t ns) {$/;"	f	class:android::SensorFusion
setDelay	services/sensorservice/SensorInterface.cpp	/^status_t HardwareSensor::setDelay(void* ident, int handle, int64_t ns) {$/;"	f	class:android::HardwareSensor
setDesiredPresentTime	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::setDesiredPresentTime(nsecs_t presentTime) {$/;"	f	class:android::FrameTracker
setDevice	include/binder/MemoryHeapBase.h	/^    status_t setDevice(const char* device) {$/;"	f	class:android::MemoryHeapBase
setDimensions	services/surfaceflinger/RenderEngine/Texture.cpp	/^void Texture::setDimensions(size_t width, size_t height) {$/;"	f	class:android::Texture
setDirtyRect	libs/gui/Surface.cpp	/^status_t Surface::setDirtyRect(const Rect* dirtyRect) {$/;"	f	class:android::Surface
setDirtyRect	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setDirtyRect(const Rect& dirtyRect) {$/;"	f	class:android::HWCLayerVersion1
setDisplayInfo	services/inputflinger/InputReader.cpp	/^void InputReaderConfiguration::setDisplayInfo(bool external, const DisplayViewport& viewport) {$/;"	f	class:android::InputReaderConfiguration
setDisplayInfo	services/inputflinger/tests/InputReader_test.cpp	/^    void setDisplayInfo(int32_t displayId, int32_t width, int32_t height, int32_t orientation) {$/;"	f	class:android::FakeInputReaderPolicy
setDisplayInfoAndReconfigure	services/inputflinger/tests/InputReader_test.cpp	/^    void setDisplayInfoAndReconfigure(int32_t displayId, int32_t width, int32_t height,$/;"	f	class:android::InputMapperTest
setDisplayLayerStack	libs/gui/SurfaceComposerClient.cpp	/^void Composer::setDisplayLayerStack(const sp<IBinder>& token,$/;"	f	class:android::Composer
setDisplayLayerStack	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::setDisplayLayerStack(const sp<IBinder>& token,$/;"	f	class:android::SurfaceComposerClient
setDisplayName	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::setDisplayName(const String8& displayName) {$/;"	f	class:DisplayDevice
setDisplayPowerMode	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::setDisplayPowerMode(const sp<IBinder>& token,$/;"	f	class:android::SurfaceComposerClient
setDisplayProjection	libs/gui/SurfaceComposerClient.cpp	/^void Composer::setDisplayProjection(const sp<IBinder>& token,$/;"	f	class:android::Composer
setDisplayProjection	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::setDisplayProjection(const sp<IBinder>& token,$/;"	f	class:android::SurfaceComposerClient
setDisplayRefreshPeriod	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::setDisplayRefreshPeriod(nsecs_t displayPeriod) {$/;"	f	class:android::FrameTracker
setDisplaySize	libs/gui/SurfaceComposerClient.cpp	/^void Composer::setDisplaySize(const sp<IBinder>& token, uint32_t width, uint32_t height) {$/;"	f	class:android::Composer
setDisplaySize	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::setDisplaySize(const sp<IBinder>& token,$/;"	f	class:android::SurfaceComposerClient
setDisplaySize	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::setDisplaySize(const int newWidth, const int newHeight) {$/;"	f	class:DisplayDevice
setDisplayStateLocked	services/surfaceflinger/SurfaceFlinger.cpp	/^uint32_t SurfaceFlinger::setDisplayStateLocked(const DisplayState& s)$/;"	f	class:android::SurfaceFlinger
setDisplaySurface	libs/gui/SurfaceComposerClient.cpp	/^void Composer::setDisplaySurface(const sp<IBinder>& token,$/;"	f	class:android::Composer
setDisplaySurface	libs/gui/SurfaceComposerClient.cpp	/^void SurfaceComposerClient::setDisplaySurface(const sp<IBinder>& token,$/;"	f	class:android::SurfaceComposerClient
setDisplayValid	opengl/libs/EGL/egl_display.cpp	/^void egl_display_t::HibernationMachine::setDisplayValid(bool valid) {$/;"	f	class:android::egl_display_t::HibernationMachine
setDownTime	include/input/Input.h	/^    inline void setDownTime(nsecs_t downTime) { mDownTime = downTime; }$/;"	f	class:android::MotionEvent
setEGLDebugLevel	opengl/libs/EGL/egl.cpp	/^void setEGLDebugLevel(int level) {$/;"	f	namespace:android
setEGLHandles	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::setEGLHandles(EGLConfig config, EGLContext ctxt) {$/;"	f	class:android::RenderEngine
setEdgeFlags	include/input/Input.h	/^    inline void setEdgeFlags(int32_t edgeFlags) { mEdgeFlags = edgeFlags; }$/;"	f	class:android::MotionEvent
setEglObjects	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        void setEglObjects(EGLDisplay producerEglDisplay,$/;"	f	class:android::SurfaceTextureGLThreadToGLTest::ProducerThread
setEnabled	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::VSyncThread::setEnabled(bool enabled) {$/;"	f	class:android::HWComposer::VSyncThread
setEphemeralMetaState	libs/input/Keyboard.cpp	/^static int32_t setEphemeralMetaState(int32_t mask, bool down, int32_t oldMetaState) {$/;"	f	namespace:android
setError	libs/binder/Parcel.cpp	/^void Parcel::setError(status_t err)$/;"	f	class:android::Parcel
setError	opengl/libagl/egl.cpp	/^static T setError(GLint error, T returnValue) {$/;"	f	namespace:android
setError	opengl/libs/EGL/egl_tls.h	64;"	d
setErrorEtc	opengl/libs/EGL/egl_tls.h	/^    static T setErrorEtc(const char* caller,$/;"	f	class:android::egl_tls_t
setErrorEtcImpl	opengl/libs/EGL/egl_tls.cpp	/^void egl_tls_t::setErrorEtcImpl($/;"	f	class:android::egl_tls_t
setErrorQuiet	opengl/libs/EGL/egl_tls.h	67;"	d
setEventRate	libs/gui/ISensorEventConnection.cpp	/^    virtual status_t setEventRate(int handle, nsecs_t ns)$/;"	f	class:android::BpSensorEventConnection
setEventRate	libs/gui/SensorEventQueue.cpp	/^status_t SensorEventQueue::setEventRate(Sensor const* sensor, nsecs_t ns) const {$/;"	f	class:android::SensorEventQueue
setEventRate	services/sensorservice/SensorService.cpp	/^status_t SensorService::SensorEventConnection::setEventRate($/;"	f	class:android::SensorService::SensorEventConnection
setEventRate	services/sensorservice/SensorService.cpp	/^status_t SensorService::setEventRate(const sp<SensorEventConnection>& connection,$/;"	f	class:android::SensorService
setEventThread	services/surfaceflinger/MessageQueue.cpp	/^void MessageQueue::setEventThread(const sp<EventThread>& eventThread)$/;"	f	class:android::MessageQueue
setExcludedDevices	services/inputflinger/EventHub.cpp	/^void EventHub::setExcludedDevices(const Vector<String8>& devices) {$/;"	f	class:android::EventHub
setExcludedDevices	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void setExcludedDevices(const Vector<String8>& devices) {$/;"	f	class:android::FakeEventHub	file:
setExternal	services/inputflinger/InputReader.h	/^    inline void setExternal(bool external) { mIsExternal = external; }$/;"	f	class:android::InputDevice
setFallbackKey	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::InputState::setFallbackKey(int32_t originalKeyCode,$/;"	f	class:android::InputDispatcher::InputState
setFence	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        QueueBufferInputBuilder& setFence(sp<Fence> fence) {$/;"	f	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder
setFiltering	services/surfaceflinger/Layer.cpp	/^void Layer::setFiltering(bool filtering) {$/;"	f	class:android::Layer
setFiltering	services/surfaceflinger/RenderEngine/Texture.cpp	/^void Texture::setFiltering(bool enabled) {$/;"	f	class:android::Texture
setFilteringEnabled	libs/gui/GLConsumer.cpp	/^void GLConsumer::setFilteringEnabled(bool enabled) {$/;"	f	class:android::GLConsumer
setFirstFlushPending	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::setFirstFlushPending(int32_t handle,$/;"	f	class:android::SensorService::SensorEventConnection
setFlags	include/input/Input.h	/^    inline void setFlags(int32_t flags) { mFlags = flags; }$/;"	f	class:android::KeyEvent
setFlags	include/input/Input.h	/^    inline void setFlags(int32_t flags) { mFlags = flags; }$/;"	f	class:android::MotionEvent
setFlags	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setFlags(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setFlags	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setFlags(const sp<IBinder>& id, uint32_t flags,$/;"	f	class:android::SurfaceComposerClient
setFlags	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setFlags(uint32_t flags, uint32_t mask) {$/;"	f	class:android::SurfaceControl
setFlags	services/surfaceflinger/Layer.cpp	/^bool Layer::setFlags(uint8_t flags, uint8_t mask) {$/;"	f	class:android::Layer
setFocusedApplication	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::setFocusedApplication($/;"	f	class:android::InputDispatcher
setFrame	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setFrame(const Rect& frame) {$/;"	f	class:android::HWCLayerVersion1
setFrameAvailableListener	libs/gui/ConsumerBase.cpp	/^void ConsumerBase::setFrameAvailableListener($/;"	f	class:android::ConsumerBase
setFrameReadyFence	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::setFrameReadyFence(const sp<Fence>& readyFence) {$/;"	f	class:android::FrameTracker
setFrameReadyTime	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::setFrameReadyTime(nsecs_t readyTime) {$/;"	f	class:android::FrameTracker
setFramebufferTarget	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::setFramebufferTarget(int32_t id,$/;"	f	class:android::HWComposer
setGLDebugLevel	opengl/libs/EGL/egl.cpp	/^void EGLAPI setGLDebugLevel(int level) {$/;"	f	namespace:android
setGLHooksThreadSpecific	opengl/libs/EGL/egl.cpp	/^void setGLHooksThreadSpecific(gl_hooks_t const *value) {$/;"	f	namespace:android
setGLTraceContext	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void setGLTraceContext(GLTraceContext *c) {$/;"	f	namespace:android::gltrace
setGLTraceLevel	opengl/libs/EGL/egl.cpp	/^void setGLTraceLevel(int level) {$/;"	f	namespace:android
setGenerator	opengl/tools/glgen2/registry/reg.py	/^    def setGenerator(self, gen):$/;"	m	class:Registry
setGeometry	services/surfaceflinger/Layer.cpp	/^void Layer::setGeometry($/;"	f	class:android::Layer
setGlThreadSpecific	opengl/libagl/context.h	/^    inline void setGlThreadSpecific(ogles_context_t *value) {$/;"	f	namespace:android::gl
setGlThreadSpecific	opengl/libs/EGL/egl.cpp	/^void setGlThreadSpecific(gl_hooks_t const *value) {$/;"	f	namespace:android
setGlTraceThreadSpecific	opengl/libs/EGL/egl.cpp	/^static inline void setGlTraceThreadSpecific(gl_hooks_t const *value) {$/;"	f	namespace:android
setGlobalClockEnable	cmds/atrace/atrace.cpp	/^static bool setGlobalClockEnable(bool enable)$/;"	f	file:
setGlobalMetaState	services/inputflinger/tests/InputReader_test.cpp	/^    void setGlobalMetaState(int32_t state) {$/;"	f	class:android::FakeInputReaderContext
setGraphicBufferSize	libs/gui/GraphicBufferAlloc.cpp	/^void GraphicBufferAlloc::setGraphicBufferSize(int size) {$/;"	f	class:android::GraphicBufferAlloc
setGraphicBufferSize	libs/gui/IGraphicBufferAlloc.cpp	/^    virtual void setGraphicBufferSize(int size) {$/;"	f	class:android::BpGraphicBufferAlloc
setGraphicBufferSize	libs/gui/tests/StreamSplitter_test.cpp	/^    virtual void setGraphicBufferSize(int size) {$/;"	f	class:android::CountedAllocator
setHeight	opengl/tests/hwc/hwcTestLib.h	/^    void setHeight(uint32_t h) { _h = h; }$/;"	f	class:HwcTestDim
setImage	opengl/libagl/TextureObjectManager.cpp	/^status_t EGLTextureObject::setImage(ANativeWindowBuffer* native_buffer)$/;"	f	class:android::EGLTextureObject
setImageBits	opengl/libagl/TextureObjectManager.h	/^    void        setImageBits(void* vaddr) { surface.data = (GGLubyte*)vaddr; }$/;"	f	class:android::EGLTextureObject
setInjectionResultLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::setInjectionResultLocked(EventEntry* entry, int32_t injectionResult) {$/;"	f	class:android::InputDispatcher
setInputDispatchMode	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::setInputDispatchMode(bool enabled, bool frozen) {$/;"	f	class:android::InputDispatcher
setInputFilterEnabled	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::setInputFilterEnabled(bool enabled) {$/;"	f	class:android::InputDispatcher
setInputWindows	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::setInputWindows(const Vector<sp<InputWindowHandle> >& inputWindowHandles) {$/;"	f	class:android::InputDispatcher
setIsAutoTimestamp	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        QueueBufferInputBuilder& setIsAutoTimestamp(bool isAutoTimestamp) {$/;"	f	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder
setIsConst	opengl/tools/glgen/src/CType.java	/^    public void setIsConst(boolean isConst) {$/;"	m	class:CType
setIsCursorLayerHint	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setIsCursorLayerHint(bool isCursor) {$/;"	f	class:android::HWCLayerVersion1
setIsPointer	opengl/tools/glgen/src/CType.java	/^    public void setIsPointer(boolean isPointer) {$/;"	m	class:CType
setKernelOptionEnable	cmds/atrace/atrace.cpp	/^static bool setKernelOptionEnable(const char* filename, bool enable)$/;"	f	file:
setKernelTraceFuncs	cmds/atrace/atrace.cpp	/^static bool setKernelTraceFuncs(const char* funcs)$/;"	f	file:
setKeyCharacterMap	include/input/InputDevice.h	/^    inline void setKeyCharacterMap(const sp<KeyCharacterMap>& value) {$/;"	f	class:android::InputDeviceInfo
setKeyCodeState	services/inputflinger/tests/InputReader_test.cpp	/^    void setKeyCodeState(int32_t deviceId, int32_t keyCode, int32_t state) {$/;"	f	class:android::FakeEventHub
setKeyCodeState	services/inputflinger/tests/InputReader_test.cpp	/^    void setKeyCodeState(int32_t keyCode, int32_t state) {$/;"	f	class:android::FakeInputMapper
setKeyboardLayoutOverlay	services/inputflinger/EventHub.cpp	/^bool EventHub::setKeyboardLayoutOverlay(int32_t deviceId,$/;"	f	class:android::EventHub
setKeyboardLayoutOverlay	services/inputflinger/tests/InputReader_test.cpp	/^    virtual bool setKeyboardLayoutOverlay(int32_t deviceId, const sp<KeyCharacterMap>& map) {$/;"	f	class:android::FakeEventHub	file:
setKeyboardType	include/input/InputDevice.h	/^    inline void setKeyboardType(int32_t keyboardType) { mKeyboardType = keyboardType; }$/;"	f	class:android::InputDeviceInfo
setKeyboardType	services/inputflinger/tests/InputReader_test.cpp	/^    void setKeyboardType(int32_t keyboardType) {$/;"	f	class:android::FakeInputMapper
setLastTransactionBinderFlags	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::setLastTransactionBinderFlags(int32_t flags)$/;"	f	class:android::IPCThreadState
setLayer	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setLayer(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setLayer	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setLayer(const sp<IBinder>& id, int32_t z) {$/;"	f	class:android::SurfaceComposerClient
setLayer	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setLayer(int32_t layer) {$/;"	f	class:android::SurfaceControl
setLayer	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual status_t setLayer(size_t index) {$/;"	f	class:android::Iterable	file:
setLayer	services/surfaceflinger/Layer.cpp	/^bool Layer::setLayer(uint32_t z) {$/;"	f	class:android::Layer
setLayerStack	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setLayerStack(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setLayerStack	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setLayerStack(const sp<IBinder>& id, uint32_t layerStack) {$/;"	f	class:android::SurfaceComposerClient
setLayerStack	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setLayerStack(int32_t layerStack) {$/;"	f	class:android::SurfaceControl
setLayerStack	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::setLayerStack(uint32_t stack) {$/;"	f	class:DisplayDevice
setLayerStack	services/surfaceflinger/Layer.cpp	/^bool Layer::setLayerStack(uint32_t layerStack) {$/;"	f	class:android::Layer
setLedForController	services/inputflinger/EventHub.cpp	/^void EventHub::setLedForController(Device* device) {$/;"	f	class:android::EventHub
setLedState	services/inputflinger/EventHub.cpp	/^void EventHub::setLedState(int32_t deviceId, int32_t led, bool on) {$/;"	f	class:android::EventHub
setLedState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void setLedState(int32_t deviceId, int32_t led, bool on) {$/;"	f	class:android::FakeEventHub	file:
setLedStateLocked	services/inputflinger/EventHub.cpp	/^void EventHub::setLedStateLocked(Device* device, int32_t led, bool on) {$/;"	f	class:android::EventHub
setLeftTop	include/ui/Rect.h	/^    void setLeftTop(const Point& lt) {$/;"	f	class:android::Rect
setListener	include/media/drm/DrmAPI.h	/^        status_t setListener(const sp<DrmPluginListener>& listener) {$/;"	f	class:android::DrmPlugin
setMasking	services/surfaceflinger/RenderEngine/Description.cpp	/^void Description::setMasking(const Texture& maskTexture, float alphaThreshold) {$/;"	f	class:android::Description
setMatrix	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setMatrix(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setMatrix	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setMatrix(const sp<IBinder>& id, float dsdx, float dtdx,$/;"	f	class:android::SurfaceComposerClient
setMatrix	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setMatrix(float dsdx, float dtdx, float dsdy, float dtdy) {$/;"	f	class:android::SurfaceControl
setMatrix	services/surfaceflinger/Layer.cpp	/^bool Layer::setMatrix(const layer_state_t::matrix22_t& matrix) {$/;"	f	class:android::Layer
setMatrix	services/surfaceflinger/RenderEngine/Texture.cpp	/^void Texture::setMatrix(float const* matrix) {$/;"	f	class:android::Texture
setMaxAcquiredBufferCount	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::setMaxAcquiredBufferCount($/;"	f	class:android::BufferQueueConsumer
setMaxAcquiredBufferCount	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t setMaxAcquiredBufferCount(int maxAcquiredBuffers) {$/;"	f	class:android::BpGraphicBufferConsumer
setMetaState	include/input/Input.h	/^    inline void setMetaState(int32_t metaState) { mMetaState = metaState; }$/;"	f	class:android::MotionEvent
setMetaState	services/inputflinger/tests/InputReader_test.cpp	/^    void setMetaState(int32_t metaState) {$/;"	f	class:android::FakeInputMapper
setMode	services/surfaceflinger/Effects/Daltonizer.cpp	/^void Daltonizer::setMode(Daltonizer::Mode mode) {$/;"	f	class:android::Daltonizer
setName	libs/gui/BufferItemConsumer.cpp	/^void BufferItemConsumer::setName(const String8& name) {$/;"	f	class:android::BufferItemConsumer
setName	libs/gui/CpuConsumer.cpp	/^void CpuConsumer::setName(const String8& name) {$/;"	f	class:android::CpuConsumer
setName	libs/gui/GLConsumer.cpp	/^void GLConsumer::setName(const String8& name) {$/;"	f	class:android::GLConsumer
setName	libs/gui/StreamSplitter.cpp	/^void StreamSplitter::setName(const String8 &name) {$/;"	f	class:android::StreamSplitter
setName	opengl/tools/glgen/src/CFunc.java	/^    public void setName(String fname) {$/;"	m	class:CFunc
setName	opengl/tools/glgen/src/JFunc.java	/^    public void setName(String fname) {$/;"	m	class:JFunc
setNextDevice	services/inputflinger/tests/InputReader_test.cpp	/^    void setNextDevice(InputDevice* device) {$/;"	f	class:android::InstrumentedInputReader
setNonDisplayViewport	services/inputflinger/InputReader.h	/^    void setNonDisplayViewport(int32_t width, int32_t height) {$/;"	f	struct:android::DisplayViewport
setNumerator	opengl/tests/hwc/hwcCommit.cpp	/^    void setNumerator(uint32_t numerator) { _n = numerator; }$/;"	f	class:Rational
setOpaque	services/surfaceflinger/RenderEngine/Description.cpp	/^void Description::setOpaque(bool opaque) {$/;"	f	class:android::Description
setOrientation	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setOrientation(int orientation) {$/;"	f	class:android::Composer
setOrientation	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setOrientation(int32_t dpy, int orientation, uint32_t flags)$/;"	f	class:android::SurfaceComposerClient
setOutputBuffer	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::setOutputBuffer(int32_t id, const sp<Fence>& acquireFence,$/;"	f	class:android::HWComposer
setOutputUsage	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^void VirtualDisplaySurface::setOutputUsage() {$/;"	f	class:android::VirtualDisplaySurface
setParameters	libs/input/VelocityControl.cpp	/^void VelocityControl::setParameters(const VelocityControlParameters& parameters) {$/;"	f	class:android::VelocityControl
setPerFrameData	services/surfaceflinger/Layer.cpp	/^void Layer::setPerFrameData(const sp<const DisplayDevice>& hw,$/;"	f	class:android::Layer
setPerFrameDefaultState	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setPerFrameDefaultState() {$/;"	f	class:android::HWCLayerVersion1
setPeriod	services/surfaceflinger/DispSync.cpp	/^void DispSync::setPeriod(nsecs_t period) {$/;"	f	class:android::DispSync
setPlaneAlpha	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setPlaneAlpha(uint8_t alpha) {$/;"	f	class:android::HWCLayerVersion1
setPlaneAlpha	services/surfaceflinger/RenderEngine/Description.cpp	/^void Description::setPlaneAlpha(GLclampf planeAlpha) {$/;"	f	class:android::Description
setPointerController	services/inputflinger/tests/InputReader_test.cpp	/^    void setPointerController(int32_t deviceId, const sp<FakePointerController>& controller) {$/;"	f	class:android::FakeInputReaderPolicy
setPointerCoordsAxisValue	services/inputflinger/InputReader.cpp	/^void JoystickInputMapper::setPointerCoordsAxisValue(PointerCoords* pointerCoords,$/;"	f	class:android::JoystickInputMapper
setPointers	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::InputState::MotionMemento::setPointers(const MotionEntry* entry) {$/;"	f	class:android::InputDispatcher::InputState::MotionMemento
setPosition	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setPosition(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setPosition	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setPosition(const sp<IBinder>& id, float x, float y) {$/;"	f	class:android::SurfaceComposerClient
setPosition	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setPosition(float x, float y) {$/;"	f	class:android::SurfaceControl
setPosition	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    public void setPosition(float x, float y) {$/;"	m	class:CamRenderer
setPosition	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void setPosition(float x, float y) {$/;"	f	class:android::FakePointerController
setPosition	services/surfaceflinger/Layer.cpp	/^bool Layer::setPosition(float x, float y) {$/;"	f	class:android::Layer
setPowerMode	libs/gui/ISurfaceComposer.cpp	/^    virtual void setPowerMode(const sp<IBinder>& display, int mode)$/;"	f	class:android::BpSurfaceComposer
setPowerMode	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::setPowerMode(int mode) {$/;"	f	class:DisplayDevice
setPowerMode	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::setPowerMode(int disp, int mode) {$/;"	f	class:android::HWComposer
setPowerMode	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::setPowerMode(const sp<IBinder>& display, int mode) {$/;"	f	class:android::SurfaceFlinger
setPowerModeInternal	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::setPowerModeInternal(const sp<DisplayDevice>& hw,$/;"	f	class:android::SurfaceFlinger
setPremultipliedAlpha	services/surfaceflinger/RenderEngine/Description.cpp	/^void Description::setPremultipliedAlpha(bool premultipliedAlpha) {$/;"	f	class:android::Description
setPresentation	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void setPresentation(Presentation presentation) {$/;"	f	class:android::FakePointerController	file:
setPrintTgidEnableIfPresent	cmds/atrace/atrace.cpp	/^static bool setPrintTgidEnableIfPresent(bool enable)$/;"	f	file:
setProjection	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::setProjection(int orientation,$/;"	f	class:DisplayDevice
setProjectionMatrix	services/surfaceflinger/RenderEngine/Description.cpp	/^void Description::setProjectionMatrix(const mat4& mtx) {$/;"	f	class:android::Description
setRefreshSkipCount	services/surfaceflinger/DispSync.cpp	/^void DispSync::setRefreshSkipCount(int count) {$/;"	f	class:android::DispSync
setReleaseFence	libs/gui/GLConsumer.cpp	/^void GLConsumer::setReleaseFence(const sp<Fence>& fence) {$/;"	f	class:android::GLConsumer
setRightBottom	include/ui/Rect.h	/^    void setRightBottom(const Point& rb) {$/;"	f	class:android::Rect
setRotationMatrix	libs/input/tests/InputEvent_test.cpp	/^static void setRotationMatrix(float matrix[9], float angle) {$/;"	f	namespace:android
setScalingMode	libs/gui/Surface.cpp	/^int Surface::setScalingMode(int mode)$/;"	f	class:android::Surface
setScalingMode	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        QueueBufferInputBuilder& setScalingMode(int scalingMode) {$/;"	f	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder
setScanCodeState	services/inputflinger/tests/InputReader_test.cpp	/^    void setScanCodeState(int32_t deviceId, int32_t scanCode, int32_t state) {$/;"	f	class:android::FakeEventHub
setScanCodeState	services/inputflinger/tests/InputReader_test.cpp	/^    void setScanCodeState(int32_t scanCode, int32_t state) {$/;"	f	class:android::FakeInputMapper
setScissor	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^void RenderEngine::setScissor($/;"	f	class:android::RenderEngine
setSidebandStream	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::setSidebandStream(const sp<NativeHandle>& stream) {$/;"	f	class:android::BufferQueueProducer
setSidebandStream	libs/gui/IGraphicBufferProducer.cpp	/^    virtual status_t setSidebandStream(const sp<NativeHandle>& stream) {$/;"	f	class:android::BpGraphicBufferProducer
setSidebandStream	libs/gui/Surface.cpp	/^void Surface::setSidebandStream(const sp<NativeHandle>& stream) {$/;"	f	class:android::Surface
setSidebandStream	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setSidebandStream(const sp<NativeHandle>& stream) {$/;"	f	class:android::HWCLayerVersion1
setSidebandStream	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^status_t VirtualDisplaySurface::setSidebandStream(const sp<NativeHandle>& \/*stream*\/) {$/;"	f	class:android::VirtualDisplaySurface
setSidebandStream	services/surfaceflinger/MonitoredProducer.cpp	/^status_t MonitoredProducer::setSidebandStream(const sp<NativeHandle>& stream) {$/;"	f	class:android::MonitoredProducer
setSingleLineCutoff	include/binder/TextOutput.h	/^inline HexDump& HexDump::setSingleLineCutoff(int32_t bytes) {$/;"	f	class:android::HexDump
setSize	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setSize(const sp<SurfaceComposerClient>& client,$/;"	f	class:android::Composer
setSize	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setSize(const sp<IBinder>& id, uint32_t w, uint32_t h) {$/;"	f	class:android::SurfaceComposerClient
setSize	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setSize(uint32_t w, uint32_t h) {$/;"	f	class:android::SurfaceControl
setSize	services/surfaceflinger/Layer.cpp	/^bool Layer::setSize(uint32_t w, uint32_t h) {$/;"	f	class:android::Layer
setSkip	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setSkip(bool skip) {$/;"	f	class:android::HWCLayerVersion1
setSource	include/input/Input.h	/^    inline void setSource(int32_t source) { mSource = source; }$/;"	f	class:android::InputEvent
setSourceDim	opengl/tests/hwc/hwcCommit.cpp	/^void Rectangle::setSourceDim(HwcTestDim dim)$/;"	f	class:Rectangle
setSpots	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void setSpots(const PointerCoords* spotCoords,$/;"	f	class:android::FakePointerController	file:
setStrictModePolicy	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::setStrictModePolicy(int32_t policy)$/;"	f	class:android::IPCThreadState
setSurface	opengl/libagl/TextureObjectManager.cpp	/^status_t EGLTextureObject::setSurface(GGLSurface const* s)$/;"	f	class:android::EGLTextureObject
setSwapInterval	libs/gui/Surface.cpp	/^int Surface::setSwapInterval(int interval) {$/;"	f	class:android::Surface
setSwapInterval	libs/ui/FramebufferNativeWindow.cpp	/^int FramebufferNativeWindow::setSwapInterval($/;"	f	class:android::FramebufferNativeWindow
setSwapRectangle	opengl/libagl/egl.cpp	/^EGLBoolean egl_surface_t::setSwapRectangle($/;"	f	class:android::egl_surface_t
setSwapRectangle	opengl/libagl/egl.cpp	/^EGLBoolean egl_window_surface_v2_t::setSwapRectangle($/;"	f	class:android::egl_window_surface_v2_t
setSwitchState	services/inputflinger/tests/InputReader_test.cpp	/^    void setSwitchState(int32_t deviceId, int32_t switchCode, int32_t state) {$/;"	f	class:android::FakeEventHub
setSwitchState	services/inputflinger/tests/InputReader_test.cpp	/^    void setSwitchState(int32_t switchCode, int32_t state) {$/;"	f	class:android::FakeInputMapper
setTagsProperty	cmds/atrace/atrace.cpp	/^static bool setTagsProperty(uint64_t tags)$/;"	f	file:
setTexture	services/surfaceflinger/RenderEngine/Description.cpp	/^void Description::setTexture(const Texture& texture) {$/;"	f	class:android::Description
setTheContextObject	libs/binder/IPCThreadState.cpp	/^void setTheContextObject(sp<BBinder> obj)$/;"	f	namespace:android
setThreadPoolMaxThreadCount	libs/binder/ProcessState.cpp	/^status_t ProcessState::setThreadPoolMaxThreadCount(size_t maxThreads) {$/;"	f	class:android::ProcessState
setTimestamp	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        QueueBufferInputBuilder& setTimestamp(int64_t timestamp) {$/;"	f	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder
setTouchAffineTransformation	services/inputflinger/tests/InputReader_test.cpp	/^    void setTouchAffineTransformation(const TouchAffineTransformation t) {$/;"	f	class:android::FakeInputReaderPolicy
setTraceBufferSizeKB	cmds/atrace/atrace.cpp	/^static bool setTraceBufferSizeKB(int size)$/;"	f	file:
setTraceOverwriteEnable	cmds/atrace/atrace.cpp	/^static bool setTraceOverwriteEnable(bool enable)$/;"	f	file:
setTracingEnabled	cmds/atrace/atrace.cpp	/^static bool setTracingEnabled(bool enable)$/;"	f	file:
setTransactionFlags	services/surfaceflinger/Layer.cpp	/^uint32_t Layer::setTransactionFlags(uint32_t flags) {$/;"	f	class:android::Layer
setTransactionFlags	services/surfaceflinger/SurfaceFlinger.cpp	/^uint32_t SurfaceFlinger::setTransactionFlags(uint32_t flags) {$/;"	f	class:android::SurfaceFlinger
setTransactionState	libs/gui/ISurfaceComposer.cpp	/^    virtual void setTransactionState($/;"	f	class:android::BpSurfaceComposer
setTransactionState	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::setTransactionState($/;"	f	class:android::SurfaceFlinger
setTransform	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        QueueBufferInputBuilder& setTransform(uint32_t transform) {$/;"	f	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder
setTransform	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setTransform(uint32_t transform) {$/;"	f	class:android::HWCLayerVersion1
setTransformHint	libs/gui/BufferQueueConsumer.cpp	/^status_t BufferQueueConsumer::setTransformHint(uint32_t hint) {$/;"	f	class:android::BufferQueueConsumer
setTransformHint	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::setTransformHint(uint32_t hint) {$/;"	f	class:android::GLConsumer
setTransformHint	libs/gui/IGraphicBufferConsumer.cpp	/^    virtual status_t setTransformHint(uint32_t hint) {$/;"	f	class:android::BpGraphicBufferConsumer
setTransparentRegionHint	libs/gui/SurfaceComposerClient.cpp	/^status_t Composer::setTransparentRegionHint($/;"	f	class:android::Composer
setTransparentRegionHint	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::setTransparentRegionHint(const sp<IBinder>& id,$/;"	f	class:android::SurfaceComposerClient
setTransparentRegionHint	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::setTransparentRegionHint(const Region& transparent) {$/;"	f	class:android::SurfaceControl
setTransparentRegionHint	services/surfaceflinger/Layer.cpp	/^bool Layer::setTransparentRegionHint(const Region& transparent) {$/;"	f	class:android::Layer
setType	opengl/tools/glgen/src/CFunc.java	/^    public void setType(CType ftype) {$/;"	m	class:CFunc
setType	opengl/tools/glgen/src/JFunc.java	/^    public void setType(JType ftype) {$/;"	m	class:JFunc
setType	services/surfaceflinger/Effects/Daltonizer.cpp	/^void Daltonizer::setType(Daltonizer::ColorBlindnessTypes type) {$/;"	f	class:android::Daltonizer
setUniforms	services/surfaceflinger/RenderEngine/Program.cpp	/^void Program::setUniforms(const Description& desc) {$/;"	f	class:android::Program
setUp	cmds/flatland/Composers.cpp	/^    bool setUp(GLHelper* helper) {$/;"	f	class:android::Blitter
setUp	cmds/flatland/Composers.cpp	/^    virtual bool setUp(GLHelper* \/*helper*\/) {$/;"	f	class:android::ComposerBase
setUp	cmds/flatland/Composers.cpp	/^    virtual bool setUp(const LayerDesc& desc,$/;"	f	class:android::ComposerBase
setUp	cmds/flatland/GLHelper.cpp	/^bool GLHelper::setUp(const ShaderDesc* shaderDescs, size_t numShaders) {$/;"	f	class:android::GLHelper
setUp	cmds/flatland/Main.cpp	/^    bool setUp() {$/;"	f	class:BenchmarkRunner
setUp	cmds/flatland/Main.cpp	/^    bool setUp(const LayerDesc& desc, GLHelper* helper) {$/;"	f	class:Layer
setUp	cmds/flatland/Renderers.cpp	/^    bool setUp(GLHelper* helper) {$/;"	f	class:android::GradientRenderer
setUpHWComposer	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::setUpHWComposer() {$/;"	f	class:android::SurfaceFlinger
setUpShaders	cmds/flatland/GLHelper.cpp	/^bool GLHelper::setUpShaders(const ShaderDesc* shaderDescs, size_t numShaders) {$/;"	f	class:android::GLHelper
setUpTiledDr	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::setUpTiledDr() {$/;"	f	class:android::SurfaceFlinger
setUpTrace	cmds/atrace/atrace.cpp	/^static bool setUpTrace()$/;"	f	file:
setUpdateRectangle	libs/ui/FramebufferNativeWindow.cpp	/^status_t FramebufferNativeWindow::setUpdateRectangle(const Rect& r) $/;"	f	class:android::FramebufferNativeWindow
setUsage	libs/gui/Surface.cpp	/^int Surface::setUsage(uint32_t reqUsage)$/;"	f	class:android::Surface
setVSyncEnabled	services/surfaceflinger/SurfaceFlinger.cpp	/^    virtual void setVSyncEnabled(bool enable) {$/;"	f	class:android::DispSyncSource
setVersion	opengl/tools/glgen/src/CodeEmitter.java	/^    void setVersion(int version, boolean ext, boolean pack);$/;"	m	interface:CodeEmitter
setVersion	opengl/tools/glgen/src/Jsr239CodeEmitter.java	/^    public void setVersion(int version, boolean ext, boolean pack) {$/;"	m	class:Jsr239CodeEmitter
setVibrator	include/input/InputDevice.h	/^    inline void setVibrator(bool hasVibrator) { mHasVibrator = hasVibrator; }$/;"	f	class:android::InputDeviceInfo
setViewportAndProjection	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::setViewportAndProjection() const {$/;"	f	class:DisplayDevice
setViewportAndProjection	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::setViewportAndProjection($/;"	f	class:android::GLES11RenderEngine
setViewportAndProjection	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::setViewportAndProjection($/;"	f	class:android::GLES20RenderEngine
setVirtualDisplayData	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::setVirtualDisplayData($/;"	f	class:android::SurfaceFlinger
setVirtualDisplayProperties	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^status_t HWComposer::setVirtualDisplayProperties(int32_t id,$/;"	f	class:android::HWComposer
setVisibleLayersSortedByZ	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::setVisibleLayersSortedByZ(const Vector< sp<Layer> >& layers) {$/;"	f	class:DisplayDevice
setVisibleNonTransparentRegion	services/surfaceflinger/Layer.cpp	/^void Layer::setVisibleNonTransparentRegion(const Region&$/;"	f	class:android::Layer
setVisibleRegion	services/surfaceflinger/Layer.cpp	/^void Layer::setVisibleRegion(const Region& visibleRegion) {$/;"	f	class:android::Layer
setVisibleRegionScreen	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual void setVisibleRegionScreen(const Region& reg) {$/;"	f	class:android::HWCLayerVersion1
setVsyncEnabled	services/surfaceflinger/EventControlThread.cpp	/^void EventControlThread::setVsyncEnabled(bool enabled) {$/;"	f	class:android::EventControlThread
setVsyncRate	libs/gui/DisplayEventReceiver.cpp	/^status_t DisplayEventReceiver::setVsyncRate(uint32_t count) {$/;"	f	class:android::DisplayEventReceiver
setVsyncRate	libs/gui/IDisplayEventConnection.cpp	/^    virtual void setVsyncRate(uint32_t count) {$/;"	f	class:android::BpDisplayEventConnection
setVsyncRate	services/surfaceflinger/EventThread.cpp	/^void EventThread::Connection::setVsyncRate(uint32_t count) {$/;"	f	class:android::EventThread::Connection
setVsyncRate	services/surfaceflinger/EventThread.cpp	/^void EventThread::setVsyncRate(uint32_t count,$/;"	f	class:android::EventThread
setWakeLockAcquiredLocked	services/sensorservice/SensorService.cpp	/^void SensorService::setWakeLockAcquiredLocked(bool acquire) {$/;"	f	class:android::SensorService
setWidth	opengl/tests/hwc/hwcTestLib.h	/^    void setWidth(uint32_t w) { _w = w; }$/;"	f	class:HwcTestDim
set_address	cmds/ip-up-vpn/ip-up-vpn.c	/^static int set_address(struct sockaddr *sa, const char *address) {$/;"	f	file:
set_boolvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_boolvalue(int index, bool value) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_charvalue(int index, const ::std::string& value) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_charvalue(int index, const char* value) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_charvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_charvalue(int index, const void* value, size_t size) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::set_contents(int index, const ::std::string& value) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
set_contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::set_contents(int index, const char* value) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
set_contents	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::set_contents(int index, const void* value, size_t size) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
set_context_id	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::set_context_id(::google::protobuf::int32 value) {$/;"	f	class:android::gltrace::GLMessage
set_depth_and_fog	opengl/libagl/texture.cpp	/^void set_depth_and_fog(ogles_context_t* c, GGLfixed z)$/;"	f	namespace:android
set_duration	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::set_duration(::google::protobuf::int32 value) {$/;"	f	class:android::gltrace::GLMessage
set_floatvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_floatvalue(int index, float value) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_function	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::set_function(::android::gltrace::GLMessage_Function value) {$/;"	f	class:android::gltrace::GLMessage
set_height	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::set_height(::google::protobuf::int32 value) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
set_int64value	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_int64value(int index, ::google::protobuf::int64 value) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_intvalue	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_intvalue(int index, ::google::protobuf::int32 value) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_isarray	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_isarray(bool value) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_rawbytes(int index, const ::std::string& value) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_rawbytes(int index, const char* value) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_rawbytes	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_rawbytes(int index, const void* value, size_t size) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_start_time	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::set_start_time(::google::protobuf::int64 value) {$/;"	f	class:android::gltrace::GLMessage
set_threadtime	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage::set_threadtime(::google::protobuf::int32 value) {$/;"	f	class:android::gltrace::GLMessage
set_type	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_DataType::set_type(::android::gltrace::GLMessage_DataType_Type value) {$/;"	f	class:android::gltrace::GLMessage_DataType
set_width	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline void GLMessage_FrameBuffer::set_width(::google::protobuf::int32 value) {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
setupColorTransform	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^mat4 GLES20RenderEngine::setupColorTransform(const mat4& colorTransform) {$/;"	f	class:android::GLES20RenderEngine
setupColorTransform	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    virtual mat4 setupColorTransform(const mat4& \/* colorTransform *\/) {$/;"	f	class:android::RenderEngine
setupDimLayerBlending	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::setupDimLayerBlending(int alpha) {$/;"	f	class:android::GLES11RenderEngine
setupDimLayerBlending	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::setupDimLayerBlending(int alpha) {$/;"	f	class:android::GLES20RenderEngine
setupFillWithColor	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::setupFillWithColor(float r, float g, float b, float a) {$/;"	f	class:android::GLES11RenderEngine
setupFillWithColor	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::setupFillWithColor(float r, float g, float b, float a) {$/;"	f	class:android::GLES20RenderEngine
setupGraphics	opengl/tests/gl2_basic/gl2_basic.cpp	/^bool setupGraphics(int w, int h) {$/;"	f
setupGraphics	opengl/tests/gl2_copyTexImage/gl2_copyTexImage.cpp	/^bool setupGraphics(int w, int h) {$/;"	f
setupGraphics	opengl/tests/gl2_jni/jni/gl_code.cpp	/^bool setupGraphics(int w, int h) {$/;"	f
setupGraphics	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^bool setupGraphics(int w, int h) {$/;"	f
setupGraphics	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^bool setupGraphics(int w, int h) {$/;"	f
setupGraphics	opengl/tests/gldual/jni/gl_code.cpp	/^bool setupGraphics(int w, int h) {$/;"	f
setupLayerBlackedOut	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::setupLayerBlackedOut() {$/;"	f	class:android::GLES11RenderEngine
setupLayerBlackedOut	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::setupLayerBlackedOut() {$/;"	f	class:android::GLES20RenderEngine
setupLayerBlending	services/surfaceflinger/RenderEngine/GLES10RenderEngine.cpp	/^void GLES10RenderEngine::setupLayerBlending($/;"	f	class:android::GLES10RenderEngine
setupLayerBlending	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::setupLayerBlending($/;"	f	class:android::GLES11RenderEngine
setupLayerBlending	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::setupLayerBlending($/;"	f	class:android::GLES20RenderEngine
setupLayerMasking	services/surfaceflinger/RenderEngine/GLES11RenderEngine.h	/^    virtual void setupLayerMasking(const Texture& \/*maskTexture*\/, float \/*alphaThreshold*\/) {}$/;"	f	class:android::GLES11RenderEngine
setupLayerMasking	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::setupLayerMasking(const Texture& maskTexture, float alphaThreshold) {$/;"	f	class:android::GLES20RenderEngine
setupLayerTexturing	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::setupLayerTexturing(const Texture& texture) {$/;"	f	class:android::GLES11RenderEngine
setupLayerTexturing	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::setupLayerTexturing(const Texture& texture) {$/;"	f	class:android::GLES20RenderEngine
setupMesh	services/surfaceflinger/LayerBlur.cpp	/^static void setupMesh(Mesh& mesh, int width, int height, int viewportHeight) {$/;"	f	namespace:android
setupMeshPartial	services/surfaceflinger/LayerBlur.cpp	/^static void setupMeshPartial(Mesh& mesh, Rect rcDraw, Rect rcTexture, int texWidth, int texHeight, int viewportHeight) {$/;"	f	namespace:android
setupPolling	libs/binder/IPCThreadState.cpp	/^int IPCThreadState::setupPolling(int* fd)$/;"	f	class:android::IPCThreadState
setupTraceContextThreadSpecific	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void setupTraceContextThreadSpecific(GLTraceContext *context) {$/;"	f	namespace:android::gltrace
setupVA	opengl/tests/gl_perf/fill_common.cpp	/^static void setupVA() {$/;"	f	file:
setupYuvTexSurface	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^bool setupYuvTexSurface(EGLDisplay dpy, EGLContext context) {$/;"	f
setupYuvTexSurface	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^bool setupYuvTexSurface(EGLDisplay dpy, EGLContext context) {$/;"	f
sfVsyncPhaseOffsetNs	services/surfaceflinger/SurfaceFlinger.cpp	/^static const int64_t sfVsyncPhaseOffsetNs = SF_VSYNC_EVENT_PHASE_OFFSET_NS;$/;"	m	namespace:android	file:
sha1	services/inputflinger/EventHub.cpp	/^static String8 sha1(const String8& in) {$/;"	f	namespace:android
shadeModel	opengl/libagl/context.h	/^    GLenum              shadeModel;$/;"	m	struct:android::gl::lighting_t
shaders	cmds/flatland/Main.cpp	/^static const ShaderDesc shaders[] = {$/;"	v	file:
shared_libraries	cmds/installd/tests/Android.mk	/^shared_libraries := \\$/;"	m
shared_libraries	libs/input/tests/Android.mk	/^shared_libraries := \\$/;"	m
shared_libraries	libs/ui/tests/Android.mk	/^shared_libraries := \\$/;"	m
shared_libraries	services/inputflinger/tests/Android.mk	/^shared_libraries := \\$/;"	m
shininess	opengl/libagl/context.h	/^    GLfixed     shininess;$/;"	m	struct:android::gl::material_t
shouldCancelKey	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::InputState::shouldCancelKey(const KeyMemento& memento,$/;"	f	class:android::InputDispatcher::InputState
shouldCancelMotion	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::InputState::shouldCancelMotion(const MotionMemento& memento,$/;"	f	class:android::InputDispatcher::InputState
shouldCollectFbOnEglSwap	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^bool GLTraceState::shouldCollectFbOnEglSwap() {$/;"	f	class:android::gltrace::GLTraceState
shouldCollectFbOnGlDraw	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^bool GLTraceState::shouldCollectFbOnGlDraw() {$/;"	f	class:android::gltrace::GLTraceState
shouldCollectTextureDataOnGlTexImage	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^bool GLTraceState::shouldCollectTextureDataOnGlTexImage() {$/;"	f	class:android::gltrace::GLTraceState
shouldDropVirtualKey	services/inputflinger/InputReader.cpp	/^bool InputReader::ContextImpl::shouldDropVirtualKey(nsecs_t now,$/;"	f	class:android::InputReader::ContextImpl
shouldDropVirtualKey	services/inputflinger/tests/InputReader_test.cpp	/^    virtual bool shouldDropVirtualKey(nsecs_t now,$/;"	f	class:android::FakeInputReaderContext	file:
shouldDropVirtualKeyLocked	services/inputflinger/InputReader.cpp	/^bool InputReader::shouldDropVirtualKeyLocked(nsecs_t now,$/;"	f	class:android::InputReader
shouldPresentNow	services/surfaceflinger/Layer.cpp	/^bool Layer::shouldPresentNow(const DispSync& dispSync) const {$/;"	f	class:android::Layer
shouldResampleTool	libs/input/InputTransport.cpp	/^bool InputConsumer::shouldResampleTool(int32_t toolType) {$/;"	f	class:android::InputConsumer
shouldSendKeyToInputFilterLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::shouldSendKeyToInputFilterLocked(const NotifyKeyArgs* args) {$/;"	f	class:android::InputDispatcher
shouldSendMotionToInputFilterLocked	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::shouldSendMotionToInputFilterLocked(const NotifyMotionArgs* args) {$/;"	f	class:android::InputDispatcher
should_dump_native_traces	cmds/dumpstate/utils.c	/^static bool should_dump_native_traces(const char* path) {$/;"	f	file:
show	libs/gui/SurfaceComposerClient.cpp	/^status_t SurfaceComposerClient::show(const sp<IBinder>& id) {$/;"	f	class:android::SurfaceComposerClient
show	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::show() {$/;"	f	class:android::SurfaceControl
showHelp	cmds/atrace/atrace.cpp	/^static void showHelp(const char *cmd)$/;"	f	file:
showHelp	cmds/flatland/Main.cpp	/^static void showHelp(const char *cmd) {$/;"	f	file:
showTouches	services/inputflinger/InputReader.h	/^    bool showTouches;$/;"	m	struct:android::InputReaderConfiguration
show_help	cmds/rawbu/backup.cpp	/^static void show_help(const char *cmd)$/;"	f	namespace:android
show_wchan	cmds/dumpstate/utils.c	/^void show_wchan(int pid, int tid, const char *name) {$/;"	f
shutdown	include/binder/BinderService.h	/^    static status_t shutdown() { return NO_ERROR; }$/;"	f	class:android::BinderService
shutdown	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::shutdown()$/;"	f	class:android::IPCThreadState
signExtendNybble	services/inputflinger/InputReader.cpp	/^inline static int32_t signExtendNybble(int32_t value) {$/;"	f	namespace:android
signalLayerUpdate	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::signalLayerUpdate() {$/;"	f	class:android::SurfaceFlinger
signalRefresh	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::signalRefresh() {$/;"	f	class:android::SurfaceFlinger
signalTransaction	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::signalTransaction() {$/;"	f	class:android::SurfaceFlinger
sigpipe_handler	cmds/dumpstate/dumpstate.c	/^static void sigpipe_handler(int n) {$/;"	f	file:
simulation	services/surfaceflinger/Effects/Daltonizer.h	/^        simulation,$/;"	e	enum:android::Daltonizer::Mode
sincosf	opengl/libagl/fp.cpp	/^void sincosf(GLfloat angle, GLfloat* s, GLfloat* c) {$/;"	f	namespace:android::gl
sinef	opengl/libagl/fp.cpp	/^float sinef(float x)$/;"	f	namespace:android::gl
singleLineCutoff	include/binder/TextOutput.h	/^inline int32_t HexDump::singleLineCutoff() const { return mSingleLineCutoff; }$/;"	f	class:android::HexDump
size	include/binder/Parcel.h	/^        inline size_t size() const { return mSize; }$/;"	f	class:android::Parcel::Blob
size	include/binder/TextOutput.h	/^inline size_t HexDump::size() const { return mSize; }$/;"	f	class:android::HexDump
size	include/input/InputTransport.h	/^            inline size_t size() const {$/;"	f	struct:android::InputMessage::Body::Finished
size	include/input/InputTransport.h	/^            inline size_t size() const {$/;"	f	struct:android::InputMessage::Body::Key
size	include/input/InputTransport.h	/^            inline size_t size() const {$/;"	f	struct:android::InputMessage::Body::Motion
size	include/ui/GraphicBufferAllocator.h	/^        size_t size;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
size	include/ui/mat4.h	/^    static inline size_t size()     { return row_size(); }  \/\/ for TVec*<>$/;"	f	class:android::tmat44
size	include/ui/vec2.h	/^    inline static size_type size() { return SIZE; }$/;"	f	class:android::tvec2
size	include/ui/vec3.h	/^    inline static size_type size() { return SIZE; }$/;"	f	class:android::tvec3
size	include/ui/vec4.h	/^    inline static size_type size() { return SIZE; }$/;"	f	class:android::tvec4
size	libs/binder/IMemory.cpp	/^size_t IMemory::size() const {$/;"	f	class:android::IMemory
size	libs/binder/MemoryDealer.cpp	/^        size_t              size : 28;$/;"	m	struct:android::SimpleBestFitAllocator::chunk_t	file:
size	libs/binder/MemoryDealer.cpp	/^size_t SimpleBestFitAllocator::size() const$/;"	f	class:android::SimpleBestFitAllocator
size	libs/input/InputTransport.cpp	/^size_t InputMessage::size() const {$/;"	f	class:android::InputMessage
size	libs/ui/PixelFormat.cpp	/^    size_t      size;$/;"	m	struct:android::Info	file:
size	opengl/libagl/BufferObjectManager.h	/^    GLsizeiptr      size;$/;"	m	struct:android::gl::buffer_t
size	opengl/libagl/TextureObjectManager.h	/^    inline  size_t      size() const { return mSize; }$/;"	f	class:android::EGLTextureObject
size	opengl/libagl/context.h	/^    GGLcoord    size;$/;"	m	struct:android::gl::point_size_t
size	opengl/libagl/context.h	/^    GLint           size;$/;"	m	struct:android::gl::array_t
size	opengl/libagl/egl.cpp	/^    int                  size;$/;"	m	struct:android::configs_t	file:
size	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange size;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
size	services/sensorservice/mat.h	/^    size_type size() const { return R*C; }$/;"	f	class:android::mat
size	services/sensorservice/mat.h	/^    size_type size() const { return R; }$/;"	f	class:android::mat
size	services/sensorservice/vec.h	/^    size_type size() const { return SIZE; }$/;"	f	class:android::vec
sizeBias	services/inputflinger/InputReader.h	/^        float sizeBias;$/;"	m	struct:android::TouchInputMapper::Calibration
sizeCalibration	services/inputflinger/InputReader.h	/^        SizeCalibration sizeCalibration;$/;"	m	struct:android::TouchInputMapper::Calibration
sizeIsSummed	services/inputflinger/InputReader.h	/^        bool sizeIsSummed;$/;"	m	struct:android::TouchInputMapper::Calibration
sizeScale	services/inputflinger/InputReader.h	/^        float sizeScale;$/;"	m	struct:android::TouchInputMapper::Calibration
size_type	include/ui/mat4.h	/^    typedef size_t size_type;$/;"	t	class:android::tmat44
size_type	include/ui/vec2.h	/^    typedef size_t size_type;$/;"	t	class:android::tvec2
size_type	include/ui/vec3.h	/^    typedef size_t size_type;$/;"	t	class:android::tvec3
size_type	include/ui/vec4.h	/^    typedef size_t size_type;$/;"	t	class:android::tvec4
size_type	services/sensorservice/mat.h	/^    typedef size_t size_type;$/;"	t	class:android::mat
size_type	services/sensorservice/vec.h	/^    typedef size_t size_type;$/;"	t	class:android::vec
sizeof_bit_array	services/inputflinger/EventHub.cpp	61;"	d	file:
skipOneCheck	opengl/tools/glgen/src/JniCodeEmitter.java	/^    int skipOneCheck(String[] checks, int index) {$/;"	m	class:JniCodeEmitter
slap	libs/binder/MemoryHeapPmem.cpp	/^status_t MemoryHeapPmem::slap()$/;"	f	class:android::MemoryHeapPmem
slot	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        int slot;$/;"	m	struct:android::IGraphicBufferProducerTest::DequeueBufferResult	file:
slot	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo slot;$/;"	m	struct:android::RawPointerAxes
small_flat_data	libs/binder/Parcel.cpp	/^struct small_flat_data$/;"	s	file:
smooth	opengl/libagl/context.h	/^    GLboolean   smooth;$/;"	m	struct:android::gl::line_width_t
smooth	opengl/libagl/context.h	/^    GLboolean   smooth;$/;"	m	struct:android::gl::point_size_t
solveLeastSquares	libs/input/VelocityTracker.cpp	/^static bool solveLeastSquares(const float* x, const float* y,$/;"	f	namespace:android
sortEventBuffer	services/sensorservice/SensorService.cpp	/^void SensorService::sortEventBuffer(sensors_event_t* buffer, size_t count)$/;"	f	class:android::SensorService
sort_func	cmds/dumpsys/dumpsys.cpp	/^static int sort_func(const String16* lhs, const String16* rhs)$/;"	f	file:
source	include/input/InputDevice.h	/^        uint32_t source;$/;"	m	struct:android::InputDeviceInfo::MotionRange
source	include/input/InputTransport.h	/^            int32_t source;$/;"	m	struct:android::InputMessage::Body::Key
source	include/input/InputTransport.h	/^            int32_t source;$/;"	m	struct:android::InputMessage::Body::Motion
source	include/input/InputTransport.h	/^        int32_t source;$/;"	m	struct:android::InputConsumer::TouchState
source	services/inputflinger/InputDispatcher.h	/^            uint32_t source;$/;"	m	struct:android::InputDispatcher::InputState::KeyMemento
source	services/inputflinger/InputDispatcher.h	/^            uint32_t source;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
source	services/inputflinger/InputDispatcher.h	/^        uint32_t source;  \/\/ source of the device that is current down, others are rejected$/;"	m	struct:android::InputDispatcher::TouchState
source	services/inputflinger/InputDispatcher.h	/^        uint32_t source;$/;"	m	struct:android::InputDispatcher::KeyEntry
source	services/inputflinger/InputDispatcher.h	/^        uint32_t source;$/;"	m	struct:android::InputDispatcher::MotionEntry
source	services/inputflinger/InputListener.h	/^    uint32_t source;$/;"	m	struct:android::NotifyKeyArgs
source	services/inputflinger/InputListener.h	/^    uint32_t source;$/;"	m	struct:android::NotifyMotionArgs
sourceCrop	opengl/tests/hwc/hwcCommit.cpp	/^    HwcTestDim sourceCrop;$/;"	m	struct:searchLimits	file:
sourceCrop	opengl/tests/hwc/hwcCommit.cpp	/^    struct hwc_rect   sourceCrop;$/;"	m	class:Rectangle	typeref:struct:Rectangle::hwc_rect	file:
sourceCrop	opengl/tests/hwc/hwcCommit.cpp	/^    struct sourceCrop {$/;"	s	struct:meas	file:
sourceCrop	opengl/tests/hwc/hwcRects.cpp	/^    struct hwc_rect   sourceCrop;$/;"	m	class:Rectangle	typeref:struct:Rectangle::hwc_rect	file:
sourceDim	opengl/tests/hwc/hwcCommit.cpp	/^    HwcTestDim   sourceDim;$/;"	m	class:Rectangle	file:
sourceDim	opengl/tests/hwc/hwcRects.cpp	/^    HwcTestDim   sourceDim;$/;"	m	class:Rectangle	file:
sources	libs/binder/Android.mk	/^sources := \\$/;"	m
sourcesMatchMask	services/inputflinger/InputReader.cpp	/^static inline bool sourcesMatchMask(uint32_t sources, uint32_t sourceMask) {$/;"	f	namespace:android
span	libs/ui/Region.cpp	/^    Vector<Rect> span;$/;"	m	class:android::Region::rasterizer	file:
spanner	include/private/ui/RegionHelper.h	/^    Spanner spanner;$/;"	m	class:android::region_operator
spawnPooledThread	libs/binder/ProcessState.cpp	/^void ProcessState::spawnPooledThread(bool isMain)$/;"	f	class:android::ProcessState
special_dir	cmds/rawbu/backup.cpp	/^struct special_dir {$/;"	s	namespace:android	file:
specular	opengl/libagl/context.h	/^    vec4_t      specular;$/;"	m	struct:android::gl::light_t
specular	opengl/libagl/context.h	/^    vec4_t      specular;$/;"	m	struct:android::gl::material_t
split	services/inputflinger/InputDispatcher.h	/^        bool split;$/;"	m	struct:android::InputDispatcher::TouchState
splitMotionEvent	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::splitMotionEvent(const MotionEntry* originalMotionEntry, BitSet32 pointerIds) {$/;"	f	class:android::InputDispatcher
splitValue	include/input/KeyLayoutMap.h	/^    int32_t splitValue;$/;"	m	struct:android::AxisInfo
spotCutoff	opengl/libagl/context.h	/^    GLfixed     spotCutoff;$/;"	m	struct:android::gl::light_t
spotCutoffCosine	opengl/libagl/context.h	/^    GLfixed     spotCutoffCosine;$/;"	m	struct:android::gl::light_t
spotDir	opengl/libagl/context.h	/^    vec4_t      spotDir;$/;"	m	struct:android::gl::light_t
spotExp	opengl/libagl/context.h	/^    GLfixed     spotExp;$/;"	m	struct:android::gl::light_t
sqrf	opengl/libagl/fp.h	/^GLfloat sqrf(GLfloat v) {$/;"	f	namespace:android::gl
square	opengl/libs/ETC1/etc1.cpp	/^inline int square(int x) {$/;"	f	file:
src	opengl/tests/angeles/cams.h	/^    short src[5], dest[5];$/;"	m	struct:__anon234
srgbToLinear	libs/gui/tests/SRGB_test.cpp	/^    static float srgbToLinear(float s) {$/;"	f	class:android::SRGBTest
srgbToLinear	libs/gui/tests/SRGB_test.cpp	/^    static uint8_t srgbToLinear(uint8_t u) {$/;"	f	class:android::SRGBTest
ssFunc	opengl/tests/angeles/demo.c	/^static float ssFunc(const float t, const float *p)$/;"	f	file:
st	include/ui/vec3.h	/^        Impersonator< tvec2<T> > st;$/;"	m	union:android::tvec3::__anon89
st	include/ui/vec4.h	/^        Impersonator< tvec2<T> > st;$/;"	m	union:android::tvec4::__anon96
st	services/sensorservice/vec.h	/^        vbase<float, 2> st;$/;"	m	union:android::vbase::__anon56
st	services/sensorservice/vec.h	/^        vbase<float, 2> st;$/;"	m	union:android::vbase::__anon59
stack	opengl/libagl/context.h	/^    matrixf_t       *stack;$/;"	m	struct:android::gl::matrix_stack_t
start	libs/binder/MemoryDealer.cpp	/^        size_t              start;$/;"	m	struct:android::SimpleBestFitAllocator::chunk_t	file:
start	opengl/libagl/context.h	/^    GLfixed     start;$/;"	m	struct:android::gl::fog_t
start	services/inputflinger/InputManager.cpp	/^status_t InputManager::start() {$/;"	f	class:android::InputManager
start	services/surfaceflinger/DdmConnection.cpp	/^void DdmConnection::start(const char* name) {$/;"	f	class:android::DdmConnection
startBootAnim	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::startBootAnim() {$/;"	f	class:android::SurfaceFlinger
startDdmConnection	services/surfaceflinger/SurfaceFlinger.cpp	/^bool SurfaceFlinger::startDdmConnection()$/;"	f	class:android::SurfaceFlinger
startDim	opengl/tests/hwc/hwcCommit.cpp	/^static HwcTestDim startDim = defaultStartDim;$/;"	v	file:
startDimOverlays	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t startDimOverlays;$/;"	m	struct:meas	file:
startDispatchCycleLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::startDispatchCycleLocked(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher
startList	services/surfaceflinger/EventLog/EventLog.cpp	/^void EventLog::TagBuffer::startList(int8_t count) {$/;"	f	class:android::EventLog::TagBuffer
startOp	libs/binder/AppOpsManager.cpp	/^int32_t AppOpsManager::startOp(int32_t op, int32_t uid, const String16& callingPackage) {$/;"	f	class:android::AppOpsManager
startOperation	libs/binder/IAppOpsService.cpp	/^    virtual int32_t startOperation(const sp<IBinder>& token, int32_t code, int32_t uid,$/;"	f	class:android::BpAppOpsService
startPass	opengl/tests/hwc/hwcStress.cpp	/^static unsigned int startPass = defaultStartPass;$/;"	v	file:
startRefColor	opengl/tests/hwc/hwcColorEquiv.cpp	/^static ColorFract startRefColor = defaultStartColor;$/;"	v	file:
startThreadPool	libs/binder/ProcessState.cpp	/^void ProcessState::startThreadPool()$/;"	f	class:android::ProcessState
startTileComposition	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::startTileComposition(int x , int y, int width,$/;"	f	class:android::GLES20RenderEngine
startTileComposition	services/surfaceflinger/RenderEngine/RenderEngine.h	/^    virtual void startTileComposition(int x, int y, int width,$/;"	f	class:android::RenderEngine
startTime	opengl/libagl/context.h	/^    int64_t         startTime;$/;"	m	struct:android::gl::vertex_cache_t
startTime	opengl/tools/glgen2/registry/genheaders.py	/^startTime = None$/;"	v
startTimer	opengl/tests/gl_perf/fill_common.cpp	/^void startTimer() {$/;"	f
startTimer	opengl/tools/glgen2/registry/genheaders.py	/^def startTimer():$/;"	f
startTrace	cmds/atrace/atrace.cpp	/^static bool startTrace()$/;"	f	file:
startWatchingMode	libs/binder/AppOpsManager.cpp	/^void AppOpsManager::startWatchingMode(int32_t op, const String16& packageName,$/;"	f	class:android::AppOpsManager
startWatchingMode	libs/binder/IAppOpsService.cpp	/^    virtual void startWatchingMode(int32_t op, const String16& packageName,$/;"	f	class:android::BpAppOpsService
start_cache_collection	cmds/installd/utils.c	/^cache_t* start_cache_collection()$/;"	f
start_time	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::google::protobuf::int64 GLMessage::start_time() const {$/;"	f	class:android::gltrace::GLMessage
start_time_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::int64 start_time_;$/;"	m	class:android::gltrace::GLMessage
statBuffer	cmds/rawbu/backup.cpp	/^static struct stat statBuffer;$/;"	m	namespace:android	typeref:struct:android::stat	file:
stat_size	libs/diskusage/dirsize.c	/^int64_t stat_size(struct stat *s)$/;"	f
state	include/private/gui/LayerState.h	/^    layer_state_t state;$/;"	m	struct:android::ComposerState
state	opengl/libs/EGL/egl_display.h	/^        EGLint      state;$/;"	m	struct:android::egl_display_t::DisplayImpl
state	services/surfaceflinger/Barrier.h	/^    volatile    int         state;$/;"	m	class:android::Barrier
stateClock	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^int stateClock;$/;"	v
states	libs/binder/BufferedTextOutput.cpp	/^    Vector<sp<BufferedTextOutput::BufferState> > states;$/;"	m	struct:android::BufferedTextOutput::ThreadState	file:
staticGradient	cmds/flatland/Renderers.cpp	/^Renderer* staticGradient() {$/;"	f	namespace:android
static_descriptor_initializer_gltrace_2eproto_	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^} static_descriptor_initializer_gltrace_2eproto_;$/;"	m	namespace:android::gltrace	typeref:struct:android::gltrace::StaticDescriptorInitializer_gltrace_2eproto	file:
static_libraries	cmds/installd/tests/Android.mk	/^static_libraries := \\$/;"	m
static_libraries	libs/input/tests/Android.mk	/^static_libraries := \\$/;"	m
static_libraries	libs/ui/tests/Android.mk	/^static_libraries := \\$/;"	m
static_libraries	services/inputflinger/tests/Android.mk	/^static_libraries := \\$/;"	m
status	include/android/sensor.h	/^    int8_t status;$/;"	m	struct:ASensorVector
status	include/android/sensor.h	/^  int8_t status;$/;"	m	struct:AHeartRateEvent
status	services/inputflinger/InputDispatcher.h	/^        Status status;$/;"	m	class:android::InputDispatcher::Connection
stencilop_valid	opengl/libagl/state.cpp	/^static bool stencilop_valid(GLenum op) {$/;"	f	namespace:android
step	opengl/tests/gl2_jni/src/com/android/gl2jni/GL2JNILib.java	/^     public static native void step();$/;"	m	class:GL2JNILib
step	opengl/tests/gl_jni/src/com/android/gljni/GLJNILib.java	/^     public static native void step();$/;"	m	class:GLJNILib
step	opengl/tests/gl_perfapp/src/com/android/glperf/GLPerfLib.java	/^     public static native void step();$/;"	m	class:GLPerfLib
step	opengl/tests/gldual/src/com/android/gldual/GLDualLib.java	/^     public static native void step();$/;"	m	class:GLDualLib
step_counter	include/android/sensor.h	/^            uint64_t        step_counter;$/;"	m	union:ASensorEvent::__anon187::__anon189
stickyTransform	include/gui/IGraphicBufferProducer.h	/^        uint32_t stickyTransform;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferInput
stillTracking	libs/gui/BufferQueueCore.cpp	/^bool BufferQueueCore::stillTracking(const BufferItem* item) const {$/;"	f	class:android::BufferQueueCore
stillTracking	libs/gui/ConsumerBase.cpp	/^bool ConsumerBase::stillTracking(int slot,$/;"	f	class:android::ConsumerBase
stop	services/inputflinger/InputManager.cpp	/^status_t InputManager::stop() {$/;"	f	class:android::InputManager
stop	services/surfaceflinger/DispSync.cpp	/^    void stop() {$/;"	f	class:android::DispSyncThread
stopProcess	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::stopProcess(bool \/*immediate*\/)$/;"	f	class:android::IPCThreadState
stopTrace	cmds/atrace/atrace.cpp	/^static void stopTrace()$/;"	f	file:
stopVibrating	services/inputflinger/InputReader.cpp	/^void VibratorInputMapper::stopVibrating() {$/;"	f	class:android::VibratorInputMapper
stopWatchingMode	libs/binder/AppOpsManager.cpp	/^void AppOpsManager::stopWatchingMode(const sp<IAppOpsCallback>& callback) {$/;"	f	class:android::AppOpsManager
stopWatchingMode	libs/binder/IAppOpsService.cpp	/^    virtual void stopWatchingMode(const sp<IAppOpsCallback>& callback) {$/;"	f	class:android::BpAppOpsService
storage	libs/ui/Region.cpp	/^    Vector<Rect>& storage;$/;"	m	class:android::Region::rasterizer	file:
storage	opengl/libagl/egl.cpp	/^        Rect storage[4];$/;"	m	struct:android::egl_window_surface_v2_t::Region	file:
stp	include/ui/vec4.h	/^        Impersonator< tvec3<T> > stp;$/;"	m	union:android::tvec4::__anon96
str	services/sensorservice/vec.h	/^        vbase<float, 3> str;$/;"	m	union:android::vbase::__anon59
str16eq	cmds/servicemanager/service_manager.c	/^int str16eq(const uint16_t *a, const char *b)$/;"	f
str8	cmds/servicemanager/service_manager.c	/^const char *str8(const uint16_t *x, size_t x_len)$/;"	f
strerror	opengl/tests/include/EGLUtils.h	/^const char *EGLUtils::strerror(EGLint err)$/;"	f	class:android::EGLUtils
strictly_order_type	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        friend inline int strictly_order_type(const Key& lhs, const Key& rhs) {$/;"	f	class:android::GLES20RenderEngine::Key
strictly_order_type	services/surfaceflinger/RenderEngine/ProgramCache.h	/^        friend inline int strictly_order_type(const Key& lhs, const Key& rhs) {$/;"	f	class:android::ProgramCache::Key
stride	include/android/bitmap.h	/^    uint32_t    stride;$/;"	m	struct:__anon161
stride	include/android/native_window.h	/^    int32_t stride;$/;"	m	struct:ANativeWindow_Buffer
stride	include/gui/CpuConsumer.h	/^        uint32_t    stride;$/;"	m	struct:android::CpuConsumer::LockedBuffer
stride	include/ui/ANativeObjectBase.h	/^    int32_t     stride;$/;"	m	struct:egl_native_pixmap_t
stride	opengl/libagl/context.h	/^    GLsizei         stride;$/;"	m	struct:android::gl::array_t
stringForIndent	libs/binder/Debug.cpp	/^const char* stringForIndent(int32_t indentLevel)$/;"	f	namespace:android
strings_t	opengl/libs/EGL/egl_display.h	/^    struct strings_t {$/;"	s	class:android::egl_display_t
stylusIconEnabled	services/inputflinger/InputReader.h	/^    bool stylusIconEnabled;$/;"	m	struct:android::InputReaderConfiguration
stylusPalmRejectionTime	services/inputflinger/InputReader.h	/^    nsecs_t stylusPalmRejectionTime;$/;"	m	struct:android::InputReaderConfiguration
subtract	libs/ui/Region.cpp	/^const Region Region::subtract(const Rect& rhs) const {$/;"	f	class:android::Region
subtract	libs/ui/Region.cpp	/^const Region Region::subtract(const Region& rhs) const {$/;"	f	class:android::Region
subtract	libs/ui/Region.cpp	/^const Region Region::subtract(const Region& rhs, int dx, int dy) const {$/;"	f	class:android::Region
subtract	opengl/libagl/egl.cpp	/^        static Region subtract(const Rect& lhs, const Rect& rhs) {$/;"	f	struct:android::egl_window_surface_v2_t::Region
subtractSelf	libs/ui/Region.cpp	/^Region& Region::subtractSelf(const Rect& r) {$/;"	f	class:android::Region
subtractSelf	libs/ui/Region.cpp	/^Region& Region::subtractSelf(const Region& rhs) {$/;"	f	class:android::Region
subtractSelf	libs/ui/Region.cpp	/^Region& Region::subtractSelf(const Region& rhs, int dx, int dy) {$/;"	f	class:android::Region
superShapeMap	opengl/tests/angeles/demo.c	/^static void superShapeMap(VECTOR3 *point, float r1, float r2, float t, float p)$/;"	f	file:
supportedBlends	opengl/tests/hwc/hwcCommit.cpp	/^list<uint32_t> supportedBlends(uint32_t format)$/;"	f
supportedTransforms	opengl/tests/hwc/hwcCommit.cpp	/^list<uint32_t> supportedTransforms(uint32_t format)$/;"	f
supportsExtension	opengl/tools/glgen/stubs/jsr239/GLCHeader.cpp	/^supportsExtension(JNIEnv *_env, jobject impl, jfieldID fieldId) {$/;"	f	file:
supportsFramebufferTarget	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::supportsFramebufferTarget() const {$/;"	f	class:android::HWComposer
supportsSplitTouch	services/inputflinger/InputWindow.cpp	/^bool InputWindowInfo::supportsSplitTouch() const {$/;"	f	class:android::InputWindowInfo
surface	include/private/gui/LayerState.h	/^            sp<IBinder>     surface;$/;"	m	struct:android::layer_state_t
surface	include/private/gui/LayerState.h	/^    sp<IGraphicBufferProducer> surface;$/;"	m	struct:android::DisplayState
surface	opengl/libagl/TextureObjectManager.h	/^    GGLSurface          surface;$/;"	m	class:android::EGLTextureObject
surface	opengl/libs/EGL/egl_object.h	/^    EGLSurface surface;$/;"	m	class:android::egl_surface_t
surface	opengl/tests/gl_perf/gl2_perf.cpp	/^static EGLSurface surface;$/;"	v	file:
surface	opengl/tests/hwc/hwcColorEquiv.cpp	/^static EGLSurface surface;$/;"	v	file:
surface	opengl/tests/hwc/hwcCommit.cpp	/^static EGLSurface surface;$/;"	v	file:
surface	opengl/tests/hwc/hwcRects.cpp	/^static EGLSurface surface;$/;"	v	file:
surface	opengl/tests/hwc/hwcStress.cpp	/^static EGLSurface surface;$/;"	v	file:
surface	services/surfaceflinger/SurfaceFlinger.h	/^        sp<IGraphicBufferProducer> surface;$/;"	m	struct:android::SurfaceFlinger::DisplayDeviceState
surfaceManager	opengl/libagl/context.h	/^    EGLSurfaceManager*      surfaceManager;$/;"	m	struct:android::gl::ogles_context_t
surfaceport	opengl/libagl/context.h	/^    } surfaceport;$/;"	m	struct:android::gl::viewport_t	typeref:struct:android::gl::viewport_t::__anon229
svc_c_flags	cmds/servicemanager/Android.mk	/^svc_c_flags =	\\$/;"	m
svc_can_find	cmds/servicemanager/service_manager.c	/^static int svc_can_find(const uint16_t *name, size_t name_len, pid_t spid)$/;"	f	file:
svc_can_list	cmds/servicemanager/service_manager.c	/^static int svc_can_list(pid_t spid)$/;"	f	file:
svc_can_register	cmds/servicemanager/service_manager.c	/^static int svc_can_register(const uint16_t *name, size_t name_len, pid_t spid)$/;"	f	file:
svcinfo	cmds/servicemanager/service_manager.c	/^struct svcinfo$/;"	s	file:
svcinfo_death	cmds/servicemanager/service_manager.c	/^void svcinfo_death(struct binder_state *bs, void *ptr)$/;"	f
svclist	cmds/servicemanager/service_manager.c	/^struct svcinfo *svclist = NULL;$/;"	v	typeref:struct:svcinfo
svcmgr_handle	cmds/servicemanager/service_manager.c	/^uint32_t svcmgr_handle;$/;"	v
svcmgr_handler	cmds/servicemanager/service_manager.c	/^int svcmgr_handler(struct binder_state *bs,$/;"	f
svcmgr_id	cmds/servicemanager/service_manager.c	/^uint16_t svcmgr_id[] = {$/;"	v
svcmgr_lookup	cmds/servicemanager/bctest.c	/^uint32_t svcmgr_lookup(struct binder_state *bs, uint32_t target, const char *name)$/;"	f
svcmgr_publish	cmds/servicemanager/bctest.c	/^int svcmgr_publish(struct binder_state *bs, uint32_t target, const char *name, void *ptr)$/;"	f
swBitmask	services/inputflinger/EventHub.h	/^        uint8_t swBitmask[(SW_MAX + 1) \/ 8];$/;"	m	struct:android::EventHub::Device
swap	opengl/libagl/context.h	/^static inline void swap(T& a, T& b) {$/;"	f	namespace:android::gl
swap	opengl/libagl/dxt.cpp	/^static uint32_t swap(uint32_t x) {$/;"	f	namespace:android
swap	services/inputflinger/InputReader.cpp	/^inline static void swap(T& a, T& b) {$/;"	f	namespace:android
swap	services/surfaceflinger/clz.h	/^void swap(T& a, T& b) {$/;"	f	namespace:android
swapBuffers	cmds/flatland/GLHelper.cpp	/^bool GLHelper::swapBuffers(EGLSurface surface) {$/;"	f	class:android::GLHelper
swapBuffers	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        void swapBuffers() {$/;"	f	class:android::SurfaceTextureGLThreadToGLTest::ProducerThread
swapBuffers	opengl/libagl/egl.cpp	/^EGLBoolean egl_surface_t::swapBuffers() {$/;"	f	class:android::egl_surface_t
swapBuffers	opengl/libagl/egl.cpp	/^EGLBoolean egl_window_surface_v2_t::swapBuffers()$/;"	f	class:android::egl_window_surface_v2_t
swapBuffers	services/surfaceflinger/DisplayDevice.cpp	/^void DisplayDevice::swapBuffers(HWComposer& hwc) const {$/;"	f	class:DisplayDevice
swapRegion	services/surfaceflinger/DisplayDevice.h	/^    mutable Region swapRegion;$/;"	m	class:android::DisplayDevice
switchMask	services/inputflinger/InputListener.h	/^    uint32_t switchMask;$/;"	m	struct:android::NotifySwitchArgs
switchStates	services/inputflinger/tests/InputReader_test.cpp	/^        KeyedVector<int32_t, int32_t> switchStates;$/;"	m	struct:android::FakeEventHub::Device	file:
switchValues	services/inputflinger/InputListener.h	/^    uint32_t switchValues;$/;"	m	struct:android::NotifySwitchArgs
sync	services/inputflinger/InputReader.cpp	/^void CursorInputMapper::sync(nsecs_t when) {$/;"	f	class:android::CursorInputMapper
sync	services/inputflinger/InputReader.cpp	/^void JoystickInputMapper::sync(nsecs_t when, bool force) {$/;"	f	class:android::JoystickInputMapper
sync	services/inputflinger/InputReader.cpp	/^void SwitchInputMapper::sync(nsecs_t when) {$/;"	f	class:android::SwitchInputMapper
sync	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::sync(nsecs_t when) {$/;"	f	class:android::TouchInputMapper
syncForReleaseLocked	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::syncForReleaseLocked(EGLDisplay dpy) {$/;"	f	class:android::GLConsumer
syncTouch	services/inputflinger/InputReader.cpp	/^void MultiTouchInputMapper::syncTouch(nsecs_t when, bool* outHavePointerIds) {$/;"	f	class:android::MultiTouchInputMapper
syncTouch	services/inputflinger/InputReader.cpp	/^void SingleTouchInputMapper::syncTouch(nsecs_t when, bool* outHavePointerIds) {$/;"	f	class:android::SingleTouchInputMapper
synthesizeButtonKey	services/inputflinger/InputReader.cpp	/^static void synthesizeButtonKey(InputReaderContext* context, int32_t action,$/;"	f	namespace:android
synthesizeButtonKeys	services/inputflinger/InputReader.cpp	/^static void synthesizeButtonKeys(InputReaderContext* context, int32_t action,$/;"	f	namespace:android
synthesizeCancelationEvents	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::InputState::synthesizeCancelationEvents(nsecs_t currentTime,$/;"	f	class:android::InputDispatcher::InputState
synthesizeCancelationEventsForAllConnectionsLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::synthesizeCancelationEventsForAllConnectionsLocked($/;"	f	class:android::InputDispatcher
synthesizeCancelationEventsForConnectionLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::synthesizeCancelationEventsForConnectionLocked($/;"	f	class:android::InputDispatcher
synthesizeCancelationEventsForInputChannelLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::synthesizeCancelationEventsForInputChannelLocked($/;"	f	class:android::InputDispatcher
synthesizeKeyRepeatLocked	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::KeyEntry* InputDispatcher::synthesizeKeyRepeatLocked(nsecs_t currentTime) {$/;"	f	class:android::InputDispatcher
syntheticRepeat	services/inputflinger/InputDispatcher.h	/^        bool syntheticRepeat; \/\/ set to true for synthetic key repeats$/;"	m	struct:android::InputDispatcher::KeyEntry
sysfiles	cmds/atrace/atrace.cpp	/^    } sysfiles[MAX_SYS_FILES];$/;"	m	struct:TracingCategory	typeref:struct:TracingCategory::__anon3	file:
szinfo	include/ui/PixelFormat.h	/^    struct szinfo {$/;"	s	struct:android::PixelFormatInfo
t	include/ui/vec2.h	/^        struct { T s, t; };$/;"	m	struct:android::tvec2::__anon82::__anon84
t	include/ui/vec3.h	/^        struct { T s, t, p; };$/;"	m	struct:android::tvec3::__anon89::__anon91
t	include/ui/vec4.h	/^        struct { T s, t, p, q; };$/;"	m	struct:android::tvec4::__anon96::__anon98
t	services/sensorservice/vec.h	/^        struct { float s, t, r, q; };$/;"	m	struct:android::vbase::__anon59::__anon61
t	services/sensorservice/vec.h	/^        struct { float s, t, r; };$/;"	m	struct:android::vbase::__anon56::__anon58
t	services/sensorservice/vec.h	/^        struct { float s, t; };$/;"	m	struct:android::vbase::__anon53::__anon55
tables_initialized	opengl/libagl/dxt.cpp	/^static volatile int tables_initialized = 0;$/;"	m	namespace:android	file:
tags	cmds/atrace/atrace.cpp	/^    uint64_t tags;$/;"	m	struct:TracingCategory	file:
tail	libs/binder/MemoryDealer.cpp	/^    NODE const* tail() const { return mLast; }$/;"	f	class:android::LinkedList
tail	libs/binder/MemoryDealer.cpp	/^    NODE*       tail() { return mLast; }$/;"	f	class:android::LinkedList
tail	libs/ui/Region.cpp	/^    Rect* tail;$/;"	m	class:android::Region::rasterizer	file:
tail	services/inputflinger/InputDispatcher.h	/^        T* tail;$/;"	m	struct:android::InputDispatcher::Queue
take_best	opengl/libs/ETC1/etc1.cpp	/^inline void take_best(etc_compressed* a, const etc_compressed* b) {$/;"	f	file:
talkWithDriver	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::talkWithDriver(bool doReceive)$/;"	f	class:android::IPCThreadState
tapDownTime	services/inputflinger/InputReader.h	/^        nsecs_t tapDownTime;$/;"	m	struct:android::TouchInputMapper::PointerGesture
tapUpTime	services/inputflinger/InputReader.h	/^        nsecs_t tapUpTime;$/;"	m	struct:android::TouchInputMapper::PointerGesture
tapX	services/inputflinger/InputReader.h	/^        float tapX, tapY;$/;"	m	struct:android::TouchInputMapper::PointerGesture
tapY	services/inputflinger/InputReader.h	/^        float tapX, tapY;$/;"	m	struct:android::TouchInputMapper::PointerGesture
target	opengl/tools/glgen2/registry/genheaders.py	/^            target = arg$/;"	v
target	opengl/tools/glgen2/registry/genheaders.py	/^target  = None$/;"	v
targetFlags	services/inputflinger/InputDispatcher.h	/^        int32_t targetFlags;$/;"	m	struct:android::InputDispatcher::DispatchEntry
targetFlags	services/inputflinger/InputDispatcher.h	/^        int32_t targetFlags;$/;"	m	struct:android::InputDispatcher::TouchedWindow
tearDown	cmds/flatland/Composers.cpp	/^    virtual void tearDown() {$/;"	f	class:android::ComposerBase
tearDown	cmds/flatland/GLHelper.cpp	/^void GLHelper::tearDown() {$/;"	f	class:android::GLHelper
tearDown	cmds/flatland/Main.cpp	/^    void tearDown() {$/;"	f	class:BenchmarkRunner
tearDown	cmds/flatland/Main.cpp	/^    void tearDown() {$/;"	f	class:Layer
tearDown	cmds/flatland/Renderers.cpp	/^    void tearDown() {$/;"	f	class:android::GradientRenderer
temp	services/sensorservice/traits.h	/^    enum { temp = IndexOf<Tail, T>::value };$/;"	e	enum:android::TL::IndexOf::__anon64
temperature	include/android/sensor.h	/^            float           temperature;$/;"	m	union:ASensorEvent::__anon187::__anon188
terminate	opengl/libs/EGL/egl_cache.cpp	/^void egl_cache_t::terminate() {$/;"	f	class:android::egl_cache_t
terminate	opengl/libs/EGL/egl_display.cpp	/^EGLBoolean egl_display_t::terminate() {$/;"	f	class:android::egl_display_t
terminate	opengl/libs/EGL/egl_object.cpp	/^void egl_object_t::terminate() {$/;"	f	class:android::egl_object_t
terminate	opengl/libs/EGL/egl_object.h	/^void egl_object_t::LocalRef<N,T>::terminate() {$/;"	f	class:android::egl_object_t::LocalRef
testDPadKeyRotation	services/inputflinger/tests/InputReader_test.cpp	/^void KeyboardInputMapperTest::testDPadKeyRotation(KeyboardInputMapper* mapper,$/;"	f	class:android::KeyboardInputMapperTest
testMotionRotation	services/inputflinger/tests/InputReader_test.cpp	/^void CursorInputMapperTest::testMotionRotation(CursorInputMapper* mapper,$/;"	f	class:android::CursorInputMapperTest
test_bit	services/inputflinger/EventHub.cpp	58;"	d	file:
test_num_functions_parsed	opengl/libs/GLES_trace/tools/testgenapi.py	/^    def test_num_functions_parsed(self):$/;"	m	class:TestApiCall
test_parseArgs	opengl/libs/GLES_trace/tools/testgenapi.py	/^    def test_parseArgs(self):$/;"	m	class:TestApiCall
test_parsing	opengl/libs/GLES_trace/tools/testgenapi.py	/^    def test_parsing(self):$/;"	m	class:TestApiCall
test_src_files	cmds/installd/tests/Android.mk	/^test_src_files := \\$/;"	m
test_src_files	libs/input/tests/Android.mk	/^test_src_files := \\$/;"	m
test_src_files	libs/ui/tests/Android.mk	/^test_src_files := \\$/;"	m
test_src_files	services/inputflinger/tests/Android.mk	/^test_src_files := \\$/;"	m
texCoords	services/surfaceflinger/RenderEngine/Program.h	/^    enum { position=0, texCoords=1 };$/;"	e	enum:android::Program::__anon32
texCount	opengl/tests/gl_perf/fragment_shaders.cpp	/^	uint32_t texCount;$/;"	m	struct:FragmentTestRec	file:
texParameterx	opengl/libagl/texture.cpp	/^static void texParameterx($/;"	f	namespace:android
texUsage	opengl/tests/hwc/hwcColorEquiv.cpp	/^static const int texUsage = GraphicBuffer::USAGE_HW_TEXTURE |$/;"	v	file:
texUsage	opengl/tests/hwc/hwcCommit.cpp	/^static const int texUsage = GraphicBuffer::USAGE_HW_TEXTURE |$/;"	v	file:
texUsage	opengl/tests/hwc/hwcRects.cpp	/^static const int texUsage = GraphicBuffer::USAGE_HW_TEXTURE |$/;"	v	file:
texUsage	opengl/tests/hwc/hwcStress.cpp	/^static const int texUsage = GraphicBuffer::USAGE_HW_TEXTURE |$/;"	v	file:
tex_transform	opengl/libagl/context.h	/^    void (*tex_transform[2])(transform_t const*, vec4_t*, vec4_t const*);$/;"	m	struct:android::gl::array_machine_t
textOutputPrinter	libs/binder/TextOutput.cpp	/^static void textOutputPrinter(void* cookie, const char* txt)$/;"	f	namespace:android
texture	opengl/libagl/TextureObjectManager.cpp	/^sp<EGLTextureObject> EGLSurfaceManager::texture(GLuint name)$/;"	f	class:android::EGLSurfaceManager
texture	opengl/libagl/context.h	/^    EGLTextureObject*   texture;$/;"	m	struct:android::gl::texture_unit_t
texture	opengl/libagl/context.h	/^    array_t         texture[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::gl::array_machine_t
texture	opengl/libagl/context.h	/^    matrix_stack_t      texture[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::gl::transform_state_t
texture	opengl/libagl/context.h	/^    vec4_t          texture[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::gl::vertex_t
texture	opengl/tests/gl_basic/gl_basic.cpp	/^GLuint texture;$/;"	v
texture	opengl/tests/gl_jni/jni/gl_code.cpp	/^GLuint texture;$/;"	v
texture	opengl/tests/hwc/hwcRects.cpp	/^    sp<GraphicBuffer> texture;$/;"	m	class:Rectangle	file:
texture	opengl/tests/tritex/tritex.cpp	/^GLuint texture;$/;"	v
texture	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        GLuint texture;$/;"	m	struct:android::GLES20RenderEngine::Group
texture_fct	opengl/libagl/array.cpp	/^static const fn_t texture_fct[3][16] = { \/\/ size={2,3,4}, type={b,s,f,x}$/;"	m	namespace:android	file:
texture_state_t	opengl/libagl/context.h	/^struct texture_state_t$/;"	s	namespace:android::gl
texture_unit_t	opengl/libagl/context.h	/^struct texture_unit_t {$/;"	s	namespace:android::gl
textures	opengl/libagl/context.h	/^    texture_state_t         textures;$/;"	m	struct:android::gl::ogles_context_t
the_context_object	libs/binder/IPCThreadState.cpp	/^sp<BBinder> the_context_object;$/;"	m	namespace:android	file:
threadDestructor	libs/binder/BufferedTextOutput.cpp	/^void BufferedTextOutput::threadDestructor(void *st)$/;"	f	class:android::BufferedTextOutput
threadDestructor	libs/binder/IPCThreadState.cpp	/^void IPCThreadState::threadDestructor(void *st)$/;"	f	class:android::IPCThreadState
threadLoop	libs/binder/ProcessState.cpp	/^    virtual bool threadLoop()$/;"	f	class:android::PoolThread
threadLoop	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        virtual bool threadLoop() {$/;"	f	class:android::SurfaceTextureGLThreadToGLTest::ProducerThread
threadLoop	libs/input/tests/TestHelpers.h	/^    virtual bool threadLoop() {$/;"	f	class:android::DelayedTask
threadLoop	opengl/libs/EGL/eglApi.cpp	/^    virtual bool threadLoop() {$/;"	f	class:FrameCompletionThread	file:
threadLoop	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcherThread::threadLoop() {$/;"	f	class:android::InputDispatcherThread
threadLoop	services/inputflinger/InputReader.cpp	/^bool InputReaderThread::threadLoop() {$/;"	f	class:android::InputReaderThread
threadLoop	services/sensorservice/SensorService.cpp	/^bool SensorService::SensorEventAckReceiver::threadLoop() {$/;"	f	class:android::SensorService::SensorEventAckReceiver
threadLoop	services/sensorservice/SensorService.cpp	/^bool SensorService::threadLoop()$/;"	f	class:android::SensorService
threadLoop	services/surfaceflinger/DispSync.cpp	/^    virtual bool threadLoop() {$/;"	f	class:android::DispSyncThread
threadLoop	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^bool HWComposer::VSyncThread::threadLoop() {$/;"	f	class:android::HWComposer::VSyncThread
threadLoop	services/surfaceflinger/EventControlThread.cpp	/^bool EventControlThread::threadLoop() {$/;"	f	class:android::EventControlThread
threadLoop	services/surfaceflinger/EventThread.cpp	/^bool EventThread::threadLoop() {$/;"	f	class:android::EventThread
threadtime	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::google::protobuf::int32 GLMessage::threadtime() const {$/;"	f	class:android::gltrace::GLMessage
threadtime_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::int32 threadtime_;$/;"	m	class:android::gltrace::GLMessage
tilt	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange tilt;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
tiltX	services/inputflinger/InputReader.h	/^        int32_t tiltX;$/;"	m	struct:android::RawPointerData::Pointer
tiltX	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo tiltX;$/;"	m	struct:android::RawPointerAxes
tiltY	services/inputflinger/InputReader.h	/^        int32_t tiltY;$/;"	m	struct:android::RawPointerData::Pointer
tiltY	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo tiltY;$/;"	m	struct:android::RawPointerAxes
time	include/input/VelocityTracker.h	/^        nsecs_t time;$/;"	m	struct:android::VelocityTracker::Estimator
timeit	opengl/tools/glgen2/registry/genheaders.py	/^            timeit = True$/;"	v
timeit	opengl/tools/glgen2/registry/genheaders.py	/^timeit  = False$/;"	v
timeoutExpired	services/inputflinger/InputReader.cpp	/^void InputDevice::timeoutExpired(nsecs_t when) {$/;"	f	class:android::InputDevice
timeoutExpired	services/inputflinger/InputReader.cpp	/^void InputMapper::timeoutExpired(nsecs_t when) {$/;"	f	class:android::InputMapper
timeoutExpired	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::timeoutExpired(nsecs_t when) {$/;"	f	class:android::TouchInputMapper
timeoutExpired	services/inputflinger/InputReader.cpp	/^void VibratorInputMapper::timeoutExpired(nsecs_t when) {$/;"	f	class:android::VibratorInputMapper
timeoutExpiredLocked	services/inputflinger/InputReader.cpp	/^void InputReader::timeoutExpiredLocked(nsecs_t when) {$/;"	f	class:android::InputReader
timestamp	include/android/sensor.h	/^    int64_t timestamp;$/;"	m	struct:ASensorEvent
timestamp	include/gui/CpuConsumer.h	/^        int64_t     timestamp;$/;"	m	struct:android::CpuConsumer::LockedBuffer
timestamp	include/gui/DisplayEventReceiver.h	/^            nsecs_t timestamp __attribute__((aligned(8)));$/;"	m	struct:android::DisplayEventReceiver::Event::Header
timestamp	include/gui/IGraphicBufferProducer.h	/^        int64_t timestamp;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferInput
timestamp	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        int64_t timestamp;$/;"	m	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder	file:
timestampOverrideSec	services/inputflinger/EventHub.h	/^        int32_t timestampOverrideSec;$/;"	m	struct:android::EventHub::Device
timestampOverrideUsec	services/inputflinger/EventHub.h	/^        int32_t timestampOverrideUsec;$/;"	m	struct:android::EventHub::Device
tls	libs/binder/BufferedTextOutput.cpp	/^static thread_store_t   tls;$/;"	m	namespace:android	file:
tmat44	include/ui/mat4.h	/^    explicit tmat44(no_init) { }$/;"	f	class:android::tmat44
tmat44	include/ui/mat4.h	/^class tmat44 :  public TVecUnaryOperators<tmat44, T>,$/;"	c	namespace:android
tmat44	include/ui/mat4.h	/^tmat44<T>::tmat44(  A m00, B m01, C m02, D m03,$/;"	f	class:android::tmat44
tmat44	include/ui/mat4.h	/^tmat44<T>::tmat44() {$/;"	f	class:android::tmat44
tmat44	include/ui/mat4.h	/^tmat44<T>::tmat44(U const* rawArray) {$/;"	f	class:android::tmat44
tmat44	include/ui/mat4.h	/^tmat44<T>::tmat44(U v) {$/;"	f	class:android::tmat44
tmat44	include/ui/mat4.h	/^tmat44<T>::tmat44(const tmat44<U>& rhs) {$/;"	f	class:android::tmat44
tmat44	include/ui/mat4.h	/^tmat44<T>::tmat44(const tvec4<A>& v0, const tvec4<B>& v1, const tvec4<C>& v2, const tvec4<D>& v3) {$/;"	f	class:android::tmat44
tmat44	include/ui/mat4.h	/^tmat44<T>::tmat44(const tvec4<U>& v) {$/;"	f	class:android::tmat44
tmu	opengl/libagl/context.h	/^    texture_unit_t      tmu[GGL_TEXTURE_UNIT_COUNT];$/;"	m	struct:android::gl::texture_state_t
tmu	opengl/libagl/context.h	/^    uint8_t         tmu;$/;"	m	struct:android::gl::array_machine_t
toCookedX	services/inputflinger/tests/InputReader_test.cpp	/^float TouchInputMapperTest::toCookedX(float rawX, float rawY) {$/;"	f	class:android::TouchInputMapperTest
toCookedY	services/inputflinger/tests/InputReader_test.cpp	/^float TouchInputMapperTest::toCookedY(float rawX, float rawY) {$/;"	f	class:android::TouchInputMapperTest
toDisplayX	services/inputflinger/tests/InputReader_test.cpp	/^float TouchInputMapperTest::toDisplayX(int32_t rawX) {$/;"	f	class:android::TouchInputMapperTest
toDisplayY	services/inputflinger/tests/InputReader_test.cpp	/^float TouchInputMapperTest::toDisplayY(int32_t rawY) {$/;"	f	class:android::TouchInputMapperTest
toEGLHandle	opengl/tools/glgen/stubs/egl/EGL14cHeader.cpp	/^toEGLHandle(JNIEnv *_env, jclass cls, jmethodID con, void * handle) {$/;"	f	file:
toEGLHandle	opengl/tools/glgen/stubs/egl/EGLExtcHeader.cpp	/^toEGLHandle(JNIEnv *_env, jclass cls, jmethodID con, void * handle) {$/;"	f	file:
toRawX	services/inputflinger/tests/InputReader_test.cpp	/^int32_t TouchInputMapperTest::toRawX(float displayX) {$/;"	f	class:android::TouchInputMapperTest
toRawY	services/inputflinger/tests/InputReader_test.cpp	/^int32_t TouchInputMapperTest::toRawY(float displayY) {$/;"	f	class:android::TouchInputMapperTest
toString	libs/gui/SyncFeatures.cpp	/^String8 SyncFeatures::toString() const {$/;"	f	class:android::SyncFeatures
toString	libs/input/KeyCharacterMap.cpp	/^static String8 toString(const char16_t* chars, size_t numChars) {$/;"	f	namespace:android
toString	opengl/tools/glgen/src/CFunc.java	/^    public String toString() {$/;"	m	class:CFunc
toString	opengl/tools/glgen/src/CType.java	/^    public String toString() {$/;"	m	class:CType
toString	opengl/tools/glgen/src/JFunc.java	/^    public String toString() {$/;"	m	class:JFunc
toString	opengl/tools/glgen/src/JType.java	/^    public String toString() {$/;"	m	class:JType
toString	services/inputflinger/EventHub.cpp	/^static inline const char* toString(bool value) {$/;"	f	namespace:android
toString	services/inputflinger/InputDispatcher.cpp	/^static inline const char* toString(bool value) {$/;"	f	namespace:android
toString	services/inputflinger/InputReader.cpp	/^static inline const char* toString(bool value) {$/;"	f	namespace:android
toggleLockedMetaState	libs/input/Keyboard.cpp	/^static int32_t toggleLockedMetaState(int32_t mask, bool down, int32_t oldMetaState) {$/;"	f	namespace:android
token	cmds/servicemanager/bctest.c	/^unsigned token;$/;"	v
token	include/private/gui/LayerState.h	/^    sp<IBinder> token;$/;"	m	struct:android::DisplayState
tombstone_data	cmds/dumpstate/dumpstate.c	/^static tombstone_data_t tombstone_data[NUM_TOMBSTONES];$/;"	v	file:
tombstone_data_t	cmds/dumpstate/dumpstate.c	/^} tombstone_data_t;$/;"	t	typeref:struct:__anon8	file:
tooManyAxes	libs/input/Input.cpp	/^void PointerCoords::tooManyAxes(int axis) {$/;"	f	class:android::PointerCoords
toolMajor	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange toolMajor;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
toolMajor	services/inputflinger/InputReader.h	/^        int32_t toolMajor;$/;"	m	struct:android::RawPointerData::Pointer
toolMajor	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo toolMajor;$/;"	m	struct:android::RawPointerAxes
toolMinor	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange toolMinor;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
toolMinor	services/inputflinger/InputReader.h	/^        int32_t toolMinor;$/;"	m	struct:android::RawPointerData::Pointer
toolMinor	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo toolMinor;$/;"	m	struct:android::RawPointerAxes
toolType	include/input/Input.h	/^    int32_t toolType;$/;"	m	struct:android::PointerProperties
toolType	services/inputflinger/InputReader.h	/^        int32_t toolType; \/\/ a fully decoded AMOTION_EVENT_TOOL_TYPE constant$/;"	m	struct:android::RawPointerData::Pointer
top	include/android/rect.h	/^    int32_t top;$/;"	m	struct:ARect
top	opengl/libagl/context.h	/^    const matrixf_t& top() const { return stack[depth]; }$/;"	f	struct:android::gl::matrix_stack_t
top	opengl/libagl/context.h	/^    matrixf_t& top() { return stack[depth]; }$/;"	f	struct:android::gl::matrix_stack_t
top	opengl/libagl/egl.cpp	/^        int32_t top;$/;"	m	struct:android::egl_window_surface_v2_t::Rect	file:
top	services/surfaceflinger/DisplayHardware/FloatRect.h	/^    float top;$/;"	m	class:android::FloatRect
top_ops	opengl/libagl/context.h	/^    uint32_t top_ops() const { return ops[depth]; }$/;"	f	struct:android::gl::matrix_stack_t
total	opengl/libagl/context.h	/^    uint32_t        total;$/;"	m	struct:android::gl::vertex_cache_t
touchMajor	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange touchMajor;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
touchMajor	services/inputflinger/InputReader.h	/^        int32_t touchMajor;$/;"	m	struct:android::RawPointerData::Pointer
touchMajor	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo touchMajor;$/;"	m	struct:android::RawPointerAxes
touchMinor	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange touchMinor;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
touchMinor	services/inputflinger/InputReader.h	/^        int32_t touchMinor;$/;"	m	struct:android::RawPointerData::Pointer
touchMinor	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo touchMinor;$/;"	m	struct:android::RawPointerAxes
touchableRegion	services/inputflinger/InputWindow.h	/^    Region touchableRegion;$/;"	m	struct:android::InputWindowInfo
touchableRegionContainsPoint	services/inputflinger/InputWindow.cpp	/^bool InputWindowInfo::touchableRegionContainsPoint(int32_t x, int32_t y) const {$/;"	f	class:android::InputWindowInfo
touchingIdBits	services/inputflinger/InputReader.h	/^    BitSet32 hoveringIdBits, touchingIdBits;$/;"	m	struct:android::CookedPointerData
touchingIdBits	services/inputflinger/InputReader.h	/^    BitSet32 hoveringIdBits, touchingIdBits;$/;"	m	struct:android::RawPointerData
trace	include/ui/TMatHelpers.h	/^    friend T       PURE trace(const BASE<T>& m)     { return matrix::trace(m); }$/;"	f	class:android::TMatSquareFunctions
trace	include/ui/TMatHelpers.h	/^inline double  PURE trace(double v) { return v; }$/;"	f	namespace:android::matrix
trace	include/ui/TMatHelpers.h	/^inline float   PURE trace(float v)  { return v; }$/;"	f	namespace:android::matrix
trace	include/ui/TMatHelpers.h	/^inline int     PURE trace(int v)    { return v; }$/;"	f	namespace:android::matrix
trace	include/ui/TMatHelpers.h	/^typename MATRIX::value_type PURE trace(const MATRIX& m) {$/;"	f	namespace:android::matrix
trace	services/sensorservice/mat.h	/^template <typename TYPE, size_t C> static TYPE trace(const mat<TYPE, C, C>& m) {$/;"	f	namespace:android
traceGLMessage	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceContext::traceGLMessage(GLMessage *msg) {$/;"	f	class:android::gltrace::GLTraceContext
traceGpuCompletion	opengl/libs/EGL/egl_display.h	/^    bool    traceGpuCompletion; \/\/ property: debug.egl.traceGpuCompletion$/;"	m	class:android::egl_display_t
traceInboundQueueLengthLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::traceInboundQueueLengthLocked() {$/;"	f	class:android::InputDispatcher
traceOutboundQueueLengthLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::traceOutboundQueueLengthLocked(const sp<Connection>& connection) {$/;"	f	class:android::InputDispatcher
traceWaitQueueLengthLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::traceWaitQueueLengthLocked(const sp<Connection>& connection) {$/;"	f	class:android::InputDispatcher
trace_VertexAttribPointerData	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void trace_VertexAttribPointerData(GLTraceContext *context,$/;"	f	namespace:android::gltrace
trace_VertexAttribPointerDataForGlDrawArrays	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void trace_VertexAttribPointerDataForGlDrawArrays(GLTraceContext *context, GLMessage *glmsg) {$/;"	f	namespace:android::gltrace
trace_VertexAttribPointerDataForGlDrawElements	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void trace_VertexAttribPointerDataForGlDrawElements(GLTraceContext *context, GLMessage *glmsg,$/;"	f	namespace:android::gltrace
trace_glVertexAttribPointerData	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^void trace_glVertexAttribPointerData(GLTraceContext *context,$/;"	f	namespace:android::gltrace
trackKey	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::InputState::trackKey(const KeyEntry* entry,$/;"	f	class:android::InputDispatcher::InputState
trackMotion	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::InputState::trackMotion(const MotionEntry* entry,$/;"	f	class:android::InputDispatcher::InputState
trackingId	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo trackingId;$/;"	m	struct:android::RawPointerAxes
transact	libs/binder/Binder.cpp	/^status_t BBinder::transact($/;"	f	class:android::BBinder
transact	libs/binder/BpBinder.cpp	/^status_t BpBinder::transact($/;"	f	class:android::BpBinder
transact	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::transact(int32_t handle,$/;"	f	class:android::IPCThreadState
transact	services/surfaceflinger/SurfaceFlinger.cpp	/^    virtual status_t transact(uint32_t code,$/;"	f	class:android::GraphicProducerWrapper	file:
transferTouchFocus	services/inputflinger/InputDispatcher.cpp	/^bool InputDispatcher::transferTouchFocus(const sp<InputChannel>& fromChannel,$/;"	f	class:android::InputDispatcher
transform	include/gui/CpuConsumer.h	/^        uint32_t    transform;$/;"	m	struct:android::CpuConsumer::LockedBuffer
transform	include/gui/IGraphicBufferProducer.h	/^        uint32_t transform;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferInput
transform	libs/gui/tests/IGraphicBufferProducer_test.cpp	/^        uint32_t transform;$/;"	m	struct:android::IGraphicBufferProducerTest::QueueBufferInputBuilder	file:
transform	libs/input/Input.cpp	/^void MotionEvent::transform(const float matrix[9]) {$/;"	f	class:android::MotionEvent
transform	libs/ui/Rect.cpp	/^Rect Rect::transform(uint32_t xform, int32_t width, int32_t height) const {$/;"	f	class:android::Rect
transform	opengl/libagl/context.h	/^    transform_t     transform;$/;"	m	struct:android::gl::matrix_stack_t
transform	opengl/libagl/context.h	/^    transform_t     transform;$/;"	m	struct:android::gl::vp_transform_t
transform	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t     transform;$/;"	m	class:Rectangle	file:
transform	opengl/tests/hwc/hwcRects.cpp	/^    uint32_t     transform;$/;"	m	class:Rectangle	file:
transform	services/inputflinger/tests/InputReader_test.cpp	/^    TouchAffineTransformation transform;$/;"	m	class:android::FakeInputReaderPolicy	file:
transform	services/surfaceflinger/Layer.h	/^        Transform transform;$/;"	m	struct:android::Layer::State
transform	services/surfaceflinger/Transform.cpp	/^Rect Transform::transform(const Rect& bounds) const$/;"	f	class:android::Transform
transform	services/surfaceflinger/Transform.cpp	/^Region Transform::transform(const Region& reg) const$/;"	f	class:android::Transform
transform	services/surfaceflinger/Transform.cpp	/^vec2 Transform::transform(const vec2& v) const {$/;"	f	class:android::Transform
transform	services/surfaceflinger/Transform.cpp	/^vec2 Transform::transform(int x, int y) const$/;"	f	class:android::Transform
transform	services/surfaceflinger/Transform.cpp	/^vec3 Transform::transform(const vec3& v) const {$/;"	f	class:android::Transform
transformAngle	libs/input/Input.cpp	/^static float transformAngle(const float matrix[9], float angleRadians,$/;"	f	namespace:android
transformFlags	opengl/tests/hwc/hwcStress.cpp	/^const unsigned int transformFlags[] = {$/;"	v
transformHint	include/gui/IGraphicBufferProducer.h	/^        uint32_t transformHint;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferOutput
transformList2str	opengl/tests/hwc/hwcCommit.cpp	/^string transformList2str(const list<uint32_t>& transformList)$/;"	f
transformPoint	libs/input/Input.cpp	/^static void transformPoint(const float matrix[9], float x, float y, float *outX, float *outY) {$/;"	f	namespace:android
transformTextures	opengl/libagl/context.h	/^    uint32_t                transformTextures : 1;$/;"	m	struct:android::gl::ogles_context_t
transformType	opengl/tests/hwc/hwcCommit.cpp	/^const struct transformType {$/;"	s	file:
transformType	opengl/tests/hwc/hwcCommit.cpp	/^} transformType[] = {$/;"	v	typeref:struct:transformType
transform_state_t	opengl/libagl/context.h	/^struct transform_state_t {$/;"	s	namespace:android::gl
transform_t	opengl/libagl/context.h	/^struct transform_t {$/;"	s	namespace:android::gl
transformed	services/surfaceflinger/Transform.cpp	/^bool Transform::transformed() const {$/;"	f	class:android::Transform
transforms	opengl/libagl/context.h	/^    transform_state_t       transforms;$/;"	m	struct:android::gl::ogles_context_t
transforms	opengl/tests/hwc/hwcCommit.cpp	/^    list<uint32_t> transforms;$/;"	m	struct:meas	file:
translate	include/ui/mat4.h	/^tmat44<T> tmat44<T>::translate(const tvec4<A>& t) {$/;"	f	class:android::tmat44
translate	libs/ui/Region.cpp	/^const Region Region::translate(int x, int y) const {$/;"	f	class:android::Region
translate	libs/ui/Region.cpp	/^void Region::translate(Region& dst, const Region& reg, int dx, int dy)$/;"	f	class:android::Region
translate	libs/ui/Region.cpp	/^void Region::translate(Region& reg, int dx, int dy)$/;"	f	class:android::Region
translate	opengl/libagl/matrix.cpp	/^void matrix_stack_t::translate(GLfloat x, GLfloat y, GLfloat z)$/;"	f	class:android::matrix_stack_t
translate	opengl/libagl/matrix.cpp	/^void matrixf_t::translate(GLfloat x, GLfloat y, GLfloat z) {$/;"	f	class:android::matrixf_t
translateSelf	libs/ui/Region.cpp	/^Region& Region::translateSelf(int x, int y) {$/;"	f	class:android::Region
transparentRegion	include/private/gui/LayerState.h	/^            Region          transparentRegion;$/;"	m	struct:android::layer_state_t
transpose	include/ui/TMatHelpers.h	/^    friend BASE<T> PURE transpose(const BASE<T>& m) { return matrix::transpose(m); }$/;"	f	class:android::TMatSquareFunctions
transpose	include/ui/TMatHelpers.h	/^MATRIX PURE transpose(const MATRIX& m) {$/;"	f	namespace:android::matrix
transpose	include/ui/TMatHelpers.h	/^inline double  PURE transpose(double v) { return v; }$/;"	f	namespace:android::matrix
transpose	include/ui/TMatHelpers.h	/^inline float   PURE transpose(float v)  { return v; }$/;"	f	namespace:android::matrix
transpose	include/ui/TMatHelpers.h	/^inline int     PURE transpose(int v)    { return v; }$/;"	f	namespace:android::matrix
transpose	services/sensorservice/mat.h	/^inline double  PURE transpose(double v) { return v; }$/;"	f	namespace:android
transpose	services/sensorservice/mat.h	/^inline float   PURE transpose(float v)  { return v; }$/;"	f	namespace:android
transpose	services/sensorservice/mat.h	/^inline int     PURE transpose(int v)    { return v; }$/;"	f	namespace:android
transpose	services/sensorservice/mat.h	/^mat<TYPE, R, C> PURE transpose(const mat<TYPE, C, R>& m) {$/;"	f	namespace:android
transpose	services/sensorservice/mat.h	/^mat<TYPE, SIZE, 1> PURE transpose(const VEC<TYPE, SIZE>& v) {$/;"	f	namespace:android
tree	opengl/tools/glgen2/registry/genheaders.py	/^tree = etree.parse(regFilename)$/;"	v
triangle	opengl/libagl/primitives.cpp	/^void triangle(ogles_context_t* c,$/;"	f	namespace:android
tritanomaly	services/surfaceflinger/Effects/Daltonizer.h	/^        tritanomaly         \/\/ S (blue) cone deficient$/;"	e	enum:android::Daltonizer::ColorBlindnessTypes
tritanopia	services/surfaceflinger/Effects/Daltonizer.h	/^        tritanopia,         \/\/ S (blue) cone missing$/;"	e	enum:android::Daltonizer::ColorBlindnessTypes
truncateFile	cmds/atrace/atrace.cpp	/^static bool truncateFile(const char* path)$/;"	f	file:
tvec2	include/ui/vec2.h	/^    explicit tvec2(const tvec2<A>& v) : x(v.x), y(v.y) { }$/;"	f	class:android::tvec2
tvec2	include/ui/vec2.h	/^    explicit tvec2(no_init) { }$/;"	f	class:android::tvec2
tvec2	include/ui/vec2.h	/^    tvec2() : x(0), y(0) { }$/;"	f	class:android::tvec2
tvec2	include/ui/vec2.h	/^    tvec2(A v) : x(v), y(v) { }$/;"	f	class:android::tvec2
tvec2	include/ui/vec2.h	/^    tvec2(A x, B y) : x(x), y(y) { }$/;"	f	class:android::tvec2
tvec2	include/ui/vec2.h	/^    tvec2(const Impersonator< tvec2<A> >& v)$/;"	f	class:android::tvec2
tvec2	include/ui/vec2.h	/^class tvec2 :   public TVecProductOperators<tvec2, T>,$/;"	c	namespace:android
tvec3	include/ui/vec3.h	/^    explicit tvec3(const tvec3<A>& v) : x(v.x), y(v.y), z(v.z) { }$/;"	f	class:android::tvec3
tvec3	include/ui/vec3.h	/^    explicit tvec3(no_init) { }$/;"	f	class:android::tvec3
tvec3	include/ui/vec3.h	/^    tvec3() : x(0), y(0), z(0) { }$/;"	f	class:android::tvec3
tvec3	include/ui/vec3.h	/^    tvec3(A v) : x(v), y(v), z(v) { }$/;"	f	class:android::tvec3
tvec3	include/ui/vec3.h	/^    tvec3(A x, B y, C z) : x(x), y(y), z(z) { }$/;"	f	class:android::tvec3
tvec3	include/ui/vec3.h	/^    tvec3(const Impersonator< tvec2<A> >& v, B z)$/;"	f	class:android::tvec3
tvec3	include/ui/vec3.h	/^    tvec3(const Impersonator< tvec3<A> >& v)$/;"	f	class:android::tvec3
tvec3	include/ui/vec3.h	/^    tvec3(const tvec2<A>& v, B z) : x(v.x), y(v.y), z(z) { }$/;"	f	class:android::tvec3
tvec3	include/ui/vec3.h	/^class tvec3 :   public TVecProductOperators<tvec3, T>,$/;"	c	namespace:android
tvec4	include/ui/vec4.h	/^    explicit tvec4(const tvec4<A>& v) : x(v.x), y(v.y), z(v.z), w(v.w) { }$/;"	f	class:android::tvec4
tvec4	include/ui/vec4.h	/^    explicit tvec4(no_init) { }$/;"	f	class:android::tvec4
tvec4	include/ui/vec4.h	/^    tvec4() : x(0), y(0), z(0), w(0) { }$/;"	f	class:android::tvec4
tvec4	include/ui/vec4.h	/^    tvec4(A v) : x(v), y(v), z(v), w(v) { }$/;"	f	class:android::tvec4
tvec4	include/ui/vec4.h	/^    tvec4(A x, B y, C z, D w) : x(x), y(y), z(z), w(w) { }$/;"	f	class:android::tvec4
tvec4	include/ui/vec4.h	/^    tvec4(const Impersonator< tvec2<A> >& v, B z, C w)$/;"	f	class:android::tvec4
tvec4	include/ui/vec4.h	/^    tvec4(const Impersonator< tvec3<A> >& v, B w)$/;"	f	class:android::tvec4
tvec4	include/ui/vec4.h	/^    tvec4(const Impersonator< tvec4<A> >& v)$/;"	f	class:android::tvec4
tvec4	include/ui/vec4.h	/^    tvec4(const tvec2<A>& v, B z, C w) : x(v.x), y(v.y), z(z), w(w) { }$/;"	f	class:android::tvec4
tvec4	include/ui/vec4.h	/^    tvec4(const tvec3<A>& v, B w) : x(v.x), y(v.y), z(v.z), w(w) { }$/;"	f	class:android::tvec4
tvec4	include/ui/vec4.h	/^class tvec4 :   public TVecProductOperators<tvec4, T>,$/;"	c	namespace:android
twoSide	opengl/libagl/context.h	/^    GLboolean   twoSide;$/;"	m	struct:android::gl::light_model_t
tx	services/surfaceflinger/Transform.cpp	/^float Transform::tx() const {$/;"	f	class:android::Transform
txt	opengl/tests/gl_perf/fragment_shaders.cpp	/^	const char * txt;$/;"	m	struct:FragmentTestRec	file:
ty	services/surfaceflinger/Transform.cpp	/^float Transform::ty() const {$/;"	f	class:android::Transform
type	cmds/rawbu/backup.cpp	/^    int type;$/;"	m	struct:android::special_dir	file:
type	include/android/sensor.h	/^    int32_t type;$/;"	m	struct:ASensorEvent
type	include/gui/DisplayEventReceiver.h	/^            uint32_t type;$/;"	m	struct:android::DisplayEventReceiver::Event::Header
type	include/input/InputTransport.h	/^        uint32_t type;$/;"	m	struct:android::InputMessage::Header
type	libs/binder/Parcel.cpp	/^    uint32_t type;$/;"	m	struct:small_flat_data	file:
type	opengl/libagl/context.h	/^    uint16_t        type;$/;"	m	struct:android::gl::array_t
type	opengl/libagl/egl.cpp	/^    NativeDisplayType   type;$/;"	m	struct:android::egl_display_t	file:
type	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::android::gltrace::GLMessage_DataType_Type GLMessage_DataType::type() const {$/;"	f	class:android::gltrace::GLMessage_DataType
type	services/inputflinger/EventHub.h	/^    int32_t type;$/;"	m	struct:android::RawEvent
type	services/inputflinger/InputDispatcher.h	/^        int32_t type;$/;"	m	struct:android::InputDispatcher::EventEntry
type	services/surfaceflinger/SurfaceFlinger.h	/^        DisplayDevice::DisplayType type;$/;"	m	struct:android::SurfaceFlinger::DisplayDeviceState
type	services/surfaceflinger/Transform.cpp	/^uint32_t Transform::type() const$/;"	f	class:android::Transform
typeCode	include/binder/TextOutput.h	/^inline uint32_t TypeCode::typeCode() const { return mCode; }$/;"	f	class:android::TypeCode
typeMapping	opengl/tools/glgen/src/JType.java	/^    static HashMap<CType,JType> typeMapping = new HashMap<CType,JType>();$/;"	f	class:JType
type_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  int type_;$/;"	m	class:android::gltrace::GLMessage_DataType
type_mask	services/surfaceflinger/Transform.h	/^            enum type_mask {$/;"	g	class:android::Transform
typetostring	libs/binder/Debug.cpp	/^static char* typetostring(uint32_t type, char* out,$/;"	f	namespace:android
u64	include/android/sensor.h	/^        } u64;$/;"	m	union:ASensorEvent::__anon187	typeref:union:ASensorEvent::__anon187::__anon189
uid	include/binder/PermissionCache.h	/^        uid_t       uid;$/;"	m	struct:android::PermissionCache::Entry
uid	services/sensorservice/BatteryService.h	/^        uid_t uid;$/;"	m	struct:android::BatteryService::Info
uid_t	include/binder/IPCThreadState.h	/^typedef  int  uid_t;$/;"	t
unbindFramebuffer	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^void GLES11RenderEngine::unbindFramebuffer(uint32_t texName, uint32_t fbName,$/;"	f	class:android::GLES11RenderEngine
unbindFramebuffer	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^void GLES20RenderEngine::unbindFramebuffer(uint32_t texName, uint32_t fbName,$/;"	f	class:android::GLES20RenderEngine
uncalib	include/android/sensor.h	/^    float uncalib[3];$/;"	m	union:AUncalibratedEvent::__anon183
uncalibrated_gyro	include/android/sensor.h	/^            AUncalibratedEvent uncalibrated_gyro;$/;"	m	union:ASensorEvent::__anon187::__anon188
uncalibrated_magnetic	include/android/sensor.h	/^            AUncalibratedEvent uncalibrated_magnetic;$/;"	m	union:ASensorEvent::__anon187::__anon188
undefinedRegion	services/surfaceflinger/DisplayDevice.h	/^    Region undefinedRegion;$/;"	m	class:android::DisplayDevice
unfade	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void unfade(Transition transition) {$/;"	f	class:android::FakePointerController	file:
unfadePointer	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::unfadePointer(PointerControllerInterface::Transition transition) {$/;"	f	class:android::TouchInputMapper
unflatten	include/binder/Parcel.h	/^        virtual status_t unflatten(void const* buffer, size_t size, int const* fds, size_t count) {$/;"	f	class:android::Parcel::FlattenableHelper
unflatten	libs/gui/BufferItem.cpp	/^status_t BufferItem::unflatten($/;"	f	class:android::BufferItem
unflatten	libs/gui/IGraphicBufferConsumer.cpp	/^status_t IGraphicBufferConsumer::BufferItem::unflatten($/;"	f	class:android::IGraphicBufferConsumer::BufferItem
unflatten	libs/gui/IGraphicBufferProducer.cpp	/^status_t IGraphicBufferProducer::QueueBufferInput::unflatten($/;"	f	class:android::IGraphicBufferProducer::QueueBufferInput
unflatten	libs/gui/Sensor.cpp	/^status_t Sensor::unflatten(void const* buffer, size_t size) {$/;"	f	class:android::Sensor
unflatten	libs/ui/Fence.cpp	/^status_t Fence::unflatten(void const*& buffer, size_t& size, int const*& fds, size_t& count) {$/;"	f	class:android::Fence
unflatten	libs/ui/FrameStats.cpp	/^status_t FrameStats::unflatten(void const* buffer, size_t size) {$/;"	f	class:android::FrameStats
unflatten	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::unflatten($/;"	f	class:android::GraphicBuffer
unflatten	libs/ui/Region.cpp	/^status_t Region::unflatten(void const* buffer, size_t size) {$/;"	f	class:android::Region
unflattenString8	libs/gui/Sensor.cpp	/^bool Sensor::unflattenString8(void const*& buffer, size_t& size, String8& outputString8) {$/;"	f	class:android::Sensor
unflatten_binder	libs/binder/Parcel.cpp	/^status_t unflatten_binder(const sp<ProcessState>& proc,$/;"	f	namespace:android
uninit	opengl/libagl/array.cpp	/^void vertex_cache_t::uninit()$/;"	f	class:android::vertex_cache_t
uninit	opengl/libagl/matrix.cpp	/^void matrix_stack_t::uninit() {$/;"	f	class:android::matrix_stack_t
uninstall	cmds/installd/commands.c	/^int uninstall(const char *pkgname, userid_t userid)$/;"	f
uniqueId	include/input/InputDevice.h	/^    String8 uniqueId;$/;"	m	struct:android::InputDeviceIdentifier
units	opengl/libagl/context.h	/^    GLfixed     units;$/;"	m	struct:android::gl::polygon_offset_t
unlinkToDeath	libs/binder/Binder.cpp	/^status_t BBinder::unlinkToDeath($/;"	f	class:android::BBinder
unlinkToDeath	libs/binder/BpBinder.cpp	/^status_t BpBinder::unlinkToDeath($/;"	f	class:android::BpBinder
unlock	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::unlock()$/;"	f	class:android::GraphicBuffer
unlock	libs/ui/GraphicBufferMapper.cpp	/^status_t GraphicBufferMapper::unlock(buffer_handle_t handle)$/;"	f	class:android::GraphicBufferMapper
unlock	opengl/libagl/egl.cpp	/^status_t egl_window_surface_v2_t::unlock(ANativeWindowBuffer* buf)$/;"	f	class:android::egl_window_surface_v2_t
unlockAndPost	libs/gui/Surface.cpp	/^status_t Surface::unlockAndPost()$/;"	f	class:android::Surface
unlockAsync	libs/ui/GraphicBuffer.cpp	/^status_t GraphicBuffer::unlockAsync(int *fenceFd)$/;"	f	class:android::GraphicBuffer
unlockAsync	libs/ui/GraphicBufferMapper.cpp	/^status_t GraphicBufferMapper::unlockAsync(buffer_handle_t handle, int *fenceFd)$/;"	f	class:android::GraphicBufferMapper
unlockBuffer	libs/gui/CpuConsumer.cpp	/^status_t CpuConsumer::unlockBuffer(const LockedBuffer &nativeBuffer) {$/;"	f	class:android::CpuConsumer
unpackAlignment	opengl/libagl/context.h	/^    uint8_t             unpackAlignment;$/;"	m	struct:android::gl::texture_state_t
unregisterBuffer	libs/ui/GraphicBufferMapper.cpp	/^status_t GraphicBufferMapper::unregisterBuffer(buffer_handle_t handle)$/;"	f	class:android::GraphicBufferMapper
unregisterInputChannel	services/inputflinger/InputDispatcher.cpp	/^status_t InputDispatcher::unregisterInputChannel(const sp<InputChannel>& inputChannel) {$/;"	f	class:android::InputDispatcher
unregisterInputChannelLocked	services/inputflinger/InputDispatcher.cpp	/^status_t InputDispatcher::unregisterInputChannelLocked(const sp<InputChannel>& inputChannel,$/;"	f	class:android::InputDispatcher
unregisterListener	services/batteryservice/IBatteryPropertiesRegistrar.cpp	/^        void unregisterListener(const sp<IBatteryPropertiesListener>& listener) {$/;"	f	class:android::BpBatteryPropertiesRegistrar
unslap	libs/binder/MemoryHeapPmem.cpp	/^status_t MemoryHeapPmem::unslap()$/;"	f	class:android::MemoryHeapPmem
unused	cmds/servicemanager/binder.h	/^    uint32_t unused;$/;"	m	struct:binder_io
update	libs/gui/SurfaceComposerClient.cpp	/^status_t ScreenshotClient::update(const sp<IBinder>& display, Rect sourceCrop,$/;"	f	class:android::ScreenshotClient
update	libs/gui/SurfaceComposerClient.cpp	/^status_t ScreenshotClient::update(const sp<IBinder>& display,$/;"	f	class:android::ScreenshotClient
update	services/sensorservice/Fusion.cpp	/^    void update(const vec<TYPE, SIZE>& x) {$/;"	f	class:android::Covariance
update	services/sensorservice/Fusion.cpp	/^void Fusion::update(const vec3_t& z, const vec3_t& Bi, float sigma) {$/;"	f	class:android::Fusion
update	services/surfaceflinger/Effects/Daltonizer.cpp	/^void Daltonizer::update() {$/;"	f	class:android::Daltonizer
update	services/surfaceflinger/FrameRateHelper.h	/^    bool update() {$/;"	f	class:android::FrameRateHelper
updateAffineTransformation	services/inputflinger/InputReader.cpp	/^void TouchInputMapper::updateAffineTransformation() {$/;"	f	class:android::TouchInputMapper
updateAndReleaseLocked	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::updateAndReleaseLocked(const BufferQueue::BufferItem& item)$/;"	f	class:android::GLConsumer
updateBufferSubData	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void GLTraceContext::updateBufferSubData(GLuint bufferId, GLintptr offset, GLvoid *data,$/;"	f	class:android::gltrace::GLTraceContext
updateCursorAsync	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::updateCursorAsync()$/;"	f	class:android::SurfaceFlinger
updateDispatchStatisticsLocked	services/inputflinger/InputDispatcher.cpp	/^void InputDispatcher::updateDispatchStatisticsLocked(nsecs_t currentTime, const EventEntry* entry,$/;"	f	class:android::InputDispatcher
updateErrorLocked	services/surfaceflinger/DispSync.cpp	/^void DispSync::updateErrorLocked() {$/;"	f	class:android::DispSync
updateGlobalMetaState	services/inputflinger/InputReader.cpp	/^void InputReader::ContextImpl::updateGlobalMetaState() {$/;"	f	class:android::InputReader::ContextImpl
updateGlobalMetaState	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void updateGlobalMetaState() {$/;"	f	class:android::FakeInputReaderContext	file:
updateGlobalMetaStateLocked	services/inputflinger/InputReader.cpp	/^void InputReader::updateGlobalMetaStateLocked() {$/;"	f	class:android::InputReader
updateLedState	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::updateLedState(bool reset) {$/;"	f	class:android::KeyboardInputMapper
updateLedStateForModifier	services/inputflinger/InputReader.cpp	/^void KeyboardInputMapper::updateLedStateForModifier(LedState& ledState,$/;"	f	class:android::KeyboardInputMapper
updateLooperRegistration	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::updateLooperRegistration(const sp<Looper>& looper) {$/;"	f	class:android::SensorService::SensorEventConnection
updateLooperRegistrationLocked	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::updateLooperRegistrationLocked($/;"	f	class:android::SensorService::SensorEventConnection
updateMetaState	libs/input/Keyboard.cpp	/^int32_t updateMetaState(int32_t keyCode, bool down, int32_t oldMetaState) {$/;"	f	namespace:android
updateModel	services/surfaceflinger/DispSync.cpp	/^    void updateModel(nsecs_t period, nsecs_t phase) {$/;"	f	class:android::DispSyncThread
updateModelLocked	services/surfaceflinger/DispSync.cpp	/^void DispSync::updateModelLocked() {$/;"	f	class:android::DispSync
updateMovedPointers	services/inputflinger/InputReader.cpp	/^bool TouchInputMapper::updateMovedPointers(const PointerProperties* inProperties,$/;"	f	class:android::TouchInputMapper
updateQueueBufferOutput	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^void VirtualDisplaySurface::updateQueueBufferOutput($/;"	f	class:android::VirtualDisplaySurface
updateState	libs/input/VelocityTracker.cpp	/^void IntegratingVelocityTrackerStrategy::updateState(State& state,$/;"	f	class:android::IntegratingVelocityTrackerStrategy
updateStatsLocked	services/surfaceflinger/FrameTracker.cpp	/^void FrameTracker::updateStatsLocked(size_t newFrameIdx) const {$/;"	f	class:android::FrameTracker
updateSubBuffer	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^void ElementArrayBuffer::updateSubBuffer(GLintptr offset, const GLvoid* data, GLsizeiptr size) {$/;"	f	class:android::gltrace::ElementArrayBuffer
updateSurface	opengl/tests/gl2_cameraeye/src/com/android/gl2cameraeye/GL2CameraEye.java	/^    private boolean updateSurface = false;$/;"	f	class:CamRenderer	file:
updateTexImage	libs/gui/GLConsumer.cpp	/^status_t GLConsumer::updateTexImage() {$/;"	f	class:android::GLConsumer
updateTexImage	services/surfaceflinger/SurfaceFlingerConsumer.cpp	/^status_t SurfaceFlingerConsumer::updateTexImage(BufferRejecter* rejecter,$/;"	f	class:android::SurfaceFlingerConsumer
updateTime	include/input/VelocityTracker.h	/^        nsecs_t updateTime;$/;"	m	struct:android::IntegratingVelocityTrackerStrategy::State
updateTouchState	libs/input/InputTransport.cpp	/^void InputConsumer::updateTouchState(InputMessage* msg) {$/;"	f	class:android::InputConsumer
updateTransformHint	services/surfaceflinger/Layer.cpp	/^void Layer::updateTransformHint(const sp<const DisplayDevice>& hw) {$/;"	f	class:android::Layer
updateWakeLockUids	services/powermanager/IPowerManager.cpp	/^    virtual status_t updateWakeLockUids(const sp<IBinder>& lock, int len, const int *uids,$/;"	f	class:android::BpPowerManager
update_mvit	opengl/libagl/matrix.cpp	/^void transform_state_t::update_mvit()$/;"	f	class:android::transform_state_t
update_mvp	opengl/libagl/matrix.cpp	/^void transform_state_t::update_mvp()$/;"	f	class:android::transform_state_t
update_mvui	opengl/libagl/matrix.cpp	/^void transform_state_t::update_mvui()$/;"	f	class:android::transform_state_t
upper	opengl/tests/hwc/hwcCommit.cpp	/^    uint32_t upper(void) { return _u; }$/;"	f	class:Range
usage	cmds/dumpstate/dumpstate.c	/^static void usage() {$/;"	f	file:
usage	include/ui/GraphicBufferAllocator.h	/^        uint32_t usage;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
usage	opengl/libagl/BufferObjectManager.h	/^    GLenum          usage;$/;"	m	struct:android::gl::buffer_t
use	services/surfaceflinger/RenderEngine/Program.cpp	/^void Program::use() {$/;"	f	class:android::Program
useFenceSync	libs/gui/SyncFeatures.cpp	/^bool SyncFeatures::useFenceSync() const {$/;"	f	class:android::SyncFeatures
useNativeFenceSync	libs/gui/SyncFeatures.cpp	/^bool SyncFeatures::useNativeFenceSync() const {$/;"	f	class:android::SyncFeatures
useProgram	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^void ProgramCache::useProgram(const Description& description) {$/;"	f	class:android::ProgramCache
useWaitSync	libs/gui/SyncFeatures.cpp	/^bool SyncFeatures::useWaitSync() const {$/;"	f	class:android::SyncFeatures
userActivityEventType	services/inputflinger/InputDispatcher.h	/^        int32_t userActivityEventType;$/;"	m	struct:android::InputDispatcher::CommandEntry
user_clip_planes_t	opengl/libagl/context.h	/^struct user_clip_planes_t {$/;"	s	namespace:android::gl
v	include/android/sensor.h	/^        float v[3];$/;"	m	union:ASensorVector::__anon180
v	opengl/libagl/context.h	/^        GLfixed v[3];$/;"	m	union:android::gl::vec3_t::__anon212
v	opengl/libagl/context.h	/^        GLfixed v[4];$/;"	m	union:android::gl::vec4_t::__anon216
v	services/sensorservice/vec.h	/^        float v[2];$/;"	m	union:android::vbase::__anon53
v	services/sensorservice/vec.h	/^        float v[3];$/;"	m	union:android::vbase::__anon56
v	services/sensorservice/vec.h	/^        float v[4];$/;"	m	union:android::vbase::__anon59
v	services/sensorservice/vec.h	/^    TYPE v[SIZE];$/;"	m	struct:android::vbase
v	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^        EGLAttributeVector& v;$/;"	m	class:android::EGLAttributeVector::Adder	file:
v	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^        EGLint v;$/;"	m	struct:android::EGLAttributeVector::Attribute	file:
v	services/surfaceflinger/Transform.h	/^        vec3 v[3];$/;"	m	struct:android::Transform::mat33
vBuffer	opengl/libagl/context.h	/^    vertex_t*       vBuffer;$/;"	m	struct:android::gl::vertex_cache_t
vCache	opengl/libagl/context.h	/^    vertex_t*       vCache;$/;"	m	struct:android::gl::vertex_cache_t
vScale	opengl/tests/hwc/hwcCommit.cpp	/^        Rational vScale;$/;"	m	struct:meas::sourceCrop	file:
vScaleBestDf	opengl/tests/hwc/hwcCommit.cpp	/^        HwcTestDim vScaleBestDf;$/;"	m	struct:meas::sourceCrop	file:
vScaleBestSc	opengl/tests/hwc/hwcCommit.cpp	/^        HwcTestDim vScaleBestSc;$/;"	m	struct:meas::sourceCrop	file:
val	include/binder/Parcel.h	/^        const Flattenable<T>& val;$/;"	m	class:android::Parcel::FlattenableHelper
valid	services/inputflinger/EventHub.h	/^    bool valid; \/\/ true if the information is valid, false otherwise$/;"	m	struct:android::RawAbsoluteAxisInfo
validFormatType	opengl/libagl/texture.cpp	/^static GLenum validFormatType(ogles_context_t* c, GLenum format, GLenum type)$/;"	f	namespace:android
validate	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::validate() const$/;"	f	class:android::SurfaceControl
validate	libs/ui/Region.cpp	/^bool Region::validate(const Region& reg, const char* name, bool silent)$/;"	f	class:android::Region
validate	opengl/libagl/matrix.cpp	/^void matrix_stack_t::validate()$/;"	f	class:android::matrix_stack_t
validate	opengl/tools/glgen2/registry/genheaders.py	/^            validate = True$/;"	v
validate	opengl/tools/glgen2/registry/genheaders.py	/^validate= False$/;"	v
validateGroups	opengl/tools/glgen2/registry/reg.py	/^    def validateGroups(self):$/;"	m	class:Registry
validateKeyEvent	services/inputflinger/InputDispatcher.cpp	/^static bool validateKeyEvent(int32_t action) {$/;"	f	namespace:android
validateMotionEvent	services/inputflinger/InputDispatcher.cpp	/^static bool validateMotionEvent(int32_t action, size_t pointerCount,$/;"	f	namespace:android
validateTLSKey	opengl/libs/EGL/egl_tls.cpp	/^void egl_tls_t::validateTLSKey()$/;"	f	class:android::egl_tls_t
validate_apk_path	cmds/installd/utils.c	/^int validate_apk_path(const char *path)$/;"	f
validate_arrays	opengl/libagl/array.cpp	/^void validate_arrays(ogles_context_t* c, GLenum mode)$/;"	f	namespace:android
validate_display	opengl/libs/EGL/egl.cpp	/^egl_display_ptr validate_display(EGLDisplay dpy) {$/;"	f	namespace:android
validate_display_connection	opengl/libs/EGL/egl.cpp	/^egl_display_ptr validate_display_connection(EGLDisplay dpy,$/;"	f	namespace:android
validate_light	opengl/libagl/light.cpp	/^static inline void validate_light(ogles_context_t* c)$/;"	f	namespace:android
validate_light_mvi	opengl/libagl/light.cpp	/^static inline void validate_light_mvi(ogles_context_t* c)$/;"	f	namespace:android
validate_path	cmds/installd/utils.c	/^static int validate_path(const dir_rec_t* dir, const char* path) {$/;"	f	file:
validate_perspective	opengl/libagl/matrix.cpp	/^static void validate_perspective(ogles_context_t* c, vertex_t* v)$/;"	f	namespace:android
validate_system_app_path	cmds/installd/utils.c	/^int validate_system_app_path(const char* path) {$/;"	f
validate_tmu	opengl/libagl/texture.cpp	/^void validate_tmu(ogles_context_t* c, int i)$/;"	f	namespace:android
value	include/input/InputEventLabels.h	/^    int value;$/;"	m	struct:android::InputEventLabel
value	opengl/libagl/egl.cpp	/^    GLint value;$/;"	m	struct:android::config_pair_t	file:
value	services/inputflinger/EventHub.h	/^    int32_t value;$/;"	m	struct:android::RawEvent
value	services/sensorservice/traits.h	/^    enum { value = -1 };$/;"	e	enum:android::TL::IndexOf::__anon62
value	services/sensorservice/traits.h	/^    enum { value = 0 };$/;"	e	enum:android::TL::IndexOf::__anon63
value	services/sensorservice/traits.h	/^    enum { value = temp == -1 ? -1 : 1 + temp };$/;"	e	enum:android::TL::IndexOf::__anon65
valueInt64	include/batteryservice/BatteryService.h	/^    int64_t valueInt64;$/;"	m	struct:android::BatteryProperty
value_type	include/android/rect.h	/^    typedef int32_t value_type;$/;"	t	struct:ARect
value_type	include/ui/Rect.h	/^    typedef ARect::value_type value_type;$/;"	t	class:android::Rect
value_type	include/ui/mat4.h	/^    typedef T value_type;$/;"	t	class:android::tmat44
value_type	include/ui/vec2.h	/^    typedef T value_type;$/;"	t	class:android::tvec2
value_type	include/ui/vec3.h	/^    typedef T value_type;$/;"	t	class:android::tvec3
value_type	include/ui/vec4.h	/^    typedef T value_type;$/;"	t	class:android::tvec4
value_type	services/sensorservice/mat.h	/^    typedef TYPE value_type;$/;"	t	class:android::mat
value_type	services/sensorservice/vec.h	/^    typedef TYPE value_type;$/;"	t	class:android::vec
values	include/input/Input.h	/^    float values[MAX_AXES];$/;"	m	struct:android::PointerCoords
vbase	services/sensorservice/vec.h	/^struct vbase {$/;"	s	namespace:android
vbase	services/sensorservice/vec.h	/^template<> struct vbase<float, 2> {$/;"	s	namespace:android
vbase	services/sensorservice/vec.h	/^template<> struct vbase<float, 3> {$/;"	s	namespace:android
vbase	services/sensorservice/vec.h	/^template<> struct vbase<float, 4> {$/;"	s	namespace:android
vc	opengl/libagl/context.h	/^    vertex_cache_t          vc;$/;"	m	struct:android::gl::ogles_context_t
vec	services/sensorservice/vec.h	/^    explicit vec(TYPE const* array) {$/;"	f	class:android::vec
vec	services/sensorservice/vec.h	/^    explicit vec(const VEC<TYPE, S>& rhs) {$/;"	f	class:android::vec
vec	services/sensorservice/vec.h	/^    vec() { }$/;"	f	class:android::vec
vec	services/sensorservice/vec.h	/^    vec(const base& rhs) : base(rhs) { }$/;"	f	class:android::vec
vec	services/sensorservice/vec.h	/^    vec(const vec& rhs)  : base(rhs) { }$/;"	f	class:android::vec
vec	services/sensorservice/vec.h	/^    vec(pTYPE rhs) {$/;"	f	class:android::vec
vec	services/sensorservice/vec.h	/^class vec : public vbase<TYPE, SIZE>$/;"	c	namespace:android
vec2	include/ui/vec2.h	/^typedef tvec2<float> vec2;$/;"	t	namespace:android
vec2_t	services/sensorservice/vec.h	/^typedef vec<float, 2> vec2_t;$/;"	t	namespace:android
vec3	include/ui/vec3.h	/^typedef tvec3<float> vec3;$/;"	t	namespace:android
vec3_t	opengl/libagl/context.h	/^struct vec3_t {$/;"	s	namespace:android::gl
vec3_t	services/sensorservice/vec.h	/^typedef vec<float, 3> vec3_t;$/;"	t	namespace:android
vec4	include/ui/vec4.h	/^typedef tvec4<float> vec4;$/;"	t	namespace:android
vec4_t	opengl/libagl/context.h	/^struct vec4_t {$/;"	s	namespace:android::gl
vec4_t	services/sensorservice/vec.h	/^typedef vec<float, 4> vec4_t;$/;"	t	namespace:android
vector	include/android/sensor.h	/^            ASensorVector   vector;$/;"	m	union:ASensorEvent::__anon187::__anon188
vector3Sub	opengl/tests/angeles/demo.c	/^static void vector3Sub(VECTOR3 *dest, VECTOR3 *v1, VECTOR3 *v2)$/;"	f	file:
vectorDot	libs/input/VelocityTracker.cpp	/^static float vectorDot(const float* a, const float* b, uint32_t m) {$/;"	f	namespace:android
vectorNorm	libs/input/VelocityTracker.cpp	/^static float vectorNorm(const float* a, uint32_t m) {$/;"	f	namespace:android
vectorOr	opengl/tests/hwc/hwcStress.cpp	/^T vectorOr(const vector<T>& vec)$/;"	f
vectorRandSelect	opengl/tests/hwc/hwcStress.cpp	/^vector<T> vectorRandSelect(const vector<T>& vec, size_t num)$/;"	f
vectorToString	libs/input/VelocityTracker.cpp	/^static String8 vectorToString(const float* a, uint32_t m) {$/;"	f	namespace:android
velocityTracker	services/inputflinger/InputReader.h	/^        VelocityTracker velocityTracker;$/;"	m	struct:android::TouchInputMapper::PointerGesture
vendor	include/input/InputDevice.h	/^    uint16_t vendor;$/;"	m	struct:android::InputDeviceIdentifier
vendor	opengl/libs/EGL/egl_display.h	/^        char const * vendor;$/;"	m	struct:android::egl_display_t::strings_t
verbose	opengl/tests/hwc/hwcColorEquiv.cpp	/^static bool verbose = defaultVerbose;$/;"	v	file:
verbose	opengl/tests/hwc/hwcCommit.cpp	/^static bool verbose = defaultVerbose;$/;"	v	file:
verbose	opengl/tests/hwc/hwcRects.cpp	/^static bool verbose = defaultVerbose;$/;"	v	file:
verbose	opengl/tests/hwc/hwcStress.cpp	/^static bool verbose = defaultVerbose;$/;"	v	file:
verifyCanAccessSensor	services/sensorservice/SensorService.cpp	/^bool SensorService::verifyCanAccessSensor(const Sensor& sensor, const char* operation) {$/;"	f	class:android::SensorService
verifyKernelTraceFuncs	cmds/atrace/atrace.cpp	/^static bool verifyKernelTraceFuncs(const char* funcs)$/;"	f	file:
verifyNoTJunctions	libs/ui/tests/Region_test.cpp	/^    void verifyNoTJunctions(const Region& r) {$/;"	f	class:android::RegionTest
version	include/android/sensor.h	/^    int32_t version; \/* sizeof(struct ASensorEvent) *\/$/;"	m	struct:ASensorEvent
version	include/input/InputDevice.h	/^    uint16_t version;$/;"	m	struct:android::InputDeviceIdentifier
version	include/ui/ANativeObjectBase.h	/^    int32_t     version;    \/* must be 32 *\/$/;"	m	struct:egl_native_pixmap_t
version	include/ui/PixelFormat.h	/^    size_t      version;$/;"	m	struct:android::PixelFormatInfo
version	opengl/libs/EGL/egl_display.h	/^        char const * version;$/;"	m	struct:android::egl_display_t::strings_t
version	opengl/libs/EGL/egl_object.h	/^    int version;$/;"	m	class:android::egl_context_t
vertex	opengl/libagl/context.h	/^    array_t         vertex;$/;"	m	struct:android::gl::array_machine_t
vertexArray	opengl/tests/angeles/demo.c	/^    GLfixed *vertexArray;$/;"	m	struct:__anon235	file:
vertexAttribSize	opengl/libs/GLES_trace/src/gltrace_fixup.cpp	/^int vertexAttribSize(GLenum type, GLsizei numComponents) {$/;"	f	namespace:android::gltrace
vertexComponents	opengl/tests/angeles/demo.c	/^    GLint vertexComponents;$/;"	m	struct:__anon235	file:
vertexShader	cmds/flatland/GLHelper.h	/^    const char* vertexShader[MAX_SHADER_LINES];$/;"	m	struct:android::ShaderDesc
vertex_cache_t	opengl/libagl/context.h	/^struct vertex_cache_t {$/;"	s	namespace:android::gl
vertex_fct	opengl/libagl/array.cpp	/^static const fn_t vertex_fct[3][16] = { \/\/ size={2,3,4}, type={b,s,f,x}$/;"	m	namespace:android	file:
vertex_t	opengl/libagl/context.h	/^struct vertex_t {$/;"	s	namespace:android::gl
vibrate	cmds/dumpstate/dumpstate.c	/^static void vibrate(FILE* vibrator, int ms) {$/;"	f	file:
vibrate	services/inputflinger/EventHub.cpp	/^void EventHub::vibrate(int32_t deviceId, nsecs_t duration) {$/;"	f	class:android::EventHub
vibrate	services/inputflinger/InputReader.cpp	/^void InputDevice::vibrate(const nsecs_t* pattern, size_t patternSize, ssize_t repeat,$/;"	f	class:android::InputDevice
vibrate	services/inputflinger/InputReader.cpp	/^void InputMapper::vibrate(const nsecs_t* pattern, size_t patternSize, ssize_t repeat,$/;"	f	class:android::InputMapper
vibrate	services/inputflinger/InputReader.cpp	/^void InputReader::vibrate(int32_t deviceId, const nsecs_t* pattern, size_t patternSize,$/;"	f	class:android::InputReader
vibrate	services/inputflinger/InputReader.cpp	/^void VibratorInputMapper::vibrate(const nsecs_t* pattern, size_t patternSize, ssize_t repeat,$/;"	f	class:android::VibratorInputMapper
vibrate	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void vibrate(int32_t deviceId, nsecs_t duration) {$/;"	f	class:android::FakeEventHub	file:
video	include/media/openmax/OMX_Component.h	/^        OMX_VIDEO_PORTDEFINITIONTYPE video;$/;"	m	union:OMX_PARAM_PORTDEFINITIONTYPE::__anon129
viewport	include/private/gui/LayerState.h	/^    Rect viewport;$/;"	m	struct:android::DisplayState
viewport	opengl/libagl/context.h	/^    viewport_t              viewport;$/;"	m	struct:android::gl::ogles_context_t
viewport	services/surfaceflinger/SurfaceFlinger.h	/^        Rect viewport;$/;"	m	struct:android::SurfaceFlinger::DisplayDeviceState
viewport_t	opengl/libagl/context.h	/^struct viewport_t {$/;"	s	namespace:android::gl
virtualKeyMap	services/inputflinger/EventHub.h	/^        VirtualKeyMap* virtualKeyMap;$/;"	m	struct:android::EventHub::Device
virtualKeyQuietTime	services/inputflinger/InputReader.h	/^    nsecs_t virtualKeyQuietTime;$/;"	m	struct:android::InputReaderConfiguration
virtualKeys	services/inputflinger/tests/InputReader_test.cpp	/^        Vector<VirtualKeyDefinition> virtualKeys;$/;"	m	struct:android::FakeEventHub::Device	file:
virtualSize	include/binder/IMemory.h	/^    size_t  virtualSize() const { return getSize(); }$/;"	f	class:android::IMemoryHeap
visible	services/inputflinger/InputWindow.h	/^    bool visible;$/;"	m	struct:android::InputWindowInfo
visibleNonTransparentRegion	services/surfaceflinger/Layer.h	/^    Region visibleNonTransparentRegion;$/;"	m	class:android::Layer
visibleRegion	services/surfaceflinger/Layer.h	/^    Region visibleRegion;$/;"	m	class:android::Layer
vm	include/android/native_activity.h	/^    JavaVM* vm;$/;"	m	struct:ANativeActivity
vmla3	opengl/libagl/light.cpp	/^void vmla3(GLfixed* d,$/;"	f	namespace:android
vmul3	opengl/libagl/light.cpp	/^void vmul3(GLfixed* d, const GLfixed* m0, const GLfixed* m1) {$/;"	f	namespace:android
vnorm3	opengl/libagl/light.cpp	/^void vnorm3(GLfixed* d, const GLfixed* a)$/;"	f	namespace:android
volumeKeysRotationMode	services/inputflinger/InputReader.h	/^    int volumeKeysRotationMode;$/;"	m	struct:android::InputReaderConfiguration
vp_transform_t	opengl/libagl/context.h	/^struct vp_transform_t {$/;"	s	namespace:android::gl
vpt	opengl/libagl/context.h	/^    vp_transform_t      vpt     __attribute__((aligned(32)));$/;"	m	struct:android::gl::transform_state_t
vsa3	opengl/libagl/light.cpp	/^void vsa3(GLfixed* d, const GLfixed* m, GLfixed s, const GLfixed* a) {$/;"	f	namespace:android
vscale3	opengl/libagl/light.cpp	/^void vscale3(GLfixed* d, const GLfixed* m, GLfixed s) {$/;"	f	namespace:android
vsquare3	opengl/libagl/matrix.h	/^GLfixed vsquare3(GLfixed a, GLfixed b, GLfixed c) $/;"	f	namespace:android
vss3	opengl/libagl/light.cpp	/^void vss3(GLfixed* d, const GLfixed* m, GLfixed s, const GLfixed* a) {$/;"	f	namespace:android
vstride	include/ui/ANativeObjectBase.h	/^        int32_t     vstride;$/;"	m	union:egl_native_pixmap_t::__anon102
vsync	include/gui/DisplayEventReceiver.h	/^            VSync vsync;$/;"	m	union:android::DisplayEventReceiver::Event::__anon133
vsync	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^void HWComposer::vsync(int disp, int64_t timestamp) {$/;"	f	class:android::HWComposer
vsyncHint	services/surfaceflinger/DisplayHardware/PowerHAL.cpp	/^status_t PowerHAL::vsyncHint(bool enabled) {$/;"	f	class:android::PowerHAL
vsyncHintOffDelay	services/surfaceflinger/EventThread.cpp	/^const long vsyncHintOffDelay = 40000000;$/;"	m	namespace:android	file:
vsyncOffCallback	services/surfaceflinger/EventThread.cpp	/^static void vsyncOffCallback(union sigval val) {$/;"	f	namespace:android
vsyncPeriod	include/ui/DisplayStatInfo.h	/^    nsecs_t vsyncPeriod;$/;"	m	struct:android::DisplayStatInfo
vsyncPhaseOffsetNs	services/surfaceflinger/SurfaceFlinger.cpp	/^static const int64_t vsyncPhaseOffsetNs = VSYNC_EVENT_PHASE_OFFSET_NS;$/;"	m	namespace:android	file:
vsyncTime	include/ui/DisplayStatInfo.h	/^    nsecs_t vsyncTime;$/;"	m	struct:android::DisplayStatInfo
w	include/private/gui/LayerState.h	/^            uint32_t        w;$/;"	m	struct:android::layer_state_t
w	include/ui/DisplayInfo.h	/^    uint32_t w;$/;"	m	struct:android::DisplayInfo
w	include/ui/GraphicBufferAllocator.h	/^        uint32_t w;$/;"	m	struct:android::GraphicBufferAllocator::alloc_rec_t
w	include/ui/vec4.h	/^        struct { T x, y, z, w; };$/;"	m	struct:android::tvec4::__anon96::__anon97
w	opengl/libagl/context.h	/^        GLsizei     w;$/;"	m	struct:android::gl::viewport_t::__anon230
w	opengl/libagl/context.h	/^        struct { GLfixed x, y, z, w; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon217
w	opengl/libagl/context.h	/^    GLsizei     w;$/;"	m	struct:android::gl::viewport_t
w	opengl/tests/gl_perfapp/jni/gl_code.cpp	/^uint32_t w;$/;"	v
w	services/sensorservice/vec.h	/^        struct { float x, y, z, w; };$/;"	m	struct:android::vbase::__anon59::__anon60
w	services/surfaceflinger/Layer.h	/^        uint32_t w;$/;"	m	struct:android::Layer::Geometry
wMod	opengl/tests/hwc/hwcTestLib.h	/^    uint32_t wMod, hMod; \/\/ Width\/height mod this value must equal zero$/;"	m	struct:hwcTestGraphicFormat
wait	libs/ui/Fence.cpp	/^status_t Fence::wait(unsigned int timeout) {$/;"	f	class:android::Fence
wait	services/surfaceflinger/Barrier.h	/^    void wait() const {$/;"	f	class:android::Barrier
wait	services/surfaceflinger/MessageQueue.h	/^    void wait() const { barrier.wait(); }$/;"	f	class:android::MessageBase
waitForEvent	libs/gui/SensorEventQueue.cpp	/^status_t SensorEventQueue::waitForEvent() const$/;"	f	class:android::SensorEventQueue
waitForEvent	services/surfaceflinger/EventThread.cpp	/^Vector< sp<EventThread::Connection> > EventThread::waitForEvent($/;"	f	class:android::EventThread
waitForEvent	services/surfaceflinger/SurfaceFlinger.cpp	/^void SurfaceFlinger::waitForEvent() {$/;"	f	class:android::SurfaceFlinger
waitForFrame	libs/gui/tests/CpuConsumer_test.cpp	/^        void waitForFrame() {$/;"	f	class:android::CpuConsumerTest::DisconnectWaiter
waitForFrame	libs/gui/tests/CpuConsumer_test.cpp	/^        void waitForFrame() {$/;"	f	class:android::CpuConsumerTest::FrameWaiter
waitForFrame	libs/gui/tests/DisconnectWaiter.h	/^    void waitForFrame() {$/;"	f	class:android::DisconnectWaiter
waitForFrame	libs/gui/tests/FrameWaiter.h	/^    void waitForFrame() {$/;"	f	class:android::FrameWaiter
waitForFrame	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        void waitForFrame() {$/;"	f	class:android::SurfaceTextureGLThreadToGLTest::FrameCondition
waitForFreeSlotThenRelock	libs/gui/BufferQueueProducer.cpp	/^status_t BufferQueueProducer::waitForFreeSlotThenRelock(const char* caller,$/;"	f	class:android::BufferQueueProducer
waitForPostedBuffers	services/surfaceflinger/tests/Transaction_test.cpp	/^    void waitForPostedBuffers() {$/;"	f	class:android::LayerUpdateTest
waitForResponse	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::waitForResponse(Parcel *reply, status_t *acquireResult)$/;"	f	class:android::IPCThreadState
waitForResponse	services/surfaceflinger/SurfaceFlinger.cpp	/^    status_t waitForResponse() {$/;"	f	class:android::GraphicProducerWrapper
waitForever	libs/ui/Fence.cpp	/^status_t Fence::waitForever(const char* logname) {$/;"	f	class:android::Fence
waitMessage	services/surfaceflinger/MessageQueue.cpp	/^void MessageQueue::waitMessage() {$/;"	f	class:android::MessageQueue
waitQueue	services/inputflinger/InputDispatcher.h	/^        Queue<DispatchEntry> waitQueue;$/;"	m	class:android::InputDispatcher::Connection
waitWhileAllocatingLocked	libs/gui/BufferQueueCore.cpp	/^void BufferQueueCore::waitWhileAllocatingLocked() const {$/;"	f	class:android::BufferQueueCore
wait_child	cmds/installd/commands.c	/^static int wait_child(pid_t pid)$/;"	f	file:
wake	libs/gui/SensorEventQueue.cpp	/^status_t SensorEventQueue::wake() const$/;"	f	class:android::SensorEventQueue
wake	services/inputflinger/EventHub.cpp	/^void EventHub::wake() {$/;"	f	class:android::EventHub
wake	services/inputflinger/InputReader.h	/^        bool wake;$/;"	m	struct:android::TouchInputMapper::Parameters
wake	services/inputflinger/tests/InputReader_test.cpp	/^    virtual void wake() {$/;"	f	class:android::FakeEventHub	file:
weakref_type	opengl/libagl/BufferObjectManager.h	/^    typedef void    weakref_type;$/;"	t	class:android::EGLBufferObjectManager
wglPlatformStrings	opengl/tools/glgen2/registry/genheaders.py	/^wglPlatformStrings = [$/;"	v
wglextVersionStrings	opengl/tools/glgen2/registry/genheaders.py	/^wglextVersionStrings = [$/;"	v
what	include/android/sensor.h	/^    int32_t what;$/;"	m	struct:AMetaDataEvent
what	include/private/gui/LayerState.h	/^            uint32_t        what;$/;"	m	struct:android::layer_state_t
what	include/private/gui/LayerState.h	/^    uint32_t what;$/;"	m	struct:android::DisplayState
wheelVelocityControlParameters	services/inputflinger/InputReader.h	/^    VelocityControlParameters wheelVelocityControlParameters;$/;"	m	struct:android::InputReaderConfiguration
when	services/inputflinger/EventHub.h	/^    nsecs_t when;$/;"	m	struct:android::RawEvent
width	cmds/flatland/Flatland.h	/^    uint32_t width;$/;"	m	struct:android::LayerDesc
width	cmds/flatland/Main.cpp	/^    uint32_t width;$/;"	m	struct:BenchmarkDesc	file:
width	include/android/bitmap.h	/^    uint32_t    width;$/;"	m	struct:__anon161
width	include/android/native_window.h	/^    int32_t width;$/;"	m	struct:ANativeWindow_Buffer
width	include/gui/CpuConsumer.h	/^        uint32_t    width;$/;"	m	struct:android::CpuConsumer::LockedBuffer
width	include/gui/IGraphicBufferProducer.h	/^        uint32_t width;$/;"	m	struct:android::IGraphicBufferProducer::QueueBufferOutput
width	include/input/VirtualKeyMap.h	/^    int32_t width;$/;"	m	struct:android::VirtualKeyDefinition
width	include/private/gui/LayerState.h	/^    uint32_t width, height;$/;"	m	struct:android::DisplayState
width	include/ui/ANativeObjectBase.h	/^    int32_t     width;$/;"	m	struct:egl_native_pixmap_t
width	include/ui/Rect.h	/^    inline int32_t width() const { return getWidth(); }$/;"	f	class:android::Rect
width	libs/gui/GLConsumer.cpp	/^    size_t width, height;$/;"	m	struct:android::__anon246	file:
width	libs/gui/tests/CpuConsumer_test.cpp	/^    uint32_t width;$/;"	m	struct:android::CpuConsumerTestParams	file:
width	opengl/libagl/context.h	/^    GGLcoord    width;$/;"	m	struct:android::gl::line_width_t
width	opengl/libagl/egl.cpp	/^    int width;$/;"	m	struct:android::egl_window_surface_v2_t	file:
width	opengl/libs/GLES_trace/src/gltrace.pb.h	/^inline ::google::protobuf::int32 GLMessage_FrameBuffer::width() const {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
width	opengl/tests/hwc/hwcColorEquiv.cpp	/^static EGLint width, height;$/;"	v	file:
width	opengl/tests/hwc/hwcCommit.cpp	/^static EGLint width, height;$/;"	v	file:
width	opengl/tests/hwc/hwcRects.cpp	/^static EGLint width, height;$/;"	v	file:
width	opengl/tests/hwc/hwcStress.cpp	/^static EGLint width, height;$/;"	v	file:
width	opengl/tests/hwc/hwcTestLib.h	/^    uint32_t width(void) const { return _w; }$/;"	f	class:HwcTestDim
width	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        uint32_t width;$/;"	m	struct:android::HWComposer::DisplayConfig
width	services/surfaceflinger/LayerBlur.h	/^        int width;$/;"	m	class:android::LayerBlur::FBO
width	services/surfaceflinger/RenderEngine/GLES20RenderEngine.h	/^        GLuint width;$/;"	m	struct:android::GLES20RenderEngine::Group
width	services/surfaceflinger/SurfaceFlinger.h	/^        uint32_t width, height;$/;"	m	struct:android::SurfaceFlinger::DisplayDeviceState
width_	opengl/libs/GLES_trace/src/gltrace.pb.h	/^  ::google::protobuf::int32 width_;$/;"	m	class:android::gltrace::GLMessage_FrameBuffer
win	opengl/libs/EGL/egl_object.h	/^    sp<ANativeWindow> win;$/;"	m	class:android::egl_surface_t
window	opengl/libagl/context.h	/^    vec4_t          window;$/;"	m	struct:android::gl::vertex_t
windowHandle	services/inputflinger/InputDispatcher.h	/^        sp<InputWindowHandle> windowHandle;$/;"	m	struct:android::InputDispatcher::TouchedWindow
windows	services/inputflinger/InputDispatcher.h	/^        Vector<TouchedWindow> windows;$/;"	m	struct:android::InputDispatcher::TouchState
wipe	cmds/rawbu/backup.cpp	/^static int wipe (const char *path) $/;"	f	namespace:android
withinTolerance	libs/gui/tests/SRGB_test.cpp	/^    static bool withinTolerance(int a, int b) {$/;"	f	class:android::SRGBTest
wraps	opengl/libagl/TextureObjectManager.h	/^    GLenum              wraps;$/;"	m	class:android::EGLTextureObject
wrapt	opengl/libagl/TextureObjectManager.h	/^    GLenum              wrapt;$/;"	m	class:android::EGLTextureObject
write	include/binder/Parcel.h	/^status_t Parcel::write(const Flattenable<T>& val) {$/;"	f	class:android::Parcel
write	include/binder/Parcel.h	/^status_t Parcel::write(const LightFlattenable<T>& val) {$/;"	f	class:android::Parcel
write	libs/binder/Parcel.cpp	/^status_t Parcel::write(const FlattenableHelperInterface& val)$/;"	f	class:android::Parcel
write	libs/binder/Parcel.cpp	/^status_t Parcel::write(const void* data, size_t len)$/;"	f	class:android::Parcel
write	libs/gui/BitTube.cpp	/^ssize_t BitTube::write(void const* vaddr, size_t size)$/;"	f	class:android::BitTube
write	libs/gui/LayerState.cpp	/^status_t ComposerState::write(Parcel& output) const {$/;"	f	class:android::ComposerState
write	libs/gui/LayerState.cpp	/^status_t DisplayState::write(Parcel& output) const {$/;"	f	class:android::DisplayState
write	libs/gui/LayerState.cpp	/^status_t layer_state_t::write(Parcel& output) const$/;"	f	class:android::layer_state_t
write	libs/gui/SensorEventQueue.cpp	/^ssize_t SensorEventQueue::write(const sp<BitTube>& tube,$/;"	f	class:android::SensorEventQueue
write	opengl/tools/glgen2/registry/reg.py	/^def write( *args, **kwargs ):$/;"	f
writeAligned	libs/binder/Parcel.cpp	/^status_t Parcel::writeAligned(T val) {$/;"	f	class:android::Parcel
writeBEUint16	opengl/libs/ETC1/etc1.cpp	/^static void writeBEUint16(etc1_byte* pOut, etc1_uint32 data) {$/;"	f	file:
writeBigEndian	opengl/libs/ETC1/etc1.cpp	/^static void writeBigEndian(etc1_byte* pOut, etc1_uint32 d) {$/;"	f	file:
writeBlob	libs/binder/Parcel.cpp	/^status_t Parcel::writeBlob(size_t len, WritableBlob* outBlob)$/;"	f	class:android::Parcel
writeBoolAsInt	libs/gui/IGraphicBufferConsumer.cpp	/^static void writeBoolAsInt(void*& buffer, size_t& size, bool b) {$/;"	f	namespace:android
writeByteArray	libs/binder/Parcel.cpp	/^status_t Parcel::writeByteArray(size_t len, const uint8_t *val) {$/;"	f	class:android::Parcel
writeCString	libs/binder/Parcel.cpp	/^status_t Parcel::writeCString(const char* str)$/;"	f	class:android::Parcel
writeDouble	libs/binder/Parcel.cpp	/^status_t Parcel::writeDouble(double val)$/;"	f	class:android::Parcel
writeDupFileDescriptor	libs/binder/Parcel.cpp	/^status_t Parcel::writeDupFileDescriptor(int fd)$/;"	f	class:android::Parcel
writeEntries	opengl/tools/glgen2/glgen.py	/^    def writeEntries(self, outfile):$/;"	m	class:ApiGenerator
writeEnums	opengl/tools/glgen2/glgen.py	/^    def writeEnums(self, outfile):$/;"	m	class:ApiGenerator
writeFileDescriptor	libs/binder/Parcel.cpp	/^status_t Parcel::writeFileDescriptor(int fd, bool takeOwnership)$/;"	f	class:android::Parcel
writeFloat	libs/binder/Parcel.cpp	/^status_t Parcel::writeFloat(float val)$/;"	f	class:android::Parcel
writeInplace	libs/binder/Parcel.cpp	/^void* Parcel::writeInplace(size_t len)$/;"	f	class:android::Parcel
writeInt32	libs/binder/Parcel.cpp	/^status_t Parcel::writeInt32(int32_t val)$/;"	f	class:android::Parcel
writeInt32	services/surfaceflinger/EventLog/EventLog.cpp	/^void EventLog::TagBuffer::writeInt32(int32_t value) {$/;"	f	class:android::EventLog::TagBuffer
writeInt32Array	libs/binder/Parcel.cpp	/^status_t Parcel::writeInt32Array(size_t len, const int32_t *val) {$/;"	f	class:android::Parcel
writeInt64	libs/binder/Parcel.cpp	/^status_t Parcel::writeInt64(int64_t val)$/;"	f	class:android::Parcel
writeInt64	services/surfaceflinger/EventLog/EventLog.cpp	/^void EventLog::TagBuffer::writeInt64(int64_t value) {$/;"	f	class:android::EventLog::TagBuffer
writeInterfaceToken	libs/binder/Parcel.cpp	/^status_t Parcel::writeInterfaceToken(const String16& interface)$/;"	f	class:android::Parcel
writeLines	libs/binder/Static.cpp	/^    virtual status_t writeLines(const struct iovec& vec, size_t N)$/;"	f	class:android::FdTextOutput
writeLines	libs/binder/Static.cpp	/^    virtual status_t writeLines(const struct iovec& vec, size_t N)$/;"	f	class:android::LogTextOutput
writeNativeHandle	libs/binder/Parcel.cpp	/^status_t Parcel::writeNativeHandle(const native_handle* handle)$/;"	f	class:android::Parcel
writeNoException	libs/binder/Parcel.cpp	/^status_t Parcel::writeNoException()$/;"	f	class:android::Parcel
writeObject	libs/binder/Parcel.cpp	/^status_t Parcel::writeObject(const flat_binder_object& val, bool nullMetaData)$/;"	f	class:android::Parcel
writeParcelFileDescriptor	libs/binder/Parcel.cpp	/^status_t Parcel::writeParcelFileDescriptor(int fd, int commChannel) {$/;"	f	class:android::Parcel
writePointer	libs/binder/Parcel.cpp	/^status_t Parcel::writePointer(uintptr_t val)$/;"	f	class:android::Parcel
writeSignal	libs/input/tests/TestHelpers.h	/^    status_t writeSignal() {$/;"	f	class:android::Pipe
writeStr	cmds/atrace/atrace.cpp	/^static bool writeStr(const char* filename, const char* str)$/;"	f	file:
writeString16	cmds/service/service.cpp	/^void writeString16(Parcel& parcel, const char* string)$/;"	f
writeString16	libs/binder/Parcel.cpp	/^status_t Parcel::writeString16(const String16& str)$/;"	f	class:android::Parcel
writeString16	libs/binder/Parcel.cpp	/^status_t Parcel::writeString16(const char16_t* str, size_t len)$/;"	f	class:android::Parcel
writeString8	libs/binder/Parcel.cpp	/^status_t Parcel::writeString8(const String8& str)$/;"	f	class:android::Parcel
writeString8	services/surfaceflinger/EventLog/EventLog.cpp	/^void EventLog::TagBuffer::writeString8(const String8& value) {$/;"	f	class:android::EventLog::TagBuffer
writeStrongBinder	libs/binder/Parcel.cpp	/^status_t Parcel::writeStrongBinder(const sp<IBinder>& val)$/;"	f	class:android::Parcel
writeSurfaceToParcel	libs/gui/SurfaceControl.cpp	/^status_t SurfaceControl::writeSurfaceToParcel($/;"	f	class:android::SurfaceControl
writeToParcel	libs/gui/BitTube.cpp	/^status_t BitTube::writeToParcel(Parcel* reply) const$/;"	f	class:android::BitTube
writeToParcel	libs/input/Input.cpp	/^status_t MotionEvent::writeToParcel(Parcel* parcel) const {$/;"	f	class:android::MotionEvent
writeToParcel	libs/input/Input.cpp	/^status_t PointerCoords::writeToParcel(Parcel* parcel) const {$/;"	f	class:android::PointerCoords
writeToParcel	libs/input/KeyCharacterMap.cpp	/^void KeyCharacterMap::writeToParcel(Parcel* parcel) const {$/;"	f	class:android::KeyCharacterMap
writeToParcel	services/batteryservice/BatteryProperties.cpp	/^status_t BatteryProperties::writeToParcel(Parcel* p) const {$/;"	f	class:android::BatteryProperties
writeToParcel	services/batteryservice/BatteryProperty.cpp	/^status_t BatteryProperty::writeToParcel(Parcel* p) const {$/;"	f	class:android::BatteryProperty
writeToSocketFromCache	services/sensorservice/SensorService.cpp	/^void SensorService::SensorEventConnection::writeToSocketFromCache() {$/;"	f	class:android::SensorService::SensorEventConnection
writeTrace	opengl/tools/glgen2/glgen.py	/^    def writeTrace(self, outfile):$/;"	m	class:ApiGenerator
writeTransactionData	libs/binder/IPCThreadState.cpp	/^status_t IPCThreadState::writeTransactionData(int32_t cmd, uint32_t binderFlags,$/;"	f	class:android::IPCThreadState
writeUnpadded	libs/binder/Parcel.cpp	/^status_t Parcel::writeUnpadded(const void* data, size_t len)$/;"	f	class:android::Parcel
writeWeakBinder	libs/binder/Parcel.cpp	/^status_t Parcel::writeWeakBinder(const wp<IBinder>& val)$/;"	f	class:android::Parcel
write_header	cmds/rawbu/backup.cpp	/^static int write_header(FILE* fh, int type, const char* path, const struct stat* st)$/;"	f	namespace:android
write_int32	cmds/rawbu/backup.cpp	/^static int write_int32(FILE* fh, int32_t val)$/;"	f	namespace:android
write_int64	cmds/rawbu/backup.cpp	/^static int write_int64(FILE* fh, int64_t val)$/;"	f	namespace:android
writex	cmds/installd/installd.c	/^static int writex(int s, const void *_buf, int count)$/;"	f	file:
x	cmds/flatland/Flatland.h	/^    int32_t x;$/;"	m	struct:android::LayerDesc
x	include/android/sensor.h	/^            float x;$/;"	m	struct:ASensorVector::__anon180::__anon181
x	include/input/VelocityTracker.h	/^        float x, y;$/;"	m	struct:android::VelocityTracker::Position
x	include/private/gui/LayerState.h	/^            float           x;$/;"	m	struct:android::layer_state_t
x	include/ui/Point.h	/^    int x;$/;"	m	class:android::Point
x	include/ui/vec2.h	/^        struct { T x, y; };$/;"	m	struct:android::tvec2::__anon82::__anon83
x	include/ui/vec3.h	/^        struct { T x, y, z; };$/;"	m	struct:android::tvec3::__anon89::__anon90
x	include/ui/vec4.h	/^        struct { T x, y, z, w; };$/;"	m	struct:android::tvec4::__anon96::__anon97
x	opengl/libagl/context.h	/^        GLint       x;$/;"	m	struct:android::gl::viewport_t::__anon229
x	opengl/libagl/context.h	/^        GLint       x;$/;"	m	struct:android::gl::viewport_t::__anon230
x	opengl/libagl/context.h	/^        struct { GLfixed x, y, z, w; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon217
x	opengl/libagl/context.h	/^        struct { GLfixed x, y, z; };$/;"	m	struct:android::gl::vec3_t::__anon212::__anon213
x	opengl/libagl/context.h	/^    GLint       x;$/;"	m	struct:android::gl::viewport_t
x	opengl/tests/angeles/demo.c	/^    float x, y, z;$/;"	m	struct:__anon236	file:
x	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange x;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
x	services/inputflinger/InputReader.h	/^        int32_t x;$/;"	m	struct:android::RawPointerData::Pointer
x	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo x;$/;"	m	struct:android::RawPointerAxes
x	services/sensorservice/vec.h	/^        struct { float x, y, z, w; };$/;"	m	struct:android::vbase::__anon59::__anon60
x	services/sensorservice/vec.h	/^        struct { float x, y, z; };$/;"	m	struct:android::vbase::__anon56::__anon57
x	services/sensorservice/vec.h	/^        struct { float x, y; };$/;"	m	struct:android::vbase::__anon53::__anon54
x0	services/sensorservice/Fusion.h	/^    quat_t  x0;$/;"	m	class:android::Fusion
x1	services/sensorservice/Fusion.h	/^    vec3_t  x1;$/;"	m	class:android::Fusion
xCoeff	include/input/VelocityTracker.h	/^        float xCoeff[MAX_DEGREE + 1], yCoeff[MAX_DEGREE + 1];$/;"	m	struct:android::VelocityTracker::Estimator
xColorMatrix	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 xColorMatrix[3][3]; \/**< Stored in signed Q16 format *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE
xColorOffset	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 xColorOffset[4];    \/**< Stored in signed Q16 format *\/$/;"	m	struct:OMX_CONFIG_COLORCONVERSIONTYPE
xEVCompensation	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 xEVCompensation;      \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_EXPOSUREVALUETYPE
xEncodeFramerate	include/media/openmax/OMX_Video.h	/^    OMX_U32 xEncodeFramerate; \/* Q16 format *\/$/;"	m	struct:OMX_CONFIG_FRAMERATETYPE
xFramerate	include/media/openmax/OMX_Video.h	/^    OMX_U32 xFramerate;$/;"	m	struct:OMX_VIDEO_PARAM_PORTFORMATTYPE
xFramerate	include/media/openmax/OMX_Video.h	/^    OMX_U32 xFramerate;$/;"	m	struct:OMX_VIDEO_PORTDEFINITIONTYPE
xHeight	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 xHeight;          \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE
xOffset	include/input/InputTransport.h	/^            float xOffset;$/;"	m	struct:android::InputMessage::Body::Motion
xOffset	services/inputflinger/InputDispatcher.h	/^        float xOffset;$/;"	m	struct:android::InputDispatcher::DispatchEntry
xOffset	services/inputflinger/InputDispatcher.h	/^    float xOffset, yOffset;$/;"	m	struct:android::InputTarget
xPrecision	include/input/InputTransport.h	/^            float xPrecision;$/;"	m	struct:android::InputMessage::Body::Motion
xPrecision	services/inputflinger/InputDispatcher.h	/^            float xPrecision;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
xPrecision	services/inputflinger/InputDispatcher.h	/^        float xPrecision;$/;"	m	struct:android::InputDispatcher::MotionEntry
xPrecision	services/inputflinger/InputListener.h	/^    float xPrecision;$/;"	m	struct:android::NotifyMotionArgs
xScale	include/media/openmax/OMX_Other.h	/^    OMX_S32 xScale;                 \/**< Current media time scale in Q16 format. *\/$/;"	m	struct:OMX_TIME_MEDIATIMETYPE
xScale	include/media/openmax/OMX_Other.h	/^    OMX_S32 xScale;                 \/**< This is a value in Q16 format which is used for$/;"	m	struct:OMX_TIME_CONFIG_SCALETYPE
xWidth	include/media/openmax/OMX_IVCommon.h	/^    OMX_S32 xWidth;           \/**< Fixed point value stored as Q16 *\/$/;"	m	struct:OMX_CONFIG_SCALEFACTORTYPE
x_bias	include/android/sensor.h	/^      float x_bias;$/;"	m	struct:AUncalibratedEvent::__anon185::__anon186
x_offset	services/inputflinger/InputReader.h	/^    float x_offset;$/;"	m	struct:android::TouchAffineTransformation
x_scale	services/inputflinger/InputReader.h	/^    float x_scale;$/;"	m	struct:android::TouchAffineTransformation
x_uncalib	include/android/sensor.h	/^      float x_uncalib;$/;"	m	struct:AUncalibratedEvent::__anon183::__anon184
x_ymix	services/inputflinger/InputReader.h	/^    float x_ymix;$/;"	m	struct:android::TouchAffineTransformation
xaccel	include/input/VelocityTracker.h	/^        float xpos, xvel, xaccel;$/;"	m	struct:android::IntegratingVelocityTrackerStrategy::State
xdpi	include/ui/DisplayInfo.h	/^    float xdpi;$/;"	m	struct:android::DisplayInfo
xdpi	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        float xdpi;$/;"	m	struct:android::HWComposer::DisplayConfig
xorSelf	libs/ui/Region.cpp	/^Region& Region::xorSelf(const Rect& r) {$/;"	f	class:android::Region
xorSelf	libs/ui/Region.cpp	/^Region& Region::xorSelf(const Region& rhs) {$/;"	f	class:android::Region
xorSelf	libs/ui/Region.cpp	/^Region& Region::xorSelf(const Region& rhs, int dx, int dy) {$/;"	f	class:android::Region
xpos	include/input/VelocityTracker.h	/^        float xpos, xvel, xaccel;$/;"	m	struct:android::IntegratingVelocityTrackerStrategy::State
xvel	include/input/VelocityTracker.h	/^        float xpos, xvel, xaccel;$/;"	m	struct:android::IntegratingVelocityTrackerStrategy::State
xy	include/ui/vec3.h	/^        Impersonator< tvec2<T> > xy;$/;"	m	union:android::tvec3::__anon89
xy	include/ui/vec4.h	/^        Impersonator< tvec2<T> > xy;$/;"	m	union:android::tvec4::__anon96
xy	services/sensorservice/vec.h	/^        vbase<float, 2> xy;$/;"	m	union:android::vbase::__anon56
xy	services/sensorservice/vec.h	/^        vbase<float, 2> xy;$/;"	m	union:android::vbase::__anon59
xyz	include/ui/vec4.h	/^        Impersonator< tvec3<T> > xyz;$/;"	m	union:android::tvec4::__anon96
xyz	services/sensorservice/vec.h	/^        vbase<float, 3> xyz;$/;"	m	union:android::vbase::__anon59
y	cmds/flatland/Flatland.h	/^    int32_t y;$/;"	m	struct:android::LayerDesc
y	include/android/sensor.h	/^            float y;$/;"	m	struct:ASensorVector::__anon180::__anon181
y	include/input/VelocityTracker.h	/^        float x, y;$/;"	m	struct:android::VelocityTracker::Position
y	include/private/gui/LayerState.h	/^            float           y;$/;"	m	struct:android::layer_state_t
y	include/ui/Point.h	/^    int y;$/;"	m	class:android::Point
y	include/ui/vec2.h	/^        struct { T x, y; };$/;"	m	struct:android::tvec2::__anon82::__anon83
y	include/ui/vec3.h	/^        struct { T x, y, z; };$/;"	m	struct:android::tvec3::__anon89::__anon90
y	include/ui/vec4.h	/^        struct { T x, y, z, w; };$/;"	m	struct:android::tvec4::__anon96::__anon97
y	opengl/libagl/context.h	/^        GLint       y;$/;"	m	struct:android::gl::viewport_t::__anon229
y	opengl/libagl/context.h	/^        GLint       y;$/;"	m	struct:android::gl::viewport_t::__anon230
y	opengl/libagl/context.h	/^        struct { GLfixed x, y, z, w; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon217
y	opengl/libagl/context.h	/^        struct { GLfixed x, y, z; };$/;"	m	struct:android::gl::vec3_t::__anon212::__anon213
y	opengl/libagl/context.h	/^    GLint       y;$/;"	m	struct:android::gl::viewport_t
y	opengl/tests/angeles/demo.c	/^    float x, y, z;$/;"	m	struct:__anon236	file:
y	services/inputflinger/InputReader.h	/^        InputDeviceInfo::MotionRange y;$/;"	m	struct:android::TouchInputMapper::OrientedRanges
y	services/inputflinger/InputReader.h	/^        int32_t y;$/;"	m	struct:android::RawPointerData::Pointer
y	services/inputflinger/InputReader.h	/^    RawAbsoluteAxisInfo y;$/;"	m	struct:android::RawPointerAxes
y	services/sensorservice/vec.h	/^        struct { float x, y, z, w; };$/;"	m	struct:android::vbase::__anon59::__anon60
y	services/sensorservice/vec.h	/^        struct { float x, y, z; };$/;"	m	struct:android::vbase::__anon56::__anon57
y	services/sensorservice/vec.h	/^        struct { float x, y; };$/;"	m	struct:android::vbase::__anon53::__anon54
y16TestSets	libs/gui/tests/CpuConsumer_test.cpp	/^CpuConsumerTestParams y16TestSets[] = {$/;"	m	namespace:android	file:
y8TestSets	libs/gui/tests/CpuConsumer_test.cpp	/^CpuConsumerTestParams y8TestSets[] = {$/;"	m	namespace:android	file:
yCoeff	include/input/VelocityTracker.h	/^        float xCoeff[MAX_DEGREE + 1], yCoeff[MAX_DEGREE + 1];$/;"	m	struct:android::VelocityTracker::Estimator
yOffset	include/input/InputTransport.h	/^            float yOffset;$/;"	m	struct:android::InputMessage::Body::Motion
yOffset	services/inputflinger/InputDispatcher.h	/^        float yOffset;$/;"	m	struct:android::InputDispatcher::DispatchEntry
yOffset	services/inputflinger/InputDispatcher.h	/^    float xOffset, yOffset;$/;"	m	struct:android::InputTarget
yPrecision	include/input/InputTransport.h	/^            float yPrecision;$/;"	m	struct:android::InputMessage::Body::Motion
yPrecision	services/inputflinger/InputDispatcher.h	/^            float yPrecision;$/;"	m	struct:android::InputDispatcher::InputState::MotionMemento
yPrecision	services/inputflinger/InputDispatcher.h	/^        float yPrecision;$/;"	m	struct:android::InputDispatcher::MotionEntry
yPrecision	services/inputflinger/InputListener.h	/^    float yPrecision;$/;"	m	struct:android::NotifyMotionArgs
y_bias	include/android/sensor.h	/^      float y_bias;$/;"	m	struct:AUncalibratedEvent::__anon185::__anon186
y_offset	services/inputflinger/InputReader.h	/^    float y_offset;$/;"	m	struct:android::TouchAffineTransformation
y_scale	services/inputflinger/InputReader.h	/^    float y_scale;$/;"	m	struct:android::TouchAffineTransformation
y_uncalib	include/android/sensor.h	/^      float y_uncalib;$/;"	m	struct:AUncalibratedEvent::__anon183::__anon184
y_xmix	services/inputflinger/InputReader.h	/^    float y_xmix;$/;"	m	struct:android::TouchAffineTransformation
yaccel	include/input/VelocityTracker.h	/^        float ypos, yvel, yaccel;$/;"	m	struct:android::IntegratingVelocityTrackerStrategy::State
ydpi	include/ui/DisplayInfo.h	/^    float ydpi;$/;"	m	struct:android::DisplayInfo
ydpi	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        float ydpi;$/;"	m	struct:android::HWComposer::DisplayConfig
ypos	include/input/VelocityTracker.h	/^        float ypos, yvel, yaccel;$/;"	m	struct:android::IntegratingVelocityTrackerStrategy::State
yuvTex	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^static GLuint yuvTex;$/;"	v	file:
yuvTex	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^static GLuint yuvTex;$/;"	v	file:
yuvTexBuffer	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^static sp<GraphicBuffer> yuvTexBuffer;$/;"	v	file:
yuvTexBuffer	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^static sp<GraphicBuffer> yuvTexBuffer;$/;"	v	file:
yuvTexFormat	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^const int yuvTexFormat = HAL_PIXEL_FORMAT_YV12;$/;"	v
yuvTexFormat	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const int yuvTexFormat = HAL_PIXEL_FORMAT_YV12;$/;"	v
yuvTexHeight	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^const int yuvTexHeight = 480;$/;"	v
yuvTexHeight	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const int yuvTexHeight = 480;$/;"	v
yuvTexOffsetU	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const int yuvTexOffsetU = yuvTexOffsetV + yuvTexStrideV * yuvTexHeight\/2;$/;"	v
yuvTexOffsetV	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const int yuvTexOffsetV = yuvTexStrideY * yuvTexHeight;$/;"	v
yuvTexOffsetY	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^const int yuvTexOffsetY = 0;$/;"	v
yuvTexOffsetY	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const int yuvTexOffsetY = 0;$/;"	v
yuvTexSameUV	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^const bool yuvTexSameUV = false;$/;"	v
yuvTexSameUV	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const bool yuvTexSameUV = false;$/;"	v
yuvTexStrideU	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const int yuvTexStrideU = yuvTexStrideV;$/;"	v
yuvTexStrideV	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const int yuvTexStrideV = (yuvTexStrideY\/2 + 0xf) & ~0xf; $/;"	v
yuvTexStrideY	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const int yuvTexStrideY = (yuvTexWidth + 0xf) & ~0xf;$/;"	v
yuvTexUsage	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^const int yuvTexUsage = GraphicBuffer::USAGE_HW_TEXTURE |$/;"	v
yuvTexUsage	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const int yuvTexUsage = GraphicBuffer::USAGE_HW_TEXTURE |$/;"	v
yuvTexWidth	opengl/tests/gl2_yuvtex/gl2_yuvtex.cpp	/^const int yuvTexWidth = 608;$/;"	v
yuvTexWidth	opengl/tests/gl_yuvtex/gl_yuvtex.cpp	/^const int yuvTexWidth = 600;$/;"	v
yvel	include/input/VelocityTracker.h	/^        float ypos, yvel, yaccel;$/;"	m	struct:android::IntegratingVelocityTrackerStrategy::State
z	include/android/sensor.h	/^            float z;$/;"	m	struct:ASensorVector::__anon180::__anon181
z	include/private/gui/LayerState.h	/^            uint32_t        z;$/;"	m	struct:android::layer_state_t
z	include/ui/vec3.h	/^        struct { T x, y, z; };$/;"	m	struct:android::tvec3::__anon89::__anon90
z	include/ui/vec4.h	/^        struct { T x, y, z, w; };$/;"	m	struct:android::tvec4::__anon96::__anon97
z	opengl/libagl/context.h	/^        struct { GLfixed x, y, z, w; };$/;"	m	struct:android::gl::vec4_t::__anon216::__anon217
z	opengl/libagl/context.h	/^        struct { GLfixed x, y, z; };$/;"	m	struct:android::gl::vec3_t::__anon212::__anon213
z	opengl/tests/angeles/demo.c	/^    float x, y, z;$/;"	m	struct:__anon236	file:
z	services/sensorservice/vec.h	/^        struct { float x, y, z, w; };$/;"	m	struct:android::vbase::__anon59::__anon60
z	services/sensorservice/vec.h	/^        struct { float x, y, z; };$/;"	m	struct:android::vbase::__anon56::__anon57
z	services/surfaceflinger/Layer.h	/^        uint32_t z;$/;"	m	struct:android::Layer::State
zFar	opengl/libagl/context.h	/^    GLfloat         zFar;$/;"	m	struct:android::gl::vp_transform_t
zNear	opengl/libagl/context.h	/^    GLfloat         zNear;$/;"	m	struct:android::gl::vp_transform_t
z_bias	include/android/sensor.h	/^      float z_bias;$/;"	m	struct:AUncalibratedEvent::__anon185::__anon186
z_uncalib	include/android/sensor.h	/^      float z_uncalib;$/;"	m	struct:AUncalibratedEvent::__anon183::__anon184
zero	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^        void (*zero[4])(void);$/;"	m	struct:android::HWComposer::cb_context::callbacks	file:
zombie	opengl/libagl/egl.cpp	/^    bool                zombie;$/;"	m	struct:android::egl_surface_t	file:
~AInputDevice	include/input/Input.h	/^    virtual ~AInputDevice() { }$/;"	f	struct:AInputDevice
~AInputEvent	include/input/Input.h	/^    virtual ~AInputEvent() { }$/;"	f	struct:AInputEvent
~Allocation	libs/binder/MemoryDealer.cpp	/^Allocation::~Allocation()$/;"	f	class:android::Allocation
~BBinder	libs/binder/Binder.cpp	/^BBinder::~BBinder()$/;"	f	class:android::BBinder
~Barrier	services/surfaceflinger/Barrier.h	/^    inline ~Barrier() { }$/;"	f	class:android::Barrier
~BindImageAsFramebuffer	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^RenderEngine::BindImageAsFramebuffer::~BindImageAsFramebuffer() {$/;"	f	class:android::RenderEngine::BindImageAsFramebuffer
~BitTube	libs/gui/BitTube.cpp	/^BitTube::~BitTube()$/;"	f	class:android::BitTube
~Blob	libs/binder/Parcel.cpp	/^Parcel::Blob::~Blob() {$/;"	f	class:android::Parcel::Blob
~BnMemory	libs/binder/IMemory.cpp	/^BnMemory::~BnMemory() {$/;"	f	class:android::BnMemory
~BnMemoryHeap	libs/binder/IMemory.cpp	/^BnMemoryHeap::~BnMemoryHeap() {$/;"	f	class:android::BnMemoryHeap
~BpBinder	libs/binder/BpBinder.cpp	/^BpBinder::~BpBinder()$/;"	f	class:android::BpBinder
~BpMemory	libs/binder/IMemory.cpp	/^BpMemory::~BpMemory()$/;"	f	class:android::BpMemory
~BpMemoryHeap	libs/binder/IMemory.cpp	/^BpMemoryHeap::~BpMemoryHeap() {$/;"	f	class:android::BpMemoryHeap
~BpRefBase	libs/binder/Binder.cpp	/^BpRefBase::~BpRefBase()$/;"	f	class:android::BpRefBase
~BufferItem	libs/gui/BufferItem.cpp	/^BufferItem::~BufferItem() {}$/;"	f	class:android::BufferItem
~BufferItemConsumer	libs/gui/BufferItemConsumer.cpp	/^BufferItemConsumer::~BufferItemConsumer() {$/;"	f	class:android::BufferItemConsumer
~BufferQueueConsumer	libs/gui/BufferQueueConsumer.cpp	/^BufferQueueConsumer::~BufferQueueConsumer() {}$/;"	f	class:android::BufferQueueConsumer
~BufferQueueCore	libs/gui/BufferQueueCore.cpp	/^BufferQueueCore::~BufferQueueCore() {}$/;"	f	class:android::BufferQueueCore
~BufferQueueProducer	libs/gui/BufferQueueProducer.cpp	/^BufferQueueProducer::~BufferQueueProducer() {}$/;"	f	class:android::BufferQueueProducer
~BufferQueueTest	libs/gui/tests/BufferQueue_test.cpp	/^    ~BufferQueueTest() {$/;"	f	class:android::BufferQueueTest
~BufferRejecter	services/surfaceflinger/SurfaceFlingerConsumer.h	/^        virtual ~BufferRejecter() { }$/;"	f	class:android::SurfaceFlingerConsumer::BufferRejecter
~BufferState	libs/binder/BufferedTextOutput.cpp	/^    ~BufferState() {$/;"	f	struct:android::BufferedTextOutput::BufferState
~BufferTracker	libs/gui/StreamSplitter.cpp	/^StreamSplitter::BufferTracker::~BufferTracker() {}$/;"	f	class:android::StreamSplitter::BufferTracker
~BufferedTextOutput	libs/binder/BufferedTextOutput.cpp	/^BufferedTextOutput::~BufferedTextOutput()$/;"	f	class:android::BufferedTextOutput
~Bundle	include/binder/TextOutput.h	/^        inline ~Bundle() { mTO.popBundle(); }$/;"	f	class:android::TextOutput::Bundle
~Callback	services/surfaceflinger/DispSync.h	/^        virtual ~Callback() {};$/;"	f	class:android::DispSync::Callback
~Callback	services/surfaceflinger/EventThread.h	/^        virtual ~Callback() {}$/;"	f	class:android::VSyncSource::Callback
~Client	services/surfaceflinger/Client.cpp	/^Client::~Client()$/;"	f	class:android::Client
~CommandEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::CommandEntry::~CommandEntry() {$/;"	f	class:android::InputDispatcher::CommandEntry
~Composer	cmds/flatland/Flatland.h	/^    virtual ~Composer() {}$/;"	f	class:android::Composer
~ComposerBase	cmds/flatland/Composers.cpp	/^    virtual ~ComposerBase() {}$/;"	f	class:android::ComposerBase
~ConfigurationChangedEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::ConfigurationChangedEntry::~ConfigurationChangedEntry() {$/;"	f	class:android::InputDispatcher::ConfigurationChangedEntry
~Connection	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::Connection::~Connection() {$/;"	f	class:android::InputDispatcher::Connection
~Connection	services/surfaceflinger/EventThread.cpp	/^EventThread::Connection::~Connection() {$/;"	f	class:android::EventThread::Connection
~ConsumerBase	libs/gui/ConsumerBase.cpp	/^ConsumerBase::~ConsumerBase() {$/;"	f	class:android::ConsumerBase
~ConsumerListener	include/gui/IConsumerListener.h	/^    virtual ~ConsumerListener() { }$/;"	f	class:android::ConsumerListener
~CountedAllocator	libs/gui/tests/StreamSplitter_test.cpp	/^    virtual ~CountedAllocator() {}$/;"	f	class:android::CountedAllocator
~CpuConsumer	libs/gui/CpuConsumer.cpp	/^CpuConsumer::~CpuConsumer() {$/;"	f	class:android::CpuConsumer
~CryptoFactory	include/media/hardware/CryptoAPI.h	/^    virtual ~CryptoFactory() {}$/;"	f	struct:android::CryptoFactory
~CryptoPlugin	include/media/hardware/CryptoAPI.h	/^    virtual ~CryptoPlugin() {}$/;"	f	struct:android::CryptoPlugin
~CursorInputMapper	services/inputflinger/InputReader.cpp	/^CursorInputMapper::~CursorInputMapper() {$/;"	f	class:android::CursorInputMapper
~Daltonizer	services/surfaceflinger/Effects/Daltonizer.cpp	/^Daltonizer::~Daltonizer() {$/;"	f	class:android::Daltonizer
~DelayedTask	libs/input/tests/TestHelpers.h	/^    virtual ~DelayedTask() { }$/;"	f	class:android::DelayedTask
~Description	services/surfaceflinger/RenderEngine/Description.cpp	/^Description::~Description() {$/;"	f	class:android::Description
~Device	services/inputflinger/EventHub.cpp	/^EventHub::Device::~Device() {$/;"	f	class:android::EventHub::Device
~DeviceResetEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::DeviceResetEntry::~DeviceResetEntry() {$/;"	f	class:android::InputDispatcher::DeviceResetEntry
~DispSync	services/surfaceflinger/DispSync.cpp	/^DispSync::~DispSync() {}$/;"	f	class:android::DispSync
~DispSyncSource	services/surfaceflinger/SurfaceFlinger.cpp	/^    virtual ~DispSyncSource() {}$/;"	f	class:android::DispSyncSource
~DispSyncThread	services/surfaceflinger/DispSync.cpp	/^    virtual ~DispSyncThread() {}$/;"	f	class:android::DispSyncThread
~DispatchEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::DispatchEntry::~DispatchEntry() {$/;"	f	class:android::InputDispatcher::DispatchEntry
~DisplayData	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^HWComposer::DisplayData::~DisplayData() {$/;"	f	class:android::HWComposer::DisplayData
~DisplayDevice	services/surfaceflinger/DisplayDevice.cpp	/^DisplayDevice::~DisplayDevice() {$/;"	f	class:DisplayDevice
~DisplayEventReceiver	libs/gui/DisplayEventReceiver.cpp	/^DisplayEventReceiver::~DisplayEventReceiver() {$/;"	f	class:android::DisplayEventReceiver
~DisplaySurface	services/surfaceflinger/DisplayHardware/DisplaySurface.h	/^    virtual ~DisplaySurface() {}$/;"	f	class:android::DisplaySurface
~DrmFactory	include/media/drm/DrmAPI.h	/^        virtual ~DrmFactory() {}$/;"	f	class:android::DrmFactory
~DrmPlugin	include/media/drm/DrmAPI.h	/^        virtual ~DrmPlugin() {}$/;"	f	class:android::DrmPlugin
~EGLBufferObjectManager	opengl/libagl/BufferObjectManager.cpp	/^EGLBufferObjectManager::~EGLBufferObjectManager()$/;"	f	class:android::EGLBufferObjectManager
~EGLSurfaceManager	opengl/libagl/TextureObjectManager.cpp	/^EGLSurfaceManager::~EGLSurfaceManager()$/;"	f	class:android::EGLSurfaceManager
~EGLTextureObject	opengl/libagl/TextureObjectManager.cpp	/^EGLTextureObject::~EGLTextureObject()$/;"	f	class:android::EGLTextureObject
~EglImage	libs/gui/GLConsumer.cpp	/^GLConsumer::EglImage::~EglImage() {$/;"	f	class:android::GLConsumer::EglImage
~ElementArrayBuffer	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^ElementArrayBuffer::~ElementArrayBuffer() {$/;"	f	class:android::gltrace::ElementArrayBuffer
~EventControlThread	services/surfaceflinger/EventControlThread.h	/^    virtual ~EventControlThread() {}$/;"	f	class:android::EventControlThread
~EventEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::EventEntry::~EventEntry() {$/;"	f	class:android::InputDispatcher::EventEntry
~EventHandler	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        virtual ~EventHandler() {}$/;"	f	class:android::HWComposer::EventHandler
~EventHub	services/inputflinger/EventHub.cpp	/^EventHub::~EventHub(void) {$/;"	f	class:android::EventHub
~EventHubInterface	services/inputflinger/EventHub.h	/^    virtual ~EventHubInterface() { }$/;"	f	class:android::EventHubInterface
~FakeEventHub	services/inputflinger/tests/InputReader_test.cpp	/^    virtual ~FakeEventHub() {$/;"	f	class:android::FakeEventHub
~FakeInputDispatcherPolicy	services/inputflinger/tests/InputDispatcher_test.cpp	/^    virtual ~FakeInputDispatcherPolicy() {$/;"	f	class:android::FakeInputDispatcherPolicy
~FakeInputListener	services/inputflinger/tests/InputReader_test.cpp	/^    virtual ~FakeInputListener() { }$/;"	f	class:android::FakeInputListener
~FakeInputMapper	services/inputflinger/tests/InputReader_test.cpp	/^    virtual ~FakeInputMapper() { }$/;"	f	class:android::FakeInputMapper
~FakeInputReaderContext	services/inputflinger/tests/InputReader_test.cpp	/^    virtual ~FakeInputReaderContext() { }$/;"	f	class:android::FakeInputReaderContext
~FakeInputReaderPolicy	services/inputflinger/tests/InputReader_test.cpp	/^    virtual ~FakeInputReaderPolicy() { }$/;"	f	class:android::FakeInputReaderPolicy
~FakePointerController	services/inputflinger/tests/InputReader_test.cpp	/^    virtual ~FakePointerController() { }$/;"	f	class:android::FakePointerController
~FdTextOutput	libs/binder/Static.cpp	/^    virtual ~FdTextOutput() { };$/;"	f	class:android::FdTextOutput
~Fence	libs/ui/Fence.cpp	/^Fence::~Fence() {$/;"	f	class:android::Fence
~FlattenableHelperInterface	include/binder/Parcel.h	/^        ~FlattenableHelperInterface() { }$/;"	f	class:android::Parcel::FlattenableHelperInterface
~FrameRateHelper	services/surfaceflinger/FrameRateHelper.h	/^        ~FrameRateHelper() {}$/;"	f	class:android::FrameRateHelper
~FramebufferNativeWindow	libs/ui/FramebufferNativeWindow.cpp	/^FramebufferNativeWindow::~FramebufferNativeWindow() $/;"	f	class:android::FramebufferNativeWindow
~FramebufferSurface	services/surfaceflinger/DisplayHardware/FramebufferSurface.h	/^    virtual ~FramebufferSurface() { }; \/\/ this class cannot be overloaded$/;"	f	class:android::FramebufferSurface
~GLES10RenderEngine	services/surfaceflinger/RenderEngine/GLES10RenderEngine.cpp	/^GLES10RenderEngine::~GLES10RenderEngine() {$/;"	f	class:android::GLES10RenderEngine
~GLES11RenderEngine	services/surfaceflinger/RenderEngine/GLES11RenderEngine.cpp	/^GLES11RenderEngine::~GLES11RenderEngine() {$/;"	f	class:android::GLES11RenderEngine
~GLES20RenderEngine	services/surfaceflinger/RenderEngine/GLES20RenderEngine.cpp	/^GLES20RenderEngine::~GLES20RenderEngine() {$/;"	f	class:android::GLES20RenderEngine
~GLHelper	cmds/flatland/GLHelper.cpp	/^GLHelper::~GLHelper() {$/;"	f	class:android::GLHelper
~GLMessage	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage::~GLMessage() {$/;"	f	class:android::gltrace::GLMessage
~GLMessage_DataType	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage_DataType::~GLMessage_DataType() {$/;"	f	class:android::gltrace::GLMessage_DataType
~GLMessage_FrameBuffer	opengl/libs/GLES_trace/src/gltrace.pb.cpp	/^GLMessage_FrameBuffer::~GLMessage_FrameBuffer() {$/;"	f	class:android::gltrace::GLMessage_FrameBuffer
~GLTraceState	opengl/libs/GLES_trace/src/gltrace_context.cpp	/^GLTraceState::~GLTraceState() {$/;"	f	class:android::gltrace::GLTraceState
~GraphicBuffer	libs/ui/GraphicBuffer.cpp	/^GraphicBuffer::~GraphicBuffer()$/;"	f	class:android::GraphicBuffer
~GraphicBufferAlloc	libs/gui/GraphicBufferAlloc.cpp	/^GraphicBufferAlloc::~GraphicBufferAlloc() {$/;"	f	class:android::GraphicBufferAlloc
~GraphicBufferAllocator	libs/ui/GraphicBufferAllocator.cpp	/^GraphicBufferAllocator::~GraphicBufferAllocator()$/;"	f	class:android::GraphicBufferAllocator
~HDCPModule	include/media/hardware/HDCPAPI.h	/^    virtual ~HDCPModule() {};$/;"	f	struct:android::HDCPModule
~HWCLayer	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        virtual ~HWCLayer() { }$/;"	f	class:android::HWComposer::HWCLayer
~HWCLayerInterface	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        virtual ~HWCLayerInterface() { }$/;"	f	class:android::HWComposer::HWCLayerInterface
~HWComposer	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^HWComposer::~HWComposer() {$/;"	f	class:android::HWComposer
~HardwareSensor	services/sensorservice/SensorInterface.cpp	/^HardwareSensor::~HardwareSensor() {$/;"	f	class:android::HardwareSensor
~HeapCache	libs/binder/IMemory.cpp	/^HeapCache::~HeapCache()$/;"	f	class:android::HeapCache
~HexDump	include/binder/TextOutput.h	/^inline HexDump::~HexDump() { }$/;"	f	class:android::HexDump
~HibernationMachine	opengl/libs/EGL/egl_display.h	/^        ~HibernationMachine() {}$/;"	f	class:android::egl_display_t::HibernationMachine
~IBinder	libs/binder/Binder.cpp	/^IBinder::~IBinder()$/;"	f	class:android::IBinder
~IInterface	libs/binder/IInterface.cpp	/^IInterface::~IInterface() {$/;"	f	class:android::IInterface
~IPCThreadState	libs/binder/IPCThreadState.cpp	/^IPCThreadState::~IPCThreadState()$/;"	f	class:android::IPCThreadState
~InjectionState	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::InjectionState::~InjectionState() {$/;"	f	class:android::InputDispatcher::InjectionState
~InputApplicationHandle	services/inputflinger/InputApplication.cpp	/^InputApplicationHandle::~InputApplicationHandle() {$/;"	f	class:android::InputApplicationHandle
~InputChannel	libs/input/InputTransport.cpp	/^InputChannel::~InputChannel() {$/;"	f	class:android::InputChannel
~InputConsumer	libs/input/InputTransport.cpp	/^InputConsumer::~InputConsumer() {$/;"	f	class:android::InputConsumer
~InputDevice	services/inputflinger/InputReader.cpp	/^InputDevice::~InputDevice() {$/;"	f	class:android::InputDevice
~InputDeviceInfo	libs/input/InputDevice.cpp	/^InputDeviceInfo::~InputDeviceInfo() {$/;"	f	class:android::InputDeviceInfo
~InputDispatcher	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::~InputDispatcher() {$/;"	f	class:android::InputDispatcher
~InputDispatcherInterface	services/inputflinger/InputDispatcher.h	/^    virtual ~InputDispatcherInterface() { }$/;"	f	class:android::InputDispatcherInterface
~InputDispatcherPolicyInterface	services/inputflinger/InputDispatcher.h	/^    virtual ~InputDispatcherPolicyInterface() { }$/;"	f	class:android::InputDispatcherPolicyInterface
~InputDispatcherThread	services/inputflinger/InputDispatcher.cpp	/^InputDispatcherThread::~InputDispatcherThread() {$/;"	f	class:android::InputDispatcherThread
~InputEvent	include/input/Input.h	/^    virtual ~InputEvent() { }$/;"	f	class:android::InputEvent
~InputEventFactoryInterface	include/input/Input.h	/^    virtual ~InputEventFactoryInterface() { }$/;"	f	class:android::InputEventFactoryInterface
~InputListenerInterface	services/inputflinger/InputListener.h	/^    virtual ~InputListenerInterface() { }$/;"	f	class:android::InputListenerInterface
~InputManager	services/inputflinger/InputManager.cpp	/^InputManager::~InputManager() {$/;"	f	class:android::InputManager
~InputManagerInterface	services/inputflinger/InputManager.h	/^    virtual ~InputManagerInterface() { }$/;"	f	class:android::InputManagerInterface
~InputMapper	services/inputflinger/InputReader.cpp	/^InputMapper::~InputMapper() {$/;"	f	class:android::InputMapper
~InputPublisher	libs/input/InputTransport.cpp	/^InputPublisher::~InputPublisher() {$/;"	f	class:android::InputPublisher
~InputReader	services/inputflinger/InputReader.cpp	/^InputReader::~InputReader() {$/;"	f	class:android::InputReader
~InputReaderContext	services/inputflinger/InputReader.h	/^    virtual ~InputReaderContext() { }$/;"	f	class:android::InputReaderContext
~InputReaderInterface	services/inputflinger/InputReader.h	/^    virtual ~InputReaderInterface() { }$/;"	f	class:android::InputReaderInterface
~InputReaderPolicyInterface	services/inputflinger/InputReader.h	/^    virtual ~InputReaderPolicyInterface() { }$/;"	f	class:android::InputReaderPolicyInterface
~InputReaderThread	services/inputflinger/InputReader.cpp	/^InputReaderThread::~InputReaderThread() {$/;"	f	class:android::InputReaderThread
~InputState	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::InputState::~InputState() {$/;"	f	class:android::InputDispatcher::InputState
~InputWindowHandle	services/inputflinger/InputWindow.cpp	/^InputWindowHandle::~InputWindowHandle() {$/;"	f	class:android::InputWindowHandle
~InstrumentedInputReader	services/inputflinger/tests/InputReader_test.cpp	/^    virtual ~InstrumentedInputReader() {$/;"	f	class:android::InstrumentedInputReader
~IntegratingVelocityTrackerStrategy	libs/input/VelocityTracker.cpp	/^IntegratingVelocityTrackerStrategy::~IntegratingVelocityTrackerStrategy() {$/;"	f	class:android::IntegratingVelocityTrackerStrategy
~Iterable	services/surfaceflinger/DisplayHardware/HWComposer.cpp	/^    virtual ~Iterable() { }$/;"	f	class:android::Iterable
~JoystickInputMapper	services/inputflinger/InputReader.cpp	/^JoystickInputMapper::~JoystickInputMapper() {$/;"	f	class:android::JoystickInputMapper
~Key	libs/input/KeyCharacterMap.cpp	/^KeyCharacterMap::Key::~Key() {$/;"	f	class:android::KeyCharacterMap::Key
~KeyCharacterMap	libs/input/KeyCharacterMap.cpp	/^KeyCharacterMap::~KeyCharacterMap() {$/;"	f	class:android::KeyCharacterMap
~KeyEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::KeyEntry::~KeyEntry() {$/;"	f	class:android::InputDispatcher::KeyEntry
~KeyEvent	include/input/Input.h	/^    virtual ~KeyEvent() { }$/;"	f	class:android::KeyEvent
~KeyLayoutMap	libs/input/KeyLayoutMap.cpp	/^KeyLayoutMap::~KeyLayoutMap() {$/;"	f	class:android::KeyLayoutMap
~KeyMap	libs/input/Keyboard.cpp	/^KeyMap::~KeyMap() {$/;"	f	class:android::KeyMap
~KeyboardInputMapper	services/inputflinger/InputReader.cpp	/^KeyboardInputMapper::~KeyboardInputMapper() {$/;"	f	class:android::KeyboardInputMapper
~Layer	services/surfaceflinger/Layer.cpp	/^Layer::~Layer() {$/;"	f	class:android::Layer
~LayerBlur	services/surfaceflinger/LayerBlur.cpp	/^LayerBlur::~LayerBlur() {$/;"	f	class:android::LayerBlur
~LayerCleaner	services/surfaceflinger/Layer.cpp	/^Layer::LayerCleaner::~LayerCleaner() {$/;"	f	class:android::Layer::LayerCleaner
~LayerDim	services/surfaceflinger/LayerDim.cpp	/^LayerDim::~LayerDim() {$/;"	f	class:android::LayerDim
~LayerListIterator	services/surfaceflinger/DisplayHardware/HWComposer.h	/^        ~LayerListIterator() { delete mLayerList; }$/;"	f	class:android::HWComposer::LayerListIterator
~LeastSquaresVelocityTrackerStrategy	libs/input/VelocityTracker.cpp	/^LeastSquaresVelocityTrackerStrategy::~LeastSquaresVelocityTrackerStrategy() {$/;"	f	class:android::LeastSquaresVelocityTrackerStrategy
~LegacyVelocityTrackerStrategy	libs/input/VelocityTracker.cpp	/^LegacyVelocityTrackerStrategy::~LegacyVelocityTrackerStrategy() {$/;"	f	class:android::LegacyVelocityTrackerStrategy
~LibBinderIPCtStatics	libs/binder/Static.cpp	/^    ~LibBinderIPCtStatics()$/;"	f	class:android::LibBinderIPCtStatics
~Loader	opengl/libs/EGL/Loader.cpp	/^Loader::~Loader() {$/;"	f	class:android::Loader
~LocalRef	opengl/libs/EGL/egl_object.h	/^egl_object_t::LocalRef<N,T>::~LocalRef() {$/;"	f	class:android::egl_object_t::LocalRef
~LogTextOutput	libs/binder/Static.cpp	/^    virtual ~LogTextOutput() { };$/;"	f	class:android::LogTextOutput
~MemoryBase	libs/binder/MemoryBase.cpp	/^MemoryBase::~MemoryBase()$/;"	f	class:android::MemoryBase
~MemoryDealer	libs/binder/MemoryDealer.cpp	/^MemoryDealer::~MemoryDealer()$/;"	f	class:android::MemoryDealer
~MemoryHeapBase	libs/binder/MemoryHeapBase.cpp	/^MemoryHeapBase::~MemoryHeapBase()$/;"	f	class:android::MemoryHeapBase
~MemoryHeapIon	libs/binder/MemoryHeapIon.cpp	/^MemoryHeapIon::~MemoryHeapIon()$/;"	f	class:android::MemoryHeapIon
~MemoryHeapPmem	libs/binder/MemoryHeapPmem.cpp	/^MemoryHeapPmem::~MemoryHeapPmem()$/;"	f	class:android::MemoryHeapPmem
~MemoryPmem	libs/binder/MemoryHeapPmem.cpp	/^MemoryHeapPmem::MemoryPmem::~MemoryPmem() {$/;"	f	class:android::MemoryHeapPmem::MemoryPmem
~Mesh	services/surfaceflinger/RenderEngine/Mesh.cpp	/^Mesh::~Mesh() {$/;"	f	class:android::Mesh
~MessageBase	services/surfaceflinger/MessageQueue.cpp	/^MessageBase::~MessageBase() {$/;"	f	class:android::MessageBase
~MessageQueue	services/surfaceflinger/MessageQueue.cpp	/^MessageQueue::~MessageQueue() {$/;"	f	class:android::MessageQueue
~MonitoredProducer	services/surfaceflinger/MonitoredProducer.cpp	/^MonitoredProducer::~MonitoredProducer() {$/;"	f	class:android::MonitoredProducer
~MotionEntry	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::MotionEntry::~MotionEntry() {$/;"	f	class:android::InputDispatcher::MotionEntry
~MotionEvent	include/input/Input.h	/^    virtual ~MotionEvent() { }$/;"	f	class:android::MotionEvent
~MultiTouchInputMapper	services/inputflinger/InputReader.cpp	/^MultiTouchInputMapper::~MultiTouchInputMapper() {$/;"	f	class:android::MultiTouchInputMapper
~MultiTouchMotionAccumulator	services/inputflinger/InputReader.cpp	/^MultiTouchMotionAccumulator::~MultiTouchMotionAccumulator() {$/;"	f	class:android::MultiTouchMotionAccumulator
~NativeBuffer	libs/ui/FramebufferNativeWindow.cpp	/^    ~NativeBuffer() { }; \/\/ this class cannot be overloaded$/;"	f	class:android::NativeBuffer	file:
~NotifyArgs	services/inputflinger/InputListener.h	/^    virtual ~NotifyArgs() { }$/;"	f	struct:android::NotifyArgs
~NotifyConfigurationChangedArgs	services/inputflinger/InputListener.h	/^    virtual ~NotifyConfigurationChangedArgs() { }$/;"	f	struct:android::NotifyConfigurationChangedArgs
~NotifyDeviceResetArgs	services/inputflinger/InputListener.h	/^    virtual ~NotifyDeviceResetArgs() { }$/;"	f	struct:android::NotifyDeviceResetArgs
~NotifyKeyArgs	services/inputflinger/InputListener.h	/^    virtual ~NotifyKeyArgs() { }$/;"	f	struct:android::NotifyKeyArgs
~NotifyMotionArgs	services/inputflinger/InputListener.h	/^    virtual ~NotifyMotionArgs() { }$/;"	f	struct:android::NotifyMotionArgs
~NotifySwitchArgs	services/inputflinger/InputListener.h	/^    virtual ~NotifySwitchArgs() { }$/;"	f	struct:android::NotifySwitchArgs
~OMXPluginBase	include/media/hardware/OMXPluginBase.h	/^    virtual ~OMXPluginBase() {}$/;"	f	struct:android::OMXPluginBase
~ObjectManager	libs/binder/BpBinder.cpp	/^BpBinder::ObjectManager::~ObjectManager()$/;"	f	class:android::BpBinder::ObjectManager
~OutputListener	libs/gui/StreamSplitter.cpp	/^StreamSplitter::OutputListener::~OutputListener() {}$/;"	f	class:android::StreamSplitter::OutputListener
~Parcel	libs/binder/Parcel.cpp	/^Parcel::~Parcel()$/;"	f	class:android::Parcel
~Parser	libs/input/KeyCharacterMap.cpp	/^KeyCharacterMap::Parser::~Parser() {$/;"	f	class:android::KeyCharacterMap::Parser
~Parser	libs/input/KeyLayoutMap.cpp	/^KeyLayoutMap::Parser::~Parser() {$/;"	f	class:android::KeyLayoutMap::Parser
~Parser	libs/input/VirtualKeyMap.cpp	/^VirtualKeyMap::Parser::~Parser() {$/;"	f	class:android::VirtualKeyMap::Parser
~Pipe	libs/input/tests/TestHelpers.h	/^    ~Pipe() {$/;"	f	class:android::Pipe
~PointerControllerInterface	services/inputflinger/PointerControllerInterface.h	/^    virtual ~PointerControllerInterface() { }$/;"	f	class:android::PointerControllerInterface
~PooledInputEventFactory	libs/input/Input.cpp	/^PooledInputEventFactory::~PooledInputEventFactory() {$/;"	f	class:android::PooledInputEventFactory
~PreallocatedInputEventFactory	include/input/Input.h	/^    virtual ~PreallocatedInputEventFactory() { }$/;"	f	class:android::PreallocatedInputEventFactory
~ProcessState	libs/binder/ProcessState.cpp	/^ProcessState::~ProcessState()$/;"	f	class:android::ProcessState
~ProducerListener	include/gui/IProducerListener.h	/^    virtual ~ProducerListener() {}$/;"	f	class:android::ProducerListener
~ProducerThread	libs/gui/tests/SurfaceTextureGLThreadToGL.h	/^        virtual ~ProducerThread() {$/;"	f	class:android::SurfaceTextureGLThreadToGLTest::ProducerThread
~Program	services/surfaceflinger/RenderEngine/Program.cpp	/^Program::~Program() {$/;"	f	class:android::Program
~ProgramCache	services/surfaceflinger/RenderEngine/ProgramCache.cpp	/^ProgramCache::~ProgramCache() {$/;"	f	class:android::ProgramCache
~ProxyConsumerListener	libs/gui/BufferQueue.cpp	/^BufferQueue::ProxyConsumerListener::~ProxyConsumerListener() {}$/;"	f	class:android::BufferQueue::ProxyConsumerListener
~QueuedInputListener	services/inputflinger/InputListener.cpp	/^QueuedInputListener::~QueuedInputListener() {$/;"	f	class:android::QueuedInputListener
~Region	libs/ui/Region.cpp	/^Region::~Region()$/;"	f	class:android::Region
~RenderEngine	services/surfaceflinger/RenderEngine/RenderEngine.cpp	/^RenderEngine::~RenderEngine() {$/;"	f	class:android::RenderEngine
~Renderer	cmds/flatland/Flatland.h	/^    virtual ~Renderer() {}$/;"	f	class:android::Renderer
~SRGBTest	libs/gui/tests/SRGB_test.cpp	/^    virtual ~SRGBTest() {$/;"	f	class:android::SRGBTest
~ScopedScissorDisabler	services/surfaceflinger/LayerBlur.cpp	/^    ~ScopedScissorDisabler() {$/;"	f	class:android::ScopedScissorDisabler
~ScreenshotClient	libs/gui/SurfaceComposerClient.cpp	/^ScreenshotClient::~ScreenshotClient() {$/;"	f	class:android::ScreenshotClient
~Sensor	libs/gui/Sensor.cpp	/^Sensor::~Sensor()$/;"	f	class:android::Sensor
~SensorEventConnection	services/sensorservice/SensorService.cpp	/^SensorService::SensorEventConnection::~SensorEventConnection() {$/;"	f	class:android::SensorService::SensorEventConnection
~SensorEventQueue	libs/gui/SensorEventQueue.cpp	/^SensorEventQueue::~SensorEventQueue() {$/;"	f	class:android::SensorEventQueue
~SensorInterface	services/sensorservice/SensorInterface.cpp	/^SensorInterface::~SensorInterface()$/;"	f	class:android::SensorInterface
~SensorManager	libs/gui/SensorManager.cpp	/^SensorManager::~SensorManager()$/;"	f	class:android::SensorManager
~SensorService	services/sensorservice/SensorService.cpp	/^SensorService::~SensorService()$/;"	f	class:android::SensorService
~SimpleBestFitAllocator	libs/binder/MemoryDealer.cpp	/^SimpleBestFitAllocator::~SimpleBestFitAllocator()$/;"	f	class:android::SimpleBestFitAllocator
~SingleTouchInputMapper	services/inputflinger/InputReader.cpp	/^SingleTouchInputMapper::~SingleTouchInputMapper() {$/;"	f	class:android::SingleTouchInputMapper
~StreamSplitter	libs/gui/StreamSplitter.cpp	/^StreamSplitter::~StreamSplitter() {$/;"	f	class:android::StreamSplitter
~StreamSplitterTest	libs/gui/tests/StreamSplitter_test.cpp	/^    ~StreamSplitterTest() {$/;"	f	class:android::StreamSplitterTest
~SubRegionMemory	libs/binder/MemoryHeapPmem.cpp	/^SubRegionMemory::~SubRegionMemory()$/;"	f	class:android::SubRegionMemory
~Surface	libs/gui/Surface.cpp	/^Surface::~Surface() {$/;"	f	class:android::Surface
~SurfaceComposerClient	libs/gui/SurfaceComposerClient.cpp	/^SurfaceComposerClient::~SurfaceComposerClient() {$/;"	f	class:android::SurfaceComposerClient
~SurfaceControl	libs/gui/SurfaceControl.cpp	/^SurfaceControl::~SurfaceControl()$/;"	f	class:android::SurfaceControl
~SurfaceFlinger	services/surfaceflinger/SurfaceFlinger.cpp	/^SurfaceFlinger::~SurfaceFlinger()$/;"	f	class:android::SurfaceFlinger
~SwitchInputMapper	services/inputflinger/InputReader.cpp	/^SwitchInputMapper::~SwitchInputMapper() {$/;"	f	class:android::SwitchInputMapper
~TCPStream	opengl/libs/GLES_trace/src/gltrace_transport.cpp	/^TCPStream::~TCPStream() {$/;"	f	class:android::gltrace::TCPStream
~TextOutput	libs/binder/TextOutput.cpp	/^TextOutput::~TextOutput() { $/;"	f	class:android::TextOutput
~Texture	services/surfaceflinger/RenderEngine/Texture.cpp	/^Texture::~Texture() {$/;"	f	class:android::Texture
~TokenManager	opengl/libagl/TokenManager.cpp	/^TokenManager::~TokenManager()$/;"	f	class:android::TokenManager
~Tokenizer	opengl/libagl/Tokenizer.cpp	/^Tokenizer::~Tokenizer()$/;"	f	class:android::Tokenizer
~TouchInputMapper	services/inputflinger/InputReader.cpp	/^TouchInputMapper::~TouchInputMapper() {$/;"	f	class:android::TouchInputMapper
~TouchState	services/inputflinger/InputDispatcher.cpp	/^InputDispatcher::TouchState::~TouchState() {$/;"	f	class:android::InputDispatcher::TouchState
~Transform	services/surfaceflinger/Transform.cpp	/^Transform::~Transform() {$/;"	f	class:android::Transform
~TypeCode	include/binder/TextOutput.h	/^inline TypeCode::~TypeCode() { }$/;"	f	class:android::TypeCode
~VSyncSource	services/surfaceflinger/EventThread.h	/^    virtual ~VSyncSource() {}$/;"	f	class:android::VSyncSource
~VelocityTracker	libs/input/VelocityTracker.cpp	/^VelocityTracker::~VelocityTracker() {$/;"	f	class:android::VelocityTracker
~VelocityTrackerStrategy	include/input/VelocityTracker.h	/^    virtual ~VelocityTrackerStrategy() { }$/;"	f	class:android::VelocityTrackerStrategy
~VibratorInputMapper	services/inputflinger/InputReader.cpp	/^VibratorInputMapper::~VibratorInputMapper() {$/;"	f	class:android::VibratorInputMapper
~VirtualDisplaySurface	services/surfaceflinger/DisplayHardware/VirtualDisplaySurface.cpp	/^VirtualDisplaySurface::~VirtualDisplaySurface() {$/;"	f	class:android::VirtualDisplaySurface
~VirtualKeyMap	libs/input/VirtualKeyMap.cpp	/^VirtualKeyMap::~VirtualKeyMap() {$/;"	f	class:android::VirtualKeyMap
~driver_t	opengl/libs/EGL/Loader.cpp	/^Loader::driver_t::~driver_t()$/;"	f	class:android::Loader::driver_t
~egl_cache_t	opengl/libs/EGL/egl_cache.cpp	/^egl_cache_t::~egl_cache_t() {$/;"	f	class:android::egl_cache_t
~egl_context_t	opengl/libs/EGL/egl_object.h	/^    ~egl_context_t() {}$/;"	f	class:android::egl_context_t
~egl_display_ptr	opengl/libs/EGL/egl_display.h	/^    ~egl_display_ptr() {$/;"	f	class:android::egl_display_ptr
~egl_display_t	opengl/libs/EGL/egl_display.cpp	/^egl_display_t::~egl_display_t() {$/;"	f	class:android::egl_display_t
~egl_object_t	opengl/libs/EGL/egl_object.cpp	/^egl_object_t::~egl_object_t() {$/;"	f	class:android::egl_object_t
~egl_pbuffer_surface_t	opengl/libagl/egl.cpp	/^egl_pbuffer_surface_t::~egl_pbuffer_surface_t() {$/;"	f	class:android::egl_pbuffer_surface_t
~egl_pixmap_surface_t	opengl/libagl/egl.cpp	/^    virtual ~egl_pixmap_surface_t() { }$/;"	f	struct:android::egl_pixmap_surface_t
~egl_surface_t	opengl/libagl/egl.cpp	/^egl_surface_t::~egl_surface_t()$/;"	f	class:android::egl_surface_t
~egl_surface_t	opengl/libs/EGL/egl_object.cpp	/^egl_surface_t::~egl_surface_t() {$/;"	f	class:android::egl_surface_t
~egl_window_surface_v2_t	opengl/libagl/egl.cpp	/^egl_window_surface_v2_t::~egl_window_surface_v2_t() {$/;"	f	class:android::egl_window_surface_v2_t
~rasterizer	libs/ui/Region.cpp	/^    ~rasterizer() {$/;"	f	class:android::Region::rasterizer
~region_rasterizer	include/private/ui/RegionHelper.h	/^        virtual ~region_rasterizer() { };$/;"	f	class:android::region_operator::region_rasterizer
